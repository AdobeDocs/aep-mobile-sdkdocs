"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[2911],{8075:function(t,e,n){n.r(e),n.d(e,{_frontmatter:function(){return m},default:function(){return x}});var a=n(87462),o=n(63366),i=(n(15007),n(64983)),r=n(91515),d=["components"],m={},l=function(t){return function(e){return console.warn("Component "+t+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.mdx)("div",e)}},p=l("InlineAlert"),u=l("CodeBlock"),s={_frontmatter:m},c=r.Z;function x(t){var e=t.components,n=(0,o.Z)(t,d);return(0,i.mdx)(c,(0,a.Z)({},s,n,{components:e,mdxType:"MDXLayout"}),(0,i.mdx)("h1",{id:"aepbutton"},"AEPButton"),(0,i.mdx)("p",null,"The AEPButton class is a fundamental UI component used to create interactive buttons for content cards."),(0,i.mdx)("p",null,"Customization of the button's properties can be achieved with a custom view modifier."),(0,i.mdx)("p",null,"AEPButton conforms to ",(0,i.mdx)("inlineCode",{parentName:"p"},"ObservableObject"),", allowing it to be used reactively in SwiftUI views."),(0,i.mdx)("h2",{id:"public-properties"},"Public Properties"),(0,i.mdx)("table",null,(0,i.mdx)("thead",{parentName:"table"},(0,i.mdx)("tr",{parentName:"thead"},(0,i.mdx)("th",{parentName:"tr",align:null},"Property"),(0,i.mdx)("th",{parentName:"tr",align:null},"Type"),(0,i.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,i.mdx)("tbody",{parentName:"table"},(0,i.mdx)("tr",{parentName:"tbody"},(0,i.mdx)("td",{parentName:"tr",align:null},"text"),(0,i.mdx)("td",{parentName:"tr",align:null},(0,i.mdx)("a",{parentName:"td",href:"aeptext.md"},"AEPText")),(0,i.mdx)("td",{parentName:"tr",align:null},"The text model representing the button's label.")),(0,i.mdx)("tr",{parentName:"tbody"},(0,i.mdx)("td",{parentName:"tr",align:null},"modifier"),(0,i.mdx)("td",{parentName:"tr",align:null},(0,i.mdx)("inlineCode",{parentName:"td"},"AEPViewModifier")),(0,i.mdx)("td",{parentName:"tr",align:null},"A custom view modifier that can be applied to the button view for additional styling.")))),(0,i.mdx)(p,{variant:"info",slots:"text",mdxType:"InlineAlert"}),(0,i.mdx)("p",null,"All properties are marked with ",(0,i.mdx)("a",{parentName:"p",href:"https://developer.apple.com/documentation/combine/published"},"@Published"),". Any changes will trigger updates to the UI."),(0,i.mdx)("h2",{id:"customization"},"Customization"),(0,i.mdx)("p",null,"You can customize the ",(0,i.mdx)("inlineCode",{parentName:"p"},"AEPButton")," properties when working with a template that includes a button. Here's an example:"),(0,i.mdx)(u,{slots:"heading, code",repeat:"1",languages:"Swift",mdxType:"CodeBlock"}),(0,i.mdx)("h4",{id:"swift"},"Swift"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"class MyCustomizer: ContentCardCustomizing {\n    func customize(template: SmallImageTemplate) {\n        // Customize the button element\n        template.buttons?.first?.text.font = .headline\n        template.buttons?.first?.text.textColor = .white\n        template.buttons?.first?.modifier = AEPViewModifier(MyButtonModifier())\n    }\n    \n    struct MyButtonModifier: ViewModifier {\n        func body(content: Content) -> some View {\n            content\n                .padding()\n                .background(Color.blue)\n                .cornerRadius(10)\n        }\n    }\n}\n")))}x.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-edge-adobe-journey-optimizer-content-card-ui-i-os-ui-elements-aepbutton-md-e73043b5050e962b55bc.js.map