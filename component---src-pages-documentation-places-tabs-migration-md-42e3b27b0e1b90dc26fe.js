"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[1859],{42203:function(e,a,n){n.r(a),n.d(a,{_frontmatter:function(){return p},default:function(){return g}});var t,o=n(87462),r=n(63366),i=(n(15007),n(64983)),l=n(91515),s=["components"],p={},d=(t="Variant",function(e){return console.warn("Component "+t+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.mdx)("div",e)}),c={_frontmatter:p},m=l.Z;function g(e){var a=e.components,n=(0,r.Z)(e,s);return(0,i.mdx)(m,(0,o.Z)({},c,n,{components:a,mdxType:"MDXLayout"}),(0,i.mdx)(d,{language:"aep-swift",api:"clear",repeat:"1",mdxType:"Variant"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"static func clear()\n")),(0,i.mdx)(d,{language:"aep-objc",api:"clear",repeat:"1",mdxType:"Variant"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objc"},"+ (void) clear;\n")),(0,i.mdx)(d,{language:"acp-objc",api:"clear",repeat:"1",mdxType:"Variant"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objc"},"+ (void) clear;\n")),(0,i.mdx)(d,{language:"aep-swift",api:"extension-version",repeat:"1",mdxType:"Variant"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"static var extensionVersion: String\n")),(0,i.mdx)(d,{language:"aep-objc",api:"extension-version",repeat:"1",mdxType:"Variant"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objc"},"+ (nonnull NSString*) extensionVersion;\n")),(0,i.mdx)(d,{language:"acp-objc",api:"extension-version",repeat:"1",mdxType:"Variant"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objc"},"+ (nonnull NSString*) extensionVersion;\n")),(0,i.mdx)(d,{language:"aep-swift",api:"get-current-points-of-interest",repeat:"1",mdxType:"Variant"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"static func getCurrentPointsOfInterest(_ closure: @escaping ([PointOfInterest]) -> Void)\n")),(0,i.mdx)(d,{language:"aep-objc",api:"get-current-points-of-interest",repeat:"1",mdxType:"Variant"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objc"},"+ (void) getCurrentPointsOfInterest: ^(NSArray<AEPPlacesPoi*>* _Nonnull pois) closure;\n")),(0,i.mdx)(d,{language:"acp-objc",api:"get-current-points-of-interest",repeat:"1",mdxType:"Variant"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objc"},"+ (void) getCurrentPointsOfInterest: (nullable void (^) (NSArray<ACPPlacesPoi*>* _Nullable userWithinPoi)) callback;\n")),(0,i.mdx)(d,{language:"aep-swift",api:"get-last-known-location",repeat:"1",mdxType:"Variant"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"static func getLastKnownLocation(_ closure: @escaping (CLLocation?) -> Void)\n")),(0,i.mdx)(d,{language:"aep-objc",api:"get-last-known-location",repeat:"1",mdxType:"Variant"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objc"},"+ (void) getLastKnownLocation: ^(CLLocation* _Nullable lastLocation) closure;\n")),(0,i.mdx)(d,{language:"acp-objc",api:"get-last-known-location",repeat:"2",mdxType:"Variant"}),(0,i.mdx)("p",null,"If the SDK has no last known location, it will pass a ",(0,i.mdx)("inlineCode",{parentName:"p"},"CLLocation")," object with a value of ",(0,i.mdx)("inlineCode",{parentName:"p"},"999.999")," for latitude and longitude to the callback."),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objc"},"+ (void) getLastKnownLocation: (nullable void (^) (CLLocation* _Nullable lastLocation)) callback;\n")),(0,i.mdx)(d,{language:"aep-swift",api:"get-nearby-points-of-interest",repeat:"2",mdxType:"Variant"}),(0,i.mdx)("p",null,"Rather than providing an overloaded method, a single method supports retrieval of nearby Points of Interest. The provided closure accepts two parameters, representing the resulting nearby points of interest (if any) and the response code."),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"static func getNearbyPointsOfInterest(forLocation location: CLLocation,\n                                      withLimit limit: UInt,\n                                      closure: @escaping ([PointOfInterest], PlacesQueryResponseCode) -> Void)\n")),(0,i.mdx)(d,{language:"aep-objc",api:"get-nearby-points-of-interest",repeat:"1",mdxType:"Variant"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objc"},"+ (void) getNearbyPointsOfInterest: (nonnull CLLocation*) currentLocation\n                             limit: (NSUInteger) limit\n                          callback: ^ (NSArray<AEPPlacesPoi*>* _Nonnull, AEPPlacesQueryResponseCode) closure;\n")),(0,i.mdx)(d,{language:"acp-objc",api:"get-nearby-points-of-interest",repeat:"2",mdxType:"Variant"}),(0,i.mdx)("p",null,"Two ",(0,i.mdx)("inlineCode",{parentName:"p"},"getNearbyPointsOfInterest")," methods exist. The overloaded version allows the caller to provide an ",(0,i.mdx)("inlineCode",{parentName:"p"},"errorCallback")," parameter in the case of failure."),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objc"},"// without error handling\n+ (void) getNearbyPointsOfInterest: (nonnull CLLocation*) currentLocation\n                             limit: (NSUInteger) limit\n                          callback: (nullable void (^) (NSArray<ACPPlacesPoi*>* _Nullable nearbyPoi)) callback;\n\n// with error handling\n+ (void) getNearbyPointsOfInterest: (nonnull CLLocation*) currentLocation\n                             limit: (NSUInteger) limit\n                          callback: (nullable void (^) (NSArray<ACPPlacesPoi*>* _Nullable nearbyPoi)) callback\n                     errorCallback: (nullable void (^) (ACPPlacesRequestError result)) errorCallback;\n")),(0,i.mdx)(d,{language:"aep-swift",api:"process-region-event",repeat:"2",mdxType:"Variant"}),(0,i.mdx)("p",null,"The order of parameters has the ",(0,i.mdx)("inlineCode",{parentName:"p"},"PlacesRegionEvent")," first, and the ",(0,i.mdx)("inlineCode",{parentName:"p"},"CLRegion")," that triggered the event second. This aligns better with Swift API naming conventions."),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"static func processRegionEvent(_ regionEvent: PlacesRegionEvent,\n                               forRegion region: CLRegion)\n")),(0,i.mdx)(d,{language:"aep-objc",api:"process-region-event",repeat:"1",mdxType:"Variant"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objc"},"+ (void) processRegionEvent: (AEPRegionEventType) eventType\n                  forRegion: (nonnull CLRegion*) region;\n")),(0,i.mdx)(d,{language:"acp-objc",api:"process-region-event",repeat:"2",mdxType:"Variant"}),(0,i.mdx)("p",null,"The order of parameters has the ",(0,i.mdx)("inlineCode",{parentName:"p"},"CLRegion")," that triggered the event first, and the ",(0,i.mdx)("inlineCode",{parentName:"p"},"ACPRegionEventType")," second."),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objc"},"+ (void) processRegionEvent: (nonnull CLRegion*) region\n         forRegionEventType: (ACPRegionEventType) eventType;\n")),(0,i.mdx)(d,{language:"aep-swift",api:"register-extension",repeat:"2",mdxType:"Variant"}),(0,i.mdx)("p",null,"Registration occurs by passing ",(0,i.mdx)("inlineCode",{parentName:"p"},"Places")," to the ",(0,i.mdx)("inlineCode",{parentName:"p"},"MobileCore.registerExtensions")," API."),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"MobileCore.registerExtensions([Places.self])\n")),(0,i.mdx)(d,{language:"aep-objc",api:"register-extension",repeat:"2",mdxType:"Variant"}),(0,i.mdx)("p",null,"Registration occurs by passing ",(0,i.mdx)("inlineCode",{parentName:"p"},"AEPMobilePlaces")," to the ",(0,i.mdx)("inlineCode",{parentName:"p"},"[AEPMobileCore registerExtensions:completion:]")," API."),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objc"},"[AEPMobileCore registerExtensions:@[AEPMobilePlaces.class] completion:nil];\n")),(0,i.mdx)(d,{language:"acp-objc",api:"register-extension",repeat:"1",mdxType:"Variant"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objc"},"+ (void) registerExtension;\n")),(0,i.mdx)(d,{language:"aep-swift",api:"set-authorization-status",repeat:"1",mdxType:"Variant"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"static func setAuthorizationStatus(status: CLAuthorizationStatus)\n")),(0,i.mdx)(d,{language:"aep-objc",api:"set-authorization-status",repeat:"1",mdxType:"Variant"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objc"},"+ (void) setAuthorizationStatus: (CLAuthorizationStatus) status;\n")),(0,i.mdx)(d,{language:"acp-objc",api:"set-authorization-status",repeat:"1",mdxType:"Variant"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objc"},"+ (void) setAuthorizationStatus: (CLAuthorizationStatus) status;\n")))}g.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-documentation-places-tabs-migration-md-42e3b27b0e1b90dc26fe.js.map