{"version":3,"file":"component---src-pages-edge-adobe-journey-optimizer-content-card-ui-i-os-public-classes-contentcarduieventlistening-md-06d881e49c8c194e79ef.js","mappings":"2OAOsBA,E,wEADTC,EAAe,CAAC,EAKvBC,GAJgBF,EAIU,YAJF,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,4EAC5B,eAASG,EAClB,GAEMG,EAAc,CAClBL,aAAAA,GAEIM,EAAYC,EAAAA,EACH,SAASC,EAAW,GAGhC,IAFDC,EAAU,EAAVA,WACGP,GAAK,YAER,OAAO,SAACI,GAAS,UAAKD,EAAiBH,EAAK,CAAEO,WAAYA,EAAYC,QAAQ,eAG5E,eACE,GAAM,+BAA6B,gCAErC,2GACA,eACE,GAAM,uBAAqB,wBAE7B,SAACT,EAAS,CAACU,MAAM,gBAAgBC,OAAO,IAAIC,UAAU,QAAQH,QAAQ,eACtE,eACE,GAAM,SAAO,UAEf,qBAAK,iBAAMI,WAAW,MAClB,UAAa,kBAAgB,4OAOjC,eACE,GAAM,WAAS,YAEjB,eACE,GAAM,aAAW,cAEnB,qHACA,eACE,GAAM,cAAY,eAEpB,oBACE,eAAIA,WAAW,OAAK,eAAIA,WAAW,MAAI,QAAc,WAAW,cAAGA,WAAW,KAC1E,KAAQ,sBAAoB,iBACN,yBAE5B,eACE,GAAM,UAAQ,WAEhB,SAACb,EAAS,CAACU,MAAM,gBAAgBC,OAAO,IAAIC,UAAU,QAAQH,QAAQ,eACtE,eACE,GAAM,WAAS,UAEjB,qBAAK,iBAAMI,WAAW,MAClB,UAAa,kBAAgB,6CAGjC,eACE,GAAM,aAAW,cAEnB,4GACA,eACE,GAAM,gBAAc,eAEtB,oBACE,eAAIA,WAAW,OAAK,eAAIA,WAAW,MAAI,QAAc,WAAW,cAAGA,WAAW,KAC1E,KAAQ,sBAAoB,iBACN,yBAE5B,eACE,GAAM,YAAU,WAElB,SAACb,EAAS,CAACU,MAAM,gBAAgBC,OAAO,IAAIC,UAAU,QAAQH,QAAQ,eACtE,eACE,GAAM,WAAS,UAEjB,qBAAK,iBAAMI,WAAW,MAClB,UAAa,kBAAgB,6CAGjC,eACE,GAAM,cAAY,eAEpB,uHACA,eACE,GAAM,gBAAc,eAEtB,oBACE,eAAIA,WAAW,OAAK,eAAIA,WAAW,MAAI,QAAc,WAAW,cAAGA,WAAW,KAC1E,KAAQ,sBAAoB,iBACN,8BAC1B,eAAIA,WAAW,OAAK,eAAIA,WAAW,MAAI,iBAAuB,sDAC9D,eAAIA,WAAW,OAAK,eAAIA,WAAW,MAAI,aAAmB,0DAE5D,eACE,GAAM,WAAS,YAEjB,mGAAoF,uBAAYA,WAAW,KAAG,QAAsB,uCAAuC,uBAAYA,WAAW,KAAG,aAA2B,6CAA6C,uBAAYA,WAAW,KAAG,SAAuB,kCAAkC,uBAAYA,WAAW,KAAG,aAA2B,MACrZ,eACE,GAAM,YAAU,WAElB,SAACb,EAAS,CAACU,MAAM,yBAAyBC,OAAO,IAAIC,UAAU,QAAQH,QAAQ,eAC/E,eACE,GAAM,WAAS,UAEjB,qBAAK,iBAAMI,WAAW,MAClB,UAAa,kBAAgB,+FAKrC,CAEAN,EAAWO,gBAAiB,C","sources":["webpack://dev-site-documentation-template/./src/pages/edge/adobe-journey-optimizer/content-card-ui/iOS/public-classes/contentcarduieventlistening.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/aep-mobile-sdkdocs/aep-mobile-sdkdocs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst CodeBlock = makeShortcode(\"CodeBlock\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"contentcarduieventlistening\"\n    }}>{`ContentCardUIEventListening`}</h1>\n    <p>{`A protocol that defines methods for listening to UI events related to content cards.`}</p>\n    <h2 {...{\n      \"id\": \"protocol-definition\"\n    }}>{`Protocol Definition`}</h2>\n    <CodeBlock slots=\"heading, code\" repeat=\"1\" languages=\"Swift\" mdxType=\"CodeBlock\" />\n    <h4 {...{\n      \"id\": \"swift\"\n    }}>{`Swift`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`public protocol ContentCardUIEventListening {\n    func onDisplay(_ card: ContentCardUI)\n    func onDismiss(_ card: ContentCardUI)\n    func onInteract(_ card: ContentCardUI, _ interactionId: String, actionURL: URL?) -> Bool\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"methods\"\n    }}>{`Methods`}</h2>\n    <h3 {...{\n      \"id\": \"ondisplay\"\n    }}>{`onDisplay`}</h3>\n    <p>{`Called when the content card appears on the screen. Implementation of this method is optional.`}</p>\n    <h4 {...{\n      \"id\": \"parameters\"\n    }}>{`Parameters`}</h4>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`card`}</em>{` - The `}<a parentName=\"li\" {...{\n          \"href\": \"./contentcardui.md\"\n        }}>{`ContentCardUI`}</a>{` that is displayed.`}</li>\n    </ul>\n    <h4 {...{\n      \"id\": \"syntax\"\n    }}>{`Syntax`}</h4>\n    <CodeBlock slots=\"heading, code\" repeat=\"1\" languages=\"Swift\" mdxType=\"CodeBlock\" />\n    <h4 {...{\n      \"id\": \"swift-1\"\n    }}>{`Swift`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`func onDisplay(_ card: ContentCardUI)\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"ondismiss\"\n    }}>{`onDismiss`}</h3>\n    <p>{`Called when the content card is dismissed. Implementation of this method is optional.`}</p>\n    <h4 {...{\n      \"id\": \"parameters-1\"\n    }}>{`Parameters`}</h4>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`card`}</em>{` - The `}<a parentName=\"li\" {...{\n          \"href\": \"./contentcardui.md\"\n        }}>{`ContentCardUI`}</a>{` that is dismissed.`}</li>\n    </ul>\n    <h4 {...{\n      \"id\": \"syntax-1\"\n    }}>{`Syntax`}</h4>\n    <CodeBlock slots=\"heading, code\" repeat=\"1\" languages=\"Swift\" mdxType=\"CodeBlock\" />\n    <h4 {...{\n      \"id\": \"swift-2\"\n    }}>{`Swift`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`func onDismiss(_ card: ContentCardUI)\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"oninteract\"\n    }}>{`onInteract`}</h3>\n    <p>{`Called when the user interacts with the content card. Implementation of this method is optional.`}</p>\n    <h4 {...{\n      \"id\": \"parameters-2\"\n    }}>{`Parameters`}</h4>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`card`}</em>{` - The `}<a parentName=\"li\" {...{\n          \"href\": \"./contentcardui.md\"\n        }}>{`ContentCardUI`}</a>{` that is interacted with.`}</li>\n      <li parentName=\"ul\"><em parentName=\"li\">{`interactionId`}</em>{` - A string identifier for the interaction event.`}</li>\n      <li parentName=\"ul\"><em parentName=\"li\">{`actionURL`}</em>{` - The optional URL associated with the interaction.`}</li>\n    </ul>\n    <h4 {...{\n      \"id\": \"returns\"\n    }}>{`Returns`}</h4>\n    <p>{`A boolean value indicating whether the interaction event was handled. Return `}<inlineCode parentName=\"p\">{`true`}</inlineCode>{` if the client app has handled the `}<inlineCode parentName=\"p\">{`actionURL`}</inlineCode>{` associated with the interaction. Return `}<inlineCode parentName=\"p\">{`false`}</inlineCode>{` if the SDK should handle the `}<inlineCode parentName=\"p\">{`actionURL`}</inlineCode>{`.`}</p>\n    <h4 {...{\n      \"id\": \"syntax-2\"\n    }}>{`Syntax`}</h4>\n    <CodeBlock slots=\"heading, code, content\" repeat=\"1\" languages=\"Swift\" mdxType=\"CodeBlock\" />\n    <h4 {...{\n      \"id\": \"swift-3\"\n    }}>{`Swift`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`func onInteract(_ card: ContentCardUI, _ interactionId: String, actionURL: URL?) -> Bool\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","CodeBlock","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","slots","repeat","languages","parentName","isMDXComponent"],"sourceRoot":""}