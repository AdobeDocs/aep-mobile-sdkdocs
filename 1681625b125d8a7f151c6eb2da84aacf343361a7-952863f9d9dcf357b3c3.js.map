{"version":3,"file":"1681625b125d8a7f151c6eb2da84aacf343361a7-952863f9d9dcf357b3c3.js","mappings":"2OAOsBA,E,wEADTC,EAAe,CAAC,EAKvBC,GAJgBF,EAIQ,UAJA,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,4EAC5B,eAASG,EAClB,GAEMG,EAAc,CAClBL,aAAAA,GAEIM,EAAYC,EAAAA,EACH,SAASC,EAAW,GAGhC,IAFDC,EAAU,EAAVA,WACGP,GAAK,YAER,OAAO,SAACI,GAAS,UAAKD,EAAiBH,EAAK,CAAEO,WAAYA,EAAYC,QAAQ,eAG5E,SAACT,EAAO,CAACU,SAAS,UAAUC,KAAK,iBAAiBC,OAAO,IAAIH,QAAQ,aACrE,oBACE,eAAII,WAAW,MAAI,kDAAmD,uBAAYA,WAAW,MAAI,gBAA8B,YAEjI,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,qHAIhC,eACE,MAAS,IAET,eAAIA,WAAW,MAAI,6EAErB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,mGAIhC,SAACb,EAAO,CAACU,SAAS,UAAUC,KAAK,iBAAiBC,OAAO,IAAIH,QAAQ,aACrE,+DAAgD,cAAGI,WAAW,IAC1D,KAAQ,2CAAyC,aAC/B,KAAK,uBAAYA,WAAW,KAAG,WAAyB,MAC9E,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBAAc,2DAI/B,uGACA,eACE,GAAM,SAAO,UAEf,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBAAgB,2CAIjC,eACE,GAAM,eAAa,gBAErB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBAAqB,+CAItC,SAACb,EAAO,CAACU,SAAS,UAAUC,KAAK,iBAAiBC,OAAO,IAAIH,QAAQ,aACrE,+DAAgD,cAAGI,WAAW,IAC1D,KAAQ,2CAAyC,aAC/B,KAAK,uBAAYA,WAAW,KAAG,WAAyB,MAC9E,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBAAc,kDAI/B,mGACA,eACE,GAAM,WAAS,UAEjB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBAAgB,2CAIjC,eACE,GAAM,iBAAe,gBAEvB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBAAqB,qDAItC,SAACb,EAAO,CAACU,SAAS,eAAeC,KAAK,iBAAiBC,OAAO,KAAKH,QAAQ,aAC3E,oBACE,eAAII,WAAW,MAAI,wCAErB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,oDAGhC,eACE,MAAS,IAET,eAAIA,WAAW,MAAI,sBAErB,mBAAG,mBAAQA,WAAW,KAAG,wBACzB,mBAAG,cAAGA,WAAW,IACb,KAAQ,iFAA+E,wBAC1D,8CACjC,mBAAG,mBAAQA,WAAW,KAAG,gCACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,0DAGhC,mBAAG,mBAAQA,WAAW,KAAG,QAAkB,SAAS,uBAAYA,WAAW,KAAG,OAAqB,WAAW,uBAAYA,WAAW,KAAG,aAA2B,WACnK,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,8BAGhC,eACE,MAAS,IAET,eAAIA,WAAW,MAAI,2BAErB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBAAc,sEAG/B,eACE,MAAS,IAET,eAAIA,WAAW,MAAI,gCAErB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBAAc,6HAG/B,SAACb,EAAO,CAACU,SAAS,UAAUC,KAAK,iBAAiBC,OAAO,IAAIH,QAAQ,aACrE,eACE,GAAM,cAAY,eAEpB,oBACE,eAAII,WAAW,MAAI,wCAErB,oEAAqD,cAAGA,WAAW,IAC/D,KAAQ,sDAAoD,yBAC9B,MAClC,eACE,MAAS,IAET,eAAIA,WAAW,MAAI,2BAErB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,kEAGhC,eACE,MAAS,IAET,eAAIA,WAAW,MAAI,gCAErB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,oEAGhC,SAACb,EAAO,CAACU,SAAS,UAAUC,KAAK,iBAAiBC,OAAO,IAAIH,QAAQ,aACrE,eACE,GAAM,gBAAc,eAEtB,oBACE,eAAII,WAAW,MAAI,sJAErB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,eAAa,4EAG9B,eACE,MAAS,IAET,eAAIA,WAAW,MAAI,gCAErB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBAAc,yKAO/B,SAACb,EAAO,CAACU,SAAS,QAAQC,KAAK,iBAAiBC,OAAO,IAAIH,QAAQ,aACnE,eACE,GAAM,KAAG,OAEX,oBACE,eAAII,WAAW,MAAI,wBAAyB,cAAGA,WAAW,KACtD,KAAQ,+DAA6D,6BACnC,qGAExC,qBAAK,iBAAMA,WAAW,MAClB,UAAa,mBAAiB,yCAGlC,eACE,MAAS,IAET,eAAIA,WAAW,MAAI,gCAErB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,mBAAiB,wCAGlC,SAACb,EAAO,CAACU,SAAS,UAAUC,KAAK,iBAAiBC,OAAO,IAAIH,QAAQ,aACrE,eACE,GAAM,OAAK,OAEb,oBACE,eAAII,WAAW,MAAI,qBAAsB,cAAGA,WAAW,KACnD,KAAQ,0DAAwD,OACpD,QAAQ,cAAGA,WAAW,KAClC,KAAQ,8DAA4D,WACpD,kGAEtB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,mBAAiB,yCAGlC,eACE,MAAS,IAET,eAAIA,WAAW,MAAI,gCAErB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,mBAAiB,wCAGlC,SAACb,EAAO,CAACU,SAAS,UAAUC,KAAK,qBAAqBC,OAAO,IAAIH,QAAQ,aACzE,2GAA4F,cAAGI,WAAW,IACtG,KAAQ,2BAAyB,eACb,gBACxB,eACE,GAAM,QAAM,SAEd,iFACA,qFAAsE,cAAGA,WAAW,IAChF,KAAQ,+EAA6E,+BACjD,kGACxC,mBAAG,iBAAMA,WAAW,IAChB,UAAa,4BACb,MAAS,CACP,SAAY,WACZ,QAAW,QACX,WAAc,OACd,YAAe,OACf,SAAY,UACb,YAED,iBAAMA,WAAW,OACf,UAAa,qCACb,MAAS,CACP,cAAiB,sBACjB,SAAY,WACZ,OAAU,IACV,KAAQ,IACR,QAAW,QACX,WAAc,oBACd,cAAiB,UAEX,QACd,oBAASA,WAAW,QAAM,gBAClB,mBAAQA,WAAW,UACnB,OAAU,CAAC,mGAAoG,mGAAoG,oGACnN,MAAS,kCACT,KAAQ,eACE,gBACV,mBAAQA,WAAW,UACnB,OAAU,CAAC,kGAAmG,kGAAmG,mGACjN,MAAS,kCACT,KAAQ,cACE,gBACV,gBAAKA,WAAW,UAChB,UAAa,0BACb,IAAO,6FACP,IAAO,uBACP,MAAS,uBACT,QAAW,OACX,MAAS,CACP,MAAS,OACT,OAAU,OACV,OAAU,IACV,cAAiB,SACjB,SAAY,WACZ,QAAW,IACX,WAAc,eACd,MAAS,UACT,UAAa,+BACb,IAAO,IACP,KAAQ,OAEH,cACC,YAEhB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,sjBAqBhC,SAACb,EAAO,CAACU,SAAS,UAAUC,KAAK,qBAAqBC,OAAO,IAAIH,QAAQ,aACzE,2GAA4F,cAAGI,WAAW,IACtG,KAAQ,2BAAyB,eACb,gBACxB,eACE,GAAM,WAAS,UAEjB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBAAgB,qaAYjC,eACE,GAAM,iBAAe,gBAEvB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBAAqB,sZAYtC,SAACb,EAAO,CAACU,SAAS,UAAUC,KAAK,qBAAqBC,OAAO,IAAIH,QAAQ,aACzE,2GAA4F,cAAGI,WAAW,IACtG,KAAQ,2BAAyB,eACb,gBACxB,eACE,GAAM,WAAS,UAEjB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBAAgB,6UASjC,eACE,GAAM,iBAAe,gBAEvB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBAAqB,sSAQtC,SAACb,EAAO,CAACU,SAAS,eAAeC,KAAK,qBAAqBC,OAAO,IAAIH,QAAQ,aAC9E,eACE,GAAM,gBAAc,eAEtB,4IACA,SAACT,EAAO,CAACU,SAAS,UAAUC,KAAK,qBAAqBC,OAAO,IAAIH,QAAQ,aACzE,eACE,GAAM,QAAM,SAEd,uIACA,SAACT,EAAO,CAACU,SAAS,UAAUC,KAAK,qBAAqBC,OAAO,IAAIH,QAAQ,aACzE,eACE,GAAM,gBAAc,eAEtB,uIACA,SAACT,EAAO,CAACU,SAAS,QAAQC,KAAK,qBAAqBC,OAAO,IAAIH,QAAQ,aACvE,eACE,GAAM,OAAK,OAEb,oDAAqC,uBAAYI,WAAW,KAAG,WAAyB,eACxF,qBAAK,iBAAMA,WAAW,MAClB,UAAa,mBAAiB,ogBAqBlC,SAACb,EAAO,CAACU,SAAS,UAAUC,KAAK,qBAAqBC,OAAO,IAAIH,QAAQ,aACzE,mBAAG,mBAAQI,WAAW,KAAG,SACzB,wEAAyD,uBAAYA,WAAW,KAAG,uBAAqC,eACxH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,mBAAiB,gbAiBlC,mBAAG,mBAAQA,WAAW,KAAG,aACzB,wEAAyD,uBAAYA,WAAW,KAAG,cAA4B,eAC/G,qBAAK,iBAAMA,WAAW,MAClB,UAAa,mBAAiB,qiBAqBlC,SAACb,EAAO,CAACU,SAAS,UAAUC,KAAK,sBAAsBC,OAAO,KAAKH,QAAQ,aAC3E,eACE,GAAM,WAAS,UAEjB,mBAAG,mBAAQI,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBAAgB,wMAMjC,kFAAmE,uBAAYA,WAAW,KAAG,mBAAiC,OAAO,uBAAYA,WAAW,KAAG,6BAA2C,wBAC1M,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBAAgB,unBAejC,eACE,GAAM,iBAAe,gBAEvB,mBAAG,mBAAQA,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBAAqB,2CAGtC,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBAAqB,kOAMtC,kFAAmE,uBAAYA,WAAW,KAAG,mBAAiC,OAAO,uBAAYA,WAAW,KAAG,6BAA2C,wBAC1M,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBAAqB,6dAYtC,SAACb,EAAO,CAACU,SAAS,UAAUC,KAAK,sBAAsBC,OAAO,KAAKH,QAAQ,aAC3E,eACE,GAAM,WAAS,UAEjB,mBAAG,mBAAQI,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBAAgB,uLAMjC,kFAAmE,uBAAYA,WAAW,KAAG,mBAAiC,OAAO,uBAAYA,WAAW,KAAG,6BAA2C,wBAC1M,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBAAgB,sJAKjC,eACE,GAAM,iBAAe,gBAEvB,mBAAG,mBAAQA,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBAAqB,qDAGtC,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBAAqB,qNAMtC,kFAAmE,uBAAYA,WAAW,KAAG,mBAAiC,OAAO,uBAAYA,WAAW,KAAG,6BAA2C,wBAC1M,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBAAqB,0PAU1C,CAEAN,EAAWO,gBAAiB,C","sources":["webpack://dev-site-documentation-template/./src/pages/documentation/platform-assurance-sdk/tabs/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/aep-mobile-sdkdocs/aep-mobile-sdkdocs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst Variant = makeShortcode(\"Variant\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <Variant platform=\"android\" task=\"import-library\" repeat=\"4\" mdxType=\"Variant\" />\n    <ol>\n      <li parentName=\"ol\">{`Add the following libraries in your project's `}<inlineCode parentName=\"li\">{`build.gradle`}</inlineCode>{` file:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`implementation 'com.adobe.marketing.mobile:core:1+'\nimplementation 'com.adobe.marketing.mobile:assurance:1+'\n`}</code></pre>\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`Import the Assurance library along with the other Mobile SDK libraries:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import com.adobe.marketing.mobile.Assurance;\nimport com.adobe.marketing.mobile.MobileCore;\n`}</code></pre>\n    <Variant platform=\"ios-aep\" task=\"import-library\" repeat=\"7\" mdxType=\"Variant\" />\n    <p>{`Add the library to your project via your `}<a parentName=\"p\" {...{\n        \"href\": \"https://cocoapods.org/pods/AEPAssurance\"\n      }}>{`Cocoapods`}</a>{` `}<inlineCode parentName=\"p\">{`Podfile`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-pod\"\n      }}>{`pod 'AEPCore','~> 3.0'\npod 'AEPAssurance','~> 3.0'\n`}</code></pre>\n    <p>{`Import the Assurance extension along with the other Adobe Mobile SDK extensions:`}</p>\n    <h4 {...{\n      \"id\": \"swift\"\n    }}>{`Swift`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`import AEPCore\nimport AEPAssurance\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c\"\n    }}>{`Objective-C`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`@import AEPCore;\n@import AEPAssurance;\n`}</code></pre>\n    <Variant platform=\"ios-acp\" task=\"import-library\" repeat=\"7\" mdxType=\"Variant\" />\n    <p>{`Add the library to your project via your `}<a parentName=\"p\" {...{\n        \"href\": \"https://cocoapods.org/pods/AEPAssurance\"\n      }}>{`Cocoapods`}</a>{` `}<inlineCode parentName=\"p\">{`Podfile`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-pod\"\n      }}>{`pod 'ACPCore'\npod 'AEPAssurance','~> 1.0'\n`}</code></pre>\n    <p>{`Import the Assurance extension along with the other Adobe Mobile extensions:`}</p>\n    <h4 {...{\n      \"id\": \"swift-1\"\n    }}>{`Swift`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`import ACPCore\nimport AEPAssurance\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-1\"\n    }}>{`Objective-C`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`#import \"ACPCore.h\"\n#import \"AEPAssurance.h\"\n`}</code></pre>\n    <Variant platform=\"react-native\" task=\"import-library\" repeat=\"13\" mdxType=\"Variant\" />\n    <ol>\n      <li parentName=\"ol\">{`Install the AEP Assurance package.`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`npm install @adobe/react-native-aepassurance\n`}</code></pre>\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`Link the module.`}</li>\n    </ol>\n    <p><strong parentName=\"p\">{`React Native 0.60+`}</strong></p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://github.com/react-native-community/cli/blob/master/docs/autolinking.md\"\n      }}>{`CLI autolink feature`}</a>{` links the module while building the app.`}</p>\n    <p><strong parentName=\"p\">{`React Native `}{`<`}{`= 0.59`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`react-native link @adobe/react-native-aepassurance\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Note`}</strong>{` For `}<inlineCode parentName=\"p\">{`iOS`}</inlineCode>{` using `}<inlineCode parentName=\"p\">{`cocoapods`}</inlineCode>{`, run:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`cd ios/ && pod install\n`}</code></pre>\n    <ol {...{\n      \"start\": 3\n    }}>\n      <li parentName=\"ol\">{`Import the extension.`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import {AEPAssurance} from '@adobe/react-native-aepassurance';\n`}</code></pre>\n    <ol {...{\n      \"start\": 4\n    }}>\n      <li parentName=\"ol\">{`Get the extension version.`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`AEPAssurance.extensionVersion().then(version => console.log(\"AdobeExperienceSDK: AEPAssurance version: \" + version));\n`}</code></pre>\n    <Variant platform=\"flutter\" task=\"import-library\" repeat=\"7\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"javascript\"\n    }}>{`JavaScript`}</h4>\n    <ol>\n      <li parentName=\"ol\">{`Install the AEP Assurance package.`}</li>\n    </ol>\n    <p>{`Installation instructions can be found in the `}<a parentName=\"p\" {...{\n        \"href\": \"https://pub.dev/packages/flutter_assurance/install\"\n      }}>{`Flutter documentation`}</a>{`.`}</p>\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`Import the extension.`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-dart\"\n      }}>{`import 'package:flutter_assurance/flutter_assurance.dart';\n`}</code></pre>\n    <ol {...{\n      \"start\": 3\n    }}>\n      <li parentName=\"ol\">{`Get the extension version.`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-dart\"\n      }}>{`String version = await FlutterAEPAssurance.extensionVersion;\n`}</code></pre>\n    <Variant platform=\"cordova\" task=\"import-library\" repeat=\"5\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"javascript-1\"\n    }}>{`JavaScript`}</h4>\n    <ol>\n      <li parentName=\"ol\">{`After creating your Cordova app and adding the Android and iOS platforms, the AEPAssurance extension for Cordova can be added with this command:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`cordova plugin add https://github.com/adobe/cordova-aepassurance.git\n`}</code></pre>\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`Get the extension version.`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`AEPAssurance.extensionVersion(function(version) {  \n    console.log(\"AEPAssurance version: \" + version);\n}, function(error) {  \n    console.log(error);  \n});\n`}</code></pre>\n    <Variant platform=\"unity\" task=\"import-library\" repeat=\"5\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"c\"\n    }}>{`C#`}</h4>\n    <ol>\n      <li parentName=\"ol\">{`After importing the `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/adobe/unity-aepassurance/tree/master/bin\"\n        }}>{`AEPAssurance.unitypackage`}</a>{`, the AEP Assurance extension for Unity can be added with the following code in the MainScript:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`using com.adobe.marketing.mobile;\n`}</code></pre>\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`Get the extension version.`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`AEPAssurance.extensionVersion();\n`}</code></pre>\n    <Variant platform=\"xamarin\" task=\"import-library\" repeat=\"5\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"c-1\"\n    }}>{`C#`}</h4>\n    <ol>\n      <li parentName=\"ol\">{`After adding the `}<a parentName=\"li\" {...{\n          \"href\": \"https://www.nuget.org/packages/Adobe.AEPAssurance.iOS/\"\n        }}>{`iOS`}</a>{` or `}<a parentName=\"li\" {...{\n          \"href\": \"https://www.nuget.org/packages/Adobe.AEPAssurance.Android/\"\n        }}>{`Android`}</a>{` AEP Assurance NuGet package, the Assurance extension can be added by this import statement:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`using Com.Adobe.Marketing.Mobile;\n`}</code></pre>\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`Get the extension version.`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`AEPAssurance.ExtensionVersion();\n`}</code></pre>\n    <Variant platform=\"android\" task=\"register-assurance\" repeat=\"6\" mdxType=\"Variant\" />\n    <p>{`To start using the extension library, you must first register the extension with the `}<a parentName=\"p\" {...{\n        \"href\": \"../mobile-core/index.md\"\n      }}>{`Mobile Core`}</a>{` extension.`}</p>\n    <h4 {...{\n      \"id\": \"java\"\n    }}>{`Java`}</h4>\n    <p>{`Register the extension when you register other extensions.`}</p>\n    <p>{`To find your app ID, which is mentioned below, please read the `}<a parentName=\"p\" {...{\n        \"href\": \"../mobile-core/configuration/index.md#configure-with-app-id-per-environment\"\n      }}>{`Mobile Install Instructions`}</a>{`. Within the \"Publishing Flow\", select the small gray box next to the \"Environment\" dropdown.`}</p>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"566px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"29.056603773584904%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/aep-mobile-sdkdocs/static/80db4ace0a66a85ca7634b717a6e6380/dda86/install-instructions.webp 265w\", \"/aep-mobile-sdkdocs/static/80db4ace0a66a85ca7634b717a6e6380/010e6/install-instructions.webp 530w\", \"/aep-mobile-sdkdocs/static/80db4ace0a66a85ca7634b717a6e6380/2ba41/install-instructions.webp 566w\"],\n            \"sizes\": \"(max-width: 566px) 100vw, 566px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/aep-mobile-sdkdocs/static/80db4ace0a66a85ca7634b717a6e6380/28773/install-instructions.png 265w\", \"/aep-mobile-sdkdocs/static/80db4ace0a66a85ca7634b717a6e6380/a0177/install-instructions.png 530w\", \"/aep-mobile-sdkdocs/static/80db4ace0a66a85ca7634b717a6e6380/7ef45/install-instructions.png 566w\"],\n            \"sizes\": \"(max-width: 566px) 100vw, 566px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/aep-mobile-sdkdocs/static/80db4ace0a66a85ca7634b717a6e6380/7ef45/install-instructions.png\",\n            \"alt\": \"install instructions\",\n            \"title\": \"install instructions\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{` public class MobileApp extends Application {\n    @Override\n    public void onCreate() {\n        super.onCreate();\n        MobileCore.setApplication(this);\n\n        try {\n        // register other necessary extensions\n        Assurance.registerExtension();            \n        MobileCore.start(new AdobeCallback() {\n            @Override\n            public void call(final Object o) {\n                MobileCore.configureWithAppID(\"yourAppId\");\n            }});\n        } catch (Exception e) {\n        // Log the exception\n        }\n    }\n}\n`}</code></pre>\n    <Variant platform=\"ios-aep\" task=\"register-assurance\" repeat=\"5\" mdxType=\"Variant\" />\n    <p>{`To start using the extension library, you must first register the extension with the `}<a parentName=\"p\" {...{\n        \"href\": \"../mobile-core/index.md\"\n      }}>{`Mobile Core`}</a>{` extension.`}</p>\n    <h4 {...{\n      \"id\": \"swift-2\"\n    }}>{`Swift`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`    func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {\n\n        let extensions = [Assurance.self, ...]\n        MobileCore.registerExtensions(extensions, {\n            // set app id from the Data Collection UI    \n                MobileCore.configureWith(appId: \"yourAppId\")  \n        })\n\n        return true\n    }\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-2\"\n    }}>{`Objective-C`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n\n    NSArray *extensionsToRegister = @[AEPMobileAssurance.class, ...];\n    [AEPMobileCore registerExtensions:extensionsToRegister completion:^{\n        // set app id from the Data Collection UI\n        [AEPMobileCore configureWithAppId: @\"yourAppId\"];\n    }];\n\n    return YES;\n}\n`}</code></pre>\n    <Variant platform=\"ios-acp\" task=\"register-assurance\" repeat=\"5\" mdxType=\"Variant\" />\n    <p>{`To start using the extension library, you must first register the extension with the `}<a parentName=\"p\" {...{\n        \"href\": \"../mobile-core/index.md\"\n      }}>{`Mobile Core`}</a>{` extension.`}</p>\n    <h4 {...{\n      \"id\": \"swift-3\"\n    }}>{`Swift`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {\n       // set app id from the Data Collection UI\n     ACPCore.configure(withAppId: \"yourAppId\")\n     AEPAssurance.registerExtension()\n     ACPCore.start(nil)\n     return true;\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-3\"\n    }}>{`Objective-C`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n    [ACPCore configureWithAppId:@\"yourAppId\"]; // set app id from the Data Collection UI\n    [AEPAssurance registerExtension];\n    [ACPCore start:nil];\n    return YES;\n }\n`}</code></pre>\n    <Variant platform=\"react-native\" task=\"register-assurance\" repeat=\"2\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"javascript-2\"\n    }}>{`JavaScript`}</h4>\n    <p>{`When using React Native, register AEP Assurance with Mobile Core in native code as shown on the Android and iOS tabs.`}</p>\n    <Variant platform=\"flutter\" task=\"register-assurance\" repeat=\"2\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"dart\"\n    }}>{`Dart`}</h4>\n    <p>{`When using Flutter, register AEP Assurance with Mobile Core in native code as shown on the Android and iOS tabs.`}</p>\n    <Variant platform=\"cordova\" task=\"register-assurance\" repeat=\"2\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"javascript-3\"\n    }}>{`JavaScript`}</h4>\n    <p>{`When using Cordova, register AEP Assurance with Mobile Core in native code as shown on the Android and iOS tabs.`}</p>\n    <Variant platform=\"unity\" task=\"register-assurance\" repeat=\"3\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"c-2\"\n    }}>{`C#`}</h4>\n    <p>{`Register the extension in the `}<inlineCode parentName=\"p\">{`start()`}</inlineCode>{` function:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`using com.adobe.marketing.mobile;\nusing using AOT;\n\npublic class MainScript : MonoBehaviour\n{\n    [MonoPInvokeCallback(typeof(AdobeStartCallback))]\n    public static void HandleStartAdobeCallback()\n    {   \n        // set app id from the Data Collection UI\n        ACPCore.ConfigureWithAppID(\"yourAppId\");\n    }\n\n    // Start is called before the first frame update\n    void Start()\n    {   \n        AEPAssurance.registerExtension();\n        ACPCore.Start(HandleStartAdobeCallback);\n    }\n}\n`}</code></pre>\n    <Variant platform=\"xamarin\" task=\"register-assurance\" repeat=\"6\" mdxType=\"Variant\" />\n    <p><strong parentName=\"p\">{`iOS`}</strong></p>\n    <p>{`Register the AEPAssurance extension in your app's `}<inlineCode parentName=\"p\">{`FinishedLaunching()`}</inlineCode>{` function:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`public override bool FinishedLaunching(UIApplication app, NSDictionary options)\n{\n  global::Xamarin.Forms.Forms.Init();\n  LoadApplication(new App());\n  AEPAssurance.RegisterExtension();\n  // start Mobile Core\n  ACPCore.Start(startCallback);\n  return base.FinishedLaunching(app, options);\n}\n\nprivate void startCallback()\n{\n  // set app id from the Data Collection UI\n  ACPCore.ConfigureWithAppID(\"yourAppId\");\n}\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Android`}</strong></p>\n    <p>{`Register the AEPAssurance extension in your app's `}<inlineCode parentName=\"p\">{`OnCreate()`}</inlineCode>{` function:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`protected override void OnCreate(Bundle savedInstanceState)\n{\n  base.OnCreate(savedInstanceState);\n  global::Xamarin.Forms.Forms.Init(this, savedInstanceState);\n  LoadApplication(new App());\n  AEPAssurance.RegisterExtension();\n\n  // start Mobile Core\n  ACPCore.Start(new CoreStartCompletionCallback());\n}\n\nclass CoreStartCompletionCallback : Java.Lang.Object, IAdobeCallback\n{\n  public void Call(Java.Lang.Object callback)\n  {\n    // set app id from the Data Collection UI\n    ACPCore.ConfigureWithAppID(\"yourAppId\");\n  }\n}\n`}</code></pre>\n    <Variant platform=\"ios-aep\" task=\"implement-assurance\" repeat=\"12\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift-4\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`    func application(_ app: UIApplication, open url: URL, options: [UIApplication.OpenURLOptionsKey: Any] = [:]) -> Bool {\n        Assurance.startSession(url: url)\n        return true\n    }\n`}</code></pre>\n    <p>{`In iOS 13 and later, for a scene-based application, use the `}<inlineCode parentName=\"p\">{`UISceneDelegate`}</inlineCode>{`'s `}<inlineCode parentName=\"p\">{`scene(_:openURLContexts:)`}</inlineCode>{` method as follows:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`    func scene(_ scene: UIScene, openURLContexts URLContexts: Set<UIOpenURLContext>) {\n        // Called when the app in background is opened with a deep link.\n        if let deepLinkURL = URLContexts.first?.url {\n            Assurance.startSession(url: deepLinkURL)\n        }\n    }\n\n    func scene(_ scene: UIScene, willConnectTo session: UISceneSession, options connectionOptions: UIScene.ConnectionOptions) {\n        // Called when the app launches with the deep link\n        if let deepLinkURL = connectionOptions.urlContexts.first?.url {\n            Assurance.startSession(url: deepLinkURL)\n        }\n    }\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-4\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`static func startSession(url: URL?)\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`- (BOOL)application:(UIApplication *)app openURL:(nonnull NSURL *)url options:(nonnull NSDictionary<UIApplicationOpenURLOptionsKey,id> *)options {\n    [AEPMobileAssurance startSessionWithUrl:url];\n    return true;\n}\n`}</code></pre>\n    <p>{`In iOS 13 and later, for a scene-based application, use the `}<inlineCode parentName=\"p\">{`UISceneDelegate`}</inlineCode>{`'s `}<inlineCode parentName=\"p\">{`scene(_:openURLContexts:)`}</inlineCode>{` method as follows:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`\n- (void)scene:(UIScene *)scene willConnectToSession:(UISceneSession *)session options:(UISceneConnectionOptions *)connectionOptions {    \n    NSURL *deepLinkURL = connectionOptions.URLContexts.allObjects.firstObject.URL;\n    [AEPMobileAssurance startSessionWithUrl:deepLinkURL];\n}\n\n\n- (void)scene:(UIScene *)scene openURLContexts:(NSSet<UIOpenURLContext *> *)URLContexts {\n    [AEPMobileAssurance startSessionWithUrl:URLContexts.allObjects.firstObject.URL];\n}\n`}</code></pre>\n    <Variant platform=\"ios-acp\" task=\"implement-assurance\" repeat=\"12\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift-5\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`func application(_ app: UIApplication, open url: URL, options: [UIApplication.OpenURLOptionsKey : Any] = [:]) -> Bool {\n    AEPAssurance.startSession(url)\n    return true\n}\n`}</code></pre>\n    <p>{`In iOS 13 and later, for a scene-based application, use the `}<inlineCode parentName=\"p\">{`UISceneDelegate`}</inlineCode>{`'s `}<inlineCode parentName=\"p\">{`scene(_:openURLContexts:)`}</inlineCode>{` method as follows:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`func scene(_ scene: UIScene, openURLContexts URLContexts: Set<UIOpenURLContext>) {\n    AEPAssurance.startSession((URLContexts.first!).url)\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-5\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`+ (void) startSession: (NSURL* _Nonnull) url;\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`- (BOOL)application:(UIApplication *)app openURL:(nonnull NSURL *)url options:(nonnull NSDictionary<UIApplicationOpenURLOptionsKey,id> *)options {\n    [AEPAssurance startSession:url];\n    return true;\n}\n`}</code></pre>\n    <p>{`In iOS 13 and later, for a scene-based application, use the `}<inlineCode parentName=\"p\">{`UISceneDelegate`}</inlineCode>{`'s `}<inlineCode parentName=\"p\">{`scene(_:openURLContexts:)`}</inlineCode>{` method as follows:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`- (void) scene:(UIScene *)scene openURLContexts:(NSSet<UIOpenURLContext *> *)URLContexts {\n    UIOpenURLContext * urlContext = URLContexts.anyObject;\n    if (urlContext != nil) {\n        [AEPAssurance startSession:urlContext.URL];\n    }\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","Variant","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","platform","task","repeat","parentName","isMDXComponent"],"sourceRoot":""}