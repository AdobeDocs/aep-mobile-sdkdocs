"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[9586],{22572:function(e,a,n){n.r(a),n.d(a,{_frontmatter:function(){return d},default:function(){return h}});var t,i=n(87462),s=n(63366),o=(n(15007),n(64983)),r=n(91515),l=n(80599),m=["components"],d={},p=(t="TabsBlock",function(e){return console.warn("Component "+t+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.mdx)("div",e)}),g={_frontmatter:d},c=r.Z;function h(e){var a=e.components,n=(0,s.Z)(e,m);return(0,o.mdx)(c,(0,i.Z)({},g,n,{components:a,mdxType:"MDXLayout"}),(0,o.mdx)("h1",{id:"native-handling-of-javascript-events"},"Native handling of JavaScript events"),(0,o.mdx)("p",null,"You can handle events from in-app message interactions natively within your application by completing the following steps:"),(0,o.mdx)("ul",null,(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("a",{parentName:"li",href:"#implement-and-assign-a-presentationdelegate-messagingdelegate"},"Implement and assign a ",(0,o.mdx)("inlineCode",{parentName:"a"},"PresentationDelegate"),"/",(0,o.mdx)("inlineCode",{parentName:"a"},"MessagingDelegate"))),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("a",{parentName:"li",href:"#register-a-javascript-handler-for-your-in-app-message"},"Register a JavaScript handler for your In-App Message")),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("a",{parentName:"li",href:"#post-the-javascript-message-from-your-in-app-message"},"Post the JavaScript message from your In-App Message"))),(0,o.mdx)("h2",{id:"implement-and-assign-a-presentationdelegate-messagingdelegate"},"Implement and assign a ",(0,o.mdx)("inlineCode",{parentName:"h2"},"PresentationDelegate"),"/ ",(0,o.mdx)("inlineCode",{parentName:"h2"},"MessagingDelegate")),(0,o.mdx)("p",null,"To register a JavaScript event handler with a ",(0,o.mdx)("inlineCode",{parentName:"p"},"Message")," object, you will first need to implement and set a ",(0,o.mdx)("inlineCode",{parentName:"p"},"PresentationDelegate")," or ",(0,o.mdx)("inlineCode",{parentName:"p"},"MessagingDelegate")," (for older Android SDK versions and iOS SDK)."),(0,o.mdx)("p",null,"Please read the ",(0,o.mdx)("a",{parentName:"p",href:"./messaging-delegate.md"},"tutorial")," for more detailed instructions on implementing and using a PresentationDelegate/ MessagingDelegate (for older Android SDK versions and iOS SDK)."),(0,o.mdx)("h2",{id:"register-a-javascript-handler-for-your-in-app-message"},"Register a JavaScript handler for your In-App Message"),(0,o.mdx)(p,{orientation:"horizontal",slots:"heading, content",repeat:"3",mdxType:"TabsBlock"}),(0,o.mdx)("p",null,"Android 3.x"),(0,o.mdx)(l.default,{query:"platform=android3x&function=register",mdxType:"Tabs"}),(0,o.mdx)("p",null,"Android 2.x (Older version)"),(0,o.mdx)(l.default,{query:"platform=android2x&function=register",mdxType:"Tabs"}),(0,o.mdx)("p",null,"iOS"),(0,o.mdx)(l.default,{query:"platform=ios&function=register",mdxType:"Tabs"}),(0,o.mdx)("h2",{id:"post-the-javascript-message-from-your-in-app-message"},"Post the JavaScript message from your In-App Message"),(0,o.mdx)("p",null,"Now that the in-app message has been displayed, the final step is to post the JavaScript message."),(0,o.mdx)("p",null,"Continuing from the previous example, the developer is going to post the ",(0,o.mdx)("inlineCode",{parentName:"p"},"myInappCallback")," message from their HTML, which will in turn call the handler previously configured:"),(0,o.mdx)("h3",{id:"html"},"HTML"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-html"},'<html>\n    <head>\n        <script type="text/javascript">\n            function callNative(action) {\n                try {\n                    // the name of the message handler is the same name that must be registered in native code.\n                    // in this case the message name is "myInappCallback"\n                    webkit.messageHandlers.myInappCallback.postMessage(action);\n                } catch(err) {\n                    console.log(\'The native context does not exist yet\'); }\n                }\n            <\/script>\n    </head>\n    <body>\n        <button onclick="callNative(\'native callbacks are cool!\')">Native callback!</button>\n    </body>\n</html>\n')),(0,o.mdx)("p",null,"(The above HTML is not representative of a valid in-app message, and is intended only to demonstrate how to post the JavaScript message)."),(0,o.mdx)("p",null,"When the user clicks the button inside of this in-app message, the handler configured in the previous step will be called. The handler will send an Experience Event tracking the interaction, and print the following message to the console:"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-text"},"JavaScript body passed to native callback: native callbacks are cool!\n")),(0,o.mdx)("h2",{id:"examples"},"Examples"),(0,o.mdx)("p",null,"The test apps in this repository demonstrate calling native code from JavaScript:"),(0,o.mdx)("ul",null,(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("a",{parentName:"li",href:"https://github.com/adobe/aepsdk-messaging-ios/tree/main/TestApps/MessagingDemoApp"},"Swift")),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("a",{parentName:"li",href:"https://github.com/adobe/aepsdk-messaging-ios/tree/main/TestApps/MessagingDemoAppObjC"},"Objective-C")),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("a",{parentName:"li",href:"https://github.com/adobe/aepsdk-messaging-android/tree/main/code/testapp"},"Kotlin"))))}h.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-edge-adobe-journey-optimizer-in-app-message-tutorials-native-from-javascript-md-5ffbcdfc938a54e2d68f.js.map