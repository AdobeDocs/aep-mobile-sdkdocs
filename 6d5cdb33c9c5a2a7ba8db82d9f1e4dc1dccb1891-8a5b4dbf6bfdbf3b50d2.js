"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[561],{21359:function(e,a,t){t.r(a),t.d(a,{_frontmatter:function(){return p},default:function(){return x}});var n,r=t(87462),d=t(63366),i=(t(15007),t(64983)),m=t(91515),l=["components"],p={},c=(n="Variant",function(e){return console.warn("Component "+n+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.mdx)("div",e)}),o={_frontmatter:p},s=m.Z;function x(e){var a=e.components,t=(0,d.Z)(e,l);return(0,i.mdx)(s,(0,r.Z)({},o,t,{components:a,mdxType:"MDXLayout"}),(0,i.mdx)(c,{platform:"android",api:"extension-version",repeat:"8",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"java"},"Java"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"public static String extensionVersion() {\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"String mediaExtensionVersion = Media.extensionVersion();\n")),(0,i.mdx)("h4",{id:"kotlin"},"Kotlin"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"val mediaExtensionVersion = Media.extensionVersion()\n")),(0,i.mdx)(c,{platform:"ios",api:"extension-version",repeat:"10",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"swift"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"static var extensionVersion: String\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"let mediaExtensionVersion  = Media.extensionVersion()\n")),(0,i.mdx)("h4",{id:"objective-c"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"+ (nonnull NSString*) extensionVersion;\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"NSString *mediaExtensionVersion = [AEPMobileMedia extensionVersion];\n")),(0,i.mdx)(c,{platform:"android",api:"register-extension",repeat:"8",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"java-1"},"Java"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"public static void registerExtension()\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"Media.registerExtension();\n")),(0,i.mdx)("h4",{id:"kotlin-1"},"Kotlin"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-kotlin"},"Media.registerExtension()\n")),(0,i.mdx)(c,{platform:"android",api:"create-tracker",repeat:"10",mdxType:"Variant"}),(0,i.mdx)("p",null,"The createTracker function returns the instance of MediaTracker for tracking a media session. The createTracker function with callback as a parameter has been deprecated."),(0,i.mdx)("p",null,"If MobileCore.resetIdentities() is called in the implementation, the existing tracker will stop sending pings. You will need to create a new tracker to generate a new media session."),(0,i.mdx)("h4",{id:"java-2"},"Java"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"public static MediaTracker createTracker()\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"MediaTracker mediaTracker = Media.createTracker();  // Use the instance for tracking media.\n")),(0,i.mdx)("h4",{id:"kotlin-2"},"Kotlin"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"val tracker = Media.createTracker()\n")),(0,i.mdx)(c,{platform:"ios",api:"create-tracker",repeat:"12",mdxType:"Variant"}),(0,i.mdx)("p",null,"Creates a media tracker instance that tracks the playback session. The tracker created should be used to track the streaming content and it sends periodic pings to the media analytics backend."),(0,i.mdx)("p",null,"If MobileCore.resetIdentities() is called in the implementation, the existing tracker will stop sending pings. You will need to create a new tracker to generate a new media session."),(0,i.mdx)("h4",{id:"swift-1"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"static func createTracker()\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"let tracker = Media.createTracker()  // Use the instance for tracking media.\n")),(0,i.mdx)("h4",{id:"objective-c-1"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"+ (void) createTracker\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objc"},"id<AEPMediaTracker> tracker; \n_tracker = [AEPMobileMedia createTracker];  // Use the instance for tracking media.\n")),(0,i.mdx)(c,{platform:"android",api:"create-tracker-with-config",repeat:"8",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"java-3"},"Java"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"public static MediaTracker createTracker(Map<String, Object> config)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'HashMap<String, Object> config = new HashMap<String, Object>();\nconfig.put(MediaConstants.Config.CHANNEL, "custom-channel");  // Override channel configured in the Data Collection UI\nconfig.put(MediaConstants.Config.DOWNLOADED_CONTENT, true);   // Creates downloaded content tracker\nMediaTracker mediaTracker = Media.createTracker(config);  // Use the instance for tracking media.\n')),(0,i.mdx)("h4",{id:"kotlin-3"},"Kotlin"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'val config = mapOf(\n                MediaConstants.Config.CHANNEL to "custom-channel",\n                MediaConstants.Config.DOWNLOADED_CONTENT to true\n            )\nval mediaTracker = Media.createTracker(config) // Use the instance for tracking media.\n')),(0,i.mdx)(c,{platform:"ios",api:"create-tracker-with-config",repeat:"11",mdxType:"Variant"}),(0,i.mdx)("p",null,"Creates a media tracker instance based on the configuration to track the playback session."),(0,i.mdx)("h4",{id:"swift-2"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"static func createTrackerWith(config: [String: Any]?)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'var config: [String: Any] = [:]\nconfig[MediaConstants.TrackerConfig.CHANNEL] = "custom-channel" // Overrides channel configured in the Data Collection UI\nconfig[MediaConstants.TrackerConfig.DOWNLOADED_CONTENT] = true    // Creates downloaded content tracker\n\nlet tracker = Media.createTrackerWith(config: config)\n')),(0,i.mdx)("h4",{id:"objective-c-2"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"+(id<AEPMediaTracker> _Nonnull) createTrackerWithConfig:(NSDictionary<NSString *,id> * _Nullable)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},'id<AEPMediaTracker> _tracker; \nNSMutableDictionary* config = [NSMutableDictionary dictionary];\n\nconfig[AEPMediaTrackerConfig.CHANNEL] = @"custom-channel"; // Overrides channel configured in the Data Collection UI\nconfig[AEPMediaTrackerConfig.DOWNLOADED_CONTENT] = [NSNumber numberWithBool:true]; // Creates downloaded content tracker\n\n_tracker = [AEPMobileMedia createTrackerWithConfig:config];\n')),(0,i.mdx)(c,{platform:"android",api:"create-media-object",repeat:"8",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"java-4"},"Java"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"public static HashMap<String, Object> createMediaObject(String name,\n                                                        String mediaId,\n                                                        Double length,\n                                                        String streamType,\n                                                        MediaType mediaType);\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'HashMap<String, Object> mediaInfo = Media.createMediaObject("video-name",\n                                                            "video-id",\n                                                            60D,\n                                                            MediaConstants.StreamType.VOD,\n                                                            Media.MediaType.Video);\n')),(0,i.mdx)("h4",{id:"kotlin-4"},"Kotlin"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'var mediaInfo = Media.createMediaObject("video-name",\n                                        "video-id",\n                                        60D,\n                                        MediaConstants.StreamType.VOD,\n                                        Media.MediaType.Video)\n')),(0,i.mdx)(c,{platform:"ios",api:"create-media-object",repeat:"11",mdxType:"Variant"}),(0,i.mdx)("p",null,"Returns a map that contains information about the media."),(0,i.mdx)("h4",{id:"swift-3"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"static func createMediaObjectWith(name: String, \n                                    id: String, \n                                length: Double, \n                            streamType: String,\n                             mediaType: MediaType) -> [String: Any]?\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'let mediaObject = Media.createMediaObjectWith(name: "video-name",\n                                                id: "videoId", \n                                            length: 60,\n                                        streamType: MediaConstants.StreamType.VOD, \n                                         mediaType: MediaType.Video)\n')),(0,i.mdx)("h4",{id:"objective-c-3"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"+ (NSDictionary<NSString *, id> * _Nullable) createMediaObjectWith:(NSString * _Nonnull) id:(NSString * _Nonnull) length:(double) streamType:(NSString * _Nonnull) mediaType:(enum AEPMediaType)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},'NSDictionary *mediaObject = [AEPMobileMedia createMediaObjectWith:@"video-name"\n                                                                id:@"video-id" \n                                                            length:60 \n                                                        streamType:AEPMediaStreamType.VOD\n                                                         mediaType:AEPMediaTypeVideo];\n')),(0,i.mdx)(c,{platform:"android",api:"create-ad-break-object",repeat:"8",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"java-5"},"Java"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"public static HashMap<String, Object> createAdBreakObject(String name, Long position, Double startTime);\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'HashMap<String, Object> adBreakObject = Media.createAdBreakObject("adbreak-name", 1L, 0D);\n')),(0,i.mdx)("h4",{id:"kotlin-5"},"Kotlin"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'val adBreakObject = Media.createAdBreakObject("adbreak-name", 1L, 0D)\n')),(0,i.mdx)(c,{platform:"ios",api:"create-ad-break-object",repeat:"11",mdxType:"Variant"}),(0,i.mdx)("p",null,"Returns a map that contains information about the ad break."),(0,i.mdx)("h4",{id:"swift-4"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"static func createAdBreakObjectWith(name: String,\n                                position: Int, \n                                startTime: Double) -> [String: Any]?\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'let adBreakObject = Media.createAdBreakObjectWith(name: "adbreak-name", \n                                              position: 1, \n                                             startTime: 0)\n')),(0,i.mdx)("h4",{id:"objective-c-4"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"+ (NSDictionary  <NSString *, id> * _Nullable) createAdBreakObjectWith:(NSString * _Nonnull)position:(NSInteger) startTime:(double)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},'NSDictionary *adBreakObject = [AEPMobileMedia createAdBreakObjectWith:@"adbreak-name" \n                                                             position:1 \n                                                            startTime:0];\n')),(0,i.mdx)(c,{platform:"android",api:"create-ad-object",repeat:"8",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"java-6"},"Java"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"public static HashMap<String, Object> createAdObject(String name, String adId, Long position, Double length);\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'HashMap<String, Object> adInfo = Media.createAdObject("ad-name", "ad-id", 1L, 15D);\n')),(0,i.mdx)("h4",{id:"kotlin-6"},"Kotlin"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'val adInfo = Media.createAdObject("ad-name", "ad-id", 1L, 15D)\n')),(0,i.mdx)(c,{platform:"ios",api:"create-ad-object",repeat:"11",mdxType:"Variant"}),(0,i.mdx)("p",null,"Returns a map that contains information about the ad."),(0,i.mdx)("h4",{id:"swift-5"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"static func createAdObjectWith(name: String, \n                                 id: String, \n                           position: Int, \n                             length: Double) -> [String: Any]?\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'let adObject = Media.createObjectWith(name: "ad-name", \n                                        id: "ad-id", \n                                  position: 0, \n                                    length: 30)\n')),(0,i.mdx)("h4",{id:"objective-c-5"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"+ (NSDictionary  <NSString *, id> * _Nullable) createAdObjectWith: (NSString * _Nonnull\n                                                               id:(NSString * _Nonnull) \n                                                         position:(NSInteger) \n                                                           length:(double)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},'NSDictionary *adObject = [AEPMobileMedia createAdObjectWith:@"ad-name" \n                                                         id:@"ad-id" \n                                                   position:0 \n                                                     length:30];\n')),(0,i.mdx)(c,{platform:"android",api:"create-chapter-object",repeat:"8",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"java-7"},"Java"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"public static HashMap<String, Object> createChapterObject(String name,\n                                                          Long position,\n                                                          Double length,\n                                                          Double startTime);\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'HashMap<String, Object> chapterInfo = Media.createChapterObject("chapter-name", 1L, 60D, 0D);\n')),(0,i.mdx)("h4",{id:"kotlin-7"},"Kotlin"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'val chapterInfo = Media.createChapterObject("chapter-name", 1L, 60D, 0D)\n')),(0,i.mdx)(c,{platform:"ios",api:"create-chapter-object",repeat:"11",mdxType:"Variant"}),(0,i.mdx)("p",null,"Returns a map that contains information about the chapter."),(0,i.mdx)("h4",{id:"swift-6"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"static func createChapterObjectWith(name: String, \n                                position: Int, \n                                  length: Double, \n                               startTime: Double) -> [String: Any]?\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'let chapterObject = Media.createChapterObjectWith(name: "chapter_name", \n                                              position: 1, \n                                                length: 60, \n                                             startTime: 0)\n')),(0,i.mdx)("h4",{id:"objective-c-6"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"+ (NSDictionary  <NSString *, id> * _Nullable) createChapterObjectWith:(NSString * _Nonnull)\n                                                              position:(NSInteger) \n                                                                length:(double) \n                                                             startTime:(double)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivc"},'NSDictionary *chapterObject = [AEPMobileMedia createChapterObjectWith:@"chapter_name" \n                                                             position:1 \n                                                               length:60 \n                                                            startTime:0];\n')),(0,i.mdx)(c,{platform:"android",api:"create-qoe-object",repeat:"8",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"java-8"},"Java"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"public static HashMap<String, Object> createQoEObject(Long bitrate,\n                                                      Double startupTime,\n                                                      Double fps,\n                                                      Long droppedFrames);\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"HashMap<String, Object> qoeInfo = Media.createQoEObject(10000000L, 2D, 23D, 10D);\n")),(0,i.mdx)("h4",{id:"kotlin-8"},"Kotlin"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"val qoeInfo = Media.createQoEObject(10000000L, 2D, 23D, 10D)\n")),(0,i.mdx)(c,{platform:"ios",api:"create-qoe-object",repeat:"11",mdxType:"Variant"}),(0,i.mdx)("p",null,"Returns a map that contains information about the quality of experience."),(0,i.mdx)("h4",{id:"swift-7"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"static func createQoEObjectWith(bitrate: Double, \n                            startupTime: Double, \n                                    fps: Double, \n                          droppedFrames: Double) -> [String: Any]?\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"let qoeObject = Media.createQoEObjectWith(bitrate: 500000, \n                                      startupTime: 2, \n                                              fps: 24, \n                                    droppedFrames: 10)\n")),(0,i.mdx)("h4",{id:"objective-c-7"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"+ (NSDictionary  <NSString *, id> * _Nullable) createQoEObjectWith:(double) \n                                                         startTime:(double) \n                                                               fps:(double) \n                                                     droppedFrames:(double)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"NSDictionary *qoeObject = [AEPMobileMedia createQoEObjectWith:500000 \n                                                    startTime:2 \n                                                          fps:24 \n                                                droppedFrames:10];\n")),(0,i.mdx)(c,{platform:"android",api:"create-state-object",repeat:"8",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"java-9"},"Java"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"public static HashMap<String, Object> createStateObject(String stateName);\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'HashMap<String, Object> playerStateInfo = Media.createStateObject("fullscreen");\n')),(0,i.mdx)("h4",{id:"kotlin-9"},"Kotlin"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'val playerStateInfo = Media.createStateObject("fullscreen")\n')),(0,i.mdx)(c,{platform:"ios",api:"create-state-object",repeat:"11",mdxType:"Variant"}),(0,i.mdx)("p",null,"Returns a map that contains information about the player state."),(0,i.mdx)("h4",{id:"swift-8"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"static func createStateObjectWith(stateName: String) -> [String: Any]\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'let fullScreenState = Media.createStateObjectWith(stateName: "fullscreen")\n')),(0,i.mdx)("h4",{id:"objective-c-8"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"+ (NSDictionary  <NSString *, id> * _Nullable) createStateObjectWith:(NSString * _Nonnull)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"NSDictionary* fullScreenState = [AEPMobileMedia createStateObjectWith:AEPMediaPlayerState.FULLSCREEN]\n")),(0,i.mdx)(c,{platform:"android",api:"track-session-start",repeat:"8",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"java-10"},"Java"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"public void trackSessionStart(Map<String, Object> mediaInfo, Map<String, String> contextData);\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'HashMap<String, Object> mediaObject = Media.createMediaObject("media-name", "media-id", 60D, MediaConstants.StreamType.VOD, Media.MediaType.Video);\n\nHashMap<String, String> mediaMetadata = new HashMap<String, String>();\n// Standard metadata keys provided by adobe.\nmediaMetadata.put(MediaConstants.VideoMetadataKeys.EPISODE, "Sample Episode");\nmediaMetadata.put(MediaConstants.VideoMetadataKeys.SHOW, "Sample Show");\n\n// Custom metadata keys\nmediaMetadata.put("isUserLoggedIn", "false");\nmediaMetadata.put("tvStation", "Sample TV Station");\n\n_tracker.trackSessionStart(mediaInfo, mediaMetadata);\n')),(0,i.mdx)("h4",{id:"kotlin-10"},"Kotlin"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'val mediaObject = Media.createMediaObject(\n                        "media-name",\n                        "media-id",\n                        60.0,\n                        MediaConstants.StreamType.VOD,\n                        Media.MediaType.Video\n                    )\n\nval mediaMetadata = HashMap<String, String>()\n// Standard metadata keys provided by adobe.\nmediaMetadata[MediaConstants.VideoMetadataKeys.EPISODE] = "Sample Episode" \nmediaMetadata[MediaConstants.VideoMetadataKeys.SHOW] = "Sample Show"\n// Custom metadata keys\nmediaMetadata["isUserLoggedIn"] = "false"\nmediaMetadata["tvStation"] = "Sample TV Station"\n\ntracker.trackSessionStart(mediaInfo, mediaMetadata)\n')),(0,i.mdx)(c,{platform:"ios",api:"track-session-start",repeat:"10",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"swift-9"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"public func trackSessionStart(info: [String: Any], metadata: [String: String]? = nil)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'let mediaObject = Media.createMediaObjectWith(name: "video-name", id: "videoId", length: 60, streamType: MediaConstants.StreamType.VOD, mediaType: MediaType.Video)\n\nvar videoMetadata: [String: String] = [:]\n// Sample implementation for using video standard metadata keys\nvideoMetadata[MediaConstants.VideoMetadataKeys.SHOW] = "Sample show"\nvideoMetadata[MediaConstants.VideoMetadataKeys.SEASON] = "Sample season"\n\n// Sample implementation for using custom metadata keys\nvideoMetadata["isUserLoggedIn"] = "false"\nvideoMetadata["tvStation"] = "Sample TV station"\n\ntracker.trackSessionStart(info: mediaObject, metadata: videoMetadata)\n')),(0,i.mdx)("h4",{id:"objective-c-9"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"+ (void) trackSessionStart:(NSDictionary<NSString *,id> * _Nonnull) metadata:(NSDictionary<NSString *,NSString *> * _Nullable)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},'NSDictionary *mediaObject = [AEPMobileMedia createMediaObjectWith:@"video-name" id:@"video-id" length:60 streamType:AEPMediaStreamType.VOD mediaType:AEPMediaTypeVideo];\n\nNSMutableDictionary *videoMetadata = [[NSMutableDictionary alloc] init];\n// Sample implementation for using standard video metadata keys\n[videoMetadata setObject:@"Sample show" forKey:AEPVideoMetadataKeys.SHOW];\n[videoMetadata setObject:@"Sample Season" forKey:AEPVideoMetadataKeys.SEASON];\n\n// Sample implementation for using custom metadata keys\n[videoMetadata setObject:@"false" forKey:@"isUserLoggedIn"];\n[videoMetadata setObject:@"Sample TV station" forKey:@"tvStation"];\n\n[_tracker trackSessionStart:mediaObject metadata:videoMetadata];\n')),(0,i.mdx)(c,{platform:"android",api:"track-play",repeat:"8",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"java-11"},"Java"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"public void trackPlay();\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"tracker.trackPlay();\n")),(0,i.mdx)("h4",{id:"kotlin-11"},"Kotlin"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"tracker.trackPlay();\n")),(0,i.mdx)(c,{platform:"ios",api:"track-play",repeat:"10",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"swift-10"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"func trackPlay()\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"tracker.trackPlay()\n")),(0,i.mdx)("h4",{id:"objective-c-10"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"- (void) trackPlay;\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"[_tracker trackPlay];\n")),(0,i.mdx)(c,{platform:"android",api:"track-pause",repeat:"8",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"java-12"},"Java"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"public void trackPause();\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"tracker.trackPause();\n")),(0,i.mdx)("h4",{id:"kotlin-12"},"Kotlin"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"tracker.trackPause();\n")),(0,i.mdx)(c,{platform:"ios",api:"track-pause",repeat:"10",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"swift-11"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"func trackPause()\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"tracker.trackPause()\n")),(0,i.mdx)("h4",{id:"objective-c-11"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"- (void) trackPause\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"[_tracker trackPause];\n")),(0,i.mdx)(c,{platform:"android",api:"track-complete",repeat:"8",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"java-13"},"Java"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"public void trackComplete();\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"tracker.trackComplete();\n")),(0,i.mdx)("h4",{id:"kotlin-13"},"Kotlin"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"tracker.trackComplete();\n")),(0,i.mdx)(c,{platform:"ios",api:"track-complete",repeat:"10",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"swift-12"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"func trackComplete()\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"tracker.trackComplete()\n")),(0,i.mdx)("h4",{id:"objective-c-12"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"- (void) trackComplete\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"[_tracker trackComplete];\n")),(0,i.mdx)(c,{platform:"android",api:"track-session-end",repeat:"8",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"java-14"},"Java"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"public void trackSessionEnd();\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"tracker.trackSessionEnd();\n")),(0,i.mdx)("h4",{id:"kotlin-14"},"Kotlin"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-kotlin"},"tracker.trackSessionEnd();\n")),(0,i.mdx)(c,{platform:"ios",api:"track-session-end",repeat:"10",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"swift-13"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"func trackSessionEnd()\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"tracker.trackSessionEnd()\n")),(0,i.mdx)("h4",{id:"objective-c-13"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"- (void) trackSessionEnd\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"[_tracker trackSessionEnd];\n")),(0,i.mdx)(c,{platform:"android",api:"track-error",repeat:"8",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"java-15"},"Java"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"public void trackError(String errorId);\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'tracker.trackError("errorId");\n')),(0,i.mdx)("h4",{id:"kotlin-15"},"Kotlin"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'tracker.trackError("errorId");\n')),(0,i.mdx)(c,{platform:"ios",api:"track-error",repeat:"10",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"swift-14"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"func trackError(errorId: String)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'tracker.trackError(errorId: "errorId")\n')),(0,i.mdx)("h4",{id:"objective-c-14"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"- (void) trackError:(NSString * _Nonnull)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},'[_tracker trackError:@"errorId"];\n')),(0,i.mdx)(c,{platform:"android",api:"track-event",repeat:"30",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"java-16"},"Java"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"  public void trackEvent(Media.Event event,\n                         Map<String, Object> info,\n                         Map<String, String> data);\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Examples")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking player states")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'// StateStart\n  HashMap<String, Object> stateObject = Media.createStateObject("fullscreen");\n  _tracker.trackEvent(Media.Event.StateStart, stateObject, null);\n\n// StateEnd\n  HashMap<String, Object> stateObject = Media.createStateObject("fullscreen");\n  _tracker.trackEvent(Media.Event.StateEnd, stateObject, null);\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking ad breaks")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'// AdBreakStart\n  HashMap<String, Object> adBreakObject = Media.createAdBreakObject("adbreak-name", 1L, 0D);\n  _tracker.trackEvent(Media.Event.AdBreakStart, adBreakObject, null);\n\n// AdBreakComplete\n  _tracker.trackEvent(Media.Event.AdBreakComplete, null, null);\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking ads")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'// AdStart\n  HashMap<String, Object> adObject = Media.createAdObject("ad-name", "ad-id", 1L, 15D);\n\n  HashMap<String, String> adMetadata = new HashMap<String, String>();\n  // Standard metadata keys provided by adobe.\n  adMetadata.put(MediaConstants.AdMetadataKeys.ADVERTISER, "Sample Advertiser");\n  adMetadata.put(MediaConstants.AdMetadataKeys.CAMPAIGN_ID, "Sample Campaign");\n  // Custom metadata keys\n  adMetadata.put("affiliate", "Sample affiliate");\n\n  _tracker.trackEvent(Media.Event.AdStart, adObject, adMetadata);\n\n// AdComplete\n  _tracker.trackEvent(Media.Event.AdComplete, null, null);\n\n// AdSkip\n  _tracker.trackEvent(Media.Event.AdSkip, null, null);\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking chapters")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'// ChapterStart\n  HashMap<String, Object> chapterObject = Media.createChapterObject("chapter-name", 1L, 60D, 0D);\n\n  HashMap<String, String> chapterMetadata = new HashMap<String, String>();\n  chapterMetadata.put("segmentType", "Sample segment type");\n\n  _tracker.trackEvent(Media.Event.ChapterStart, chapterDataInfo, chapterMetadata);\n\n// ChapterComplete\n  _tracker.trackEvent(Media.Event.ChapterComplete, null, null);\n\n// ChapterSkip\n  _tracker.trackEvent(Media.Event.ChapterSkip, null, null);\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking playback events")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"// BufferStart\n  _tracker.trackEvent(Media.Event.BufferStart, null, null);\n\n// BufferComplete\n  _tracker.trackEvent(Media.Event.BufferComplete, null, null);\n\n// SeekStart\n  _tracker.trackEvent(Media.Event.SeekStart, null, null);\n\n// SeekComplete\n  _tracker.trackEvent(Media.Event.SeekComplete, null, null);\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking bitrate changes")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"// If the new bitrate value is available provide it to the tracker.\n  HashMap<String, Object> qoeObject = Media.createQoEObject(2000000L, 2D, 25D, 10D);\n  _tracker.updateQoEObject(qoeObject);\n\n// Bitrate change\n  _tracker.trackEvent(Media.Event.BitrateChange, null, null);\n")),(0,i.mdx)("h4",{id:"kotlin-16"},"Kotlin"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Examples")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking player states")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'// StateStart\n    val stateObject = Media.createStateObject("fullscreen")\n    tracker.trackEvent(Media.Event.StateStart, stateObject, null)\n\n// StateEnd\n    val stateObject = Media.createStateObject("fullscreen")\n    tracker.trackEvent(Media.Event.StateEnd, stateObject, null)`\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking ad breaks")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'// AdBreakStart\n    val adBreakObject = Media.createAdBreakObject("adbreak-name", 1L, 0.0)\n    tracker.trackEvent(Media.Event.AdBreakStart, adBreakObject, null)\n\n// AdBreakComplete\n    tracker.trackEvent(Media.Event.AdBreakComplete, null, null)\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking ads")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'//AdStart\n    val adObject = Media.createAdObject("ad-name", "ad-id", 1L, 15.0)\n\n    val adMetadata = HashMap<String, String>()\n    // Standard metadata keys provided by adobe.\n    adMetadata[MediaConstants.AdMetadataKeys.ADVERTISER] = "Sample Advertiser"\n    adMetadata[MediaConstants.AdMetadataKeys.CAMPAIGN_ID] = "Sample Campaign"\n    // Custom metadata keys\n    adMetadata["affiliate"] = "Sample affiliate"        \n    tracker.trackEvent(Media.Event.AdStart, adObject, adMetadata)\n\n// AdComplete\n    tracker.trackEvent(Media.Event.AdComplete, null, null)\n\n// AdSkip\n    tracker.trackEvent(Media.Event.AdSkip, null, null)\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking chapters")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'// ChapterStart\n  val chapterObject = Media.createChapterObject("chapter-name", 1L, 60.0, 0.0)\n\n  val chapterMetadata = HashMap<String, String>()\n  chapterMetadata["segmentType"] = "Sample segment type"\n\n  tracker.trackEvent(Media.Event.ChapterStart, chapterObject, chapterMetadata)\n\n// ChapterComplete\n  tracker.trackEvent(Media.Event.ChapterComplete, null, null)\n\n// ChapterSkip\n  tracker.trackEvent(Media.Event.ChapterSkip, null, null)\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking playback events")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"// BufferStart\n   tracker.trackEvent(Media.Event.BufferStart, null, null)\n\n// BufferComplete\n   tracker.trackEvent(Media.Event.BufferComplete, null, null)\n\n// SeekStart\n   tracker.trackEvent(Media.Event.SeekStart, null, null)\n\n// SeekComplete\n   tracker.trackEvent(Media.Event.SeekComplete, null, null)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking bitrate changes")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"// If the new bitrate value is available provide it to the tracker.\n  val qoeObject = Media.createQoEObject(2000000L, 2D, 25D, 10D)\n  tracker.updateQoEObject(qoeObject)\n\n// Bitrate change\n  tracker.trackEvent(Media.Event.BitrateChange, null, null)\n")),(0,i.mdx)(c,{platform:"ios",api:"track-event",repeat:"32",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"swift-15"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"func trackEvent(event: MediaEvent, info: [String: Any]?, metadata: [String: String]?)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Examples")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking player states")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"// StateStart\n  let fullScreenState = Media.createStateObjectWith(stateName: MediaConstants.PlayerState.FULLSCREEN)\n  tracker.trackEvent(event: MediaEvent.StateStart, info: fullScreenState, metadata: nil)\n\n// StateEnd\n  let fullScreenState = Media.createStateObjectWith(stateName: MediaConstants.PlayerState.FULLSCREEN)\n  tracker.trackEvent(event: MediaEvent.StateEnd, info: fullScreenState, metadata: nil)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking ad breaks")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'// AdBreakStart\n  let adBreakObject = Media.createAdBreakObjectWith(name: "adbreak-name", position: 1, startTime: 0)\n  tracker.trackEvent(event: MediaEvent.AdBreakStart, info: adBreakObject, metadata: nil)\n\n// AdBreakComplete\n  tracker.trackEvent(event: MediaEvent.AdBreakComplete, info: nil, metadata: nil)\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking ads")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'// AdStart\n  let adObject = Media.createObjectWith(name: "adbreak-name", id: "ad-id", position: 0, length: 30)\n\n// Standard metadata keys provided by adobe.\n  var adMetadata: [String: String] = [:]\n  adMetadata[MediaConstants.AdMetadataKeys.ADVERTISER] = "Sample Advertiser"\n  adMetadata[MediaConstants.AdMetadataKeys.CAMPAIGN_ID] = "Sample Campaign"\n\n// Custom metadata keys\n  adMetadata["affiliate"] = "Sample affiliate"\n\n  tracker.trackEvent(event: MediaEvent.AdStart, info: adObject, metadata: adMetadata)\n\n// AdComplete\n  tracker.trackEvent(event: MediaEvent.AdComplete, info: nil, metadata: nil)\n\n// AdSkip\n   tracker.trackEvent(event: MediaEvent.AdSkip, info: nil, metadata: nil)\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking chapters")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'// ChapterStart\n  let chapterObject = Media.createChapterObjectWith(name: "chapter_name", position: 1, length: 60, startTime: 0)\n  let chapterDictionary = ["segmentType": "Sample segment type"]\n\n  tracker.trackEvent(event: MediaEvent.ChapterStart, info: chapterObject, metadata: chapterDictionary)\n\n// ChapterComplete\n  tracker.trackEvent(event: MediaEvent.ChapterComplete, info: nil, metadata: nil)\n\n// ChapterSkip\n  tracker.trackEvent(event: MediaEvent.ChapterSkip, info: nil, metadata: nil)\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking playback events")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"// BufferStart\n   tracker.trackEvent(event: MediaEvent.BufferStart, info: nil, metadata: nil)\n\n// BufferComplete\n   tracker.trackEvent(event: MediaEvent.BufferComplete, info: nil, metadata: nil)\n\n// SeekStart\n   tracker.trackEvent(event: MediaEvent.SeekStart, info: nil, metadata: nil)\n\n// SeekComplete\n   tracker.trackEvent(event: MediaEvent.SeekComplete, info: nil, metadata: nil)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking bitrate change")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"// If the new bitrate value is available provide it to the tracker.\n  let qoeObject = Media.createQoEObjectWith(bitrate: 500000, startupTime: 2, fps: 24, droppedFrames: 10)\n  tracker.updateQoEObject(qoeObject)\n\n// Bitrate change\n  tracker.trackEvent(event: MediaEvent.BitrateChange, info: nil, metadata: nil)\n")),(0,i.mdx)("h4",{id:"objective-c-15"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"- (void) trackEvent:(enum AEPMediaEvent) info:(NSDictionary<NSString *,id> * _Nullable) metadata:(NSDictionary<NSString *,NSString *> * _Nullable)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Examples")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking player states")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"// StateStart\n  NSDictionary* fullScreenState = [AEPMobileMedia createStateObjectWith:AEPMediaPlayerState.FULLSCREEN];\n  [_tracker trackEvent:AEPMediaEventStateStart info:fullScreenState metadata:nil];\n\n// StateEnd\n  NSDictionary* fullScreenState = [AEPMobileMedia createStateObjectWith:AEPMediaPlayerState.FULLSCREEN];\n  [_tracker trackEvent:AEPMediaEventStateEnd info:fullScreenState metadata:nil];\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking ad breaks")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},'// AdBreakStart\n  NSDictionary *adBreakObject = [AEPMobileMedia createAdBreakObjectWith:@"adbreak-name" position:1 startTime:0];\n  [_tracker trackEvent:AEPMediaEventAdBreakStart info:adBreakObject metadata:nil];\n\n// AdBreakComplete\n  [_tracker trackEvent:AEPMediaEventAdBreakComplete info:nil metadata:nil];\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking ads")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},'// AdStart\n  NSDictionary *adObject = [AEPMobileMedia createAdObjectWith:@"ad-name" id:@"ad-id" position:0 length:30];\n  NSMutableDictionary* adMetadata = [[NSMutableDictionary alloc] init];\n\n// Standard metadata keys provided by adobe.\n  [adMetadata setObject:@"Sample Advertiser" forKey:AEPAdMetadataKeys.ADVERTISER];\n  [adMetadata setObject:@"Sample Campaign" forKey:AEPAdMetadataKeys.CAMPAIGN_ID];\n\n// Custom metadata keys\n  [adMetadata setObject:@"Sample affiliate" forKey:@"affiliate"];\n\n  [_tracker trackEvent:AEPMediaEventAdStart info:adObject metadata:adMetadata];\n\n// AdComplete\n  [_tracker trackEvent:AEPMediaEventAdComplete info:nil metadata:nil];\n\n// AdSkip\n  [_tracker trackEvent:AEPMediaEventAdSkip info:nil metadata:nil];\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking chapters")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},'// ChapterStart\n  NSDictionary *chapterObject = [AEPMobileMedia createChapterObjectWith:@"chapter_name" position:1 length:60 startTime:0];\n\n  NSMutableDictionary *chapterMetadata = [[NSMutableDictionary alloc] init];\n  [chapterMetadata setObject:@"Sample segment type" forKey:@"segmentType"];\n\n  [_tracker trackEvent:AEPMediaEventChapterStart info:chapterObject metadata:chapterMetadata];\n\n// ChapterComplete\n  [_tracker trackEvent:AEPMediaEventChapterComplete info:nil metadata:nil];\n\n// ChapterSkip\n  [_tracker trackEvent:AEPMediaEventChapterSkip info:nil metadata:nil];\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking playback events")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"// BufferStart\n  [_tracker trackEvent:AEPMediaEventBufferStart info:nil metadata:nil];\n\n// BufferComplete\n  [_tracker trackEvent:AEPMediaEventBufferComplete info:nil metadata:nil];\n\n// SeekStart\n  [_tracker trackEvent:AEPMediaEventSeekStart info:nil metadata:nil];\n\n// SeekComplete\n  [_tracker trackEvent:AEPMediaEventSeekComplete info:nil metadata:nil];\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking bitrate change")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"// If the new bitrate value is available provide it to the tracker.\n  NSDictionary *qoeObject = [AEPMobileMedia createQoEObjectWith:50000 startTime:2 fps:24 droppedFrames:10];\n\n// Bitrate change\n  [_tracker trackEvent:AEPMediaEventBitrateChange info:nil metadata:nil];\n")),(0,i.mdx)(c,{platform:"android",api:"update-current-playhead",repeat:"12",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"java-17"},"Java"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"public void updateCurrentPlayhead(double time);\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"tracker.updateCurrentPlayhead(1);\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Live streaming example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"//Calculation for number of seconds since midnight UTC of the day\ndouble timeFromMidnightInSecond = (System.currentTimeMillis()/1000) % 86400;\n\ntracker.updateCurrentPlayhead(timeFromMidnightInSecond);\n")),(0,i.mdx)("h4",{id:"kotlin-17"},"Kotlin"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"tracker.updateCurrentPlayhead(1);\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Live streaming example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"val timeFromMidnightInSecond = (System.currentTimeMillis() / 1000 % 86400).toDouble()\ntracker.updateCurrentPlayhead(timeFromMidnightInSecond);\n}\n")),(0,i.mdx)(c,{platform:"ios",api:"update-current-playhead",repeat:"12",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"swift-16"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"func updateCurrentPlayhead(time: Double)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"tracker.updateCurrentPlayhead(1);\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Live streaming example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"//Calculation for number of seconds since midnight UTC of the day\nlet secondsSince1970: TimeInterval = (Date().timeIntervalSince1970)\nlet timeFromMidnightInSecond = secondsSince1970.truncatingRemainder(dividingBy: 86400)\n\ntracker.updateCurrentPlayhead(time: timeFromMidnightInSecond)\n")),(0,i.mdx)("h4",{id:"objective-c-16"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"- (void) updateCurrentPlayhead:(double)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"[_tracker updateCurrentPlayhead:1];\n")),(0,i.mdx)(c,{platform:"android",api:"update-qoe-object",repeat:"8",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"java-18"},"Java"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"public void updateQoEObject(Map<String, Object> qoeObject);\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"HashMap<String, Object> qoeObject = Media.createQoEObject(1000000L, 2D, 25D, 10D);\ntracker.updateQoEObject(qoeObject);\n")),(0,i.mdx)("h4",{id:"kotlin-18"},"Kotlin"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"val qoeObject = Media.createQoEObject(1000000L, 2D, 25D, 10D)\ntracker.updateQoEObject(qoeObject)\n")),(0,i.mdx)(c,{platform:"ios",api:"update-qoe-object",repeat:"10",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"swift-17"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"func updateQoEObject(qoe: [String: Any])\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"let qoeObject = Media.createQoEObjectWith(bitrate: 500000, startupTime: 2, fps: 24, droppedFrames: 10)\ntracker.updateQoEObject(qoe: qoeObject)\n")),(0,i.mdx)("h4",{id:"objective-c-17"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"- (void) updateQoEObject:(NSDictionary<NSString *,id> * _Nonnull)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"NSDictionary *qoeObject = [AEPMobileMedia createQoEObjectWith:50000 startTime:2 fps:24 droppedFrames:10]\n[_tracker updateQoEObject:qoeObject];\n")),(0,i.mdx)(c,{platform:"android",api:"media-type",repeat:"1",mdxType:"Variant"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"public class Media {\n\n  public enum MediaType {\n      /**\n      * Constant defining media type for Video streams\n      */\n      Video,\n\n      /**\n      * Constant defining media type for Audio streams\n      */\n      Audio\n  }\n\n}\n")),(0,i.mdx)(c,{platform:"ios",api:"media-type",repeat:"6",mdxType:"Variant"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"@objc(AEPMediaType)\npublic enum MediaType: Int, RawRepresentable {\n //Constant defining media type for Video streams\n case Audio\n //Constant defining media type for Audio streams\n case Video\n}\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("h4",{id:"swift-18"},"Swift"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'var mediaObject = Media.createMediaObjectWith(name: "video-name", \n                                                id: "videoId", \n                                                length: "60", \n                                                streamType: MediaConstants.StreamType.VOD, \n                                                mediaType: MediaType.Video)\n')),(0,i.mdx)("h4",{id:"objective-c-18"},"Objective-C"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objc"},'NSDictionary *mediaObject = [AEPMobileMedia createMediaObjectWith:@"video-name"   \n                                                               id:@"video-id" \n                                                               length:60 streamType:AEPMediaStreamType.VOD mediaType:AEPMediaTypeVideo];\n')),(0,i.mdx)(c,{platform:"android",api:"stream-type",repeat:"1",mdxType:"Variant"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'public class MediaConstants {\n\n  public static final class StreamType {\n      /**\n      * Constant defining stream type for VOD streams\n      */\n      public static final String VOD = "vod";\n\n      /**\n      * Constant defining stream type for Live streams\n      */\n      public static final String LIVE = "live";\n\n      /**\n      * Constant defining stream type for Linear streams\n      */\n      public static final String LINEAR = "linear";\n\n      /**\n      * Constant defining stream type for Podcast streams\n      */\n      public static final String PODCAST = "podcast";\n\n      /**\n      * Constant defining stream type for Audiobook streams\n      */\n      public static final String AUDIOBOOK = "audiobook";\n\n      /**\n      * Constant defining stream type for AOD streams\n      */\n      public static final String AOD = "aod";\n  }\n\n}\n')),(0,i.mdx)(c,{platform:"ios",api:"stream-type",repeat:"6",mdxType:"Variant"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'public class MediaConstants: NSObject {\n  @objc(AEPMediaStreamType)\n  public class StreamType: NSObject {\n     // Constant defining stream type for VOD streams.\n        public static let VOD = "vod"\n     // Constant defining stream type for Live streams.\n        public static let LIVE = "live"\n     // Constant defining stream type for Linear streams.\n        public static let LINEAR = "linear"\n     // Constant defining stream type for Podcast streams.\n        public static let PODCAST = "podcast"\n     // Constant defining stream type for Audiobook streams.\n        public static let AUDIOBOOK = "audiobook"\n     // Constant defining stream type for AOD streams.\n        public static let AOD = "aod"\n    }\n}\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("h4",{id:"swift-19"},"Swift"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'var mediaObject = Media.createMediaObjectWith(name: "video-name", \n                                                id: "videoId", \n                                            length: "60", \n                                        streamType: MediaConstants.StreamType.VOD,    \n                                         mediaType: MediaType.Video)\n')),(0,i.mdx)("h4",{id:"objective-c-19"},"Objective-C"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objc"},'NSDictionary *mediaObject = [AEPMobileMedia createMediaObjectWith:@"video-name" \n                                                               id:@"video-id" \n                                                           length:60\n                                                       streamType:AEPMediaStreamType.VOD      \n                                                        mediaType:AEPMediaTypeVideo];\n')),(0,i.mdx)(c,{platform:"android",api:"standard-video-constants",repeat:"1",mdxType:"Variant"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'public class MediaConstants {\n\n  public static final class VideoMetadataKeys {\n      public static final String SHOW = "a.media.show";\n      public static final String SEASON = "a.media.season";\n      public static final String EPISODE = "a.media.episode";\n      public static final String ASSET_ID = "a.media.asset";\n      public static final String GENRE = "a.media.genre";\n      public static final String FIRST_AIR_DATE = "a.media.airDate";\n      public static final String FIRST_DIGITAL_DATE = "a.media.digitalDate";\n      public static final String RATING = "a.media.rating";\n      public static final String ORIGINATOR = "a.media.originator";\n      public static final String NETWORK = "a.media.network";\n      public static final String SHOW_TYPE = "a.media.type";\n      public static final String AD_LOAD = "a.media.adLoad";\n      public static final String MVPD = "a.media.pass.mvpd";\n      public static final String AUTHORIZED = "a.media.pass.auth";\n      public static final String DAY_PART = "a.media.dayPart";\n      public static final String FEED = "a.media.feed";\n      public static final String STREAM_FORMAT = "a.media.format";\n  }\n\n}\n')),(0,i.mdx)(c,{platform:"ios",api:"standard-video-constants",repeat:"6",mdxType:"Variant"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'public class MediaConstants: NSObject {\n  @objc(AEPVideoMetadataKeys)\n  public class VideoMetadataKeys: NSObject {\n        public static let SHOW = "a.media.show"\n        public static let SEASON = "a.media.season"\n        public static let EPISODE = "a.media.episode"\n        public static let ASSET_ID = "a.media.asset"\n        public static let GENRE = "a.media.genre"\n        public static let FIRST_AIR_DATE = "a.media.airDate"\n        public static let FIRST_DIGITAL_DATE = "a.media.digitalDate"\n        public static let RATING = "a.media.rating"\n        public static let ORIGINATOR = "a.media.originator"\n        public static let NETWORK = "a.media.network"\n        public static let SHOW_TYPE = "a.media.type"\n        public static let AD_LOAD = "a.media.adLoad"\n        public static let MVPD = "a.media.pass.mvpd"\n        public static let AUTHORIZED = "a.media.pass.auth"\n        public static let DAY_PART = "a.media.dayPart"\n        public static let FEED = "a.media.feed"\n        public static let STREAM_FORMAT = "a.media.format"\n    }\n}\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("h4",{id:"swift-20"},"Swift"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'var mediaObject = Media.createMediaObjectWith(name: "video-name", id: "videoId", length: "60", streamType: MediaConstants.StreamType.VOD, mediaType: MediaType.Video)\n\nvar videoMetadata: [String: String] = [:]\n// Standard Video Metadata\nvideoMetadata[MediaConstants.VideoMetadataKeys.SHOW] = "Sample show"\nvideoMetadata[MediaConstants.VideoMetadataKeys.SEASON] = "Sample season"\n\ntracker.trackSessionStart(info: mediaObject, metadata: videoMetadata)\n')),(0,i.mdx)("h4",{id:"objective-c-20"},"Objective-C"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objc"},'NSDictionary *mediaObject = [AEPMobileMedia createMediaObjectWith:@"video-name" id:@"video-id" length:60 streamType:AEPMediaStreamType.VOD mediaType:AEPMediaTypeVideo];\n\nNSMutableDictionary *videoMetadata = [[NSMutableDictionary alloc] init];\n// Standard Video Metadata\n[videoMetadata setObject:@"Sample show" forKey:AEPVideoMetadataKeys.SHOW];\n[videoMetadata setObject:@"Sample Season" forKey:AEPVideoMetadataKeys.SEASON];\n\n[_tracker trackSessionStart:mediaObject metadata:videoMetadata];\n')),(0,i.mdx)(c,{platform:"android",api:"standard-audio-constants",repeat:"1",mdxType:"Variant"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'public class MediaConstants {\n\n  public static final class AudioMetadataKeys {\n    public static final String ARTIST = "a.media.artist";\n    public static final String ALBUM = "a.media.album";\n    public static final String LABEL = "a.media.label";\n    public static final String AUTHOR = "a.media.author";\n    public static final String STATION = "a.media.station";\n    public static final String PUBLISHER = "a.media.publisher";\n  }\n\n}\n')),(0,i.mdx)(c,{platform:"ios",api:"standard-audio-constants",repeat:"6",mdxType:"Variant"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'public class MediaConstants: NSObject {\n  @objc(AEPAudioMetadataKeys)\n  public class AudioMetadataKeys: NSObject {\n        public static let ARTIST = "a.media.artist"\n        public static let ALBUM = "a.media.album"\n        public static let LABEL = "a.media.label"\n        public static let AUTHOR = "a.media.author"\n        public static let STATION = "a.media.station"\n        public static let PUBLISHER = "a.media.publisher"\n    }\n}\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("h4",{id:"swift-21"},"Swift"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'var audioObject = Media.createMediaObjectWith(name: "audio-name", id: "audioId", length: 30, streamType: MediaConstants.StreamType.AOD, mediaType: MediaType.AUDIO)\n\nvar audioMetadata: [String: String] = [:]\n// Standard Audio Metadata\naudioMetadata[MediaConstants.AudioMetadataKeys.ARTIST] = "Sample artist"\naudioMetadata[MediaConstants.AudioMetadataKeys.ALBUM] = "Sample album"\n\ntracker.trackSessionStart(info: audioObject, metadata: audioMetadata)\n')),(0,i.mdx)("h4",{id:"objective-c-21"},"Objective-C"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objc"},'NSDictionary *audioObject = [AEPMobileMedia createMediaObjectWith:@"audio-name" id:@"audioid" length:30 streamType:AEPMediaStreamType.AOD mediaType:AEPMediaTypeAudio];\n\nNSMutableDictionary *audioMetadata = [[NSMutableDictionary alloc] init];\n// Standard Audio Metadata\n[audioMetadata setObject:@"Sample artist" forKey:AEPAudioMetadataKeys.ARTIST];\n[audioMetadata setObject:@"Sample album" forKey:AEPAudioMetadataKeys.ALBUM];\n\n[_tracker trackSessionStart:audioObject metadata:audioMetadata];\n')),(0,i.mdx)(c,{platform:"android",api:"standard-ad-constants",repeat:"1",mdxType:"Variant"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'public class MediaConstants {\n\n  public static final class AdMetadataKeys {\n    public static final String ADVERTISER = "a.media.ad.advertiser";\n    public static final String CAMPAIGN_ID = "a.media.ad.campaign";\n    public static final String CREATIVE_ID = "a.media.ad.creative";\n    public static final String PLACEMENT_ID = "a.media.ad.placement";\n    public static final String SITE_ID = "a.media.ad.site";\n    public static final String CREATIVE_URL = "a.media.ad.creativeURL";\n  }\n\n}\n')),(0,i.mdx)(c,{platform:"ios",api:"standard-ad-constants",repeat:"6",mdxType:"Variant"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'public class MediaConstants: NSObject {\n  @objc(AEPAdMetadataKeys)\n  public class AdMetadataKeys: NSObject {\n        public static let ADVERTISER = "a.media.ad.advertiser"\n        public static let CAMPAIGN_ID = "a.media.ad.campaign"\n        public static let CREATIVE_ID = "a.media.ad.creative"\n        public static let PLACEMENT_ID = "a.media.ad.placement"\n        public static let SITE_ID = "a.media.ad.site"\n        public static let CREATIVE_URL = "a.media.ad.creativeURL"\n    }\n}\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("h4",{id:"swift-22"},"Swift"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'let adObject = Media.createObjectWith(name: "adbreak-name", id: "ad-id", position: 0, length: 30)\nvar adMetadata: [String: String] = [:]\n// Standard Ad Metadata\nadMetadata[MediaConstants.AdMetadataKeys.ADVERTISER] = "Sample Advertiser"\nadMetadata[MediaConstants.AdMetadataKeys.CAMPAIGN_ID] = "Sample Campaign"\n\ntracker.trackEvent(event: MediaEvent.AdStart, info: adObject, metadata: adMetadata)\n')),(0,i.mdx)("h4",{id:"objective-c-22"},"Objective-C"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objc"},'NSDictionary *adObject = [AEPMobileMedia createAdObjectWith:@"ad-name" id:@"ad-id" position:0 length:30];\n\nNSMutableDictionary *adMetadata = [[NSMutableDictionary alloc] init];\n// Standard Ad Metadata\n[adMetadata setObject:@"Sample Advertiser" forKey:AEPAdMetadataKeys.ADVERTISER];\n[adMetadata setObject:@"Sample Campaign" forKey:AEPAdMetadataKeys.CAMPAIGN_ID];\n\n[_tracker trackEvent:AEPMediaEventAdStart info:adObject metadata:adMetadata];\n')),(0,i.mdx)(c,{platform:"android",api:"player-state-constants",repeat:"1",mdxType:"Variant"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'public class MediaConstants {\n\n  public static final class PlayerState {\n    public static final String FULLSCREEN = "fullscreen";\n    public static final String PICTURE_IN_PICTURE = "pictureInPicture";\n    public static final String CLOSED_CAPTION = "closedCaptioning";\n    public static final String IN_FOCUS = "inFocus";\n    public static final String MUTE = "mute";\n  }\n\n}\n')),(0,i.mdx)(c,{platform:"ios",api:"player-state-constants",repeat:"6",mdxType:"Variant"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'public class MediaConstants: NSObject {\n  @objc(AEPMediaPlayerState)\n  public class PlayerState: NSObject {\n        public static let FULLSCREEN = "fullscreen"\n        public static let PICTURE_IN_PICTURE = "pictureInPicture"\n        public static let CLOSED_CAPTION = "closedCaptioning"\n        public static let IN_FOCUS = "inFocus"\n        public static let MUTE = "mute"\n    }\n}\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("h4",{id:"swift-23"},"Swift"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"let inFocusState = Media.createStateObjectWith(stateName: MediaConstants.PlayerState.IN_FOCUS)\ntracker.trackEvent(event: MediaEvent.StateStart, info: inFocusState, metadata: nil)\n")),(0,i.mdx)("h4",{id:"objective-c-23"},"Objective-C"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objc"},"NSDictionary* inFocusState = [AEPMobileMedia createStateObjectWith:AEPMediaPlayerState.IN_FOCUS];\n[_tracker trackEvent:AEPMediaEventStateStart info:muteState metadata:nil];\n")),(0,i.mdx)(c,{platform:"android",api:"media-events",repeat:"1",mdxType:"Variant"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"public class Media {\n\n    /**\n    * These enumeration values define the type of a tracking event\n    */\n    public enum Event {\n      /**\n      * Constant defining event type for AdBreak start\n      */\n      AdBreakStart,\n\n      /**\n      * Constant defining event type for AdBreak complete\n      */\n      AdBreakComplete,\n\n      /**\n      * Constant defining event type for Ad start\n      */\n      AdStart,\n\n      /**\n      * Constant defining event type for Ad complete\n      */\n      AdComplete,\n\n      /**\n      * Constant defining event type for Ad skip\n      */\n      AdSkip,\n\n      /**\n      * Constant defining event type for Chapter start\n      */\n      ChapterStart,\n\n      /**\n      * Constant defining event type for Chapter complete\n      */\n      ChapterComplete,\n\n      /**\n      * Constant defining event type for Chapter skip\n      */\n      ChapterSkip,\n\n      /**\n      * Constant defining event type for Seek start\n      */\n      SeekStart,\n\n      /**\n      * Constant defining event type for Seek complete\n      */\n      SeekComplete,\n\n      /**\n      * Constant defining event type for Buffer start\n      */\n      BufferStart,\n\n      /**\n      * Constant defining event type for Buffer complete\n      */\n      BufferComplete,\n\n      /**\n      * Constant defining event type for change in Bitrate\n      */\n      BitrateChange,\n\n      /**\n      * Constant defining event type for State start\n      */\n      StateStart,\n\n      /**\n      * Constant defining event type for State end\n      */\n      StateEnd\n  }\n\n}\n")),(0,i.mdx)(c,{platform:"ios",api:"media-events",repeat:"6",mdxType:"Variant"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"@objc(AEPMediaEvent)\npublic enum MediaEvent: Int, RawRepresentable {\n // event type for AdBreak start\n    case AdBreakStart\n // event type for AdBreak Complete\n    case AdBreakComplete\n // event type for Ad Start\n    case AdStart\n // event type for Ad Complete\n    case AdComplete\n // event type for Ad Skip\n    case AdSkip\n // event type for Chapter Start\n    case ChapterStart\n // event type for Chapter Complete\n    case ChapterComplete\n // event type for Chapter Skip\n    case ChapterSkip\n // event type for Seek Start\n    case SeekStart\n // event type for Seek Complete\n    case SeekComplete\n // event type for Buffer Start\n    case BufferStart\n // event type for Buffer Complete\n    case BufferComplete\n // event type for change in Bitrate\n    case BitrateChange\n // event type for Player State Start\n    case StateStart\n // event type for Player State End\n    case StateEnd\n}\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("h4",{id:"swift-24"},"Swift"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"tracker.trackEvent(event: MediaEvent.BitrateChange, info: nil, metadata: nil)\n")),(0,i.mdx)("h4",{id:"objective-c-24"},"Objective-C"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objc"},"[_tracker trackEvent:AEPMediaEventBitrateChange info:nil metadata:nil];\n")),(0,i.mdx)(c,{platform:"android",api:"media-resume",repeat:"5",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"java-19"},"Java"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"public class MediaConstants {\n\n  public static final class MediaObjectKey {\n\n      /**\n      * Constant defining explicit media resumed property. Set this to true on MediaObject if resuming a previously closed session.\n      */\n      public static final String RESUMED;\n  }\n\n}\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'HashMap<String, Object> mediaObject = Media.createMediaObject("media-name", "media-id", 60D, MediaConstants.StreamType.VOD, Media.MediaType.Video);\n\n// Attach media resumed information.\nmediaObject.put(MediaConstants.MediaObjectKey.RESUMED, true);\n\n_tracker.trackSessionStart(mediaObject, null);\n')),(0,i.mdx)(c,{platform:"ios",api:"media-resume",repeat:"10",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"swift-25"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'public class MediaConstants: NSObject {\n @objc(AEPMediaObjectKey)\n public class MediaObjectKey: NSObject {\n        public static let RESUMED = "media.resumed"\n    }\n}\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'var mediaObject = Media.createMediaObjectWith(name: "video-name", id: "videoId", length: "60", streamType: MediaConstants.StreamType.VOD, mediaType: MediaType.Video)\nmediaObject[MediaConstants.MediaObjectKey.RESUMED] = true\n\ntracker.trackSessionStart(info: mediaObject, metadata: nil)\n')),(0,i.mdx)("h4",{id:"objective-c-25"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"@interface AEPMediaObjectKey : NSObject\n+ (NSString * _Nonnull)RESUMED\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},'NSDictionary *mediaObject = [AEPMobileMedia createMediaObjectWith:@"video-name" id:@"video-id" length:60 streamType:AEPMediaStreamType.VOD mediaType:AEPMediaTypeVideo];\n\n// Attach media resumed information.    \nNSMutableDictionary *obj  = [mediaObject mutableCopy];\n[obj setObject:@YES forKey:AEPMediaObjectKey.RESUMED];\n\n[_tracker trackSessionStart:obj metadata:nil];\n')))}x.isMDXComponent=!0}}]);
//# sourceMappingURL=6d5cdb33c9c5a2a7ba8db82d9f1e4dc1dccb1891-8a5b4dbf6bfdbf3b50d2.js.map