{"version":3,"file":"component---src-pages-documentation-mobile-core-index-md-052c6c79f375112595c6.js","mappings":"2OAUsBA,E,wEAFTC,EAAe,CAAC,EAOvBC,GALgBF,EAKY,cALJ,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,4EAC5B,eAASG,EACjB,GAGKG,EAAc,CAClBL,aAAAA,GAEIM,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGP,GACF,YACD,OAAO,SAACI,GAAD,UAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,eAG5E,eACE,GAAM,eADR,gBAGA,SAACT,EAAD,CAAaU,QAAQ,UAAUC,MAAM,OAAOF,QAAQ,iBACpD,4BAAa,mBAAQG,WAAW,KAAnB,iBAAb,uLAAqP,cAAGA,WAAW,IAC/P,KAAQ,6DADyO,cAArP,MAGA,+YACA,eACE,GAAM,4BADR,6BAGA,2ZACA,4DAA6C,cAAGA,WAAW,IACvD,KAAQ,oBADiC,6BAA7C,MAGA,eACE,GAAM,iBADR,kBAGA,iLAAkK,cAAGA,WAAW,IAC5K,KAAQ,0BADsJ,2BAAlK,MAGA,eACE,GAAM,YADR,aAGA,sOAAuN,cAAGA,WAAW,IACjO,KAAQ,qBAD2M,sBAAvN,MAGA,eACE,GAAM,aADR,cAGA,yVAA0U,cAAGA,WAAW,IACpV,KAAQ,sBAD8T,uBAA1U,MAGA,eACE,GAAM,gBADR,iBAGA,wOAAyN,cAAGA,WAAW,IACnO,KAAQ,yBAD6M,gBAAzN,MAGA,eACE,GAAM,UADR,WAGA,gPAAiO,cAAGA,WAAW,IAC3O,KAAQ,oBADqN,oBAAjO,MAGA,eACE,GAAM,qBADR,sBAGA,yPAA0O,cAAGA,WAAW,IACpP,KAAQ,8BAD8N,qBAA1O,KAKH,CAEDL,EAAWM,gBAAiB,C","sources":["webpack://dev-site-documentation-template/./src/pages/documentation/mobile-core/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/aep-mobile-sdkdocs/aep-mobile-sdkdocs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"mobile-core\"\n    }}>{`Mobile Core`}</h1>\n    <InlineAlert variant=\"warning\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`As of `}<strong parentName=\"p\">{`April 1, 2020`}</strong>{`, Apple will no longer support the UIWebView API. To avoid any issues, ensure that you are using iOS SDK version 2.3.4 or later. For more information about the UIWebView API, see `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.apple.com/documentation/uikit/uiwebview\"\n      }}>{`UIWebView `}</a>{`.`}</p>\n    <p>{`Mobile Core is mandatory for all Adobe Experience Platform app implementations. Mobile Core contains a common set of functionality and frameworks, including Experience Cloud Identity services, data event hub, Rules Engine, reusable networking, and disk access routines. The following sections provide additional information about what is provided in the Mobile Core extension.`}</p>\n    <h2 {...{\n      \"id\": \"mobile-core-generic-apis\"\n    }}>{`Mobile Core generic APIs`}</h2>\n    <p>{`The SDK provides core, extension-independent APIs to facilitate the event tracking of user screens, actions, and PII data. Events generated by these APIs are published to the SDK event hub and are available for use by extensions. For instance, when the Analytics extension is installed, all user actions and app screens event data is sent to the appropriate Analytics reporting endpoints.`}</p>\n    <p>{`For more information, please read the `}<a parentName=\"p\" {...{\n        \"href\": \"api-reference.md\"\n      }}>{`Mobile Core API reference`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"configuration\"\n    }}>{`Configuration`}</h2>\n    <p>{`The Configuration extension provides different APIs to set up the SDK's configuration settings. For more information, please read the documentation on the `}<a parentName=\"p\" {...{\n        \"href\": \"configuration/index.md\"\n      }}>{`Configuration extension`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"identity\"\n    }}>{`Identity`}</h2>\n    <p>{`The Identity framework lets your app use Experience Cloud ID (ECID). Using ECIDs improves synchronization with Adobe and other customer identifiers. For more information, please read the documentation on the `}<a parentName=\"p\" {...{\n        \"href\": \"identity/index.md\"\n      }}>{`Identity extension`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"lifecycle\"\n    }}>{`Lifecycle`}</h2>\n    <p>{`The Lifecycle extension lets you access information about the app's sessions, including device information, app installation, app upgrades, session start and pause times, number of application launches, and additional context data. For more information on how to use the Lifecycle API, please read the documentation on the `}<a parentName=\"p\" {...{\n        \"href\": \"lifecycle/index.md\"\n      }}>{`Lifecycle extension`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"rules-engine\"\n    }}>{`Rules Engine`}</h2>\n    <p>{`Rules Engine looks for the interactions between users and their associated data and lets you trigger specified actions based on rules that you define. For more information, please read the documentation on the `}<a parentName=\"p\" {...{\n        \"href\": \"rules-engine/index.md\"\n      }}>{`Rules Engine`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"signal\"\n    }}>{`Signal`}</h2>\n    <p>{`The Signal extension allows you to send data third-party endpoints via GET and POST requests. Signals are configured by using rules in the Data Collection UI. For more information, please read the documentation on the `}<a parentName=\"p\" {...{\n        \"href\": \"signals/index.md\"\n      }}>{`Signal extension`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"platform-services\"\n    }}>{`Platform Services`}</h2>\n    <p>{`The interaction with native platforms is mainly built into the Platform Services layer, which is used across all the extensions. It also makes it easy for the apps to customize the behavior if needed. For more information, see `}<a parentName=\"p\" {...{\n        \"href\": \"platform-services/index.md\"\n      }}>{`Platform Services`}</a>{`.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","InlineAlert","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","variant","slots","parentName","isMDXComponent"],"sourceRoot":""}