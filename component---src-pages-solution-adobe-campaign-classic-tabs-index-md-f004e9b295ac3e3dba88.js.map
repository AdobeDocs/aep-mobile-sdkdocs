{"version":3,"file":"component---src-pages-solution-adobe-campaign-classic-tabs-index-md-f004e9b295ac3e3dba88.js","mappings":"2OAQsBA,E,mFADTC,EAAe,CAAC,EAKvBC,GAJgBF,EAIQ,UAJA,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,4EAC5B,eAASG,EAClB,GAEMG,EAAc,CAClBL,aAAAA,GAEIM,EAAYC,EAAAA,EACH,SAASC,EAAW,GAGhC,IAFDC,EAAU,EAAVA,WACGP,GAAK,YAER,OAAO,SAACI,GAAS,UAAKD,EAAiBH,EAAK,CAAEO,WAAYA,EAAYC,QAAQ,eAI5E,SAACT,EAAO,CAACU,SAAS,UAAUC,KAAK,MAAMC,OAAO,IAAIH,QAAQ,aAC1D,kHACA,eACE,GAAM,UAAQ,WAEhB,qBAAK,iBAAMI,WAAW,MAClB,UAAa,mBAAiB,mPAMlC,eACE,GAAM,UAAQ,WAEhB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,+OAMhC,SAAC,UAAM,CAACC,MAAM,2DAA2DL,QAAQ,YACjF,SAACT,EAAO,CAACU,SAAS,MAAMC,KAAK,MAAMC,OAAO,IAAIH,QAAQ,aACtD,mDAAoC,cAAGI,WAAW,IAC9C,KAAQ,wCAAsC,eAC1B,gCACxB,6DAA8C,uBAAYA,WAAW,KAAG,WAAyB,MACjG,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,mEAIhC,4FAA6E,cAAGA,WAAW,IACvF,KAAQ,iEAA+D,iBACjD,MAC1B,SAACb,EAAO,CAACU,SAAS,UAAUC,KAAK,WAAWC,OAAO,IAAIH,QAAQ,aAC/D,oCAAqB,uBAAYI,WAAW,KAAG,YAA0B,qEACzE,eACE,GAAM,QAAM,SAEd,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,osBAsBhC,eACE,GAAM,YAAU,WAElB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,0pBAwBhC,SAACb,EAAO,CAACU,SAAS,MAAMC,KAAK,WAAWC,OAAO,IAAIH,QAAQ,aAC3D,oCAAqB,uBAAYI,WAAW,KAAG,8CAA4D,sDAC3G,eACE,GAAM,SAAO,UAEf,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBAAgB,iXAajC,eACE,GAAM,eAAa,gBAErB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBAAqB,kXAe1C,CAEAN,EAAWQ,gBAAiB,C","sources":["webpack://dev-site-documentation-template/./src/pages/solution/adobe-campaign-classic/tabs/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/aep-mobile-sdkdocs/aep-mobile-sdkdocs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nimport Alerts from '/src/pages/resources/alerts.md';\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst Variant = makeShortcode(\"Variant\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <Variant platform=\"android\" task=\"add\" repeat=\"6\" mdxType=\"Variant\" />\n    <p>{`Add the Mobile Core, Lifecycle and Campaign Classic dependencies in your app's Gradle file.`}</p>\n    <h4 {...{\n      \"id\": \"kotlin\"\n    }}>{`Kotlin`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`implementation(platform(\"com.adobe.marketing.mobile:sdk-bom:3.+\"))\nimplementation(\"com.adobe.marketing.mobile:core\")\nimplementation(\"com.adobe.marketing.mobile:lifecycle\")\nimplementation(\"com.adobe.marketing.mobile:campaignclassic\")\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"groovy\"\n    }}>{`Groovy`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`implementation platform('com.adobe.marketing.mobile:sdk-bom:3.+')\nimplementation 'com.adobe.marketing.mobile:core'\nimplementation 'com.adobe.marketing.mobile:lifecycle'\nimplementation 'com.adobe.marketing.mobile:campaignclassic'\n`}</code></pre>\n    <Alerts query=\"platform=android-gradle&componentClass=InlineNestedAlert\" mdxType=\"Alerts\" />\n    <Variant platform=\"ios\" task=\"add\" repeat=\"4\" mdxType=\"Variant\" />\n    <p>{`Add the Campaign Classic and `}<a parentName=\"p\" {...{\n        \"href\": \"../../home/base/mobile-core/index.md\"\n      }}>{`Mobile Core`}</a>{` libraries to your project.`}</p>\n    <p>{`You can add the following pods to your `}<inlineCode parentName=\"p\">{`Podfile`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`pod 'AEPCore', '~> 5.0'\npod 'AEPCampaignClassic', '~> 5.0'\n`}</code></pre>\n    <p>{`or you can manually include the XCFrameworks by following this GitHub `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/adobe/aepsdk-campaignclassic-ios/#binaries\"\n      }}>{`documentation`}</a>{`.`}</p>\n    <Variant platform=\"android\" task=\"register\" repeat=\"5\" mdxType=\"Variant\" />\n    <p>{`In your app's `}<inlineCode parentName=\"p\">{`OnCreate`}</inlineCode>{` method, register the Campaign Classic and Lifecycle extensions:`}</p>\n    <h4 {...{\n      \"id\": \"java\"\n    }}>{`Java`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import com.adobe.marketing.mobile.MobileCore;\nimport com.adobe.marketing.mobile.CampaignClassic;\nimport com.adobe.marketing.mobile.Lifecycle;\n\npublic class MainApp extends Application {\n\n    private final String ENVIRONMENT_FILE_ID = \"YOUR_APP_ENVIRONMENT_ID\";\n\n    @Override\n    public void onCreate() {\n        super.onCreate();\n        MobileCore.setApplication(this);\n        MobileCore.configureWithAppID(ENVIRONMENT_FILE_ID);\n        \n        MobileCore.registerExtensions(\n            Arrays.asList(CampaignClassic.EXTENSION, Lifecycle.EXTENSION),\n            o -> Log.d(\"MainApp\", \"Adobe Experience Platform Campaign Classic Mobile SDK was initialized.\")\n        );\n    }\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"kotlin-1\"\n    }}>{`Kotlin`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import com.adobe.marketing.mobile.MobileCore;\nimport com.adobe.marketing.mobile.CampaignClassic;\nimport com.adobe.marketing.mobile.Lifecycle;\n\nclass MainApp : Application() {\n\n  private var ENVIRONMENT_FILE_ID: String = \"YOUR_APP_ENVIRONMENT_ID\"\n\n    override fun onCreate() {\n        super.onCreate()\n\n        MobileCore.setApplication(this)\n        MobileCore.configureWithAppID(ENVIRONMENT_FILE_ID)\n\n        MobileCore.registerExtensions(\n          listOf(CampaignClassic.EXTENSION, Lifecycle.EXTENSION)\n        ) {\n          Log.d(\"MainApp\", \"Adobe Experience Platform Campaign Classic Mobile SDK was initialized\")\n        }\n    }\n\n}\n`}</code></pre>\n    <Variant platform=\"ios\" task=\"register\" repeat=\"5\" mdxType=\"Variant\" />\n    <p>{`In your app's `}<inlineCode parentName=\"p\">{`application:didFinishLaunchingWithOptions:`}</inlineCode>{` method, register the Campaign Classic extension:`}</p>\n    <h4 {...{\n      \"id\": \"swift\"\n    }}>{`Swift`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`// AppDelegate.swift\n\nimport AEPCore\nimport AEPCampaignClassic\n\nfunc application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {\n  MobileCore.registerExtensions([CampaignClassic.self], {\n    MobileCore.configureWith(appId: \"<YOUR_ENVIRONMENT_FILE_ID>\")\n  })\n  return true;\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c\"\n    }}>{`Objective-C`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`// AppDelegate.m\n\n@import AEPCore;\n@import AEPCampaignClassic;\n\n- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n    [AEPMobileCore registerExtensions:@[AEPMobileCampaignClassic.class] completion:^{\n    [AEPMobileCore configureWithAppId: @\"<YOUR_ENVIRONMENT_FILE_ID>\"];\n  }];\n  return YES;\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","Variant","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","platform","task","repeat","parentName","query","isMDXComponent"],"sourceRoot":""}