{"version":3,"file":"ff4ce0014a5a857ad24100f116c8aa6f7c8a5f05-648ef8b609c7f71ff751.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/pages/documentation/mobile-core/identity/tabs/api-reference.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/aep-mobile-sdkdocs/aep-mobile-sdkdocs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Variant = makeShortcode(\"Variant\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <Variant platform=\"android\" api=\"append-to-url\" repeat=\"7\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java\"\n    }}>{`Java`}</h4>\n    <p>{`This API can be called with `}<a parentName=\"p\" {...{\n        \"href\": \"../api-reference.md#public-classes\"\n      }}>{`AdobeCallback`}</a>{` or `}<a parentName=\"p\" {...{\n        \"href\": \"../api-reference.md#public-classes\"\n      }}>{`AdobeCallbackWithError`}</a>{` for retrieving the attributes from the Mobile SDK. When `}<inlineCode parentName=\"p\">{`AdobeCallbackWithError`}</inlineCode>{` is provided, this API uses a default timeout of 500ms. If the operation times out or an unexpected error occurs, the `}<inlineCode parentName=\"p\">{`fail`}</inlineCode>{` method is called with the appropriate `}<a parentName=\"p\" {...{\n        \"href\": \"../api-reference.md#public-classes\"\n      }}>{`AdobeError`}</a>{`.`}</p>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public static void appendVisitorInfoForURL(final String baseURL, final AdobeCallback<String> callback);\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`baseUrl`}</em>{` is the URL to which the visitor information needs to be appended. If the visitor information is nil or empty, the URL is returned as is.`}</li>\n      <li parentName=\"ul\"><em parentName=\"li\">{`callback`}</em>{` is invoked after the updated URL is available.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`Identity.appendVisitorInfoForURL(\"https://example.com\", new AdobeCallback<String>() {    \n    @Override    \n    public void call(String urlWithAdobeVisitorInfo) {        \n        //handle the new URL here        \n        //For example, open the URL on the device browser        \n        //        \n        Intent i = new Intent(Intent.ACTION_VIEW);        \n        i.setData(Uri.parse(urlWithAdobeVisitorInfo));        \n        startActivity(i);    \n    }\n});\n`}</code></pre>\n    <Variant platform=\"ios-aep\" api=\"append-to-url\" repeat=\"11\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`static func appendTo(url: URL?, completion: @escaping (URL?, Error?) -> Void)\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`url`}</em>{` is the URL to which the visitor information needs to be appended. If the visitor information is nil or empty, the URL is returned as is.`}</li>\n      <li parentName=\"ul\"><em parentName=\"li\">{`completion`}</em>{` is invoked after the updated `}<em parentName=\"li\">{`URL`}</em>{` is available or `}<em parentName=\"li\">{`Error`}</em>{` if an unexpected exception occurs or the request times out. The returned `}<inlineCode parentName=\"li\">{`Error`}</inlineCode>{` contains the `}<a parentName=\"li\" {...{\n          \"href\": \"../api-reference.md#public-classes\"\n        }}>{`AEPError`}</a>{` code of the specific error.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`Identity.appendTo(url: URL(string: \"https://example.com\")) { appendedURL, error in\n  if let error = error {\n    // handle error\n  } else {\n    // handle the appended url here\n    if let appendedURL = appendedURL {\n      // APIs which update the UI must be called from main thread\n      DispatchQueue.main.async {\n        self.webView.load(URLRequest(url: appendedURL!))\n      }\n    } else {\n      // handle error, nil appendedURL\n    }\n  }\n})\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`+ (void) appendToUrl: (NSURL * _Nullable baseUrl) completion: ^(NSURL * _Nullable urlWithVisitorData, NSError * _Nullable error) completion;\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`NSURL* url = [NSURL URLWithString:@\"https://example.com\"];\n[AEPMobileIdentity appendToUrl:url completion:^(NSURL * _Nullable urlWithVisitorData, NSError * _Nullable error) {\n  if (error) {\n    // handle error here\n  } else {\n    // handle the appended url here\n    if (urlWithVisitorData) {\n      // APIs which update the UI must be called from main thread\n      dispatch_async(dispatch_get_main_queue(), ^{\n        [[self webView] loadRequest:[NSURLRequest requestWithURL:urlWithVisitorData]];\n      }\n    } else {\n      // handle error, nil urlWithVisitorData\n    }\n  }\n}];\n`}</code></pre>\n    <Variant platform=\"ios-acp\" api=\"append-to-url\" repeat=\"12\" mdxType=\"Variant\" />\n    <p>{`Method `}<inlineCode parentName=\"p\">{`appendToUrl:withCompletionHandler`}</inlineCode>{` was added in ACPCore version 2.5.0 and ACPIdentity version 2.2.0.`}</p>\n    <h4 {...{\n      \"id\": \"swift-1\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`static func append(to: URL?, withCallback: ((URL?) -> Void)?)\nstatic func append(to: URL?, withCompletionHandler: ((URL?, Error?)-> Void)?)\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`ACPIdentity.append(to:URL(string: \"https://example.com\"), withCallback: {(appendedURL) in    \n  // handle the appended url here\n  if let appendedURL = appendedURL {\n    // APIs which update the UI must be called from main thread\n    DispatchQueue.main.async {\n      self.webView.load(URLRequest(url: appendedURL!))\n    }\n  } else {\n    // handle error, nil appendedURL\n  }\n});\n\nACPIdentity.append(to: URL(string: \"https://example.com\"), withCompletionHandler: { (appendedURL, error) in\n  if let error = error {\n    // handle error\n  } else {\n    // handle the appended url here\n    if let appendedURL = appendedURL {\n      // APIs which update the UI must be called from main thread\n      DispatchQueue.main.async {\n        self.webView.load(URLRequest(url: appendedURL!))\n      }\n    } else {\n      // handle error, nil appendedURL\n    }\n  }\n})\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-1\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`+ (void) appendToUrl: (nullable NSURL*) baseUrl withCallback: (nullable void (^) (NSURL* __nullable urlWithVisitorData)) callback;\n+ (void) appendToUrl: (nullable NSURL*) baseUrl withCompletionHandler: (nullable void (^) (NSURL* __nullable urlWithVersionData, NSError* __nullable error)) completionHandler;\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`baseUrl`}</em>{` is the URL to which the visitor information needs to be appended. If the visitor information is nil or empty, the URL is returned as is.`}</li>\n      <li parentName=\"ul\"><em parentName=\"li\">{`callback`}</em>{` is invoked after the updated URL is available.`}</li>\n      <li parentName=\"ul\"><em parentName=\"li\">{`completionHandler`}</em>{` is invoked with `}<em parentName=\"li\">{`urlWithVersionData`}</em>{` after the updated URL is available or `}<em parentName=\"li\">{`error`}</em>{` if an unexpected exception occurs or the request times out. The returned `}<inlineCode parentName=\"li\">{`NSError`}</inlineCode>{` contains the `}<a parentName=\"li\" {...{\n          \"href\": \"../api-reference.md#public-classes\"\n        }}>{`ACPError`}</a>{` code of the specific error. The default timeout of 500ms.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`NSURL* url = [[NSURL alloc] initWithString:@\"https://example.com\"];\n[ACPIdentity appendToUrl:url withCallback:^(NSURL * _Nullable urlWithVisitorData) {    \n  // handle the appended url here\n  if (urlWithVisitorData) {\n    // APIs which update the UI must be called from main thread\n    dispatch_async(dispatch_get_main_queue(), ^{\n      [[self webView] loadRequest:[NSURLRequest requestWithURL:urlWithVisitorData]];\n    }\n  } else {\n    // handle error, nil urlWithVisitorData\n  }\n}];\n\n[ACPIdentity appendToUrl:url withCompletionHandler:^(NSURL * _Nullable urlWithVersionData, NSError * _Nullable error) {\n  if (error) {\n    // handle error here\n  } else {\n    // handle the appended url here\n    if (urlWithVisitorData) {\n      // APIs which update the UI must be called from main thread\n      dispatch_async(dispatch_get_main_queue(), ^{\n        [[self webView] loadRequest:[NSURLRequest requestWithURL:urlWithVisitorData]];\n      }\n    } else {\n      // handle error, nil urlWithVisitorData\n    }\n  }\n}];\n`}</code></pre>\n    <Variant platform=\"react-native\" api=\"append-to-url\" repeat=\"6\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"javascript\"\n    }}>{`JavaScript`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`appendVisitorInfoForURL(baseURL?: String): Promise<?string>;\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`baseUrl`}</em>{` is the URL to which the visitor information needs to be appended. If the visitor information is nil or empty, the URL is returned as is.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`ACPIdentity.appendVisitorInfoForURL(\"https://example.com\").then(urlWithVistorData => console.log(\"AdobeExperenceSDK: Url with Visitor Data = \" + urlWithVisitorData));\n`}</code></pre>\n    <Variant platform=\"flutter\" api=\"append-to-url\" repeat=\"6\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"dart\"\n    }}>{`Dart`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-dart\"\n      }}>{`Future<String> appendToUrl (String url);\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`url`}</em>{` is the URL to which the visitor information needs to be appended. If the visitor information is nil or empty, the URL is returned as is.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-dart\"\n      }}>{`String result = \"\";\n\ntry {\n  result = await FlutterACPIdentity.appendToUrl(\"https://example.com\");\n} on PlatformException {\n  log(\"Failed to append URL\");\n}\n`}</code></pre>\n    <Variant platform=\"cordova\" api=\"append-to-url\" repeat=\"6\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"cordova\"\n    }}>{`Cordova`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`ACPIdentity.appendVisitorInfoForUrl = function(url, success, fail);\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`url`}</em>{` `}<em parentName=\"li\">{`(String)`}</em>{` is the URL to which the visitor information needs to be appended. If the visitor information is nil or empty, the URL is returned as is.`}</li>\n      <li parentName=\"ul\"><em parentName=\"li\">{`success`}</em>{` is a callback containing the provided URL with the visitor information appended if the `}<inlineCode parentName=\"li\">{`appendVisitorInfoForUrl`}</inlineCode>{` API executed without any errors.`}</li>\n      <li parentName=\"ul\"><em parentName=\"li\">{`fail`}</em>{` is a callback containing error information if the  `}<inlineCode parentName=\"li\">{`appendVisitorInfoForUrl`}</inlineCode>{` API was executed with errors.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`ACPIdentity.appendVisitorInfoForUrl(\"https://example.com\", function(handleCallback) {\n  console.log(\"AdobeExperenceSDK: Url with Visitor Data = \" + handleCallback);\n}, function(handleError) {\n  console.log(\"AdobeExperenceSDK: Failed to append URL : \" + handleError);\n});\n`}</code></pre>\n    <Variant platform=\"unity\" api=\"append-to-url\" repeat=\"6\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"c\"\n    }}>{`C#`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`public static void AppendToUrl(string url, AdobeIdentityAppendToUrlCallback callback)\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`url`}</em>{` `}<em parentName=\"li\">{`(String)`}</em>{` is the URL to which the visitor information needs to be appended. If the visitor information is nil or empty, the URL is returned as is.`}</li>\n      <li parentName=\"ul\"><em parentName=\"li\">{`callback`}</em>{` is a callback containing the provided URL with the visitor information appended if the `}<inlineCode parentName=\"li\">{`AppendToUrl`}</inlineCode>{` API executed without any errors.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`[MonoPInvokeCallback(typeof(AdobeIdentityAppendToUrlCallback))]\npublic static void HandleAdobeIdentityAppendToUrlCallback(string url)\n{\n    print(\"Url is : \" + url);\n}\nACPIdentity.AppendToUrl(\"https://www.adobe.com\", HandleAdobeIdentityAppendToUrlCallback);\n`}</code></pre>\n    <Variant platform=\"xamarin\" api=\"append-to-url\" repeat=\"11\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"c-1\"\n    }}>{`C#`}</h4>\n    <p><strong parentName=\"p\">{`iOS syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`public unsafe static void AppendToUrl (NSUrl baseUrl, Action<NSUrl> callback);\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`baseUrl `}<em parentName=\"li\">{`(NSUrl)`}</em>{` is the URL to which the visitor information needs to be appended. If the visitor information is nil or empty, the URL is returned as is.`}</li>\n      <li parentName=\"ul\"><em parentName=\"li\">{`callback`}</em>{` is a callback containing the provided URL with the visitor information appended if the `}<inlineCode parentName=\"li\">{`AppendToUrl`}</inlineCode>{` API executed without any errors.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Android syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`public unsafe static void AppendVisitorInfoForURL (string baseURL, IAdobeCallback callback);\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`baseURL `}<em parentName=\"li\">{`(string)`}</em>{` is the URL to which the visitor information needs to be appended. If the visitor information is nil or empty, the URL is returned as is.`}</li>\n      <li parentName=\"ul\"><em parentName=\"li\">{`callback`}</em>{` is a callback containing the provided URL with the visitor information appended if the `}<inlineCode parentName=\"li\">{`AppendVisitorInfoForURL`}</inlineCode>{` API executed without any errors.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`iOS example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`ACPIdentity.AppendToUrl(url, callback => {\n  Console.WriteLine(\"Appended url: \" + callback);\n});\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Android example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`ACPIdentity.AppendVisitorInfoForURL(\"https://example.com\", new StringCallback());\n\nclass StringCallback : Java.Lang.Object, IAdobeCallback\n{\n  public void Call(Java.Lang.Object stringContent)\n  {\n    if (stringContent != null)\n    {\n      Console.WriteLine(\"Appended url: \" + stringContent);\n    }\n    else\n    {\n      Console.WriteLine(\"null content in string callback\");\n    }\n  }\n}\n`}</code></pre>\n    <Variant platform=\"android\" api=\"extension-version\" repeat=\"2\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-1\"\n    }}>{`Java`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`String identityExtensionVersion = Identity.extensionVersion();\n`}</code></pre>\n    <Variant platform=\"ios-aep\" api=\"extension-version\" repeat=\"10\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift-2\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`static var extensionVersion: String\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`let identityExtensionVersion  = Identity.extensionVersion\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-2\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`+ (nonnull NSString*) extensionVersion;\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`NSString *identityVersion = [AEPMobileIdentity extensionVersion];\n`}</code></pre>\n    <Variant platform=\"ios-acp\" api=\"extension-version\" repeat=\"10\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift-3\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`static func extensionVersion() -> String\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`let identityVersion  = ACPIdentity.extensionVersion()\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-3\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`+ (nonnull NSString*) extensionVersion;\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`NSString *identityVersion = [ACPIdentity extensionVersion];\n`}</code></pre>\n    <Variant platform=\"react-native\" api=\"extension-version\" repeat=\"2\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"javascript-1\"\n    }}>{`JavaScript`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`ACPIdentity.extensionVersion().then(identityExtensionVersion => console.log(\"AdobeExperienceSDK: ACPIdentity version: \" + identityExtensionVersion));\n`}</code></pre>\n    <Variant platform=\"flutter\" api=\"extension-version\" repeat=\"2\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"dart-1\"\n    }}>{`Dart`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-dart\"\n      }}>{`String identityExtensionVersion = FlutterACPIdentity.extensionVersion;\n`}</code></pre>\n    <Variant platform=\"cordova\" api=\"extension-version\" repeat=\"6\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"cordova-1\"\n    }}>{`Cordova`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`ACPIdentity.extensionVersion = function(success, fail);\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`success`}</em>{` is a callback containing the ACPIdentity extension version if the `}<inlineCode parentName=\"li\">{`extensionVersion`}</inlineCode>{` API executed without any errors.`}</li>\n      <li parentName=\"ul\"><em parentName=\"li\">{`fail`}</em>{` is a callback containing error information if the  `}<inlineCode parentName=\"li\">{`appendVisitorInfoForUrl`}</inlineCode>{` API was executed with errors.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`ACPIdentity.extensionVersion(function (handleCallback) {\n  console.log(\"AdobeExperienceSDK: ACPIdentity version: \" + handleCallback)\n}, function (handleError) {\n  console.log(\"AdobeExperenceSDK: failed to get extension version : \" + handleError)\n});\n`}</code></pre>\n    <Variant platform=\"unity\" api=\"extension-version\" repeat=\"5\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"c-2\"\n    }}>{`C#`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`public static string ExtensionVersion()\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`string identityVersion = ACPIdentity.ExtensionVersion();\n`}</code></pre>\n    <Variant platform=\"xamarin\" api=\"extension-version\" repeat=\"5\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"c-3\"\n    }}>{`C#`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`public static string ExtensionVersion ();\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`string identityVersion = ACPIdentity.ExtensionVersion();\n`}</code></pre>\n    <Variant platform=\"android\" api=\"get-experience-cloud-id\" repeat=\"7\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-2\"\n    }}>{`Java`}</h4>\n    <p>{`This API can be called with `}<a parentName=\"p\" {...{\n        \"href\": \"../api-reference.md#public-classes\"\n      }}>{`AdobeCallback`}</a>{` or `}<a parentName=\"p\" {...{\n        \"href\": \"../api-reference.md#public-classes\"\n      }}>{`AdobeCallbackWithError`}</a>{` for retrieving the ECID from the Mobile SDK. When `}<inlineCode parentName=\"p\">{`AdobeCallbackWithError`}</inlineCode>{` is provided, this API uses a default timeout of 500ms. If the operation times out or an unexpected error occurs, the `}<inlineCode parentName=\"p\">{`fail`}</inlineCode>{` method is called with the appropriate `}<a parentName=\"p\" {...{\n        \"href\": \"../api-reference.md#public-classes\"\n      }}>{`AdobeError`}</a>{`.`}</p>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public static void getExperienceCloudId(final AdobeCallback<String> callback);\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`callback`}</em>{` is invoked after the ECID is available.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`Identity.getExperienceCloudId(new AdobeCallback<String>() {    \n    @Override    \n    public void call(String id) {        \n         //Handle the ID returned here    \n    }\n});\n`}</code></pre>\n    <Variant platform=\"ios-aep\" api=\"get-experience-cloud-id\" repeat=\"11\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift-4\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`@objc(getExperienceCloudId:)\nstatic func getExperienceCloudId(completion: @escaping (String?, Error?) -> Void)\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`completion`}</em>{` is invoked with `}<em parentName=\"li\">{`String`}</em>{` after the ECID is available, or `}<em parentName=\"li\">{`Error`}</em>{` if an unexpected error occurs or the request times out. The returned `}<inlineCode parentName=\"li\">{`Error`}</inlineCode>{` contains the `}<a parentName=\"li\" {...{\n          \"href\": \"../api-reference.md#public-classes\"\n        }}>{`AEPError`}</a>{` code of the specific error.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`Identity.getExperienceCloudId { ecid, error in\n  if let error = error {\n    // handle error here\n  } else {\n    // handle the retrieved ID here\n  }\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-4\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`+ (void) getExperienceCloudId: ^(NSString * _Nullable ecid, NSError * _Nullable error) completion;\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`[AEPMobileIdentity getExperienceCloudId:^(NSString * _Nullable ecid, NSError *error) {\n  if (error) {\n    // handle error here\n  } else {\n    // handle the retrieved ID here\n  }\n}];\n`}</code></pre>\n    <Variant platform=\"ios-acp\" api=\"get-experience-cloud-id\" repeat=\"12\" mdxType=\"Variant\" />\n    <p>{`Method `}<inlineCode parentName=\"p\">{`getExperienceCloudIdWithCompletionHandler`}</inlineCode>{` was added in ACPCore version 2.5.0 and ACPIdentity version 2.2.0.`}</p>\n    <h4 {...{\n      \"id\": \"swift-5\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`static func getExperienceCloudId(_ callback: @escaping (String?) -> Void)\nstatic func getExperienceCloudId(completionHandler: @escaping (String?, Error?) -> Void)\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`callback`}</em>{` is invoked after the ECID is available.`}</li>\n      <li parentName=\"ul\"><em parentName=\"li\">{`completionHandler`}</em>{` is invoked with `}<em parentName=\"li\">{`experienceCloudId`}</em>{` after the ECID is available, or `}<em parentName=\"li\">{`error`}</em>{` if an unexpected error occurs or the request times out. The returned `}<inlineCode parentName=\"li\">{`NSError`}</inlineCode>{` contains the `}<a parentName=\"li\" {...{\n          \"href\": \"../../api-reference.md#public-classes\"\n        }}>{`ACPError`}</a>{` code of the specific error. The default timeout of 500ms.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`ACPIdentity.getExperienceCloudId { (retrievedCloudId) in    \n    // handle the retrieved ID here    \n}\n\nACPIdentity.getExperienceCloudId { (retrievedCloudId, error) in\n  if let error = error {\n    // handle error here\n  } else {\n    // handle the retrieved ID here\n  }\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-5\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`+ (void) getExperienceCloudId: (nonnull void (^) (NSString* __nullable experienceCloudId)) callback;\n+ (void) getExperienceCloudIdWithCompletionHandler: (nonnull void (^) (NSString* __nullable experienceCloudId, NSError* __nullable error)) completionHandler;\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`[ACPIdentity getExperienceCloudId:^(NSString * _Nullable retrievedCloudId) {    \n    // handle the retrieved ID here    \n}];\n\n[ACPIdentity getExperienceCloudIdWithCompletionHandler:^(NSString * _Nullable experienceCloudId, NSError * _Nullable error) {\n  if (error) {\n    // handle error here\n  } else {\n    // handle the retrieved ID here\n  }\n}];\n`}</code></pre>\n    <Variant platform=\"react-native\" api=\"get-experience-cloud-id\" repeat=\"5\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"javascript-2\"\n    }}>{`JavaScript`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`getExperienceCloudId(): Promise<?string>;\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`ACPIdentity.getExperienceCloudId().then(cloudId => console.log(\"AdobeExperienceSDK: CloudID = \" + cloudId));\n`}</code></pre>\n    <Variant platform=\"flutter\" api=\"get-experience-cloud-id\" repeat=\"5\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"dart-2\"\n    }}>{`Dart`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-dart\"\n      }}>{`Future<String> experienceCloudId;\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-dart\"\n      }}>{`String result = \"\";\n\ntry {\n  result = await FlutterACPIdentity.experienceCloudId;\n} on PlatformException {\n  log(\"Failed to get experienceCloudId\");\n}\n`}</code></pre>\n    <Variant platform=\"cordova\" api=\"get-experience-cloud-id\" repeat=\"6\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"cordova-2\"\n    }}>{`Cordova`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`ACPIdentity.getExperienceCloudId(success, fail);\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`success`}</em>{` is a callback containing the ECID if the `}<inlineCode parentName=\"li\">{`getExperienceCloudId`}</inlineCode>{` API executed without any errors.`}</li>\n      <li parentName=\"ul\"><em parentName=\"li\">{`fail`}</em>{` is a callback containing error information if the `}<inlineCode parentName=\"li\">{`getExperienceCloudId`}</inlineCode>{` API was executed with errors.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`ACPIdentity.getExperienceCloudId(function (handleCallback) {\n  console.log(\"AdobeExperienceSDK: experienceCloudId: \" + handleCallback)\n}, function (handleError) {\n  console.log(\"AdobeExperenceSDK: Failed to retrieve experienceCloudId : \" + handleError);\n});\n`}</code></pre>\n    <Variant platform=\"unity\" api=\"get-experience-cloud-id\" repeat=\"6\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"c-4\"\n    }}>{`C#`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`public static void GetExperienceCloudId(AdobeGetExperienceCloudIdCallback callback)\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`callback`}</em>{` is a callback containing the ECID if the `}<inlineCode parentName=\"li\">{`GetExperienceCloudId`}</inlineCode>{` API executed without any errors.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`[MonoPInvokeCallback(typeof(AdobeGetExperienceCloudIdCallback))]\npublic static void HandleAdobeGetExperienceCloudIdCallback(string cloudId)\n{\n    print(\"ECID is : \" + cloudId);\n}\nACPIdentity.GetExperienceCloudId(HandleAdobeGetExperienceCloudIdCallback);\n`}</code></pre>\n    <Variant platform=\"xamarin\" api=\"get-experience-cloud-id\" repeat=\"11\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"c-5\"\n    }}>{`C#`}</h4>\n    <p><strong parentName=\"p\">{`iOS syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`public unsafe static void GetExperienceCloudId (Action<NSString> callback);\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`callback`}</em>{` is a callback containing the ECID if the `}<inlineCode parentName=\"li\">{`getExperienceCloudId`}</inlineCode>{` API executed without any errors.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Android syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`public unsafe static void GetExperienceCloudId (IAdobeCallback callback);\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`callback`}</em>{` is a callback containing the ECID if the `}<inlineCode parentName=\"li\">{`getExperienceCloudId`}</inlineCode>{` API executed without any errors.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`iOS example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`ACPIdentity.GetExperienceCloudId(callback => {\n  Console.WriteLine(\"Experience Cloud Id: \" + callback);\n});\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Android example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`ACPIdentity.GetExperienceCloudId(new StringCallback());\n\nclass StringCallback : Java.Lang.Object, IAdobeCallback\n{\n  public void Call(Java.Lang.Object stringContent)\n  {\n    if (stringContent != null)\n    {\n      Console.WriteLine(\"Experience Cloud Id: \" + stringContent);\n    }\n    else\n    {\n      Console.WriteLine(\"null content in string callback\");\n    }\n  }\n}\n`}</code></pre>\n    <Variant platform=\"android\" api=\"get-identifiers\" repeat=\"7\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-3\"\n    }}>{`Java`}</h4>\n    <p>{`This API can be called with `}<a parentName=\"p\" {...{\n        \"href\": \"../api-reference.md#public-classes\"\n      }}>{`AdobeCallback`}</a>{` or `}<a parentName=\"p\" {...{\n        \"href\": \"../api-reference.md#public-classes\"\n      }}>{`AdobeCallbackWithError`}</a>{` for retrieving the custom identifiers from the Mobile SDK. When `}<inlineCode parentName=\"p\">{`AdobeCallbackWithError`}</inlineCode>{` is provided, this API uses a default timeout of 500ms. If the operation times out or an unexpected error occurs, the `}<inlineCode parentName=\"p\">{`fail`}</inlineCode>{` method is called with the appropriate `}<a parentName=\"p\" {...{\n        \"href\": \"../api-reference.md#public-classes\"\n      }}>{`AdobeError`}</a>{`.`}</p>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public static void getIdentifiers(final AdobeCallback<List<VisitorID>> callback);\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`callback`}</em>{` is invoked after the customer identifiers are available.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`Identity.getIdentifiers(new AdobeCallback<List<VisitorID>>() {    \n    @Override    \n    public void call(List<VisitorID> idList) {        \n         //Process the IDs here    \n    }\n\n});\n`}</code></pre>\n    <Variant platform=\"ios-aep\" api=\"get-identifiers\" repeat=\"11\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift-6\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`@objc(getIdentifiers:)\nstatic func getIdentifiers(completion: @escaping ([Identifiable]?, Error?) -> Void)\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`completion`}</em>{` is invoked with a list of  `}<em parentName=\"li\">{`Identifiable`}</em>{` objects after the customer identifiers are available, or `}<em parentName=\"li\">{`Error`}</em>{` if an unexpected error occurs or the request times out. The returned `}<inlineCode parentName=\"li\">{`Error`}</inlineCode>{` contains the `}<a parentName=\"li\" {...{\n          \"href\": \"../api-reference.md#public-classes\"\n        }}>{`AEPError`}</a>{` code of the specific error.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`Identity.getIdentifiers { identifiers, error in\n  if let error = error {\n    // handle error here\n  } else {\n    // handle the retrieved identifiers here\n  }\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-6\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`+ (void) getIdentifiers: ^(NSArray<id<AEPIdentifiables>> * _Nullable identifiers, NSError * _Nullable error) completion;\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`[[AEPMobileIdentity getIdentifiers:^(NSArray<id<AEPIdentifiable>> * _Nullable identifiers, NSError *error) {\n  if (error) {\n    // handle error here\n  } else {\n    // handle the retrieved identifiers here\n  }\n}];\n`}</code></pre>\n    <Variant platform=\"ios-acp\" api=\"get-identifiers\" repeat=\"12\" mdxType=\"Variant\" />\n    <p>{`Method `}<inlineCode parentName=\"p\">{`getIdentifiersWithCompletionHandler`}</inlineCode>{` was added in ACPCore version 2.5.0 and ACPIdentity version 2.2.0.`}</p>\n    <h4 {...{\n      \"id\": \"swift-7\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`static func getIdentifiers(_ callback: @escaping ([ACPMobileVisitorId]?) -> Void)\nstatic func getIdentifiersWithCompletionHandler(_ completionHandler: @escaping ([ACPMobileVisitorId]?, Error?) -> Void)\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`callback`}</em>{` is invoked after the customer identifiers are available.`}</li>\n      <li parentName=\"ul\"><em parentName=\"li\">{`completionHandler`}</em>{` is invoked with `}<em parentName=\"li\">{`visitorIDs`}</em>{` after the customer identifiers are available, or `}<em parentName=\"li\">{`error`}</em>{` if an unexpected error occurs or the request times out. The returned `}<inlineCode parentName=\"li\">{`NSError`}</inlineCode>{` contains the `}<a parentName=\"li\" {...{\n          \"href\": \"../api-reference.md#public-classes\"\n        }}>{`ACPError`}</a>{` code of the specific error. The default timeout of 500ms.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`ACPIdentity.getIdentifiers { (retrievedVisitorIds) in    \n   // handle the retrieved identifiers here        \n}\n\nACPIdentity.getIdentifiersWithCompletionHandler { (retrievedVisitorIds, error) in\n  if let error = error {\n    // handle error here\n  } else {\n    // handle the retrieved identifiers here\n  }\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-7\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`+ (void) getIdentifiers: (nonnull void (^) (NSArray<ADBMobileVisitorId*>* __nullable visitorIDs)) callback;\n+ (void) getIdentifiersWithCompletionHandler: (nonnull void (^) (NSArray<ACPMobileVisitorId*>* __nullable visitorIDs, NSError* __nullable error)) completionHandler;\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`[ACPIdentity getIdentifiers:^(NSArray<ACPMobileVisitorId *> * _Nullable retrievedVisitorIds) {    \n    // handle the retrieved identifiers here     \n}];\n\n[ACPIdentity getIdentifiersWithCompletionHandler:^(NSArray<ACPMobileVisitorId *> * _Nullable visitorIDs, NSError * _Nullable error) {\n  if (error) {\n    // handle error here\n  } else {\n    // handle the retrieved identifiers here\n  }\n}];\n`}</code></pre>\n    <Variant platform=\"react-native\" api=\"get-identifiers\" repeat=\"5\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"javascript-3\"\n    }}>{`JavaScript`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`getIdentifiers(): Promise<Array<?ACPVisitorID>>;\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`ACPIdentity.getIdentifiers().then(identifiers => console.log(\"AdobeExperienceSDK: Identifiers = \" + identifiers));\n`}</code></pre>\n    <Variant platform=\"flutter\" api=\"get-identifiers\" repeat=\"5\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"dart-3\"\n    }}>{`Dart`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-dart\"\n      }}>{` Future<List<ACPMobileVisitorId>> identifiers;\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-dart\"\n      }}>{`List<ACPMobileVisitorId> result;\n\ntry {\n  result = await FlutterACPIdentity.identifiers;\n} on PlatformException {\n  log(\"Failed to get identifiers\");\n}\n`}</code></pre>\n    <Variant platform=\"cordova\" api=\"get-identifiers\" repeat=\"6\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"cordova-3\"\n    }}>{`Cordova`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`ACPIdentity.getIdentifiers(success, fail);\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`success`}</em>{` is a callback containing the previously synced identifiers if the `}<inlineCode parentName=\"li\">{`getIdentifiers`}</inlineCode>{` API executed without any errors.`}</li>\n      <li parentName=\"ul\"><em parentName=\"li\">{`fail`}</em>{` is a callback containing error information if the `}<inlineCode parentName=\"li\">{`getIdentifiers`}</inlineCode>{` API was executed with errors.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`ACPIdentity.getIdentifiers(function (handleCallback) {\n  console.log(\"AdobeExperienceSDK: Visitor identifiers: \" + handleCallback);\n}, function (handleError) {\n  console.log(\"AdobeExperenceSDK: Failed to retrieve visitor identifiers : \" + handleError);\n});\n`}</code></pre>\n    <Variant platform=\"unity\" api=\"get-identifiers\" repeat=\"6\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"c-6\"\n    }}>{`C#`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`public static void GetIdentifiers(AdobeGetIdentifiersCallback callback)\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`callback`}</em>{` is a callback containing the previously synced identifiers if the `}<inlineCode parentName=\"li\">{`GetIdentifiers`}</inlineCode>{` API executed without any errors.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`[MonoPInvokeCallback(typeof(AdobeGetIdentifiersCallback))]\npublic static void HandleAdobeGetIdentifiersCallback(string visitorIds)\n{\n    print(\"Ids is : \" + visitorIds);\n}\nACPIdentity.GetIdentifiers(HandleAdobeGetIdentifiersCallback);\n`}</code></pre>\n    <Variant platform=\"xamarin\" api=\"get-identifiers\" repeat=\"11\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"c-7\"\n    }}>{`C#`}</h4>\n    <p><strong parentName=\"p\">{`iOS syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`public unsafe static void GetIdentifiers (Action<ACPMobileVisitorId[]> callback);\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`callback`}</em>{` is a callback containing the previously synced identifiers if the `}<inlineCode parentName=\"li\">{`GetIdentifiers`}</inlineCode>{` API executed without any errors.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Android syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`public unsafe static void GetIdentifiers (IAdobeCallback callback);\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`callback`}</em>{` is a callback containing the previously synced identifiers if the `}<inlineCode parentName=\"li\">{`GetIdentifiers`}</inlineCode>{` API executed without any errors.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`iOS example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`Action<ACPMobileVisitorId[]> callback = new Action<ACPMobileVisitorId[]>(handleCallback);\nACPIdentity.GetIdentifiers(callback);\n\nprivate void handleCallback(ACPMobileVisitorId[] ids)\n{\n  String visitorIdsString = \"[]\";\n  if (ids.Length != 0)\n  {\n    visitorIdsString = \"\";\n    foreach (ACPMobileVisitorId id in ids)\n    {\n      visitorIdsString = visitorIdsString + \"[Id: \" + id.Identifier + \", Type: \" + id.IdType + \", Origin: \" + id.IdOrigin + \", Authentication: \" + id.AuthenticationState + \"]\";\n    }\n  }\n  Console.WriteLine(\"Retrieved visitor ids: \" + visitorIdsString);\n}\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Android example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`ACPIdentity.GetIdentifiers(new GetIdentifiersCallback());\n\nclass GetIdentifiersCallback : Java.Lang.Object, IAdobeCallback\n{\n  public void Call(Java.Lang.Object retrievedIds)\n  {\n    System.String visitorIdsString = \"[]\";\n    if (retrievedIds != null)\n    {\n      var ids = GetObject<JavaList>(retrievedIds.Handle, JniHandleOwnership.DoNotTransfer);\n      if (ids != null && ids.Count > 0)\n      {\n        visitorIdsString = \"\";\n        foreach (VisitorID id in ids)\n        {\n          visitorIdsString = visitorIdsString + \"[Id: \" + id.Id + \", Type: \" + id.IdType + \", Origin: \" + id.IdOrigin + \", Authentication: \" + id.GetAuthenticationState() + \"]\";\n        }\n      }\n    }\n    Console.WriteLine(\"Retrieved visitor ids: \" + visitorIdsString);\n  }\n}\n`}</code></pre>\n    <Variant platform=\"android\" api=\"get-url-variables\" repeat=\"8\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-4\"\n    }}>{`Java`}</h4>\n    <p>{`This method was added in Core version 1.4.0 and Identity version 1.1.0.`}</p>\n    <p>{`This API can be called with `}<a parentName=\"p\" {...{\n        \"href\": \"../api-reference.md#public-classes\"\n      }}>{`AdobeCallback`}</a>{` or `}<a parentName=\"p\" {...{\n        \"href\": \"../api-reference.md#public-classes\"\n      }}>{`AdobeCallbackWithError`}</a>{` for retrieving the attributes from the Mobile SDK. When `}<inlineCode parentName=\"p\">{`AdobeCallbackWithError`}</inlineCode>{` is provided, this API uses a default timeout of 500ms. If the operation times out or an unexpected error occurs, the `}<inlineCode parentName=\"p\">{`fail`}</inlineCode>{` method is called with the appropriate `}<a parentName=\"p\" {...{\n        \"href\": \"../api-reference.md#public-classes\"\n      }}>{`AdobeError`}</a>{`.`}</p>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public static void getUrlVariables(final AdobeCallback<String> callback);\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`callback`}</em>{` has an NSString value that contains the visitor identifiers as a query string after the service request is complete.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`Identity.getUrlVariables(new AdobeCallback<String>() {    \n    @Override    \n    public void call(String stringWithAdobeVisitorInfo) {        \n        //handle the URL query parameter string here\n        //For example, open the URL on the device browser        \n        //        \n        Intent i = new Intent(Intent.ACTION_VIEW);        \n        i.setData(Uri.parse(\"https://example.com?\" + urlWithAdobeVisitorInfo));        \n        startActivity(i);    \n    }\n});\n`}</code></pre>\n    <Variant platform=\"ios-aep\" api=\"get-url-variables\" repeat=\"11\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift-8\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`@objc(getUrlVariables:)\nstatic func getUrlVariables(completion: @escaping (String?, Error?) -> Void)\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`completion`}</em>{` is invoked with `}<em parentName=\"li\">{`String`}</em>{` containing the visitor identifiers as a query string, or `}<em parentName=\"li\">{`Error`}</em>{` if an unexpected error occurs or the request times out. The returned `}<inlineCode parentName=\"li\">{`Error`}</inlineCode>{` contains the `}<a parentName=\"li\" {...{\n          \"href\": \"../api-reference.md#public-classes\"\n        }}>{`AEPError`}</a>{` code of the specific error. The default timeout of 500ms.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`Identity.getUrlVariables { (urlVariables, error) in\n  if let error = error {\n    // handle error\n  } else {\n    var urlStringWithVisitorData: String = \"https://example.com\"\n    if let urlVariables: String = urlVariables {\n      urlStringWithVisitorData.append(\"?\" + urlVariables)\n    }\n\n    guard let urlWithVisitorData: URL = URL(string: urlStringWithVisitorData) else {\n      // handle error, unable to construct URL\n      return\n    }\n    // APIs which update the UI must be called from main thread\n    DispatchQueue.main.async {\n      self.webView.load(URLRequest(url: urlWithVisitorData))\n    }\n  }\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-8\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`+ (void) getUrlVariables: ^(NSString * _Nullable urlVariables, NSError * _Nullable error) completion;\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`[AEPMobileIdentity getUrlVariables:^(NSString * _Nullable urlVariables, NSError *error) {\n  if (error) {\n    // handle error here\n  } else {\n    // handle the URL query parameter string here\n    NSString* urlString = @\"https://example.com\";\n    NSString* urlStringWithVisitorData = [NSString stringWithFormat:@\"%@?%@\", urlString, urlVariables];\n    NSURL* urlWithVisitorData = [NSURL URLWithString:urlStringWithVisitorData];\n    // APIs which update the UI must be called from main thread\n    dispatch_async(dispatch_get_main_queue(), ^{\n      [[self webView] loadRequest:[NSURLRequest requestWithURL:urlWithVisitorData]];\n    }\n  }\n}];\n`}</code></pre>\n    <Variant platform=\"ios-acp\" api=\"get-url-variables\" repeat=\"12\" mdxType=\"Variant\" />\n    <p>{`Method `}<inlineCode parentName=\"p\">{`getUrlVariables`}</inlineCode>{` was added in ACPCore version 2.3.0 and ACPIdentity version 2.1.0. Method `}<inlineCode parentName=\"p\">{`getUrlVariablesWithCompletionHandler`}</inlineCode>{` was added in ACPCore version 2.5.0 and ACPIdentity version 2.2.0.`}</p>\n    <h4 {...{\n      \"id\": \"swift-9\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`static func getUrlVariables(_ callback: @escaping (String?) -> Void)\nstatic func getUrlVariables(completionHandler: @escaping (String?, Error?) -> Void)\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`callback`}</em>{` has an NSString value that contains the visitor identifiers as a query string after the service request is complete.`}</li>\n      <li parentName=\"ul\"><em parentName=\"li\">{`completionHandler`}</em>{` is invoked with `}<em parentName=\"li\">{`urlVariables`}</em>{` containing the visitor identifiers as a query string, or `}<em parentName=\"li\">{`error`}</em>{` if an unexpected error occurs or the request times out. The returned `}<inlineCode parentName=\"li\">{`NSError`}</inlineCode>{` contains the `}<a parentName=\"li\" {...{\n          \"href\": \"../api-reference.md#public-classes\"\n        }}>{`ACPError`}</a>{` code of the specific error. The default timeout of 500ms.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`ACPIdentity.getUrlVariables {(urlVariables) in\n  var urlStringWithVisitorData: String = \"https://example.com\"\n  if let urlVariables: String = urlVariables {\n    urlStringWithVisitorData.append(\"?\" + urlVariables)\n  }\n\n  guard let urlWithVisitorData: URL = URL(string: urlStringWithVisitorData)   else {\n    // handle error, unable to construct URL\n    return\n  }\n  // APIs which update the UI must be called from main thread\n  DispatchQueue.main.async {\n    self.webView.load(URLRequest(url: urlWithVisitorData))\n  }\n}\n\nACPIdentity.getUrlVariables { (urlVariables, error) in\n  if let error = error {\n    // handle error\n  } else {\n    var urlStringWithVisitorData: String = \"https://example.com\"\n    if let urlVariables: String = urlVariables {\n      urlStringWithVisitorData.append(\"?\" + urlVariables)\n    }\n\n    guard let urlWithVisitorData: URL = URL(string: urlStringWithVisitorData) else {\n      // handle error, unable to construct URL\n      return\n    }\n    // APIs which update the UI must be called from main thread\n    DispatchQueue.main.async {\n      self.webView.load(URLRequest(url: urlWithVisitorData))\n    }\n  }\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-9\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`+ (void) getUrlVariables: (nonnull void (^) (NSString* __nullable urlVariables)) callback;\n+ (void) getUrlVariablesWithCompletionHandler: (nonnull void (^) (NSString* __nullable urlVariables, NSError* __nullable error)) completionHandler;\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`[ACPIdentity getUrlVariables:^(NSString * _Nullable urlVariables) {    \n  // handle the URL query parameter string here\n  NSString* urlString = @\"https://example.com\";\n  NSString* urlStringWithVisitorData = [NSString stringWithFormat:@\"%@?%@\", urlString, urlVariables];\n  NSURL* urlWithVisitorData = [NSURL URLWithString:urlStringWithVisitorData];\n  // APIs which update the UI must be called from main thread\n  dispatch_async(dispatch_get_main_queue(), ^{\n    [[self webView] loadRequest:[NSURLRequest requestWithURL:urlWithVisitorData]];\n  }\n}];\n\n[ACPIdentity getUrlVariablesWithCompletionHandler:^(NSString * _Nullable urlVariables, NSError * _Nullable error) {\n  if (error) {\n    // handle error here\n  } else {\n    // handle the URL query parameter string here\n    NSString* urlString = @\"https://example.com\";\n    NSString* urlStringWithVisitorData = [NSString stringWithFormat:@\"%@?%@\", urlString, urlVariables];\n    NSURL* urlWithVisitorData = [NSURL URLWithString:urlStringWithVisitorData];\n    // APIs which update the UI must be called from main thread\n    dispatch_async(dispatch_get_main_queue(), ^{\n      [[self webView] loadRequest:[NSURLRequest requestWithURL:urlWithVisitorData]];\n    }\n  }\n}];\n`}</code></pre>\n    <Variant platform=\"react-native\" api=\"get-url-variables\" repeat=\"6\" mdxType=\"Variant\" />\n    <p>{`This method was added in react-native-acpcore v1.0.5.`}</p>\n    <h4 {...{\n      \"id\": \"javascript-4\"\n    }}>{`JavaScript`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`getUrlVariables(): Promise<?string>;\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`ACPIdentity.getUrlVariables().then(urlVariables => console.log(\"AdobeExperenceSDK: query params = \" + urlVariables));\n`}</code></pre>\n    <Variant platform=\"flutter\" api=\"get-url-variables\" repeat=\"5\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"dart-4\"\n    }}>{`Dart`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-dart\"\n      }}>{` Future<String> urlVariables;\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-dart\"\n      }}>{`String result = \"\";\n\ntry {\n  result = await FlutterACPIdentity.urlVariables;\n} on PlatformException {\n  log(\"Failed to get url variables\");\n}\n`}</code></pre>\n    <Variant platform=\"cordova\" api=\"get-url-variables\" repeat=\"6\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"cordova-4\"\n    }}>{`Cordova`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`ACPIdentity.getUrlVariables(success, fail);\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`success`}</em>{` is a callback containing the url variables in query parameter form if the `}<inlineCode parentName=\"li\">{`getUrlVariables`}</inlineCode>{` API executed without any errors.`}</li>\n      <li parentName=\"ul\"><em parentName=\"li\">{`fail`}</em>{` is a callback containing error information if the `}<inlineCode parentName=\"li\">{`getUrlVariables`}</inlineCode>{` API was executed with errors.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`ACPIdentity.getUrlVariables(function (handleCallback) {\n  console.log(\"AdobeExperienceSDK: Url variables: \" + handleCallback);\n}, function (handleError) {\n  console.log(\"AdobeExperenceSDK: Failed to retrieve url variables : \" + handleError);\n});\n`}</code></pre>\n    <Variant platform=\"unity\" api=\"get-url-variables\" repeat=\"6\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"c-8\"\n    }}>{`C#`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`public static void GetUrlVariables(AdobeGetUrlVariables callback)\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`callback`}</em>{` is a callback containing the url variables in query parameter form if the `}<inlineCode parentName=\"li\">{`GetUrlVariables`}</inlineCode>{` API executed without any errors.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`[MonoPInvokeCallback(typeof(AdobeGetUrlVariables))]\npublic static void HandleAdobeGetUrlVariables(string urlVariables)\n{\n  print(\"Url variables are : \" + urlVariables);\n}\nACPIdentity.GetUrlVariables(HandleAdobeGetUrlVariables);\n`}</code></pre>\n    <Variant platform=\"xamarin\" api=\"get-url-variables\" repeat=\"11\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"c-9\"\n    }}>{`C#`}</h4>\n    <p><strong parentName=\"p\">{`iOS syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`public unsafe static void GetUrlVariables (Action<NSString> callback);\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`callback`}</em>{` is a callback containing the url variables in query parameter form if the `}<inlineCode parentName=\"li\">{`GetUrlVariables`}</inlineCode>{` API executed without any errors.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Android syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`public unsafe static void GetUrlVariables (IAdobeCallback callback);\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`callback`}</em>{` is a callback containing the url variables in query parameter form if the `}<inlineCode parentName=\"li\">{`GetUrlVariables`}</inlineCode>{` API executed without any errors.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`iOS example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{` ACPIdentity.GetUrlVariables(callback => {\n   Console.WriteLine(\"Url variables: \" + callback);\n });\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Android example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`ACPIdentity.GetUrlVariables(new StringCallback());\n\nclass StringCallback : Java.Lang.Object, IAdobeCallback\n{\n  public void Call(Java.Lang.Object stringContent)\n  {\n    if (stringContent != null)\n    {\n      Console.WriteLine(\"Url variables: \" + stringContent);\n    }\n    else\n    {\n      Console.WriteLine(\"null content in string callback\");\n    }\n  }\n}\n`}</code></pre>\n    <Variant platform=\"android\" api=\"register-extension\" repeat=\"3\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-5\"\n    }}>{`Java`}</h4>\n    <p>{`After calling the `}<inlineCode parentName=\"p\">{`setApplication()`}</inlineCode>{` method in the `}<inlineCode parentName=\"p\">{`onCreate()`}</inlineCode>{` method, register the extension. If the registration was not successful, an `}<inlineCode parentName=\"p\">{`InvalidInitException`}</inlineCode>{` is thrown.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class MobileApp extends Application {\n@Override\npublic void onCreate() {\nsuper.onCreate();\n     MobileCore.setApplication(this);\n     try {\n         Identity.registerExtension();\n     } catch (Exception e) {\n         //Log the exception\n     }\n  }\n}\n`}</code></pre>\n    <Variant platform=\"ios-aep\" api=\"register-extension\" repeat=\"7\" mdxType=\"Variant\" />\n    <p>{`For iOS AEP libraries, registration is changed to a single API call. Calling the MobileCore.start API is no longer required. See `}<a parentName=\"p\" {...{\n        \"href\": \"../api-reference.md#registerextension-s\"\n      }}>{`MobileCore.registerExtensions()`}</a>{` for more information.`}</p>\n    <h4 {...{\n      \"id\": \"swift-10\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`// AppDelegate.swift\nfunc application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {\n    MobileCore.registerExtensions([AEPIdentity.Identity.self, Lifecycle.self, Analytics.self], {\n        MobileCore.configureWith(appId: \"mobilePropertyEnvironmentID\")\n    })\n  ...\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-10\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`// AppDelegate.m\n- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n    [AEPMobileCore registerExtensions:@[AEPMobileIdentity.class, AEPMobileLifecycle.class, AEPMobileAnalytics.class] completion:^{\n    [AEPMobileCore configureWithAppId: @\"mobilePropertyEnvironmentID\"];\n  }];\n  ...\n}\n`}</code></pre>\n    <Variant platform=\"ios-acp\" api=\"register-extension\" repeat=\"7\" mdxType=\"Variant\" />\n    <p>{`Register the Identity extension in your app's `}<inlineCode parentName=\"p\">{`didFinishLaunchingWithOptions`}</inlineCode>{` function:`}</p>\n    <h4 {...{\n      \"id\": \"swift-11\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {\n  ACPIdentity.registerExtension()\n  // Override point for customization after application launch.\n  return true;\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-11\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n  [ACPIdentity registerExtension];\n  // Override point for customization after application launch.\n  return YES;\n}\n`}</code></pre>\n    <Variant platform=\"react-native\" api=\"register-extension\" repeat=\"2\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"javascript-5\"\n    }}>{`JavaScript`}</h4>\n    <p>{`When using React Native, registering Identity with Mobile Core should be done in native code which is shown under the Android and iOS tabs.`}</p>\n    <Variant platform=\"flutter\" api=\"register-extension\" repeat=\"2\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"dart-5\"\n    }}>{`Dart`}</h4>\n    <p>{`When using Flutter, registering Identity with Mobile Core should be done in native code which is shown under the Android and iOS tabs.`}</p>\n    <Variant platform=\"cordova\" api=\"register-extension\" repeat=\"2\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"cordova-5\"\n    }}>{`Cordova`}</h4>\n    <p>{`When using Cordova, registering Identity with Mobile Core should be done in native code which is shown under the Android and iOS tabs.`}</p>\n    <Variant platform=\"unity\" api=\"register-extension\" repeat=\"3\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"c-10\"\n    }}>{`C#`}</h4>\n    <p>{`Register the Identity extension in your app's `}<inlineCode parentName=\"p\">{`Start()`}</inlineCode>{` function:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`void Start() {\n  ACPIdentity.RegisterExtension();\n}\n`}</code></pre>\n    <Variant platform=\"xamarin\" api=\"register-extension\" repeat=\"7\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"c-11\"\n    }}>{`C#`}</h4>\n    <p><strong parentName=\"p\">{`iOS`}</strong></p>\n    <p>{`Register the Identity extension in your app's `}<inlineCode parentName=\"p\">{`FinishedLaunching()`}</inlineCode>{` function:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`public override bool FinishedLaunching(UIApplication app, NSDictionary options)\n{\n  global::Xamarin.Forms.Forms.Init();\n  LoadApplication(new App());\n    ACPIdentity.RegisterExtension();\n\n  // start core\n  ACPCore.Start(startCallback);\n\n  return base.FinishedLaunching(app, options);\n}\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Android`}</strong></p>\n    <p>{`Register the Identity extension in your app's `}<inlineCode parentName=\"p\">{`OnCreate()`}</inlineCode>{` function:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`protected override void OnCreate(Bundle savedInstanceState)\n{\n  base.OnCreate(savedInstanceState);\n  global::Xamarin.Forms.Forms.Init(this, savedInstanceState);\n  LoadApplication(new App());\n\n  ACPIdentity.RegisterExtension();\n\n  // start core\n  ACPCore.Start(new CoreStartCompletionCallback());\n}\n`}</code></pre>\n    <Variant platform=\"android\" api=\"set-advertising-identifier\" repeat=\"8\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-6\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public static void setAdvertisingIdentifier(final String advertisingIdentifier);\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`advertisingIdentifier`}</em>{` is a string that provides developers with a simple, standard system to track the Ads through their apps.     `}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <p>{`This is just an implementation example. For more information about advertising identifiers and how to handle them correctly in your mobile application, see `}<a parentName=\"p\" {...{\n        \"href\": \"https://developers.google.com/android/reference/com/google/android/gms/ads/identifier/AdvertisingIdClient\"\n      }}>{`Google Play Services documentation about AdvertisingIdClient`}</a>{`.`}</p>\n    <p>{`This example requires Google Play Services to be configured in your mobile application. For instructions on how to import the Google Mobile Ads SDK and how to configure your ApplicationManifest.xml file, see `}<a parentName=\"p\" {...{\n        \"href\": \"https://developers.google.com/admob/android/quick-start\"\n      }}>{`Google Mobile Ads SDK setup`}</a>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`...\n@Override\npublic void onResume() {\n    super.onResume();\n    ...\n    new Thread(new Runnable() {\n        @Override\n        public void run() {\n            String advertisingIdentifier = null;\n\n            try {\n                AdvertisingIdClient.Info adInfo = AdvertisingIdClient.getAdvertisingIdInfo(getApplicationContext());\n                if (adInfo != null) {\n                    if (!adInfo.isLimitAdTrackingEnabled()) {\n                        advertisingIdentifier = adInfo.getId();\n                    } else {\n                        MobileCore.log(LoggingMode.DEBUG, \"ExampleActivity\", \"Limit Ad Tracking is enabled by the user, cannot process the advertising identifier\");\n                    }\n                }\n\n            } catch (IOException e) {\n                // Unrecoverable error connecting to Google Play services (e.g.,\n                // the old version of the service doesn't support getting AdvertisingId).\n                MobileCore.log(LoggingMode.DEBUG, \"ExampleActivity\", \"IOException while retrieving the advertising identifier \" + e.getLocalizedMessage());\n            } catch (GooglePlayServicesNotAvailableException e) {\n                // Google Play services is not available entirely.\n                MobileCore.log(LoggingMode.DEBUG, \"ExampleActivity\", \"GooglePlayServicesNotAvailableException while retrieving the advertising identifier \" + e.getLocalizedMessage());\n            } catch (GooglePlayServicesRepairableException e) {\n                // Google Play services is not installed, up-to-date, or enabled.\n                MobileCore.log(LoggingMode.DEBUG, \"ExampleActivity\", \"GooglePlayServicesRepairableException while retrieving the advertising identifier \" + e.getLocalizedMessage());\n            }\n\n            MobileCore.setAdvertisingIdentifier(advertisingIdentifier);\n        }\n    }).start();\n}\n`}</code></pre>\n    <Variant platform=\"ios-aep\" api=\"set-advertising-identifier\" repeat=\"13\" mdxType=\"Variant\" />\n    <p>{`To access IDFA and handle it correctly in your mobile application, see the `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.apple.com/documentation/adsupport/asidentifiermanager\"\n      }}>{`Apple developer documentation about IDFA`}</a></p>\n    <p>{`Starting iOS 14+, applications must use the `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.apple.com/documentation/apptrackingtransparency\"\n      }}>{`App Tracking Transparency`}</a>{` framework to request user authorization before using the Identifier for Advertising (IDFA).`}</p>\n    <h4 {...{\n      \"id\": \"swift-12\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`@objc(setAdvertisingIdentifier:)\npublic static func setAdvertisingIdentifier(_ identifier: String?)\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`identifier`}</em>{` is a string that provides developers with a simple, standard system to continue to track the Ads through their apps.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`import AdSupport\nimport AppTrackingTransparency\n...\n\nfunc application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {\n    ...\n    if #available(iOS 14, *) {\n       setAdvertisingIdentiferUsingTrackingManager()\n    } else {\n       // Fallback on earlier versions\n       setAdvertisingIdentifierUsingIdentifierManager()\n    }\n\n}\n\nfunc setAdvertisingIdentifierUsingIdentifierManager() {\n    var idfa:String = \"\";\n        if (ASIdentifierManager.shared().isAdvertisingTrackingEnabled) {\n            idfa = ASIdentifierManager.shared().advertisingIdentifier.uuidString;\n        } else {\n            Log.debug(label: \"AppDelegateExample\",\n                      \"Advertising Tracking is disabled by the user, cannot process the advertising identifier.\");\n        }\n        MobileCore.setAdvertisingIdentifier(idfa);\n}\n\n@available(iOS 14, *)\nfunc setAdvertisingIdentiferUsingTrackingManager() {\n    ATTrackingManager.requestTrackingAuthorization { (status) in\n        var idfa: String = \"\";\n\n        switch (status) {\n        case .authorized:\n            idfa = ASIdentifierManager.shared().advertisingIdentifier.uuidString\n        case .denied:\n            Log.debug(label: \"AppDelegateExample\",\n                      \"Advertising Tracking is denied by the user, cannot process the advertising identifier.\")\n        case .notDetermined:\n            Log.debug(label: \"AppDelegateExample\",\n                      \"Advertising Tracking is not determined, cannot process the advertising identifier.\")\n        case .restricted:\n            Log.debug(label: \"AppDelegateExample\",\n                      \"Advertising Tracking is restricted by the user, cannot process the advertising identifier.\")\n        }\n\n        MobileCore.setAdvertisingIdentifier(idfa)\n    }\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-12\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`+ (void) setAdvertisingIdentifier: (NSString * _Nullable identifier);\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`#import <AdSupport/ASIdentifierManager.h>\n#import <AppTrackingTransparency/ATTrackingManager.h>\n...\n\n- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n-   ...\n-   \n    if (@available(iOS 14, *)) {\n        [self setAdvertisingIdentiferUsingTrackingManager];\n    } else {\n        // fallback to earlier versions\n        [self setAdvertisingIdentifierUsingIdentifierManager];\n    }\n\n}\n\n- (void) setAdvertisingIdentifierUsingIdentifierManager {\n    // setup the advertising identifier\n    NSString *idfa = nil;\n    if ([[ASIdentifierManager sharedManager] isAdvertisingTrackingEnabled]) {\n        idfa = [[[ASIdentifierManager sharedManager] advertisingIdentifier] UUIDString];\n    } else {\n        [AEPLog debugWithLabel:@\"AppDelegateExample\"\n                       message:@\"Advertising Tracking is disabled by the user, cannot process the advertising identifier\"];\n    }\n    [AEPMobileCore setAdvertisingIdentifier:idfa];\n\n}\n\n- (void) setAdvertisingIdentiferUsingTrackingManager API_AVAILABLE(ios(14)) {\n    [ATTrackingManager requestTrackingAuthorizationWithCompletionHandler:\n    ^(ATTrackingManagerAuthorizationStatus status){\n        NSString *idfa = nil;\n        switch(status) {\n            case ATTrackingManagerAuthorizationStatusAuthorized:\n                idfa = [[[ASIdentifierManager sharedManager] advertisingIdentifier] UUIDString];\n                break;\n            case ATTrackingManagerAuthorizationStatusDenied:\n                [AEPLog debugWithLabel:@\"AppDelegateExample\"\n                               message:@\"Advertising Tracking is denied by the user, cannot process the advertising identifier\"];\n                break;\n            case ATTrackingManagerAuthorizationStatusNotDetermined:\n                [AEPLog debugWithLabel:@\"AppDelegateExample\"\n                               message:@\"Advertising Tracking is not determined, cannot process the advertising identifier\"];\n                break;\n            case ATTrackingManagerAuthorizationStatusRestricted:\n                [AEPLog debugWithLabel:@\"AppDelegateExample\"\n                               message:@\"Advertising Tracking is restricted by the user, cannot process the advertising identifier\"];\n                break;\n        }\n\n        [AEPMobileCore setAdvertisingIdentifier:idfa];\n    }];\n}\n`}</code></pre>\n    <Variant platform=\"ios-acp\" api=\"set-advertising-identifier\" repeat=\"13\" mdxType=\"Variant\" />\n    <p>{`To access IDFA and handle it correctly in your mobile application, see `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.apple.com/documentation/adsupport/asidentifiermanager\"\n      }}>{`Apple developer documentation about IDFA`}</a></p>\n    <p>{`Starting iOS 14+, applications must use the `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.apple.com/documentation/apptrackingtransparency\"\n      }}>{`App Tracking Transparency`}</a>{` framework to request user authorization before using the Identifier for Advertising (IDFA).`}</p>\n    <h4 {...{\n      \"id\": \"swift-13\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`static func setAdvertisingIdentifier(adId: String?)\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`adId`}</em>{` is a string that provides developers with a simple, standard system to continue to track the Ads through their apps.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`import AdSupport\nimport AppTrackingTransparency\n...\n\nfunc application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {\n    ...\n    if #available(iOS 14, *) {\n       setAdvertisingIdentiferUsingTrackingManager()\n    } else {\n       // Fallback on earlier versions\n       setAdvertisingIdentifierUsingIdentifierManager()\n    }\n\n}\n\nfunc setAdvertisingIdentifierUsingIdentifierManager() {\n    var idfa:String = \"\";\n        if (ASIdentifierManager.shared().isAdvertisingTrackingEnabled) {\n            idfa = ASIdentifierManager.shared().advertisingIdentifier.uuidString;\n        } else {\n            ACPCore.log(ACPMobileLogLevel.debug,\n                        tag: \"AppDelegateExample\",\n                        message: \"Advertising Tracking is disabled by the user, cannot process the advertising identifier.\");\n        }\n        ACPCore.setAdvertisingIdentifier(idfa);\n}\n\n@available(iOS 14, *)\nfunc setAdvertisingIdentiferUsingTrackingManager() {\n    ATTrackingManager.requestTrackingAuthorization { (status) in\n        var idfa: String = \"\";\n\n        switch (status) {\n        case .authorized:\n            idfa = ASIdentifierManager.shared().advertisingIdentifier.uuidString\n        case .denied:\n            ACPCore.log(.debug,\n                        tag: \"AppDelegateExample\",\n                        message: \"Advertising Tracking is denied by the user, cannot process the advertising identifier.\")\n        case .notDetermined:\n            ACPCore.log(.debug,\n                        tag: \"AppDelegateExample\",\n                        message: \"Advertising Tracking is not determined, cannot process the advertising identifier.\")\n        case .restricted:\n            ACPCore.log(.debug,\n                        tag: \"AppDelegateExample\",\n                        message: \"Advertising Tracking is restricted by the user, cannot process the advertising identifier.\")\n        }\n\n        ACPCore.setAdvertisingIdentifier(idfa)\n    }\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-13\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`+ (void) setAdvertisingIdentifier: (nullable NSString*) adId;\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`#import <AdSupport/ASIdentifierManager.h>\n#import <AppTrackingTransparency/ATTrackingManager.h>\n...\n\n- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n-   ...\n-   \n    if (@available(iOS 14, *)) {\n        [self setAdvertisingIdentiferUsingTrackingManager];\n    } else {\n        // fallback to earlier versions\n        [self setAdvertisingIdentifierUsingIdentifierManager];\n    }\n\n}\n\n- (void) setAdvertisingIdentifierUsingIdentifierManager {\n    // setup the advertising identifier\n    NSString *idfa = nil;\n    if ([[ASIdentifierManager sharedManager] isAdvertisingTrackingEnabled]) {\n        idfa = [[[ASIdentifierManager sharedManager] advertisingIdentifier] UUIDString];\n    } else {\n        [ACPCore log:ACPMobileLogLevelDebug\n                 tag:@\"AppDelegateExample\"\n             message:@\"Advertising Tracking is disabled by the user, cannot process the advertising identifier\"];\n    }\n    [ACPCore setAdvertisingIdentifier:idfa];\n\n}\n\n- (void) setAdvertisingIdentiferUsingTrackingManager API_AVAILABLE(ios(14)) {\n    [ATTrackingManager requestTrackingAuthorizationWithCompletionHandler:\n    ^(ATTrackingManagerAuthorizationStatus status){\n        NSString *idfa = nil;\n        switch(status) {\n            case ATTrackingManagerAuthorizationStatusAuthorized:\n                idfa = [[[ASIdentifierManager sharedManager] advertisingIdentifier] UUIDString];\n                break;\n            case ATTrackingManagerAuthorizationStatusDenied:\n                [ACPCore log:ACPMobileLogLevelDebug\n                         tag:@\"AppDelegateExample\"\n                     message:@\"Advertising Tracking is denied by the user, cannot process the advertising identifier\"];\n                break;\n            case ATTrackingManagerAuthorizationStatusNotDetermined:\n                [ACPCore log:ACPMobileLogLevelDebug\n                         tag:@\"AppDelegateExample\"\n                     message:@\"Advertising Tracking is not determined, cannot process the advertising identifier\"];\n                break;\n            case ATTrackingManagerAuthorizationStatusRestricted:\n                [ACPCore log:ACPMobileLogLevelDebug\n                         tag:@\"AppDelegateExample\"\n                     message:@\"Advertising Tracking is restricted by the user, cannot process the advertising identifier\"];\n                break;\n        }\n\n        [ACPCore setAdvertisingIdentifier:idfa];\n    }];\n}\n`}</code></pre>\n    <Variant platform=\"react-native\" api=\"set-advertising-identifier\" repeat=\"6\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"javascript-6\"\n    }}>{`JavaScript`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`setAdvertisingIdentifier(advertisingIdentifier?: String);\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`adID`}</em>{` is a string that provides developers with a simple, standard system to continue to track the Ads through their apps.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`ACPCore.setAdvertisingIdentifier(\"ADVTID\");\n`}</code></pre>\n    <Variant platform=\"flutter\" api=\"set-advertising-identifier\" repeat=\"6\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"dart-6\"\n    }}>{`Dart`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-dart\"\n      }}>{`Future<void> setAdvertisingIdentifier (String aid);\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`aid`}</em>{` is a string that provides developers with a simple, standard system to continue to track the Ads through their apps.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-dart\"\n      }}>{`FlutterACPCore.setAdvertisingIdentifier(\"ADVTID\");\n`}</code></pre>\n    <Variant platform=\"cordova\" api=\"set-advertising-identifier\" repeat=\"6\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"cordova-6\"\n    }}>{`Cordova`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`ACPCore.setAdvertisingIdentifier(identifier, success, fail);\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`identifier`}</em>{` `}<em parentName=\"li\">{`(String)`}</em>{` provides developers with a simple, standard system to continue to track the Ads through their apps.`}</li>\n      <li parentName=\"ul\"><em parentName=\"li\">{`success`}</em>{` is a callback containing a general success message if the `}<inlineCode parentName=\"li\">{`setAdvertisingIdentifier`}</inlineCode>{` API executed without any errors.`}</li>\n      <li parentName=\"ul\"><em parentName=\"li\">{`fail`}</em>{` is a callback containing error information if the `}<inlineCode parentName=\"li\">{`setAdvertisingIdentifier`}</inlineCode>{` API was executed with errors.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`ACPCore.setAdvertisingIdentifier(\"ADVTID\", function (handleCallback) {\n  console.log(\"AdobeExperienceSDK: Advertising identifier successfully set.\");\n}, function (handleError) {\n  console.log(\"AdobeExperenceSDK: Failed to set advertising identifier : \" + handleError);\n});\n`}</code></pre>\n    <Variant platform=\"unity\" api=\"set-advertising-identifier\" repeat=\"6\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"c-12\"\n    }}>{`C#`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`public static void SetAdvertisingIdentifier(string adId)\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`adId`}</em>{` `}<em parentName=\"li\">{`(String)`}</em>{` provides developers with a simple, standard system to continue to track the Ads through their apps.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`ACPCore.SetAdvertisingIdentifier(\"ADVTID\");\n`}</code></pre>\n    <Variant platform=\"xamarin\" api=\"set-advertising-identifier\" repeat=\"9\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"c-13\"\n    }}>{`C#`}</h4>\n    <p><strong parentName=\"p\">{`iOS syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`public static void SetAdvertisingIdentifier (string adId);\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`adId`}</em>{` `}<em parentName=\"li\">{`(String)`}</em>{` provides developers with a simple, standard system to continue to track the Ads through their apps.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Android syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`public unsafe static void SetAdvertisingIdentifier (string advertisingIdentifier);\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`advertisingIdentifier`}</em>{` `}<em parentName=\"li\">{`(String)`}</em>{` provides developers with a simple, standard system to continue to track the Ads through their apps.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`ACPCore.SetAdvertisingIdentifier(\"ADVTID\");\n`}</code></pre>\n    <Variant platform=\"android\" api=\"set-push-identifier\" repeat=\"6\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-7\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public static void setPushIdentifier(final String pushIdentifier);\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`pushIdentifier`}</em>{`  is a string that contains the device token for push notifications.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`//Retrieve the token from either GCM or FCM, and pass it to the SDK\nMobileCore.setPushIdentifier(token);\n`}</code></pre>\n    <Variant platform=\"ios-aep\" api=\"set-push-identifier\" repeat=\"11\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift-14\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`@objc(setPushIdentifier:)\npublic static func setPushIdentifier(_ deviceToken: Data?)\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`deviceToken`}</em>{`  is a string that contains the device token for push notifications.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`// Set the deviceToken that the APNs has assigned to the device\nMobileCore.setPushIdentifier(deviceToken)\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-14\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`+ (void) setPushIdentifier: (NSString * _Nullable deviceToken);\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`// Set the deviceToken that the APNS has assigned to the device\n[AEPMobileCore setPushIdentifier:deviceToken];\n`}</code></pre>\n    <Variant platform=\"ios-acp\" api=\"set-push-identifier\" repeat=\"11\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift-15\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`static func setPushIdentifier(deviceToken: NSData?)\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`deviceToken`}</em>{`  is a string that contains the device token for push notifications.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`// Set the deviceToken that the APNs has assigned to the device\nACPCore.setPushIdentifier(deviceToken)\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-15\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`+ (void) setPushIdentifier: (nullable NSData*) deviceToken;\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`// Set the deviceToken that the APNS has assigned to the device\n[ACPCore setPushIdentifier:deviceToken];\n`}</code></pre>\n    <Variant platform=\"react-native\" api=\"set-push-identifier\" repeat=\"6\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"javascript-7\"\n    }}>{`JavaScript`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`ACPCore.setPushIdentifier(pushIdentifier);\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`pushIdentifier`}</em>{` is a string that contains the device token for push notifications.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`ACPCore.setPushIdentifier(\"pushID\");\n`}</code></pre>\n    <Variant platform=\"android\" api=\"sync-identifier\" repeat=\"6\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-8\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public static void syncIdentifier(final String identifierType,\n                                  final String identifier,\n                                  final VisitorID.AuthenticationState authenticationState);\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`identifierType (String)`}</em>{` contains the `}<inlineCode parentName=\"li\">{`identifier type`}</inlineCode>{`, and this parameter should not be null or empty. The allowed characters are `}{`[A-Za-z0-9_.]`}</li>\n      <li parentName=\"ul\"><em parentName=\"li\">{`identifier (String)`}</em>{` contains the `}<inlineCode parentName=\"li\">{`identifier value`}</inlineCode>{`, and this parameter should not be null or empty.`}</li>\n      <li parentName=\"ul\"><em parentName=\"li\">{`authenticationState (AuthenticationState)`}</em>{` indicates the authentication state of the user and contains one of the `}<a parentName=\"li\" {...{\n          \"href\": \"#public-classes\"\n        }}>{`VisitorID.AuthenticationState`}</a>{` values.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`Identity.syncIdentifier(\"idType\",\n                        \"idValue\",\n                        VisitorID.AuthenticationState.AUTHENTICATED);\n`}</code></pre>\n    <Variant platform=\"ios-aep\" api=\"sync-identifier\" repeat=\"11\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift-16\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`@objc(syncIdentifierWithType:identifier:authenticationState:)\nstatic func syncIdentifier(identifierType: String, identifier: String, authenticationState: MobileVisitorAuthenticationState)\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`The `}<em parentName=\"li\">{`identifierType (String)`}</em>{` contains the `}<inlineCode parentName=\"li\">{`identifier type`}</inlineCode>{`, and this parameter should not be null or empty. The allowed characters are `}{`[A-Za-z0-9_.]`}</li>\n      <li parentName=\"ul\">{`The `}<em parentName=\"li\">{`identifier (String)`}</em>{` contains the `}<inlineCode parentName=\"li\">{`identifier`}</inlineCode>{` value, and this parameter should not be null or empty. If either the `}<inlineCode parentName=\"li\">{`identifierType`}</inlineCode>{` or `}<inlineCode parentName=\"li\">{`identifier`}</inlineCode>{` contains a null or an empty string, the identifier is ignored by the Identity extension.`}</li>\n      <li parentName=\"ul\">{`The `}<em parentName=\"li\">{`authenticationState (MobileVisitorAuthenticationState)`}</em>{` value indicates the authentication state for the user and contains one of the `}<a parentName=\"li\" {...{\n          \"href\": \"#public-classes\"\n        }}>{`MobileVisitorAuthenticationState`}</a>{` values.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`Identity.syncIdentifier(identifierType: \"idType\",\n                            identifier: \"idValue\",\n                        authentication: .unknown)\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-16\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`+ (void) syncIdentifierWithType: (NSString * _Nonnull identifierType)\n                                         identifier: (NSString * _Nonnull identifier)\n                                 authentication: (enum AEPAuthenticationState authenticationState);\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`[AEPMobileIdentity syncIdentifierWithType:@\"idType\"\n                               identifier:@\"idValue\"\n                      authenticationState:AEPMobileVisitorAuthStateUnknown];\n`}</code></pre>\n    <Variant platform=\"ios-acp\" api=\"sync-identifier\" repeat=\"11\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift-17\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`static func syncIdentifier(_ identifierType: String, identifier: String, authentication authenticationState: ACPMobileVisitorAuthenticationState)\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`The `}<em parentName=\"li\">{`identifierType (String)`}</em>{` contains the `}<inlineCode parentName=\"li\">{`identifier type`}</inlineCode>{`, and this parameter should not be null or empty. The allowed characters are `}{`[A-Za-z0-9_.]`}</li>\n      <li parentName=\"ul\">{`The `}<em parentName=\"li\">{`identifier (String)`}</em>{` contains the `}<inlineCode parentName=\"li\">{`identifier`}</inlineCode>{` value, and this parameter should not be null or empty. If either the `}<inlineCode parentName=\"li\">{`identifier type`}</inlineCode>{` or `}<inlineCode parentName=\"li\">{`identifier`}</inlineCode>{` contains a null or an empty string, the identifier is ignored by the Identity extension.`}</li>\n      <li parentName=\"ul\">{`The `}<em parentName=\"li\">{`authenticationState (ACPMobileVisitorAuthenticationState)`}</em>{` value indicates the authentication state for the user and contains one of the `}<a parentName=\"li\" {...{\n          \"href\": \"#public-classes\"\n        }}>{`ACPMobileVisitorAuthenticationState`}</a>{` values.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`ACPIdentity.syncIdentifier(\"idType\", identifier: \"idValue\", authentication: ACPMobileVisitorAuthenticationState.unknown)\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-17\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`+ (void) syncIdentifier: (nonnull NSString*) identifierType             \n             identifier: (nonnull NSString*) identifier\n         authentication: (ADBMobileVisitorAuthenticationState) authenticationState;\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`[ACPIdentity syncIdentifier:@\"idType\" identifier:@\"idValue\" authentication:ACPMobileVisitorAuthenticationStateUnknown];\n`}</code></pre>\n    <Variant platform=\"react-native\" api=\"sync-identifier\" repeat=\"6\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"javascript-8\"\n    }}>{`JavaScript`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`syncIdentifier(identifierType: String, identifier: String, authenticationState: string);\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`The `}<em parentName=\"li\">{`identifierType (String)`}</em>{` contains the `}<inlineCode parentName=\"li\">{`identifier type`}</inlineCode>{`, and this parameter should not be null or empty. The allowed characters are `}{`[A-Za-z0-9_.]`}</li>\n      <li parentName=\"ul\">{`The `}<em parentName=\"li\">{`identifier (String)`}</em>{` contains the `}<inlineCode parentName=\"li\">{`identifier`}</inlineCode>{` value, and this parameter should not be null or empty. If either the `}<inlineCode parentName=\"li\">{`identifier type`}</inlineCode>{` or `}<inlineCode parentName=\"li\">{`identifier`}</inlineCode>{` contains a null or an empty string, the identifier is ignored by the Identity extension.`}</li>\n      <li parentName=\"ul\"><em parentName=\"li\">{`authenticationState (ACPMobileVisitorAuthenticationState)`}</em>{` value indicating authentication state for the user and contains one of the following `}<a parentName=\"li\" {...{\n          \"href\": \"#public-classes\"\n        }}>{`ACPMobileVisitorAuthenticationState`}</a>{` values.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import {ACPMobileVisitorAuthenticationState} from '@adobe/react-native-acpcore';\n\nACPIdentity.syncIdentifier(\"identifierType\", \"identifier\", ACPMobileVisitorAuthenticationState.AUTHENTICATED);\n`}</code></pre>\n    <Variant platform=\"flutter\" api=\"sync-identifier\" repeat=\"6\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"dart-7\"\n    }}>{`Dart`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-dart\"\n      }}>{`Future<void> syncIdentifier(String identifierType, String identifier, ACPMobileVisitorAuthenticationState authState);\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`The `}<em parentName=\"li\">{`identifierType (String)`}</em>{` contains the `}<inlineCode parentName=\"li\">{`identifier type`}</inlineCode>{`, and this parameter should not be null or empty. The allowed characters are `}{`[A-Za-z0-9_.]`}</li>\n      <li parentName=\"ul\">{`The `}<em parentName=\"li\">{`identifier (String)`}</em>{` contains the `}<inlineCode parentName=\"li\">{`identifier`}</inlineCode>{` value, and this parameter should not be null or empty. If either the `}<inlineCode parentName=\"li\">{`identifier type`}</inlineCode>{` or `}<inlineCode parentName=\"li\">{`identifier`}</inlineCode>{` contains a null or an empty string, the identifier is ignored by the Identity extension.`}</li>\n      <li parentName=\"ul\"><em parentName=\"li\">{`authState (ACPMobileVisitorAuthenticationState`}</em>{` value indicating authentication state for the user and contains one of the following `}<a parentName=\"li\" {...{\n          \"href\": \"#public-classes\"\n        }}>{`ACPMobileVisitorAuthenticationState`}</a>{` values.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-dart\"\n      }}>{`import 'package:flutter_acpcore/src/acpmobile_visitor_id.dart';\n\nFlutterACPIdentity.syncIdentifier(\"identifierType\", \"identifier\", ACPMobileVisitorAuthenticationState.AUTHENTICATED);\n`}</code></pre>\n    <Variant platform=\"cordova\" api=\"sync-identifier\" repeat=\"6\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"cordova-7\"\n    }}>{`Cordova`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`ACPIdentity.syncIdentifier = function(identifierType, identifier, authState, success, fail);\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`The `}<em parentName=\"li\">{`identifierType (String)`}</em>{` contains the `}<inlineCode parentName=\"li\">{`identifier type`}</inlineCode>{`, and this parameter should not be null or empty. The allowed characters are `}{`[A-Za-z0-9_.]`}</li>\n      <li parentName=\"ul\">{`The `}<em parentName=\"li\">{`identifier (String)`}</em>{` contains the `}<inlineCode parentName=\"li\">{`identifier`}</inlineCode>{` value, and this parameter should not be null or empty. If either the `}<inlineCode parentName=\"li\">{`identifier type`}</inlineCode>{` or `}<inlineCode parentName=\"li\">{`identifier`}</inlineCode>{` contains a null or an empty string, the identifier is ignored by the Identity extension.`}</li>\n      <li parentName=\"ul\"><em parentName=\"li\">{`authState (ACPMobileVisitorAuthenticationState)`}</em>{` value indicating authentication state for the user and contains one of the following `}<a parentName=\"li\" {...{\n          \"href\": \"#public-classes\"\n        }}>{`ACPMobileVisitorAuthenticationState`}</a>{` values.`}</li>\n      <li parentName=\"ul\"><em parentName=\"li\">{`success`}</em>{` is a callback containing the visitor id type, value, and authentication state if the `}<inlineCode parentName=\"li\">{`syncIdentifier`}</inlineCode>{` API executed without any errors.`}</li>\n      <li parentName=\"ul\"><em parentName=\"li\">{`fail`}</em>{` is a callback containing error information if the `}<inlineCode parentName=\"li\">{`syncIdentifier`}</inlineCode>{` API was executed with errors.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`ACPIdentity.syncIdentifier(\"id1\", \"value1\", ACPIdentity.ACPMobileVisitorAuthenticationStateUnknown, function (handleCallback) {\n  console.log(\"AdobeExperenceSDK: Identifier synced successfully : \" + handleCallback);\n}, function (handleError) {\n  console.log(\"AdobeExperenceSDK: Failed to sync identifier : \" + handleError);\n});\n`}</code></pre>\n    <Variant platform=\"unity\" api=\"sync-identifier\" repeat=\"6\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"c-14\"\n    }}>{`C#`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`public static void SyncIdentifier(string identifierType, string identifier, ACPAuthenticationState authState)\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`The `}<em parentName=\"li\">{`identifierType (String)`}</em>{` contains the `}<inlineCode parentName=\"li\">{`identifier type`}</inlineCode>{`, and this parameter should not be null or empty. The allowed characters are `}{`[A-Za-z0-9_.]`}</li>\n      <li parentName=\"ul\">{`The `}<em parentName=\"li\">{`identifier (String)`}</em>{` contains the `}<inlineCode parentName=\"li\">{`identifier`}</inlineCode>{` value, and this parameter should not be null or empty. If either the `}<inlineCode parentName=\"li\">{`identifier type`}</inlineCode>{` or `}<inlineCode parentName=\"li\">{`identifier`}</inlineCode>{` contains a null or an empty string, the identifier is ignored by the Identity extension.`}</li>\n      <li parentName=\"ul\"><em parentName=\"li\">{`authState (ACPAuthenticationState)`}</em>{` value indicating authentication state for the user and contains one of the following `}<a parentName=\"li\" {...{\n          \"href\": \"#public-classes\"\n        }}>{`ACPAuthenticationState`}</a>{` values.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`ACPIdentity.SyncIdentifier(\"idType1\", \"idValue1\", ACPIdentity.ACPAuthenticationState.AUTHENTICATED);\n`}</code></pre>\n    <Variant platform=\"xamarin\" api=\"sync-identifier\" repeat=\"11\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"c-15\"\n    }}>{`C#`}</h4>\n    <p><strong parentName=\"p\">{`iOS syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`public static void SyncIdentifier (string identifierType, string identifier, ACPMobileVisitorAuthenticationState authenticationState);\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`The `}<em parentName=\"li\">{`identifierType (String)`}</em>{` contains the `}<inlineCode parentName=\"li\">{`identifier type`}</inlineCode>{`, and this parameter should not be null or empty. The allowed characters are `}{`[A-Za-z0-9_.]`}</li>\n      <li parentName=\"ul\">{`The `}<em parentName=\"li\">{`identifier (String)`}</em>{` contains the `}<inlineCode parentName=\"li\">{`identifier`}</inlineCode>{` value, and this parameter should not be null or empty. If either the `}<inlineCode parentName=\"li\">{`identifier type`}</inlineCode>{` or `}<inlineCode parentName=\"li\">{`identifier`}</inlineCode>{` contains a null or an empty string, the identifier is ignored by the Identity extension.`}</li>\n      <li parentName=\"ul\"><em parentName=\"li\">{`authenticationState (ACPMobileVisitorAuthenticationState`}</em>{` value indicating authentication state for the user and contains one of the following `}<a parentName=\"li\" {...{\n          \"href\": \"#public-classes\"\n        }}>{`ACPMobileVisitorAuthenticationState`}</a>{` values.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Android syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`public unsafe static void SyncIdentifier (string identifierType, string identifier, VisitorID.AuthenticationState authenticationState);\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`The `}<em parentName=\"li\">{`identifierType (String)`}</em>{` contains the `}<inlineCode parentName=\"li\">{`identifier type`}</inlineCode>{`, and this parameter should not be null or empty. The allowed characters are `}{`[A-Za-z0-9_.]`}</li>\n      <li parentName=\"ul\">{`The `}<em parentName=\"li\">{`identifier (String)`}</em>{` contains the `}<inlineCode parentName=\"li\">{`identifier`}</inlineCode>{` value, and this parameter should not be null or empty. If either the `}<inlineCode parentName=\"li\">{`identifier type`}</inlineCode>{` or `}<inlineCode parentName=\"li\">{`identifier`}</inlineCode>{` contains a null or an empty string, the identifier is ignored by the Identity extension.`}</li>\n      <li parentName=\"ul\"><em parentName=\"li\">{`authenticationState (AuthenticationState)`}</em>{` value indicating authentication state for the user and contains one of the following `}<a parentName=\"li\" {...{\n          \"href\": \"#public-classes\"\n        }}>{`VisitorID.AuthenticationState`}</a>{` values.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`iOS example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`ACPIdentity.SyncIdentifier(\"idType1\", \"idValue1\", ACPMobileVisitorAuthenticationState.Authenticated);\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Android example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`ACPIdentity.SyncIdentifier(\"idType1\", \"idValue1\", VisitorID.AuthenticationState.Authenticated);\n`}</code></pre>\n    <Variant platform=\"android\" api=\"sync-identifiers\" repeat=\"6\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-9\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public static void syncIdentifiers(final Map<String, String> identifiers);\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`identifiers`}</em>{` is a map that contains the identifiers with the Identifier type as the key, and the string identifier as the value. In each identifier pair, if the `}<inlineCode parentName=\"li\">{`identifier type`}</inlineCode>{` contains a null or an empty string, the identifier is ignored by the Identity extension.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`Map<String, String> identifiers = new HashMap<String, String>();\nidentifiers.put(\"idType1\", \"idValue1\");\nidentifiers.put(\"idType2\", \"idValue2\");\nidentifiers.put(\"idType3\", \"idValue3\");\nIdentity.syncIdentifiers(identifiers);\n`}</code></pre>\n    <Variant platform=\"ios-aep\" api=\"sync-identifiers\" repeat=\"11\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift-18\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`@objc(syncIdentifiers:)\nstatic func syncIdentifiers(identifiers: [String: String]?)\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`The `}<em parentName=\"li\">{`identifiers`}</em>{` dictionary contains identifier type as the key and identifier as the value, both identifier type and identifier should be non empty and non nil values.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`let ids : [String: String] = [\"idType1\":\"idValue1\",\n                              \"idType2\":\"idValue2\",\n                              \"idType3\":\"idValue3\"];\nIdentity.syncIdentifiers(identifiers: ids)\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-18\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`+ (void) syncIdentifiers: (NSDictionary<NSString *, NSString *> * _Nullable identifiers);\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`NSDictionary *ids = @{@\"idType1\":@\"idValue1\",\n                      @\"idType2\":@\"idValue2\",\n                      @\"idType3\":@\"idValue3\"};\n[AEPMobileIdentity syncIdentifiers:ids];\n`}</code></pre>\n    <Variant platform=\"ios-acp\" api=\"sync-identifiers\" repeat=\"11\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift-19\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`static func syncIdentifiers(_ identifiers: [AnyHashable : Any]?)\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`The `}<em parentName=\"li\">{`identifiers`}</em>{` dictionary contains identifiers, and each identifier contains an `}<inlineCode parentName=\"li\">{`identifier type`}</inlineCode>{` as the key and an `}<inlineCode parentName=\"li\">{`identifier`}</inlineCode>{` as the value. If any of the identifier pairs contains an empty or null value as the `}<inlineCode parentName=\"li\">{`identifier type`}</inlineCode>{`, then it will be ignored.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`let identifiers : [String: String] = [\"idType1\":\"idValue1\",\n                                      \"idType2\":\"idValue2\",\n                                      \"idType3\":\"idValue3\"];\nACPIdentity.syncIdentifiers(identifiers)\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-19\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`+ (void) syncIdentifiers: (nullable NSDictionary*) identifiers;\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`NSDictionary *ids = @{@\"idType1\":@\"idValue1\",\n                      @\"idType2\":@\"idValue2\",\n                      @\"idType3\":@\"idValue3\"};\n[ACPIdentity syncIdentifiers:ids];\n`}</code></pre>\n    <Variant platform=\"react-native\" api=\"sync-identifiers\" repeat=\"6\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"javascript-9\"\n    }}>{`JavaScript`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`syncIdentifiers(identifiers?: {string: string});\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`The `}<em parentName=\"li\">{`identifiers`}</em>{` dictionary contains identifiers, and each identifier contains an `}<inlineCode parentName=\"li\">{`identifier type`}</inlineCode>{` as the key and an `}<inlineCode parentName=\"li\">{`identifier`}</inlineCode>{` as the value. If any of the identifier pairs contains an empty or null value as the `}<inlineCode parentName=\"li\">{`identifier type`}</inlineCode>{`, then it will be ignored.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`ACPIdentity.syncIdentifiers({\"id1\": \"identifier1\"});\n`}</code></pre>\n    <Variant platform=\"flutter\" api=\"sync-identifiers\" repeat=\"6\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"dart-8\"\n    }}>{`Dart`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-dart\"\n      }}>{`Future<void> syncIdentifiers (Map<String, String> identifiers);\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`The `}<em parentName=\"li\">{`identifiers`}</em>{` dictionary contains identifiers, and each identifier contains an `}<inlineCode parentName=\"li\">{`identifier type`}</inlineCode>{` as the key and an `}<inlineCode parentName=\"li\">{`identifier`}</inlineCode>{` as the value. If any of the identifier pairs contains an empty or null value as the `}<inlineCode parentName=\"li\">{`identifier type`}</inlineCode>{`, then it will be ignored.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`FlutterACPIdentity.syncIdentifiers({\"idType1\":\"idValue1\",\n                                    \"idType2\":\"idValue2\",\n                                    \"idType3\":\"idValue3\"});\n`}</code></pre>\n    <Variant platform=\"cordova\" api=\"sync-identifiers\" repeat=\"6\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"cordova-8\"\n    }}>{`Cordova`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`ACPIdentity.syncIdentifiers = function(identifiers, success, fail);\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`The `}<em parentName=\"li\">{`identifiers`}</em>{` dictionary contains identifiers, and each identifier contains an `}<inlineCode parentName=\"li\">{`identifier type`}</inlineCode>{` as the key and an `}<inlineCode parentName=\"li\">{`identifier`}</inlineCode>{` as the value. If any of the identifier pairs contains an empty or null value as the `}<inlineCode parentName=\"li\">{`identifier type`}</inlineCode>{`, then it will be ignored.`}</li>\n      <li parentName=\"ul\"><em parentName=\"li\">{`success`}</em>{` is a callback containing the synced identifiers if the `}<inlineCode parentName=\"li\">{`syncIdentifiers`}</inlineCode>{` API executed without any errors.`}</li>\n      <li parentName=\"ul\"><em parentName=\"li\">{`fail`}</em>{` is a callback containing error information if the `}<inlineCode parentName=\"li\">{`syncIdentifiers`}</inlineCode>{` API was executed with errors.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`ACPIdentity.syncIdentifiers({\"idType1\":\"idValue1\", \"idType2\":\"idValue2\", \"idType3\":\"idValue3\"}, function (handleCallback) {\n  console.log(\"AdobeExperienceSDK: \" + handleCallback)\n}, function (handleError) {\n  console.log(\"AdobeExperenceSDK: Failed to sync identifiers : \" + handleError)\n});\n`}</code></pre>\n    <Variant platform=\"unity\" api=\"sync-identifiers\" repeat=\"6\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"c-16\"\n    }}>{`C#`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`public static void SyncIdentifiers(Dictionary<string, string> identifiers)\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`The `}<em parentName=\"li\">{`identifiers`}</em>{` dictionary contains identifiers, and each identifier contains an `}<inlineCode parentName=\"li\">{`identifier type`}</inlineCode>{` as the key and an `}<inlineCode parentName=\"li\">{`identifier`}</inlineCode>{` as the value. If any of the identifier pairs contains an empty or null value as the `}<inlineCode parentName=\"li\">{`identifier type`}</inlineCode>{`, then it will be ignored.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`Dictionary<string, string> ids = new Dictionary<string, string>();\nids.Add(\"idsType1\", \"idValue1\");\nids.Add(\"idsType2\", \"idValue2\");\nids.Add(\"idsType3\", \"idValue3\");\nACPIdentity.SyncIdentifiers(ids);\n`}</code></pre>\n    <Variant platform=\"xamarin\" api=\"sync-identifiers\" repeat=\"11\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"c-17\"\n    }}>{`C#`}</h4>\n    <p><strong parentName=\"p\">{`iOS syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`public static void SyncIdentifiers (NSDictionary identifiers);\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`The `}<em parentName=\"li\">{`identifiers`}</em>{` dictionary contains identifiers, and each identifier contains an `}<inlineCode parentName=\"li\">{`identifier type`}</inlineCode>{` as the key and an `}<inlineCode parentName=\"li\">{`identifier`}</inlineCode>{` as the value. If any of the identifier pairs contains an empty or null value as the `}<inlineCode parentName=\"li\">{`identifier type`}</inlineCode>{`, then it will be ignored.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Android syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`public unsafe static void SyncIdentifiers (IDictionary<string, string> identifiers);\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`The `}<em parentName=\"li\">{`identifiers`}</em>{` dictionary contains identifiers, and each identifier contains an `}<inlineCode parentName=\"li\">{`identifier type`}</inlineCode>{` as the key and an `}<inlineCode parentName=\"li\">{`identifier`}</inlineCode>{` as the value. If any of the identifier pairs contains an empty or null value as the `}<inlineCode parentName=\"li\">{`identifier type`}</inlineCode>{`, then it will be ignored.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`iOS example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`var ids = new NSMutableDictionary<NSString, NSObject>\n{\n  [\"idsType1\"] = new NSString(\"idValue1\"),\n  [\"idsType2\"] = new NSString(\"idValue2\"),\n  [\"idsType3\"] = new NSString(\"idValue3\")\n};\nACPIdentity.SyncIdentifiers(ids);\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Android example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`var ids = new Dictionary<string, string>();\nids.Add(\"idsType1\", \"idValue1\");\nids.Add(\"idsType2\", \"idValue2\");\nids.Add(\"idsType3\", \"idValue3\");\nACPIdentity.SyncIdentifiers(ids);\n`}</code></pre>\n    <Variant platform=\"android\" api=\"sync-identifiers-overloaded\" repeat=\"6\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-10\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public static void syncIdentifiers(final Map<String, String> identifiers, final VisitorID.AuthenticationState authState)\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`identifiers`}</em>{` is a map that contains IDs with the identifier type as the key, and the string identifier as the value.`}</li>\n      <li parentName=\"ul\"><em parentName=\"li\">{`authState`}</em>{` indicates the authentication state for the user, which contains one of the following `}<a parentName=\"li\" {...{\n          \"href\": \"#public-classes\"\n        }}>{`VisitorID.AuthenticationState`}</a>{` values.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`Map<String, String> identifiers = new HashMap<String, String>();\nidentifiers.put(\"idType1\", \"idValue1\");\nidentifiers.put(\"idType2\", \"idValue2\");\nidentifiers.put(\"idType3\", \"idValue3\");\nIdentity.syncIdentifiers(identifiers, VisitorID.AuthenticationState.AUTHENTICATED);\n`}</code></pre>\n    <Variant platform=\"ios-aep\" api=\"sync-identifiers-overloaded\" repeat=\"11\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift-20\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`@objc(syncIdentifiers:authenticationState:)\nstatic func syncIdentifiers(identifiers: [String: String]?, authenticationState: MobileVisitorAuthenticationState)\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`The `}<em parentName=\"li\">{`identifiers`}</em>{` dictionary contains identifier type as the key and identifier as the value, both identifier type and identifier should be non empty and non nil values.`}</li>\n      <li parentName=\"ul\">{`The `}<em parentName=\"li\">{`authenticationState (MobileVisitorAuthenticationState)`}</em>{` indicates the authentication state of the user and contains one of the `}<a parentName=\"li\" {...{\n          \"href\": \"#public-classes\"\n        }}>{`MobileVisitorAuthenticationState`}</a>{` values.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`let ids : [String: String] = [\"idType1\":\"idValue1\",\n                              \"idType2\":\"idValue2\",\n                              \"idType3\":\"idValue3\"];\nIdentity.syncIdentifiers(identifiers: ids, authenticationState: .authenticated)\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-20\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`+ (void) syncIdentifiers: (NSDictionary<NSString *, NSString *> * _Nullable identifiers)\n                  authentication: (enum AEPAuthenticationState authenticationState);\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`NSDictionary *ids = @{@\"idType1\":@\"idValue1\",\n                      @\"idType2\":@\"idValue2\",\n                      @\"idType3\":@\"idValue3\"};\n[AEPMobileIdentity syncIdentifiers:ids authenticationState:AEPMobileVisitorAuthStateAuthenticated];\n`}</code></pre>\n    <Variant platform=\"ios-acp\" api=\"sync-identifiers-overloaded\" repeat=\"11\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift-21\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`static func syncIdentifiers(_ identifiers: [AnyHashable : Any]?, authentication authenticationState: ACPMobileVisitorAuthenticationState)\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`The `}<em parentName=\"li\">{`identifiers`}</em>{` dictionary contains identifiers, and each identifier contains an `}<inlineCode parentName=\"li\">{`identifier type`}</inlineCode>{` as the key and an `}<inlineCode parentName=\"li\">{`identifier`}</inlineCode>{` as the value. If any of the identifier pairs contains an empty or null value as the `}<inlineCode parentName=\"li\">{`identifier type`}</inlineCode>{`, then it will be ignored.`}</li>\n      <li parentName=\"ul\">{`The `}<em parentName=\"li\">{`authenticationState (ACPMobileVisitorAuthenticationState)`}</em>{` indicates the authentication state of the user and contains one of the `}<a parentName=\"li\" {...{\n          \"href\": \"#public-classes\"\n        }}>{`ACPMobileVisitorAuthenticationState`}</a>{` values.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`let ids : [String: String] = [\"idType1\":\"idValue1\",\n                              \"idType2\":\"idValue2\",\n                              \"idType3\":\"idValue3\"];\nACPIdentity.syncIdentifiers(identifiers, authentication:\nACPMobileVisitorAuthenticationState.authenticated)\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-21\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`+ (void) syncIdentifiers: (nullable NSDictionary*) identifiers authentication: (ACPMobileVisitorAuthenticationState) authenticationState;\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`NSDictionary *ids = @{@\"idType1\":@\"idValue1\",\n                      @\"idType2\":@\"idValue2\",\n                      @\"idType3\":@\"idValue3\"};\n[ACPIdentity syncIdentifiers:ids authentication:ACPMobileVisitorAuthenticationStateAuthenticated];\n`}</code></pre>\n    <Variant platform=\"react-native\" api=\"sync-identifiers-overloaded\" repeat=\"6\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"javascript-10\"\n    }}>{`JavaScript`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`syncIdentifiersWithAuthState(identifiers?: {string: string}, authenticationState: string);\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`The `}<em parentName=\"li\">{`identifiers`}</em>{` dictionary contains identifiers, and each identifier contains an `}<inlineCode parentName=\"li\">{`identifier type`}</inlineCode>{` as the key and an `}<inlineCode parentName=\"li\">{`identifier`}</inlineCode>{` as the value. If any of the identifier pairs contains an empty or null value as the `}<inlineCode parentName=\"li\">{`identifier type`}</inlineCode>{`, then it will be ignored.`}</li>\n      <li parentName=\"ul\">{`The `}<em parentName=\"li\">{`authenticationState (ACPMobileVisitorAuthenticationState)`}</em>{` indicates the authentication state of the user and contains one of the `}<a parentName=\"li\" {...{\n          \"href\": \"#public-classes\"\n        }}>{`ACPMobileVisitorAuthenticationState`}</a>{` values.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import {ACPMobileVisitorAuthenticationState} from '@adobe/react-native-acpcore';\n\nACPIdentity.syncIdentifiersWithAuthState({\"id1\": \"identifier1\"}, ACPMobileVisitorAuthenticationState.UNKNOWN);\n`}</code></pre>\n    <Variant platform=\"flutter\" api=\"sync-identifiers-overloaded\" repeat=\"6\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"dart-9\"\n    }}>{`Dart`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-dart\"\n      }}>{`Future<void> syncIdentifiersWithAuthState (Map<String, String> identifiers, ACPMobileVisitorAuthenticationState authState);\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`The `}<em parentName=\"li\">{`identifiers`}</em>{` dictionary contains identifiers, and each identifier contains an `}<inlineCode parentName=\"li\">{`identifier type`}</inlineCode>{` as the key and an `}<inlineCode parentName=\"li\">{`identifier`}</inlineCode>{` as the value. If any of the identifier pairs contains an empty or null value as the `}<inlineCode parentName=\"li\">{`identifier type`}</inlineCode>{`, then it will be ignored.`}</li>\n      <li parentName=\"ul\">{`The `}<em parentName=\"li\">{`authState (ACPMobileVisitorAuthenticationState)`}</em>{` indicates the authentication state of the user and contains one of the `}<a parentName=\"li\" {...{\n          \"href\": \"#public-classes\"\n        }}>{`ACPMobileVisitorAuthenticationState`}</a>{` values.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-dart\"\n      }}>{`import 'package:flutter_acpcore/src/acpmobile_visitor_id.dart';\n\nFlutterACPIdentity.syncIdentifiersWithAuthState({\"idType1\":\"idValue1\", \"idType2\":\"idValue2\", \"idType3\":\"idValue3\"}, ACPMobileVisitorAuthenticationState.UNKNOWN);\n`}</code></pre>\n    <Variant platform=\"cordova\" api=\"sync-identifiers-overloaded\" repeat=\"6\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"cordova-9\"\n    }}>{`Cordova`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`ACPIdentity.syncIdentifiers = function(identifiers, authState, success, fail);\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`The `}<em parentName=\"li\">{`identifiers`}</em>{` dictionary contains identifiers, and each identifier contains an `}<inlineCode parentName=\"li\">{`identifier type`}</inlineCode>{` as the key and an `}<inlineCode parentName=\"li\">{`identifier`}</inlineCode>{` as the value. If any of the identifier pairs contains an empty or null value as the `}<inlineCode parentName=\"li\">{`identifier type`}</inlineCode>{`, then it will be ignored.`}</li>\n      <li parentName=\"ul\"><em parentName=\"li\">{`authState`}</em>{` value indicating authentication state for the identifiers to be synced and contains one of the `}<a parentName=\"li\" {...{\n          \"href\": \"#public-classes\"\n        }}>{`ACPMobileVisitorAuthenticationState`}</a>{` values.`}</li>\n      <li parentName=\"ul\"><em parentName=\"li\">{`success`}</em>{` is a callback containing the synced identifiers if the `}<inlineCode parentName=\"li\">{`syncIdentifiers`}</inlineCode>{` API executed without any errors.`}</li>\n      <li parentName=\"ul\"><em parentName=\"li\">{`fail`}</em>{` is a callback containing error information if the `}<inlineCode parentName=\"li\">{`syncIdentifiers`}</inlineCode>{` API was executed with errors.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`ACPIdentity.syncIdentifiers({\"idType1\":\"idValue1\", \"idType2\":\"idValue2\", \"idType3\":\"idValue3\"}, ACPIdentity.ACPMobileVisitorAuthenticationStateAuthenticated, function (handleCallback) {\n  console.log(\"AdobeExperienceSDK: \" + handleCallback)\n}, function (handleError) {\n  console.log(\"AdobeExperenceSDK: Failed to sync identifiers : \" + handleError)\n});\n`}</code></pre>\n    <Variant platform=\"unity\" api=\"sync-identifiers-overloaded\" repeat=\"6\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"c-18\"\n    }}>{`C#`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`public static void SyncIdentifiers(Dictionary<string, string> ids, ACPAuthenticationState authenticationState)\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`The `}<em parentName=\"li\">{`ids`}</em>{` dictionary contains identifiers, and each identifier contains an `}<inlineCode parentName=\"li\">{`identifier type`}</inlineCode>{` as the key and an `}<inlineCode parentName=\"li\">{`identifier`}</inlineCode>{` as the value. If any of the identifier pairs contains an empty or null value as the `}<inlineCode parentName=\"li\">{`identifier type`}</inlineCode>{`, then it will be ignored.`}</li>\n      <li parentName=\"ul\"><em parentName=\"li\">{`authenticationState`}</em>{` value indicating authentication state for the identifiers to be synced and contains one of the `}<a parentName=\"li\" {...{\n          \"href\": \"#public-classes\"\n        }}>{`ACPAuthenticationState`}</a>{` values.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`Dictionary<string, string> ids = new Dictionary<string, string>();\nids.Add(\"idsType1\", \"idValue1\");\nids.Add(\"idsType2\", \"idValue2\");\nids.Add(\"idsType3\", \"idValue3\");\nACPIdentity.SyncIdentifiers(ids, ACPIdentity.ACPAuthenticationState.AUTHENTICATED);\nACPIdentity.SyncIdentifiers(ids, ACPIdentity.ACPAuthenticationState.LOGGED_OUT);\nACPIdentity.SyncIdentifiers(ids, ACPIdentity.ACPAuthenticationState.UNKNOWN);\n`}</code></pre>\n    <Variant platform=\"xamarin\" api=\"sync-identifiers-overloaded\" repeat=\"11\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"c-19\"\n    }}>{`C#`}</h4>\n    <p><strong parentName=\"p\">{`iOS syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`public static void SyncIdentifiers (NSDictionary identifiers, ACPMobileVisitorAuthenticationState authenticationState);\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`The `}<em parentName=\"li\">{`identifiers`}</em>{` dictionary contains identifiers, and each identifier contains an `}<inlineCode parentName=\"li\">{`identifier type`}</inlineCode>{` as the key and an `}<inlineCode parentName=\"li\">{`identifier`}</inlineCode>{` as the value. If any of the identifier pairs contains an empty or null value as the `}<inlineCode parentName=\"li\">{`identifier type`}</inlineCode>{`, then it will be ignored.`}</li>\n      <li parentName=\"ul\"><em parentName=\"li\">{`authenticationState`}</em>{` value indicating authentication state for the user and contains one of the following `}<a parentName=\"li\" {...{\n          \"href\": \"#public-classes\"\n        }}>{`ACPMobileVisitorAuthenticationState`}</a>{` values.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Android syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`public unsafe static void SyncIdentifiers (IDictionary<string, string> identifiers, VisitorID.AuthenticationState authenticationState);\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`The `}<em parentName=\"li\">{`identifiers`}</em>{` dictionary contains identifiers, and each identifier contains an `}<inlineCode parentName=\"li\">{`identifier type`}</inlineCode>{` as the key and an `}<inlineCode parentName=\"li\">{`identifier`}</inlineCode>{` as the value. If any of the identifier pairs contains an empty or null value as the `}<inlineCode parentName=\"li\">{`identifier type`}</inlineCode>{`, then it will be ignored.`}</li>\n      <li parentName=\"ul\"><em parentName=\"li\">{`authenticationState`}</em>{` value indicating authentication state for the user and contains one of the following `}<a parentName=\"li\" {...{\n          \"href\": \"#public-classes\"\n        }}>{`VisitorID.AuthenticationState`}</a>{` values.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`iOS example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`var ids = new NSMutableDictionary<NSString, NSObject>\n{\n  [\"idsType1\"] = new NSString(\"idValue1\"),\n  [\"idsType2\"] = new NSString(\"idValue2\"),\n  [\"idsType3\"] = new NSString(\"idValue3\")\n};\nACPIdentity.SyncIdentifiers(ids, ACPMobileVisitorAuthenticationState.LoggedOut);\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Android example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`var ids = new Dictionary<string, string>();\nids.Add(\"idsType1\", \"idValue1\");\nids.Add(\"idsType2\", \"idValue2\");\nids.Add(\"idsType3\", \"idValue3\");\nACPIdentity.SyncIdentifiers(ids, VisitorID.AuthenticationState.LoggedOut);\n`}</code></pre>\n    <Variant platform=\"android\" api=\"public-classes\" repeat=\"6\" mdxType=\"Variant\" />\n    <p><strong parentName=\"p\">{`AuthenticationState`}</strong></p>\n    <p>{`This class is used to indicate the authentication state for the current `}<inlineCode parentName=\"p\">{`VisitorID`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public enum AuthenticationState {        \n       UNKNOWN,        \n       AUTHENTICATED,        \n       LOGGED_OUT;\n}\n`}</code></pre>\n    <p><strong parentName=\"p\">{`VisitorID`}</strong></p>\n    <p>{`This class is an identifier to be used with the Adobe Experience Cloud Identity Service.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class VisitorID {    \n     //Constructor    \n     public VisitorID(String idOrigin, String idType, String id, VisitorID.AuthenticationState authenticationState);\n\n     public VisitorID.AuthenticationState getAuthenticationState();   \n\n     public final String getId();  \n\n     public final String getIdOrigin();  \n\n     public final String getIdType();\n\n}\n`}</code></pre>\n    <Variant platform=\"ios-aep\" api=\"public-classes\" repeat=\"5\" mdxType=\"Variant\" />\n    <p><strong parentName=\"p\">{`MobileVisitorAuthenticationState`}</strong></p>\n    <p>{`This is used to indicate the authentication state for the current `}<inlineCode parentName=\"p\">{`Identifiable`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`@objc(AEPMobileVisitorAuthState) public enum MobileVisitorAuthenticationState: Int, Codable {\n    case unknown = 0\n    case authenticated = 1\n    case loggedOut = 2\n}\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Identifiable`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`@objc(AEPIdentifiable) public protocol Identifiable {\n    /// Origin of the identifier\n    var origin: String? { get }\n\n    /// Type of the identifier\n    var type: String? { get }\n\n    /// The identifier\n    var identifier: String? { get }\n\n    /// The authentication state for the identifier\n    var authenticationState: MobileVisitorAuthenticationState { get }\n}\n`}</code></pre>\n    <Variant platform=\"ios-acp\" api=\"public-classes\" repeat=\"6\" mdxType=\"Variant\" />\n    <p><strong parentName=\"p\">{`ACPMobileVisitorAuthenticationState`}</strong></p>\n    <p>{`This is used to indicate the authentication state for the current `}<inlineCode parentName=\"p\">{`VisitorID`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`typedef NS_ENUM(NSUInteger,\n    ACPMobileVisitorAuthenticationState) {    \n    ACPMobileVisitorAuthenticationStateUnknown          = 0,    \n    ACPMobileVisitorAuthenticationStateAuthenticated    = 1,    \n    ACPMobileVisitorAuthenticationStateLoggedOut        = 2  };\n`}</code></pre>\n    <p><strong parentName=\"p\">{`ACPMobileVisitorId`}</strong></p>\n    <p>{`This is an identifier to be used with the Adobe Experience Cloud Identity Service and it contains the origin, the identifier type, the identifier, and the authentication state of the visitor ID.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`@interface ACPMobileVisitorId : NSObject\n\n@property(nonatomic, strong, nullable) NSString* idOrigin;\n@property(nonatomic, strong, nullable) NSString* idType;\n@property(nonatomic, strong, nullable) NSString* identifier;\n@property(nonatomic, readwrite) ACPMobileVisitorAuthenticationState authenticationState;\n\n@end\n`}</code></pre>\n    <Variant platform=\"react-native\" api=\"public-classes\" repeat=\"7\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"javascript-11\"\n    }}>{`JavaScript`}</h4>\n    <p><strong parentName=\"p\">{`ACPVisitorID`}</strong></p>\n    <p>{`This is an identifier to be used with the Adobe Experience Cloud Identity Service and it contains the origin, the identifier type, the identifier, and the authentication state of the visitor ID.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import {ACPVisitorID} from '@adobe/react-native-acpcore';\n\nvar visitorId = new ACPVisitorID(idOrigin?: string, idType: string, id?: string, authenticationState?: ACPMobileVisitorAuthenticationState);\n`}</code></pre>\n    <p><strong parentName=\"p\">{`ACPMobileVisitorAuthenticationState`}</strong></p>\n    <p>{`This is used to indicate the authentication state for the current `}<inlineCode parentName=\"p\">{`VisitorID`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import {ACPMobileVisitorAuthenticationState} from '@adobe/react-native-acpcore';\n\nvar state = ACPMobileVisitorAuthenticationState.AUTHENTICATED;\n//var state = ACPMobileVisitorAuthenticationState.LOGGED_OUT;\n//var state = ACPMobileVisitorAuthenticationState.UNKNOWN;\n`}</code></pre>\n    <Variant platform=\"flutter\" api=\"public-classes\" repeat=\"7\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"dart-10\"\n    }}>{`Dart`}</h4>\n    <p><strong parentName=\"p\">{`ACPVisitorID`}</strong></p>\n    <p>{`This is an identifier to be used with the Adobe Experience Cloud Identity Service and it contains the origin, the identifier type, the identifier, and the authentication state of the visitor ID.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-dart\"\n      }}>{`import 'package:flutter_acpcore/src/acpmobile_visitor_id.dart';\n\n\nclass ACPMobileVisitorId {\n  String get idOrigin;\n  String get idType;\n  String get identifier;\n  ACPMobileVisitorAuthenticationState get authenticationState;\n};\n`}</code></pre>\n    <p><strong parentName=\"p\">{`ACPMobileVisitorAuthenticationState`}</strong></p>\n    <p>{`This is used to indicate the authentication state for the current `}<inlineCode parentName=\"p\">{`VisitorID`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-dart\"\n      }}>{`import 'package:flutter_acpcore/src/acpmobile_visitor_id.dart';\n\nenum ACPMobileVisitorAuthenticationState {UNKNOWN, AUTHENTICATED, LOGGED_OUT};\n`}</code></pre>\n    <Variant platform=\"cordova\" api=\"public-classes\" repeat=\"4\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"cordova-10\"\n    }}>{`Cordova`}</h4>\n    <p><strong parentName=\"p\">{`ACPMobileVisitorAuthenticationState`}</strong></p>\n    <p>{`This is used to indicate the authentication state for the current `}<inlineCode parentName=\"p\">{`VisitorID`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`ACPIdentity.ACPMobileVisitorAuthenticationStateUnknown = 0;\nACPIdentity.ACPMobileVisitorAuthenticationStateAuthenticated = 1;\nACPIdentity.ACPMobileVisitorAuthenticationStateLoggedOut = 2;\n`}</code></pre>\n    <Variant platform=\"unity\" api=\"public-classes\" repeat=\"4\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"c-20\"\n    }}>{`C#`}</h4>\n    <p><strong parentName=\"p\">{`ACPAuthenticationState`}</strong></p>\n    <p>{`This is used to indicate the authentication state for the current `}<inlineCode parentName=\"p\">{`VisitorID`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`ACPIdentity.ACPAuthenticationState.UNKNOWN = 0;\nACPIdentity.ACPAuthenticationState.AUTHENTICATED = 1;\nACPIdentity.ACPAuthenticationState.LOGGED_OUT = 2;\n`}</code></pre>\n    <Variant platform=\"xamarin\" api=\"public-classes\" repeat=\"9\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"c-21\"\n    }}>{`C#`}</h4>\n    <p><strong parentName=\"p\">{`iOS`}</strong></p>\n    <p><strong parentName=\"p\">{`ACPMobileVisitorAuthenticationState`}</strong></p>\n    <p>{`This is used to indicate the authentication state for the current `}<inlineCode parentName=\"p\">{`ACPMobileVisitorId`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`ACPMobileVisitorAuthenticationState.Unknown = 0;\nACPMobileVisitorAuthenticationState.Authenticated = 1;\nACPMobileVisitorAuthenticationState.LoggedOut = 2;\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Android`}</strong></p>\n    <p><strong parentName=\"p\">{`VisitorID.AuthenticationState`}</strong></p>\n    <p>{`This is used to indicate the authentication state for the current `}<inlineCode parentName=\"p\">{`VisitorID`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`VisitorID.AuthenticationState.Unknown = 0;\nVisitorID.AuthenticationState.Authenticated = 1;\nVisitorID.AuthenticationState.LoggedOut = 2;\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","Variant","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","platform","api","repeat","parentName","isMDXComponent"],"sourceRoot":""}