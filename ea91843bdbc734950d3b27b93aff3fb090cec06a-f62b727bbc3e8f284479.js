"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[354],{79175:function(e,n,a){a.r(n),a.d(n,{_frontmatter:function(){return m},default:function(){return x}});var t,o=a(87462),r=a(63366),l=(a(15007),a(64983)),i=a(91515),s=["components"],m={},p=(t="Variant",function(e){return console.warn("Component "+t+" was not imported, exported, or provided by MDXProvider as global scope"),(0,l.mdx)("div",e)}),d={_frontmatter:m},c=i.Z;function x(e){var n=e.components,a=(0,r.Z)(e,s);return(0,l.mdx)(c,(0,o.Z)({},d,a,{components:n,mdxType:"MDXLayout"}),(0,l.mdx)(p,{platform:"android",api:"clear",repeat:"6",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"java"},"Java"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"Places.clear();\n")),(0,l.mdx)("h4",{id:"kotlin"},"Kotlin"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"Places.clear()\n")),(0,l.mdx)(p,{platform:"ios",api:"clear",repeat:"10",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"swift"},"Swift"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},"static func clear()\n")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},"Places.clear()\n")),(0,l.mdx)("h4",{id:"objective-c"},"Objective-C"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objc"},"+ (void) clear;\n")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objc"},"[AEPMobilePlaces clear];\n")),(0,l.mdx)(p,{platform:"android",api:"extension-version",repeat:"6",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"java-1"},"Java"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"String placesExtensionVersion = Places.extensionVersion();\n")),(0,l.mdx)("h4",{id:"kotlin-1"},"Kotlin"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"val placesExtensionVersion: String = Places.extensionVersion()\n")),(0,l.mdx)(p,{platform:"ios",api:"extension-version",repeat:"10",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"swift-1"},"Swift"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},"static var extensionVersion: String\n")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},"let placesVersion = Places.extensionVersion\n")),(0,l.mdx)("h4",{id:"objective-c-1"},"Objective-C"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objc"},"+ (nonnull NSString*) extensionVersion;\n")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objc"},"NSString *placesVersion = [AEPMobilePlaces extensionVersion];\n")),(0,l.mdx)(p,{platform:"android",api:"get-current-points-of-interest",repeat:"6",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"java-2"},"Java"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"Places.getCurrentPointsOfInterest(new AdobeCallback<List<PlacesPOI>>() {\n    @Override\n    public void call(List<PlacesPOI> pois) {\n        // use the obtained POIs that the device is within\n        processUserWithinPois(pois);\n    }\n});\n")),(0,l.mdx)("h4",{id:"kotlin-2"},"Kotlin"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"Places.getCurrentPointsOfInterest() { pois -> \n    // use the obtained POIs that the device is within\n    processUserWithinPois(pois)\n}\n")),(0,l.mdx)(p,{platform:"ios",api:"get-current-points-of-interest",repeat:"10",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"swift-2"},"Swift"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},"static func getCurrentPointsOfInterest(_ closure: @escaping ([PointOfInterest]) -> Void)\n")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},'Places.getCurrentPointsOfInterest() { currentPois in\n    print("currentPois: (currentPois)")\n}\n')),(0,l.mdx)("h4",{id:"objective-c-2"},"Objective-C"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objc"},"+ (void) getCurrentPointsOfInterest: ^(NSArray<AEPPlacesPoi*>* _Nonnull pois) closure;\n")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objc"},'[AEPMobilePlaces getCurrentPointsOfInterest:^(NSArray<AEPPlacesPoi *> *pois) {\n    NSLog(@"currentPois: %@", pois);\n}];\n')),(0,l.mdx)(p,{platform:"android",api:"get-last-known-location",repeat:"6",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"java-3"},"Java"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"Places.getLastKnownLocation(new AdobeCallback<Location>() {\n    @Override\n    public void call(Location lastLocation) {\n        // do something with the last known location\n        processLastKnownLocation(lastLocation);\n    }\n});\n")),(0,l.mdx)("h4",{id:"kotlin-3"},"Kotlin"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"Places.getLastKnownLocation() { lastLocation -> \n    // do something with the last known location\n    processLastKnownLocation(lastLocation)\n}\n")),(0,l.mdx)(p,{platform:"ios",api:"get-last-known-location",repeat:"10",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"swift-3"},"Swift"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},"static func getLastKnownLocation(_ closure: @escaping (CLLocation?) -> Void)\n")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},'Places.getLastKnownLocation() { location in\n    if let location = location {\n        print("location returned from closure: ((location.coordinate.latitude), (location.coordinate.longitude))")\n    }\n}\n')),(0,l.mdx)("h4",{id:"objective-c-3"},"Objective-C"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objc"},"+ (void) getLastKnownLocation: ^(CLLocation* _Nullable lastLocation) closure;\n")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objc"},'[AEPMobilePlaces getLastKnownLocation:^(CLLocation *location) {\n    if (location) {\n        NSLog(@"location returned from closure: (%f, %f)", location.coordinate.latitude, location.coordinate.longitude);\n    }    \n}];\n')),(0,l.mdx)(p,{platform:"android",api:"get-nearby-points-of-interest",repeat:"8",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"java-4"},"Java"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"public static void getNearbyPointsOfInterest(@NonNull final Location location,\n    final int limit,\n    @NonNull final AdobeCallback<List<PlacesPOI>> successCallback,\n    @NonNull final AdobeCallback<PlacesRequestError> errorCallback);\n")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"Places.getNearbyPointsOfInterest(currentLocation, 10,\n    new AdobeCallback<List<PlacesPOI>>() {\n        @Override\n        public void call(List<PlacesPOI> pois) {\n            // do required processing with the returned nearbyPoi array\n            startMonitoringPois(pois);\n        }\n    }, new AdobeCallback<PlacesRequestError>() {\n        @Override\n        public void call(PlacesRequestError placesRequestError) {\n            // look for the placesRequestError and handle the error accordingly\n            handleError(placesRequestError);\n        }\n    }\n);\n")),(0,l.mdx)("h4",{id:"kotlin-4"},"Kotlin"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"Places.getNearbyPointsOfInterest(currentLocation, 10, { pois -> \n    // do required processing with the returned nearbyPoi array\n    startMonitoringPois(pois);\n}, { error -> \n    // look for the placesRequestError and handle the error accordingly\n    handleError(placesRequestError);\n})\n")),(0,l.mdx)(p,{platform:"ios",api:"get-nearby-points-of-interest",repeat:"10",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"swift-4"},"Swift"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},"static func getNearbyPointsOfInterest(forLocation location: CLLocation,\n                                      withLimit limit: UInt,\n                                      closure: @escaping ([PointOfInterest], PlacesQueryResponseCode) -> Void)\n")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},'let location = CLLocation(latitude: 40.4350229, longitude: -111.8918356)\nPlaces.getNearbyPointsOfInterest(forLocation: location, withLimit: 10) { (nearbyPois, responseCode) in    \n    print("responseCode: (responseCode.rawValue) - nearbyPois: (nearbyPois)")\n}\n')),(0,l.mdx)("h4",{id:"objective-c-4"},"Objective-C"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objc"},"+ (void) getNearbyPointsOfInterest: (nonnull CLLocation*) currentLocation\n                             limit: (NSUInteger) limit\n                          callback: ^ (NSArray<AEPPlacesPoi*>* _Nonnull, AEPPlacesQueryResponseCode) closure;\n")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objc"},'CLLocation *location = [[CLLocation alloc] initWithLatitude:40.4350229 longitude:-111.8918356];\n\n[AEPMobilePlaces getNearbyPointsOfInterest:location\n                                     limit:10\n                                  callback:^(NSArray<AEPPlacesPoi *> *pois, AEPPlacesQueryResponseCode responseCode) {\n    NSLog(@"responseCode: %ld", (long)responseCode);\n    NSLog(@"nearbyPois: %@", pois);\n}];\n')),(0,l.mdx)(p,{platform:"android",api:"process-geofence",repeat:"8",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"java-5"},"Java"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"public static void processGeofence(final Geofence geofence, final int transitionType);\n")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},'public class GeofenceTransitionsIntentService extends IntentService {\n\n    public GeofenceTransitionsIntentService() {\n        super("GeofenceTransitionsIntentService");\n    }\n\n    protected void onHandleIntent(Intent intent) {\n        GeofencingEvent geofencingEvent = GeofencingEvent.fromIntent(intent);\n\n        List<Geofence> geofences = geofencingEvent.getTriggeringGeofences();\n\n        if (geofences.size() > 0) {\n            // Call the Places API to process information\n            Places.processGeofence(geofences.get(0), geofencingEvent.getGeofenceTransition());\n        }\n    }\n}\n')),(0,l.mdx)("h4",{id:"kotlin-5"},"Kotlin"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"fun onHandleIntent(intent: Intent) {\n    val geofencingEvent = GeofencingEvent.fromIntent(intent)\n\n    val geofences = geofencingEvent.getTriggeringGeofences()\n\n    if (!geofences.isEmpty()) {\n        Places.processGeofence(geofences.first(), geofencingEvent.getGeofenceTransition())\n    }\n}\n")),(0,l.mdx)(p,{platform:"android",api:"process-geofence-event",repeat:"8",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"java-6"},"Java"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"public static void processGeofenceEvent(@NonNull final GeofencingEvent geofencingEvent);\n")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},'public class GeofenceTransitionsIntentService extends IntentService {\n\n    public GeofenceTransitionsIntentService() {\n        super("GeofenceTransitionsIntentService");\n    }\n\n    protected void onHandleIntent(Intent intent) {\n        GeofencingEvent geofencingEvent = GeofencingEvent.fromIntent(intent);\n        // Call the Places API to process information\n        Places.processGeofenceEvent(geofencingEvent);\n    }\n}\n')),(0,l.mdx)("h4",{id:"kotlin-6"},"Kotlin"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"fun onHandleIntent(intent: Intent) {\n    val geofencingEvent = GeofencingEvent.fromIntent(intent)\n    // Call the Places API to process information\n    Places.processGeofenceEvent(geofencingEvent)\n}\n")),(0,l.mdx)(p,{platform:"ios",api:"process-region-event",repeat:"10",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"swift-5"},"Swift"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},"static func processRegionEvent(_ regionEvent: PlacesRegionEvent,\n                               forRegion region: CLRegion)\n")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},'let region = CLCircularRegion(center: CLLocationCoordinate2D(latitude: 40.3886845, longitude: -111.8284979),\n                              radius: 100,\n                              identifier: "877677e4-3004-46dd-a8b1-a609bd65a428")\n\nPlaces.processRegionEvent(.entry, forRegion: region)\n')),(0,l.mdx)("h4",{id:"objective-c-5"},"Objective-C"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objc"},"+ (void) processRegionEvent: (AEPRegionEventType) eventType\n                  forRegion: (nonnull CLRegion*) region;\n")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objc"},'CLCircularRegion *region = [[CLCircularRegion alloc] initWithCenter:CLLocationCoordinate2DMake(40.3886845, -111.8284979)\n                                                             radius:100\n                                                         identifier:@"877677e4-3004-46dd-a8b1-a609bd65a428"];\n\n[AEPMobilePlaces processRegionEvent:AEPPlacesRegionEventEntry forRegion:region];\n')),(0,l.mdx)(p,{platform:"android",api:"register-extension",repeat:"6",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"java-7"},"Java"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"Places.registerExtension();\n")),(0,l.mdx)("h4",{id:"kotlin-7"},"Kotlin"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"Places.registerExtension()\n")),(0,l.mdx)(p,{platform:"ios",api:"register-extension",repeat:"6",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"swift-6"},"Swift"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},"MobileCore.registerExtensions([Places.self])\n")),(0,l.mdx)("h4",{id:"objective-c-6"},"Objective-C"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objc"},"[AEPMobileCore registerExtensions:@[AEPMobilePlaces.class] completion:nil];\n")),(0,l.mdx)(p,{platform:"ios",api:"set-accuracy-authorization",repeat:"10",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"swift-7"},"Swift"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},"static func setAccuracyAuthorization(_ accuracy: CLAccuracyAuthorization)\n")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},"Places.setAccuracyAuthorization(.fullAccuracy)\n")),(0,l.mdx)("h4",{id:"objective-c-7"},"Objective-C"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objc"},"+ (void) setAccuracyAuthorization: (CLAccuracyAuthorization) accuracy;\n")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objc"},"[AEPMobilePlaces setAccuracyAuthorization:CLAccuracyAuthorizationFullAccuracy];\n")),(0,l.mdx)(p,{platform:"android",api:"set-authorization-status",repeat:"8",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"java-8"},"Java"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"public static void setAuthorizationStatus(final PlacesAuthorizationStatus status);\n")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"Places.setAuthorizationStatus(PlacesAuthorizationStatus.ALWAYS);\n")),(0,l.mdx)("h4",{id:"kotlin-8"},"Kotlin"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"Places.setAuthorizationStatus(PlacesAuthorizationStatus.ALWAYS)\n")),(0,l.mdx)(p,{platform:"ios",api:"set-authorization-status",repeat:"10",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"swift-8"},"Swift"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},"static func setAuthorizationStatus(status: CLAuthorizationStatus)\n")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},"// in the class implementing CLLocationManagerDelegate:\n\nfunc locationManagerDidChangeAuthorization(_ manager: CLLocationManager) {\n    Places.setAuthorizationStatus(status: manager.authorizationStatus)\n}\n")),(0,l.mdx)("h4",{id:"objective-c-8"},"Objective-C"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objc"},"+ (void) setAuthorizationStatus: (CLAuthorizationStatus) status;\n")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objc"},"// in the class implementing CLLocationManagerDelegate:\n\n- (void)locationManagerDidChangeAuthorization:(CLLocationManager *)manager {\n    [AEPMobilePlaces setAuthorizationStatus:manager.authorizationStatus];\n}\n")))}x.isMDXComponent=!0}}]);
//# sourceMappingURL=ea91843bdbc734950d3b27b93aff3fb090cec06a-f62b727bbc3e8f284479.js.map