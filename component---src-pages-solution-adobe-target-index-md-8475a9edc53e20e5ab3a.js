"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[7258,6254],{86055:function(e,t,a){a.r(t),a.d(t,{_frontmatter:function(){return m},default:function(){return x}});var r=a(87462),n=a(63366),o=(a(15007),a(64983)),i=a(91515),d=a(29809),l=["components"],m={},p=function(e){return function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.mdx)("div",t)}},s=p("TabsBlock"),c=p("InlineAlert"),u={_frontmatter:m},g=i.Z;function x(e){var t=e.components,a=(0,n.Z)(e,l);return(0,o.mdx)(g,(0,r.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,o.mdx)("h1",{id:"adobe-target"},"Adobe Target"),(0,o.mdx)("p",null,"Adobe Target helps test, personalize, and optimize mobile app experiences based on user behavior and mobile context. You can deliver interactions that engage and convert through iterative testing and rules-based and AI-powered personalization."),(0,o.mdx)("p",null,"To get started with Target, follow these steps:"),(0,o.mdx)("ol",null,(0,o.mdx)("li",{parentName:"ol"},"Configure the Target extension in the Data Collection UI."),(0,o.mdx)("li",{parentName:"ol"},"Add the Target Extension to your app."),(0,o.mdx)("li",{parentName:"ol"},"Implement Target APIs to:",(0,o.mdx)("ul",{parentName:"li"},(0,o.mdx)("li",{parentName:"ul"},"Request mbox offers."),(0,o.mdx)("li",{parentName:"ul"},"Prefetch mbox offers."),(0,o.mdx)("li",{parentName:"ul"},"Track mboxes."),(0,o.mdx)("li",{parentName:"ul"},"Enter visual preview mode.")))),(0,o.mdx)("h2",{id:"configure-the-target-extension-in-the-data-collection-ui"},"Configure the Target extension in the Data Collection UI"),(0,o.mdx)("p",null,(0,o.mdx)("span",{parentName:"p",className:"gatsby-resp-image-wrapper",style:{position:"relative",display:"block",marginLeft:"auto",marginRight:"auto",maxWidth:"1078px"}},"\n      ",(0,o.mdx)("span",{parentName:"span",className:"gatsby-resp-image-background-image",style:{paddingBottom:"96.25000000000001%",position:"relative",bottom:"0",left:"0",display:"block",transition:"opacity 0.5s 0.5s",pointerEvents:"none"}}),"\n  ",(0,o.mdx)("picture",{parentName:"span"},"\n          ",(0,o.mdx)("source",{parentName:"picture",srcSet:["/aep-mobile-sdkdocs/static/c5123e2601a5affaba668c9e9228c40f/5530d/configuration.webp 320w","/aep-mobile-sdkdocs/static/c5123e2601a5affaba668c9e9228c40f/0c8fb/configuration.webp 640w","/aep-mobile-sdkdocs/static/c5123e2601a5affaba668c9e9228c40f/23d9c/configuration.webp 1078w"],sizes:"(max-width: 1078px) 100vw, 1078px",type:"image/webp"}),"\n          ",(0,o.mdx)("source",{parentName:"picture",srcSet:["/aep-mobile-sdkdocs/static/c5123e2601a5affaba668c9e9228c40f/dd4a7/configuration.png 320w","/aep-mobile-sdkdocs/static/c5123e2601a5affaba668c9e9228c40f/0f09e/configuration.png 640w","/aep-mobile-sdkdocs/static/c5123e2601a5affaba668c9e9228c40f/cf75f/configuration.png 1078w"],sizes:"(max-width: 1078px) 100vw, 1078px",type:"image/png"}),"\n          ",(0,o.mdx)("img",{parentName:"picture",className:"gatsby-resp-image-image",src:"/aep-mobile-sdkdocs/static/c5123e2601a5affaba668c9e9228c40f/cf75f/configuration.png",alt:"Adobe Target Extension Configuration",title:"Adobe Target Extension Configuration",loading:"lazy",style:{width:"100%",height:"100%",margin:"0",verticalAlign:"middle",position:"absolute",opacity:"0",transition:"opacity 0.5s",color:"inherit",boxShadow:"inset 0px 0px 0px 400px none",top:"0",left:"0"}}),"\n        "),"\n    ")),(0,o.mdx)("ol",null,(0,o.mdx)("li",{parentName:"ol"},"In the Data Collection UI, select the ",(0,o.mdx)("strong",{parentName:"li"},"Extensions")," tab."),(0,o.mdx)("li",{parentName:"ol"},"On the ",(0,o.mdx)("strong",{parentName:"li"},"Catalog")," tab, locate the Adobe Target extension, and select ",(0,o.mdx)("strong",{parentName:"li"},"Install"),"."),(0,o.mdx)("li",{parentName:"ol"},"Your ",(0,o.mdx)("strong",{parentName:"li"},"Target")," client code will be detected automatically."),(0,o.mdx)("li",{parentName:"ol"},"Optionally, provide your Environment ID."),(0,o.mdx)("li",{parentName:"ol"},"Set the timeout value to at least 5 seconds."),(0,o.mdx)("li",{parentName:"ol"},"Optionally, enter the Target workspace property token that was generated from Target UI."),(0,o.mdx)("li",{parentName:"ol"},"Select ",(0,o.mdx)("strong",{parentName:"li"},"Save"),"."),(0,o.mdx)("li",{parentName:"ol"},"Follow the publishing process to update SDK configuration.")),(0,o.mdx)("h2",{id:"add-target-to-your-app"},"Add Target to your app"),(0,o.mdx)("p",null,"To add the Target extension to your app:"),(0,o.mdx)(s,{orientation:"horizontal",slots:"heading, content",repeat:"2",mdxType:"TabsBlock"}),(0,o.mdx)("p",null,"Android"),(0,o.mdx)(d.default,{query:"platform=android&task=add",mdxType:"Tabs"}),(0,o.mdx)("p",null,"iOS"),(0,o.mdx)(d.default,{query:"platform=ios&task=add",mdxType:"Tabs"}),(0,o.mdx)("h2",{id:"register-target-with-mobile-core"},"Register Target with Mobile Core"),(0,o.mdx)("p",null,"To register the Target extension with Mobile Core:"),(0,o.mdx)(s,{orientation:"horizontal",slots:"heading, content",repeat:"2",mdxType:"TabsBlock"}),(0,o.mdx)("p",null,"Android"),(0,o.mdx)(d.default,{query:"platform=android&task=register",mdxType:"Tabs"}),(0,o.mdx)("p",null,"iOS"),(0,o.mdx)(d.default,{query:"platform=ios&task=register",mdxType:"Tabs"}),(0,o.mdx)("h2",{id:"parameters-in-a-target-request"},"Parameters in a Target request"),(0,o.mdx)("p",null,"Here is some information about the parameters in a Target request:"),(0,o.mdx)("h3",{id:"target-order-class"},"Target Order class"),(0,o.mdx)("p",null,"The ",(0,o.mdx)("inlineCode",{parentName:"p"},"TargetOrder")," class encapsulates the order ID, the order total, and the purchased product IDs. You can instantiate this class to create order parameters."),(0,o.mdx)(s,{orientation:"horizontal",slots:"heading, content",repeat:"2",mdxType:"TabsBlock"}),(0,o.mdx)("p",null,"Android"),(0,o.mdx)(d.default,{query:"platform=android&task=target-order",mdxType:"Tabs"}),(0,o.mdx)("p",null,"iOS"),(0,o.mdx)(d.default,{query:"platform=ios&task=target-order",mdxType:"Tabs"}),(0,o.mdx)("h3",{id:"target-product-class"},"Target Product class"),(0,o.mdx)("p",null,"The ",(0,o.mdx)("inlineCode",{parentName:"p"},"TargetProduct")," class encapsulates the product ID and the product category ID, and you can instantiate this class to create order parameters."),(0,o.mdx)(s,{orientation:"horizontal",slots:"heading, content",repeat:"2",mdxType:"TabsBlock"}),(0,o.mdx)("p",null,"Android"),(0,o.mdx)(d.default,{query:"platform=android&task=target-product",mdxType:"Tabs"}),(0,o.mdx)("p",null,"iOS"),(0,o.mdx)(d.default,{query:"platform=ios&task=target-product",mdxType:"Tabs"}),(0,o.mdx)("h3",{id:"target-parameters"},"Target Parameters"),(0,o.mdx)("p",null,(0,o.mdx)("inlineCode",{parentName:"p"},"TargetParameters")," encapsulates ",(0,o.mdx)("inlineCode",{parentName:"p"},"mboxParameters"),", ",(0,o.mdx)("inlineCode",{parentName:"p"},"profileParameters"),", ",(0,o.mdx)("inlineCode",{parentName:"p"},"orderParameters"),", and ",(0,o.mdx)("inlineCode",{parentName:"p"},"productParameters"),", and allows you easily pass these parameters in a Target request."),(0,o.mdx)(s,{orientation:"horizontal",slots:"heading, content",repeat:"2",mdxType:"TabsBlock"}),(0,o.mdx)("p",null,"Android"),(0,o.mdx)(d.default,{query:"platform=android&task=target-parameters",mdxType:"Tabs"}),(0,o.mdx)("p",null,"iOS"),(0,o.mdx)(d.default,{query:"platform=ios&task=target-parameters",mdxType:"Tabs"}),(0,o.mdx)("h3",{id:"merge-behavior-of-target-parameters"},"Merge behavior of Target parameters"),(0,o.mdx)("p",null,(0,o.mdx)("inlineCode",{parentName:"p"},"TargetParameters"),", such as ",(0,o.mdx)("inlineCode",{parentName:"p"},"mboxParameters"),", ",(0,o.mdx)("inlineCode",{parentName:"p"},"profileParameters"),", ",(0,o.mdx)("inlineCode",{parentName:"p"},"orderParameters"),", and ",(0,o.mdx)("inlineCode",{parentName:"p"},"productParameters"),", can be passed in the Target APIs and can also be passed in when you create ",(0,o.mdx)("inlineCode",{parentName:"p"},"TargetPrefetch")," or ",(0,o.mdx)("inlineCode",{parentName:"p"},"TargetRequest")," objects. The ",(0,o.mdx)("inlineCode",{parentName:"p"},"TargetParameters")," that are passed in the public APIs are global parameters and are merged with the corresponding parameters in the individual ",(0,o.mdx)("inlineCode",{parentName:"p"},"TargetRequest")," or ",(0,o.mdx)("inlineCode",{parentName:"p"},"TargetPrefetch")," objects."),(0,o.mdx)("p",null,"When merging, the new keys in the mbox parameters or the profile parameters are appended to the final dictionary, and the keys with the same name are overwritten in each ",(0,o.mdx)("inlineCode",{parentName:"p"},"TargetRequest")," or ",(0,o.mdx)("inlineCode",{parentName:"p"},"TargetPrefetch")," object by the keys from the global parameters. For ",(0,o.mdx)("inlineCode",{parentName:"p"},"TargetOrder")," or ",(0,o.mdx)("inlineCode",{parentName:"p"},"TargetProduct")," objects, the object that is passed to the global parameters replaces the corresponding object in the ",(0,o.mdx)("inlineCode",{parentName:"p"},"TargetRequest")," or ",(0,o.mdx)("inlineCode",{parentName:"p"},"TargetPrefetch")," objects."),(0,o.mdx)("h2",{id:"target-sessions"},"Target sessions"),(0,o.mdx)("p",null,"The Target extension supports persistent sessions. When a Target request is received, if a session ID does not exist, a new ID is generated and is sent in the request. This ID, with the Edge Host that is returned from Target, is kept in persistent storage for the configured ",(0,o.mdx)("inlineCode",{parentName:"p"},"target.sessionTimeout")," period. If the timeout value is not configured, the default value is 30 minutes."),(0,o.mdx)("p",null,"If no Target request is received during the configured ",(0,o.mdx)("inlineCode",{parentName:"p"},"target.sessionTimeout")," or if the ",(0,o.mdx)("a",{parentName:"p",href:"./api-reference.md#resetexperience"},"resetExperience")," API is called, these variables are reset and removed from persistent storage."),(0,o.mdx)("h2",{id:"visual-preview"},"Visual preview"),(0,o.mdx)("p",null,"The visual preview mode allows you to easily perform end-to-end QA activities by enrolling and previewing these activities on your device. This mode does not require a specialized testing set up. To get started, set up a URL scheme and generate the preview links. For more information about setting up Target visual preview, see ",(0,o.mdx)("a",{parentName:"p",href:"https://experienceleague.adobe.com/docs/target/using/implement-target/mobile-apps/target-mobile-preview.html"},"Target mobile preview"),". For more information about setting URL schemes for iOS, see ",(0,o.mdx)("a",{parentName:"p",href:"https://developer.apple.com/documentation/uikit/inter-process_communication/allowing_apps_and_websites_to_link_to_your_content/defining_a_custom_url_scheme_for_your_app"},"Defining a Custom URL Scheme for Your App"),". For more information about setting URL schemes for Android, see ",(0,o.mdx)("a",{parentName:"p",href:"https://developer.android.com/training/app-links/deep-linking"},"Create Deep Links to App Content"),"."),(0,o.mdx)("p",null,"You can also set an application deep link that can be triggered when selections are made in the preview mode by using the ",(0,o.mdx)("a",{parentName:"p",href:"./api-reference.md#setpreviewrestartdeeplink"},"setPreviewRestartDeeplink")," API."),(0,o.mdx)("p",null,"To enter the preview visual mode, use the ",(0,o.mdx)("inlineCode",{parentName:"p"},"collectLaunchInfo")," API to enable the mode and select the red floating button that appears on the app screen. For more information, see ",(0,o.mdx)("a",{parentName:"p",href:"../../home/base/mobile-core/api-reference.md#collectlaunchinfo"},"collectLaunchInfo"),"."),(0,o.mdx)(s,{orientation:"horizontal",slots:"heading, content",repeat:"2",mdxType:"TabsBlock"}),(0,o.mdx)("p",null,"Android"),(0,o.mdx)(d.default,{query:"platform=android&task=visual-preview",mdxType:"Tabs"}),(0,o.mdx)("p",null,"iOS"),(0,o.mdx)(d.default,{query:"platform=ios&task=visual-preview",mdxType:"Tabs"}),(0,o.mdx)("h2",{id:"offer-prefetch"},"Offer Prefetch"),(0,o.mdx)("p",null,"The SDK can minimize the number of times it reaches out to Target servers to fetch offers by caching server responses. With a successful prefetch call for mbox locations, offer content is retrieved and cached in the SDK. This content is retrieved from the cache for all future ",(0,o.mdx)("a",{parentName:"p",href:"./api-reference.md#retrievelocationcontent"},"retrieveLocationContent")," API calls for the specified mbox names. This prefetch process reduces the offer load time and network calls that were made to the Target servers, and the process allows Target to be notified which mbox was visited by the mobile app user."),(0,o.mdx)(c,{variant:"warning",slots:"text",mdxType:"InlineAlert"}),(0,o.mdx)("p",null,"Prefetched offer content does not persist across application launches. The prefetch content is cached as long as the application lives in memory or until the API to clear the cache is called. For more information, see ",(0,o.mdx)("a",{parentName:"p",href:"./api-reference.md#clearprefetchcache"},"clearPrefetchCache"),"."),(0,o.mdx)(c,{variant:"warning",slots:"text",mdxType:"InlineAlert"}),(0,o.mdx)("p",null,"Offer prefetch is not available while visual preview mode is enabled."),(0,o.mdx)("h2",{id:"target-with-analytics-a4t"},"Target with Analytics (A4T)"),(0,o.mdx)("p",null,"To track the performance of your Target activities for certain segments, set up the Analytics for Target (A4T) cross-solution integration by enabling the A4T campaigns. This integration allows you to use Analytics reports to examine your results. If you use Analytics as the reporting source for an activity, all reporting and segmentation for that activity is based on Analytics data collection. For more information, see ",(0,o.mdx)("a",{parentName:"p",href:"https://experienceleague.adobe.com/docs/target/using/integrate/a4t/a4t.html"},"Adobe Analytics for Adobe Target (A4T)"),"."),(0,o.mdx)("p",null,"Once Analytics is listed as the reporting source for an activity on Target UI, A4T works out of the box in the Target SDK. The Target SDK extension extracts the A4T payload from the Target server response, dispatches an event for Analytics SDK extension to send an internal track action request to the configured Analytics server."),(0,o.mdx)("p",null,"The A4T payload returned from Target servers is sent to Adobe Analytics in the following cases:"),(0,o.mdx)("ul",null,(0,o.mdx)("li",{parentName:"ul"},"When one or more locations are retrieved using ",(0,o.mdx)("a",{parentName:"li",href:"../adobe-target/api-reference.md#retrievelocationcontent"},"retrieveLocationContent")," API call."),(0,o.mdx)("li",{parentName:"ul"},"When one or more prefetched locations are loaded and a subsequent ",(0,o.mdx)("a",{parentName:"li",href:"./api-reference.md#displayedlocations"},"locationsDisplayed")," API call is made for the location(s).")),(0,o.mdx)(c,{variant:"warning",slots:"text",mdxType:"InlineAlert"}),(0,o.mdx)("p",null,"For A4T data to be sent to Adobe Analytics client-side, make sure Analytics SDK extension is installed and registered in your mobile application. For more information on Adobe Analytics, please read the ",(0,o.mdx)("a",{parentName:"p",href:"../adobe-analytics/index.md"},"Adobe Analytics guide"),"."),(0,o.mdx)("h2",{id:"configuration-keys"},"Configuration keys"),(0,o.mdx)("p",null,"To programmatically update SDK configuration, use the following information to change your Target configuration values:"),(0,o.mdx)("p",null,"For more information, see ",(0,o.mdx)("a",{parentName:"p",href:"../../home/base/mobile-core/configuration/index.md#programmatic-updates-to-configuration"},"Programmatic updates to Configuration"),"."),(0,o.mdx)("table",null,(0,o.mdx)("thead",{parentName:"table"},(0,o.mdx)("tr",{parentName:"thead"},(0,o.mdx)("th",{parentName:"tr",align:"left"},"Key"),(0,o.mdx)("th",{parentName:"tr",align:"left"},"Description"),(0,o.mdx)("th",{parentName:"tr",align:"left"},"Data Type"))),(0,o.mdx)("tbody",{parentName:"table"},(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:"left"},"target.clientCode"),(0,o.mdx)("td",{parentName:"tr",align:"left"},"Client code for your account."),(0,o.mdx)("td",{parentName:"tr",align:"left"},"String")),(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:"left"},"target.timeout"),(0,o.mdx)("td",{parentName:"tr",align:"left"},"Time, in seconds, to wait for a response from Target servers before timing out."),(0,o.mdx)("td",{parentName:"tr",align:"left"},"Integer")),(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:"left"},"target.environmentId"),(0,o.mdx)("td",{parentName:"tr",align:"left"},"Environment ID you want to use. If the value is left blank, the default production environment will be used."),(0,o.mdx)("td",{parentName:"tr",align:"left"},"Integer")),(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:"left"},"target.propertyToken"),(0,o.mdx)("td",{parentName:"tr",align:"left"},(0,o.mdx)("inlineCode",{parentName:"td"},"at_property")," token value, which is generated from the Target UI. If this value is left blank, no token is sent in the Target network calls."),(0,o.mdx)("td",{parentName:"tr",align:"left"},"String")),(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:"left"},"target.previewEnabled"),(0,o.mdx)("td",{parentName:"tr",align:"left"},"Boolean parameter, which can be used to enable/disable Target Preview. If not specified, then Preview will be enabled by default."),(0,o.mdx)("td",{parentName:"tr",align:"left"},"Boolean")),(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:"left"},"target.sessionTimeout"),(0,o.mdx)("td",{parentName:"tr",align:"left"},"The duration, in seconds, during which the Target session ID and Edge Host are persisted. If this value is not specified, the default timeout value is 30 minutes."),(0,o.mdx)("td",{parentName:"tr",align:"left"},"Integer")),(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:"left"},"target.server"),(0,o.mdx)("td",{parentName:"tr",align:"left"},(0,o.mdx)("em",{parentName:"td"},"Optional"),". If provided, all Target requests will be sent to this host. e.g. - ",(0,o.mdx)("inlineCode",{parentName:"td"},"mytargetdomain.com")),(0,o.mdx)("td",{parentName:"tr",align:"left"},"String")))),(0,o.mdx)(c,{variant:"warning",slots:"text",mdxType:"InlineAlert"}),(0,o.mdx)("p",null,"Currently, the ",(0,o.mdx)("inlineCode",{parentName:"p"},"target.sessiontimeout")," value can only be configured programmatically. For more information, see ",(0,o.mdx)("a",{parentName:"p",href:"../../home/base/mobile-core/configuration/api-reference.md#updateconfiguration"},"updateConfiguration"),"."))}x.isMDXComponent=!0},29809:function(e,t,a){a.r(t),a.d(t,{_frontmatter:function(){return p},default:function(){return g}});var r,n=a(87462),o=a(63366),i=(a(15007),a(64983)),d=a(91515),l=a(47968),m=["components"],p={},s=(r="Variant",function(e){return console.warn("Component "+r+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.mdx)("div",e)}),c={_frontmatter:p},u=d.Z;function g(e){var t=e.components,a=(0,o.Z)(e,m);return(0,i.mdx)(u,(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,i.mdx)(s,{platform:"android",task:"add",repeat:"6",mdxType:"Variant"}),(0,i.mdx)("ol",null,(0,i.mdx)("li",{parentName:"ol"},"Add the Mobile Core, Identity and Target extensions to your project using the app's Gradle file.")),(0,i.mdx)("h4",{id:"kotlin"},"Kotlin"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-kotlin"},'implementation(platform("com.adobe.marketing.mobile:sdk-bom:3.+"))\nimplementation("com.adobe.marketing.mobile:core")\nimplementation("com.adobe.marketing.mobile:identity")\nimplementation("com.adobe.marketing.mobile:target")\n')),(0,i.mdx)("h4",{id:"groovy"},"Groovy"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"implementation platform('com.adobe.marketing.mobile:sdk-bom:3.+')\nimplementation 'com.adobe.marketing.mobile:core'\nimplementation 'com.adobe.marketing.mobile:identity'\nimplementation 'com.adobe.marketing.mobile:target'\n")),(0,i.mdx)(l.default,{query:"platform=android-gradle&componentClass=InlineNestedAlert",mdxType:"Alerts"}),(0,i.mdx)(s,{platform:"ios",task:"add",repeat:"7",mdxType:"Variant"}),(0,i.mdx)("ol",null,(0,i.mdx)("li",{parentName:"ol"},"Add the AEPCore, AEPIdentity, and AEPTarget CocoaPods to your project via your ",(0,i.mdx)("inlineCode",{parentName:"li"},"Podfile"),".")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-ruby"},"pod 'AEPCore','~>5.0'    \npod 'AEPIdentity','~>5.0'\npod 'AEPTarget','~>5.0'\n")),(0,i.mdx)("ol",{start:2},(0,i.mdx)("li",{parentName:"ol"},"Import the Target and Identity libraries.")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Swift")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"    import AEPCore\n    import AEPTarget\n    import AEPIdentity\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Objective-C")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"    @import AEPCore\n    @import AEPTarget\n    @import AEPIdentity\n")),(0,i.mdx)(s,{platform:"android",task:"register",repeat:"5",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"java"},"Java"),(0,i.mdx)("p",null,"In your Application's ",(0,i.mdx)("inlineCode",{parentName:"p"},"onCreate()")," method, after calling the ",(0,i.mdx)("inlineCode",{parentName:"p"},"setApplication()")," method, register Target with Mobile Core."),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'import com.adobe.marketing.mobile.MobileCore;\nimport com.adobe.marketing.mobile.Target;\nimport com.adobe.marketing.mobile.Identity;\nimport com.adobe.marketing.mobile.AdobeCallback;\n\npublic class MainApp extends Application {\n\n  private final String ENVIRONMENT_FILE_ID = "YOUR_APP_ENVIRONMENT_ID";\n\n    @Override\n    public void onCreate() {\n        super.onCreate();\n\n        MobileCore.setApplication(this);\n        MobileCore.configureWithAppID(ENVIRONMENT_FILE_ID);\n\n        MobileCore.registerExtensions(\n            Arrays.asList(Target.EXTENSION, Identity.EXTENSION),\n            o -> Log.d("MainApp", "Adobe Target Mobile SDK was initialized.")\n        );\n    }\n}\n')),(0,i.mdx)("h4",{id:"kotlin-1"},"Kotlin"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'import com.adobe.marketing.mobile.MobileCore\nimport com.adobe.marketing.mobile.Target\nimport com.adobe.marketing.mobile.Identity\nimport com.adobe.marketing.mobile.AdobeCallback\n\nclass MainApp : Application() {\n\n  private var ENVIRONMENT_FILE_ID: String = "YOUR_APP_ENVIRONMENT_ID"\n\n    override fun onCreate() {\n        super.onCreate()\n\n        MobileCore.setApplication(this)\n        MobileCore.configureWithAppID(ENVIRONMENT_FILE_ID)\n\n        MobileCore.registerExtensions(\n          listOf(Target.EXTENSION, Identity.EXTENSION)\n        ) {\n          Log.d("MainApp", "Adobe Target Mobile SDK was initialized")\n        }\n    }\n\n}\n')),(0,i.mdx)(s,{platform:"ios",task:"register",repeat:"5",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"swift"},"Swift"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {    \n  MobileCore.registerExtensions([Target.self, Identity.self]) {\n       //Completion callback\n       // Use the App id assigned to this application via Adobe Data Collection UI\n       MobileCore.configureWith(appId: "yourAppId")\n  }\n  return true\n}\n')),(0,i.mdx)("h4",{id:"objective-c"},"Objective-C"),(0,i.mdx)("p",null,"In your app's ",(0,i.mdx)("inlineCode",{parentName:"p"},"didFinishLaunchingWithOptions")," function, register the Target extension with Mobile Core:"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},'- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n    [AEPMobileCore registerExtensions: @[AEPMobileTarget.class, AEPMobileIdentity.class] completion:^{\n        //Completion callback\n        // Use the app ID assigned to this application via Data Collection UI\n        [AEPMobileCore configureWithAppId: @"yourAppId"];\n    }];\n\n    return YES;\n}\n')),(0,i.mdx)(s,{platform:"android",task:"target-order",repeat:"5",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"java-1"},"Java"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"public TargetOrder(final String id, final double total, final List<String> purchasedProductIds)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'List<String> purchasedProductIds = new ArrayList<String>();\npurchasedProductIds.add("34");\npurchasedProductIds.add("125");\nTargetOrder targetOrder = new TargetOrder("123", 567.89, purchasedProductIds);\n')),(0,i.mdx)(s,{platform:"ios",task:"target-order",repeat:"10",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"swift-1"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"public init(id: String, total: Double = 0, purchasedProductIds: [String]? = nil)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'let order = TargetOrder(id: "id1", total: 1.0, purchasedProductIds: ["ppId1"])\n')),(0,i.mdx)("h4",{id:"objective-c-1"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"- (nonnull instancetype) initWithId: (nonnull NSString*) id total: (double) total purchasedProductIds: (nullable NSArray<NSString*>*) purchasedProductIds;\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},'AEPTargetOrder *order = [[AEPTargetOrder alloc] initWithId:@"id1" total:1.0 purchasedProductIds:@[@"ppId1"]];\n')),(0,i.mdx)(s,{platform:"android",task:"target-product",repeat:"5",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"java-2"},"Java"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"public TargetProduct(final String id, final String categoryId)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'TargetProduct targetProduct = new TargetProduct("123", "Books");\n')),(0,i.mdx)(s,{platform:"ios",task:"target-product",repeat:"10",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"swift-2"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"public init(productId: String, categoryId: String? = nil)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'let product = TargetProduct(productId: "pId1", categoryId: "cId1")\n')),(0,i.mdx)("h4",{id:"objective-c-2"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"- (nonnull instancetype) initWithProductId:(nonnull NSString*) productId categoryId:(nullable NSString*) categoryId;\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},'AEPTargetProduct *product =[[AEPTargetProduct alloc] initWithProductId:@"pId1" categoryId:@"cId1"];\n')),(0,i.mdx)(s,{platform:"android",task:"target-parameters",repeat:"5",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"java-3"},"Java"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'TargetParameters targetParameters = new TargetParameters.Builder()\n.parameters(new HashMap<String, String>())\n.profileParameters(new HashMap<String, String>())\n.product(new TargetProduct("productId", "productCategoryId"))\n.order(new TargetOrder("orderId", 0.0, new ArrayList<String>()))\n.build();\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'List<String> purchasedProductIds = new ArrayList<String>();\npurchasedProductIds.add("34");\npurchasedProductIds.add("125");\nTargetOrder targetOrder = new TargetOrder("123", 567.89, purchasedProductIds);\n\nTargetProduct targetProduct = new TargetProduct("123", "Books");\n\nMap<String, String> mboxParameters = new HashMap<String, String>();\nmboxParameters1.put("status", "platinum");\n\nMap<String, String> profileParameters = new HashMap<String, String>();\nprofileParameters1.put("gender", "male");\n\nTargetParameters targetParameters = new TargetParameters.Builder()\n.parameters(mboxParameters)\n.profileParameters(profileParameters)\n.product(targetProduct)\n.order(targetOrder)\n.build();\n')),(0,i.mdx)(s,{platform:"ios",task:"target-parameters",repeat:"10",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"swift-3"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"public init(parameters: [String: String]? = nil, profileParameters: [String: String]? = nil, order: TargetOrder? = nil, product: TargetProduct? = nil)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'let mboxParameters = [\n"status": "Platinum"\n]\nlet profileParameters = [\n"gender": "female"\n]\n\nlet order = TargetOrder(id: "id1", total: 1.0, purchasedProductIds: ["ppId1"])\n\nlet product = TargetProduct(productId: "pId1", categoryId: "cId1")\n\nlet targetParameters = TargetParameters(parameters: mboxParameters, profileParameters: profileParameters, order: order, product: product))\n')),(0,i.mdx)("h4",{id:"objective-c-3"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"- (nonnull instancetype) initWithParameters:(nullable NSDictionary<NSString*, NSString*>*) parameters profileParameters:(nullable NSDictionary<NSString*, NSString*>*) profileParameters order:(nullable AEPTargetOrder*) order product:(nullable AEPTargetProduct*) product;\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},'NSDictionary *mboxParameters = @{@"status":@"Platinum"};\nNSDictionary *profileParameters = @{@"gender":@"female"};\n\nAEPTargetProduct *product =[[AEPTargetProduct alloc] initWithProductId:@"pId1" categoryId:@"cId1"];\n\nAEPTargetOrder *order = [[AEPTargetOrder alloc] initWithId:@"id1" total:1.0 purchasedProductIds:@[@"ppId1"]];\n\nAEPTargetParameters * targetParams = [[AEPTargetParameters alloc] initWithParameters:mboxParameters profileParameters:profileParameters order:order product:product];\n')),(0,i.mdx)(s,{platform:"android",task:"visual-preview",repeat:"2",mdxType:"Variant"}),(0,i.mdx)("p",null,"On Android, when the application is launched as a result of a deep link, the Mobile Core's ",(0,i.mdx)("a",{parentName:"p",href:"../../home/base/mobile-core/api-reference.md#collectlaunchinfo"},"collectLaunchInfo")," API is internally invoked, and the Target activity and deep link information is extracted from the Intent extras."),(0,i.mdx)("p",null,"The SDK can only collect information from the launching Activity if ",(0,i.mdx)("a",{parentName:"p",href:"../../home/base/mobile-core/api-reference.md#setapplication"},"setApplication")," has been called. Setting the Application is only necessary on an Activity that is also an entry point for your application. However, setting the Application on each Activity has no negative impact and ensures that the SDK always has the necessary reference to your Application. We recommend that you call ",(0,i.mdx)("inlineCode",{parentName:"p"},"setApplication")," API in each of your Activities."),(0,i.mdx)(s,{platform:"ios",task:"visual-preview",repeat:"7",mdxType:"Variant"}),(0,i.mdx)("p",null,"On iOS, the Mobile Core's ",(0,i.mdx)("a",{parentName:"p",href:"../../home/base/mobile-core/api-reference.md#collectlaunchinfo"},"collectLaunchInfo")," API can be invoked with the Target preview deep link as shown below:"),(0,i.mdx)("h4",{id:"swift-4"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'    MobileCore.collectLaunchInfo(["adb_deeplink" : "com.adobe.targetpreview://app.adobetarget.com?at_preview_token=tokenFromTarget"])\n')),(0,i.mdx)("h4",{id:"objective-c-4"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},' [AEPMobileCore collectLaunchInfo:@{@"adb_deeplink" : @"com.adobe.targetpreview://app.adobetarget.com?at_preview_token=tokenFromTarget"}];\n')))}g.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-solution-adobe-target-index-md-8475a9edc53e20e5ab3a.js.map