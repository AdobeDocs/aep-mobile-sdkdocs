"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[8365],{90573:function(e,t,n){n.r(t),n.d(t,{_frontmatter:function(){return s},default:function(){return f}});var a=n(87462),r=n(63366),o=(n(15007),n(64983)),i=n(91515),d=["components"],s={},m=function(e){return function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.mdx)("div",t)}},c=m("InlineAlert"),l=m("CodeBlock"),p={_frontmatter:s},u=i.Z;function f(e){var t=e.components,n=(0,r.Z)(e,d);return(0,o.mdx)(u,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.mdx)("h1",{id:"api-reference"},"API Reference"),(0,o.mdx)("p",null,"This document lists the public APIs available in the Messaging extension for implementing content card with UI."),(0,o.mdx)("h2",{id:"getcontentcardsui"},"getContentCardsUI"),(0,o.mdx)("p",null,"The ",(0,o.mdx)("inlineCode",{parentName:"p"},"getContentCardsUI")," method retrieves an array of ",(0,o.mdx)("a",{parentName:"p",href:"./public-classes/contentcardui.md"},"ContentCardUI")," objects for the provided surface. These ContentCardUI objects provide the user interface for templated content cards to your application."),(0,o.mdx)("h4",{id:"parameters"},"Parameters:"),(0,o.mdx)("ul",null,(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("em",{parentName:"li"},"surface")," - The ",(0,o.mdx)("a",{parentName:"li",href:"../../public-classes/surface.md"},"Surface")," for which the content cards should be retrieved."),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("em",{parentName:"li"},"customizer")," - An optional ",(0,o.mdx)("a",{parentName:"li",href:"./public-classes/contentcardcustomizing.md"},"ContentCardCustomizing")," object to customize the appearance of the content card template. If you do not need to customize the appearance of the content card template, this parameter can be omitted."),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("em",{parentName:"li"},"listener")," - An optional ",(0,o.mdx)("a",{parentName:"li",href:"./public-classes/contentcarduieventlistening.md"},"ContentCardUIEventListening")," object to listen to UI events from the content card. If you do not need to listen to UI events from the content card, this parameter can be omitted."),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("em",{parentName:"li"},"completion")," - A completion handler that is called with a ",(0,o.mdx)("inlineCode",{parentName:"li"},"Result")," containing either:",(0,o.mdx)("ul",{parentName:"li"},(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("em",{parentName:"li"},"success")," - An array of ",(0,o.mdx)("a",{parentName:"li",href:"./public-classes/contentcardui.md"},"ContentCardUI")," objects representing the content cards to be displayed."),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("em",{parentName:"li"},"failure")," - An ",(0,o.mdx)("inlineCode",{parentName:"li"},"Error")," object indicating the reason for the failure, if any.")))),(0,o.mdx)(c,{variant:"info",slots:"text",mdxType:"InlineAlert"}),(0,o.mdx)("p",null,"Calling this API will not download content cards from Adobe Journey Optimizer; it will only retrieve the content cards that are already downloaded and cached by the Messaging extension. You ",(0,o.mdx)("strong",{parentName:"p"},"must")," call the ",(0,o.mdx)("a",{parentName:"p",href:"../../code-based/api-reference.md#updatepropositionsforsurfaces"},(0,o.mdx)("inlineCode",{parentName:"a"},"updatePropositionsForSurfaces"))," API with the desired surfaces prior to calling this API."),(0,o.mdx)("h4",{id:"syntax"},"Syntax"),(0,o.mdx)(l,{slots:"heading, code",repeat:"1",languages:"Swift",mdxType:"CodeBlock"}),(0,o.mdx)("h4",{id:"swift"},"Swift"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-swift"},"public static func getContentCardsUI(for surface: Surface,\n                                     customizer: ContentCardCustomizing? = nil,\n                                     listener: ContentCardUIEventListening? = nil,\n                                     _ completion: @escaping (Result<[ContentCardUI], Error>) -> Void)\n")),(0,o.mdx)("h4",{id:"example"},"Example"),(0,o.mdx)(l,{slots:"heading, code",repeat:"1",languages:"Swift",mdxType:"CodeBlock"}),(0,o.mdx)("h4",{id:"swift-1"},"Swift"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-swift"},'// Download the content cards for homepage surface using Messaging extension\nlet homePageSurface = Surface(path: "homepage")\nMessaging.updatePropositionsForSurfaces([homePageSurface])\n\n// Get the content card UI for the homepage surface\nMessaging.getContentCardsUI(for: homePageSurface) { result in\n    switch result {\n    case .success(let contentCards):\n        // Use the contentCards array to display UI for templated content cards in your application\n    case .failure(let error):\n        // Handle the error\n    }\n}\n')))}f.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-edge-adobe-journey-optimizer-content-card-ui-i-os-api-usage-md-dc7f45f07da8a683f95d.js.map