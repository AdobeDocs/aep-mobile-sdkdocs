"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[8955],{50336:function(t,e,n){n.r(e),n.d(e,{_frontmatter:function(){return l},default:function(){return s}});var a=n(87462),o=n(63366),m=(n(15007),n(64983)),c=n(91515),r=["components"],l={},i={_frontmatter:l},p=c.Z;function s(t){var e=t.components,n=(0,o.Z)(t,r);return(0,m.mdx)(p,(0,a.Z)({},i,n,{components:e,mdxType:"MDXLayout"}),(0,m.mdx)("h1",{id:"htmlcontentschemadata"},"HtmlContentSchemaData"),(0,m.mdx)("p",null,"Represents the proposition response object containing a ",(0,m.mdx)("inlineCode",{parentName:"p"},"html-content")," schema."),(0,m.mdx)("h2",{id:"ios-interface"},"iOS Interface"),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-swift"},"@objc(AEPHtmlContentSchemaData)\n@objcMembers\npublic class HtmlContentSchemaData: NSObject, Codable {\n    /// Represents the content of the HtmlContentSchemaData object.\n    public let content: String\n    \n    /// Determines the value type of `content`.  For HtmlContentSchemaData objects, this value is always `.textHtml`.\n    public let format: ContentType?\n\n    ...\n}\n")),(0,m.mdx)("h2",{id:"android-interface"},"Android Interface"),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-java"},"public class HtmlContentSchemaData implements SchemaData {\n    private String content = null;\n    private ContentType format = null;\n\n    @Override\n    @Nullable public String getContent() { return content; }\n\n    public ContentType getFormat() { return format; }\n}\n")))}s.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-edge-adobe-journey-optimizer-public-classes-html-content-schema-data-md-1ca444679572d1c3315a.js.map