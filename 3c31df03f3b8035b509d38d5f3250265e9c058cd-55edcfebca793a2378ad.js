"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[5474],{59006:function(e,a,t){t.r(a),t.d(a,{_frontmatter:function(){return l},default:function(){return x}});var n,r=t(87462),d=t(63366),i=(t(15007),t(64983)),m=t(91515),p=["components"],l={},c=(n="Variant",function(e){return console.warn("Component "+n+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.mdx)("div",e)}),o={_frontmatter:l},s=m.Z;function x(e){var a=e.components,t=(0,d.Z)(e,p);return(0,i.mdx)(s,(0,r.Z)({},o,t,{components:a,mdxType:"MDXLayout"}),(0,i.mdx)(c,{platform:"android",api:"extension-version",repeat:"2",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"java"},"Java"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"String mediaExtensionVersion = Media.extensionVersion();\n")),(0,i.mdx)(c,{platform:"ios-aep",api:"extension-version",repeat:"10",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"swift"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"static var extensionVersion: String\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"let mediaExtensionVersion  = Media.extensionVersion()\n")),(0,i.mdx)("h4",{id:"objective-c"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"+ (nonnull NSString*) extensionVersion;\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"NSString *mediaExtensionVersion = [AEPMobileMedia extensionVersion];\n")),(0,i.mdx)(c,{platform:"ios-acp",api:"extension-version",repeat:"10",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"swift-1"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"+ (nonnull NSString*) extensionVersion;\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"let mediaExtensionVersion  = ACPMedia.extensionVersion()\n")),(0,i.mdx)("h4",{id:"objective-c-1"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"+ (NSString * _Nonnull)extensionVersion\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"NSString *mediaExtensionVersion = [ACPMedia extensionVersion];\n")),(0,i.mdx)(c,{platform:"react-native",api:"extension-version",repeat:"2",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"javascript"},"JavaScript"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-jsx"},'ACPMedia.extensionVersion().then(mediaExtensionVersion => console.log("AdobeExperienceSDK: ACPMedia version: " + mediaExtensionVersion));\n')),(0,i.mdx)(c,{platform:"android",api:"create-tracker",repeat:"7",mdxType:"Variant"}),(0,i.mdx)("p",null,"The createTracker function returns the instance of MediaTracker for tracking a media session. The createTracker function with callback as a parameter has been deprecated."),(0,i.mdx)("p",null,"If MobileCore.resetIdentities() is called in the implementation, the existing tracker will stop sending pings. You will need to create a new tracker to generate a new media session."),(0,i.mdx)("h4",{id:"java-1"},"Java"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"public static MediaTracker createTracker()\n\n// Deprecated\npublic static void createTracker(AdobeCallback<MediaTracker> callback)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"MediaTracker mediaTracker = Media.createTracker();  // Use the instance for tracking media.\n\n// Deprecated\nMedia.createTracker(new AdobeCallback<MediaTracker>() {\n    @Override\n    public void call(MediaTracker mediaTracker) {\n        // Use the instance for tracking media.\n    }\n});\n")),(0,i.mdx)(c,{platform:"ios-aep",api:"create-tracker",repeat:"12",mdxType:"Variant"}),(0,i.mdx)("p",null,"Creates a media tracker instance that tracks the playback session. The tracker created should be used to track the streaming content and it sends periodic pings to the media analytics backend."),(0,i.mdx)("p",null,"If MobileCore.resetIdentities() is called in the implementation, the existing tracker will stop sending pings. You will need to create a new tracker to generate a new media session."),(0,i.mdx)("h4",{id:"swift-2"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"static func createTracker()\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"let tracker = Media.createTracker()  // Use the instance for tracking media.\n")),(0,i.mdx)("h4",{id:"objective-c-2"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"+ (void) createTracker\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objc"},"id<AEPMediaTracker> tracker; \n_tracker = [AEPMobileMedia createTracker];  // Use the instance for tracking media.\n")),(0,i.mdx)(c,{platform:"ios-acp",api:"create-tracker",repeat:"11",mdxType:"Variant"}),(0,i.mdx)("p",null,"The createTracker function returns the instance of ACPMediaTracker for tracking a media session. The createTracker function with callback as a parameter has been deprecated."),(0,i.mdx)("h4",{id:"swift-3"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"static func createTracker()\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"let mediaTracker = ACPMedia.createTracker()  // Use the instance for tracking media.\n\n// Deprecated\nACPMedia.createTracker({mediaTracker in\n    // Use the instance for tracking media.\n})\n")),(0,i.mdx)("h4",{id:"objective-c-3"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"+(ACPMediaTracker* _Nullable) createTracker;\n\n// Deprecated\n+(void) createTracker: (void (^ _Nonnull) (ACPMediaTracker* _Nullable)) callback;\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"ACPMediaTracker *mediaTracker = [ACPMedia createTracker];  // Use the instance for tracking media.\n\n// Deprecated\n[ACPMedia createTracker:^(ACPMediaTracker * _Nullable mediaTracker) {\n    // Use the instance for tracking media.\n}];\n")),(0,i.mdx)(c,{platform:"react-native",api:"create-tracker",repeat:"2",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"javascript-1"},"JavaScript"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-jsx"},"ACPMedia.createTracker().then(tracker =>\n  this.setState({currentTracker: tracker})\n);\n")),(0,i.mdx)(c,{platform:"android",api:"create-tracker-with-config",repeat:"6",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"java-2"},"Java"),(0,i.mdx)("p",null,"Optional configuration about the tracker can be passed to this function. The createTracker function returns the instance of MediaTracker with the configuration for tracking a media session. The createTracker function with callback as a parameter has been deprecated."),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'public class MediaConstants {\n\n    public static final class Config {\n        public static final String CHANNEL = "config.channel";\n        public static final String DOWNLOADED_CONTENT = "config.downloadedcontent";\n    }\n\n}\n\npublic static MediaTracker createTracker(Map<String, Object> config)\n\n// Deprecated\npublic static void createTracker(Map<String, Object> config, final AdobeCallback<MediaTracker> callback)\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'HashMap<String, Object> config = new HashMap<String, Object>();\nconfig.put(MediaConstants.Config.CHANNEL, "custom-channel");  // Override channel configured in the Data Collection UI\nconfig.put(MediaConstants.Config.DOWNLOADED_CONTENT, true);   // Creates downloaded content tracker\n\n\nMediaTracker mediaTracker = Media.createTracker(config);  // Use the instance for tracking media.\n\n// Deprecated\nMedia.createTracker(config, new AdobeCallback<MediaTracker>() {\n    @Override\n    public void call(MediaTracker mediaTracker) {\n        // Use the instance for tracking media.\n    }\n});\n')),(0,i.mdx)(c,{platform:"ios-aep",api:"create-tracker-with-config",repeat:"11",mdxType:"Variant"}),(0,i.mdx)("p",null,"Creates a media tracker instance based on the configuration to track the playback session."),(0,i.mdx)("h4",{id:"swift-4"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"static func createTrackerWith(config: [String: Any]?)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'var config: [String: Any] = [:]\nconfig[MediaConstants.TrackerConfig.CHANNEL] = "custom-channel" // Overrides channel configured in the Data Collection UI\nconfig[MediaConstants.TrackerConfig.DOWNLOADED_CONTENT] = true    // Creates downloaded content tracker\n\nlet tracker = Media.createTrackerWith(config: config)\n')),(0,i.mdx)("h4",{id:"objective-c-4"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"+(id<AEPMediaTracker> _Nonnull) createTrackerWithConfig:(NSDictionary<NSString *,id> * _Nullable)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},'id<AEPMediaTracker> _tracker; \nNSMutableDictionary* config = [NSMutableDictionary dictionary];\n\nconfig[AEPMediaTrackerConfig.CHANNEL] = @"custom-channel"; // Overrides channel configured in the Data Collection UI\nconfig[AEPMediaTrackerConfig.DOWNLOADED_CONTENT] = [NSNumber numberWithBool:true]; // Creates downloaded content tracker\n\n_tracker = [AEPMobileMedia createTrackerWithConfig:config];\n')),(0,i.mdx)(c,{platform:"ios-acp",api:"create-tracker-with-config",repeat:"11",mdxType:"Variant"}),(0,i.mdx)("p",null,"Optional configuration about the tracker can be passed to this function. The createTracker function returns the instance of ACPMediaTracker with the configuration for tracking a media session. The createTracker function with callback as a parameter has been deprecated."),(0,i.mdx)("h4",{id:"swift-5"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"static func createTracker(withConfig config: [AnyHashable : Any]?)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'var config: [String: Any] = [:]\nconfig[ACPMediaKeyConfigChannel] = "custom-channel"  // Override channel configured in the Data Collection UI\nconfig[ACPMediaKeyConfigDownloadedContent] = true    // Creates downloaded content tracker\n\nlet mediaTracker = ACPMedia.createTrackerWithConfig(config); // Use the instance for tracking media.\n\n// Deprecated\nACPMedia.createTrackerWithConfig(config, {mediaTracker in\n    // Use the instance for tracking media.\n}\n')),(0,i.mdx)("h4",{id:"objective-c-5"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"FOUNDATION_EXPORT NSString* _Nonnull const ACPMediaKeyConfigChannel;\nFOUNDATION_EXPORT NSString* _Nonnull const ACPMediaKeyConfigDownloadedContent;\n\n+ (ACPMediaTracker* _Nullable) createTrackerWithConfig: (NSDictionary* _Nullable) config;\n\n// Deprecated\n+ (void) createTrackerWithConfig: (NSDictionary* _Nullable) config\n                        callback: (void (^ _Nonnull) (ACPMediaTracker* _Nullable)) callback;\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},'NSMutableDictionary* config = [NSMutableDictionary dictionary];\nconfig[ACPMediaKeyConfigChannel] = @"custom-channel"; // Override channel configured in the Data Collection UI\nconfig[ACPMediaKeyConfigDownloadedContent] = @YES;    // Creates downloaded content tracker\n\nACPMediaTracker *mediaTracker = [ACPMedia createTrackerWithConfig:config]; // Use the instance for tracking media.\n\n// Deprecated\n[ACPMedia createTrackerWithConfig: config\n                         callback:^(ACPMediaTracker * _Nullable mediaTracker) {\n    // Use the instance for tracking media.\n}];\n')),(0,i.mdx)(c,{platform:"react-native",api:"create-tracker-with-config",repeat:"2",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"javascript-2"},"JavaScript"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-jsx"},'var config = new Object();\nconfig[ACPMediaConstants.ACPMediaKeyConfigChannel] = "customer-channel";  // Override channel configured in the Data Collection UI\nconfig[ACPMediaConstants.ACPMediaKeyConfigDownloadedContent] = true;  // Creates downloaded content tracker\nACPMedia.createTrackerWithConfig(config).then(tracker =>\n  this.setState({currentTracker: tracker})\n);\n')),(0,i.mdx)(c,{platform:"android",api:"create-media-object",repeat:"6",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"java-3"},"Java"),(0,i.mdx)("p",null,"Returns a HashMap instance that contains information about the media."),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"public static HashMap<String, Object> createMediaObject(String name,\n                                                        String mediaId,\n                                                        Double length,\n                                                        String streamType,\n                                                        MediaType mediaType);\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'HashMap<String, Object> mediaInfo = Media.createMediaObject("video-name",\n                                                            "video-id",\n                                                            60D,\n                                                            MediaConstants.StreamType.VOD,\n                                                            Media.MediaType.Video);\n')),(0,i.mdx)(c,{platform:"ios-aep",api:"create-media-object",repeat:"11",mdxType:"Variant"}),(0,i.mdx)("p",null,"Returns a map that contains information about the media."),(0,i.mdx)("h4",{id:"swift-6"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"static func createMediaObjectWith(name: String, \n                                    id: String, \n                                length: Double, \n                            streamType: String,\n                             mediaType: MediaType) -> [String: Any]?\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'let mediaObject = Media.createMediaObjectWith(name: "video-name",\n                                                id: "videoId", \n                                            length: 60,\n                                        streamType: MediaConstants.StreamType.VOD, \n                                         mediaType: MediaType.Video)\n')),(0,i.mdx)("h4",{id:"objective-c-6"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"+ (NSDictionary<NSString *, id> * _Nullable) createMediaObjectWith:(NSString * _Nonnull) id:(NSString * _Nonnull) length:(double) streamType:(NSString * _Nonnull) mediaType:(enum AEPMediaType)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},'NSDictionary *mediaObject = [AEPMobileMedia createMediaObjectWith:@"video-name"\n                                                                id:@"video-id" \n                                                            length:60 \n                                                        streamType:AEPMediaStreamType.VOD\n                                                         mediaType:AEPMediaTypeVideo];\n')),(0,i.mdx)(c,{platform:"ios-acp",api:"create-media-object",repeat:"11",mdxType:"Variant"}),(0,i.mdx)("p",null,"Returns an NSDictionary instance that contains information about the media."),(0,i.mdx)("h4",{id:"swift-7"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"static func createMediaObject(withName name: String, mediaId: String, length: Double, streamType: String, mediaType: ACPMediaType)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'let mediaObject = ACPMedia.createMediaObject(withName: "video-name", mediaId: "video-id",\n                                               length: Double(60),\n                                           streamType: ACPMediaStreamTypeVod,\n                                            mediaType:ACPMediaType.video)\n')),(0,i.mdx)("h4",{id:"objective-c-7"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"+ (NSDictionary* _Nonnull) createMediaObjectWithName: (NSString* _Nonnull) name\n                                             mediaId: (NSString* _Nonnull) mediaId\n                                              length: (double) length\n                                          streamType: (NSString* _Nonnull) streamType\n                                           mediaType: (ACPMediaType) mediaType;\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},'NSDictionary *mediaObject = [ACPMedia createMediaObjectWithName: @"video-name"\n                                                        mediaId: @"video-id"\n                                                         length: 60\n                                                     streamType: ACPMediaStreamTypeVod\n                                                      mediaType: ACPMediaTypeVideo];\n')),(0,i.mdx)(c,{platform:"react-native",api:"create-media-object",repeat:"2",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"javascript-3"},"JavaScript"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-jsx"},'let mediaObject = ACPMedia.createMediaObject("video-name", "video-id", 60, ACPMediaConstants.ACPMediaStreamTypeVod, ACPMediaType.Video);\n')),(0,i.mdx)(c,{platform:"android",api:"create-ad-break-object",repeat:"6",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"java-4"},"Java"),(0,i.mdx)("p",null,"Returns a HashMap instance that contains information about the ad break."),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"public static HashMap<String, Object> createAdBreakObject(String name, Long position, Double startTime);\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'HashMap<String, Object> adBreakObject = Media.createAdBreakObject("adbreak-name", 1L, 0D);\n')),(0,i.mdx)(c,{platform:"ios-aep",api:"create-ad-break-object",repeat:"11",mdxType:"Variant"}),(0,i.mdx)("p",null,"Returns a map that contains information about the ad break."),(0,i.mdx)("h4",{id:"swift-8"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"static func createAdBreakObjectWith(name: String,\n                                position: Int, \n                                startTime: Double) -> [String: Any]?\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'let adBreakObject = Media.createAdBreakObjectWith(name: "adbreak-name", \n                                              position: 1, \n                                             startTime: 0)\n')),(0,i.mdx)("h4",{id:"objective-c-8"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"+ (NSDictionary  <NSString *, id> * _Nullable) createAdBreakObjectWith:(NSString * _Nonnull)position:(NSInteger) startTime:(double)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},'NSDictionary *adBreakObject = [AEPMobileMedia createAdBreakObjectWith:@"adbreak-name" \n                                                             position:1 \n                                                            startTime:0];\n')),(0,i.mdx)(c,{platform:"ios-acp",api:"create-ad-break-object",repeat:"11",mdxType:"Variant"}),(0,i.mdx)("p",null,"Returns an NSDictionary instance that contains information about the ad break."),(0,i.mdx)("h4",{id:"swift-9"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"static func createAdBreakObject(withName name: String, \n                                     position: Double, tartTime: Double)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'let adBreakObject = ACPMedia.createAdBreakObject(withName: "adbreak-name", \n                                                 position: 1, \n                                                startTime: 0)\n')),(0,i.mdx)("h4",{id:"objective-c-9"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"+ (NSDictionary* _Nonnull) createAdBreakObjectWithName: (NSString* _Nonnull) name\n                                              position: (double) position\n                                             startTime: (double) startTime;\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},'NSDictionary *adBreakObject = [ACPMedia createAdBreakObjectWithName: @"adbreak-name"\n                                                           position: 1\n                                                          startTime: 0];\n')),(0,i.mdx)(c,{platform:"react-native",api:"create-ad-break-object",repeat:"2",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"javascript-4"},"JavaScript"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-jsx"},'let adBreakObject = ACPMedia.createAdBreakObject("adbreak-name", 1, 0);\n')),(0,i.mdx)(c,{platform:"android",api:"create-ad-object",repeat:"6",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"java-5"},"Java"),(0,i.mdx)("p",null,"Returns a HashMap instance that contains information about the ad."),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"public static HashMap<String, Object> createAdObject(String name, String adId, Long position, Double length);\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'HashMap<String, Object> adInfo = Media.createAdObject("ad-name", "ad-id", 1L, 15D);\n')),(0,i.mdx)(c,{platform:"ios-aep",api:"create-ad-object",repeat:"11",mdxType:"Variant"}),(0,i.mdx)("p",null,"Returns a map that contains information about the ad."),(0,i.mdx)("h4",{id:"swift-10"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"static func createAdObjectWith(name: String, \n                                 id: String, \n                           position: Int, \n                             length: Double) -> [String: Any]?\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'let adObject = Media.createObjectWith(name: "ad-name", \n                                        id: "ad-id", \n                                  position: 0, \n                                    length: 30)\n')),(0,i.mdx)("h4",{id:"objective-c-10"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"+ (NSDictionary  <NSString *, id> * _Nullable) createAdObjectWith: (NSString * _Nonnull\n                                                               id:(NSString * _Nonnull) \n                                                         position:(NSInteger) \n                                                           length:(double)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},'NSDictionary *adObject = [AEPMobileMedia createAdObjectWith:@"ad-name" \n                                                         id:@"ad-id" \n                                                   position:0 \n                                                     length:30];\n')),(0,i.mdx)(c,{platform:"ios-acp",api:"create-ad-object",repeat:"11",mdxType:"Variant"}),(0,i.mdx)("p",null,"Returns an NSDictionary instance that contains information about the ad."),(0,i.mdx)("h4",{id:"swift-11"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"static func createAdObject(withName name: String, \n                                    adId: String, \n                                position: Double, \n                                  length: Double)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'let adObject = ACPMedia.createAdObject(withName: "ad-name", \n                                           adId: "ad-id", \n                                       position: 1, \n                                         length: 15)\n')),(0,i.mdx)("h4",{id:"objective-c-11"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"+ (NSDictionary* _Nonnull) createAdObjectWithName: (NSString* _Nonnull) name\n                                             adId: (NSString* _Nonnull) adId\n                                         position: (double) position\n                                           length: (double) length;\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},'NSDictionary *adObject = [ACPMedia createAdObjectWithName: @"ad-name"\n                                                     adId: @"ad-id"\n                                                 position: 1\n                                                   length: 15];\n')),(0,i.mdx)(c,{platform:"react-native",api:"create-ad-object",repeat:"2",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"javascript-5"},"JavaScript"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-jsx"},'let adObject = ACPMedia.createAdObject("ad-name", "ad-id", 1, 15);\n')),(0,i.mdx)(c,{platform:"android",api:"create-chapter-object",repeat:"6",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"java-6"},"Java"),(0,i.mdx)("p",null,"Returns a HashMap instance that contains information about the chapter."),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"public static HashMap<String, Object> createChapterObject(String name,\n                                                          Long position,\n                                                          Double length,\n                                                          Double startTime);\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'HashMap<String, Object> chapterInfo = Media.createChapterObject("chapter-name", 1L, 60D, 0D);\n')),(0,i.mdx)(c,{platform:"ios-aep",api:"create-chapter-object",repeat:"11",mdxType:"Variant"}),(0,i.mdx)("p",null,"Returns a map that contains information about the chapter."),(0,i.mdx)("h4",{id:"swift-12"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"static func createChapterObjectWith(name: String, \n                                position: Int, \n                                  length: Double, \n                               startTime: Double) -> [String: Any]?\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'let chapterObject = Media.createChapterObjectWith(name: "chapter_name", \n                                              position: 1, \n                                                length: 60, \n                                             startTime: 0)\n')),(0,i.mdx)("h4",{id:"objective-c-12"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"+ (NSDictionary  <NSString *, id> * _Nullable) createChapterObjectWith:(NSString * _Nonnull)\n                                                              position:(NSInteger) \n                                                                length:(double) \n                                                             startTime:(double)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivc"},'NSDictionary *chapterObject = [AEPMobileMedia createChapterObjectWith:@"chapter_name" \n                                                             position:1 \n                                                               length:60 \n                                                            startTime:0];\n')),(0,i.mdx)(c,{platform:"ios-acp",api:"create-chapter-object",repeat:"11",mdxType:"Variant"}),(0,i.mdx)("p",null,"Returns an NSDictionary instance that contains information about the chapter."),(0,i.mdx)("h4",{id:"swift-13"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"static func createChapterObject(withName name: String, \n                                     position: Double, \n                                       length: Double, \n                                    startTime: Double)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'let chapterObject = ACPMedia.createChapterObject(withName: "chapter-name", position: 1, length: 60, startTime: 0)\n')),(0,i.mdx)("h4",{id:"objective-c-13"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"+ (NSDictionary* _Nonnull) createChapterObjectWithName: (NSString* _Nonnull) name\n                                              position: (double) position\n                                                length: (double) length\n                                             startTime: (double) startTime;\n\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},'NSDictionary *chapterObject = [ACPMedia createChapterObjectWithName: @"chapter-name"\n                                                           position: 1\n                                                             length: 60\n                                                          startTime: 0];\n')),(0,i.mdx)(c,{platform:"react-native",api:"create-chapter-object",repeat:"2",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"javascript-6"},"JavaScript"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-jsx"},"let chapterObject = ACPMedia.createChapterObject('chapter-name', 1, 60, 0);\n")),(0,i.mdx)(c,{platform:"android",api:"create-qoe-object",repeat:"6",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"java-7"},"Java"),(0,i.mdx)("p",null,"Returns a HashMap instance that contains information about the quality of experience."),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"public static HashMap<String, Object> createQoEObject(Long bitrate,\n                                                      Double startupTime,\n                                                      Double fps,\n                                                      Long droppedFrames);\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"HashMap<String, Object> qoeInfo = Media.createQoEObject(10000000L, 2D, 23D, 10D);\n")),(0,i.mdx)(c,{platform:"ios-aep",api:"create-qoe-object",repeat:"11",mdxType:"Variant"}),(0,i.mdx)("p",null,"Returns a map that contains information about the quality of experience."),(0,i.mdx)("h4",{id:"swift-14"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"static func createQoEObjectWith(bitrate: Double, \n                            startupTime: Double, \n                                    fps: Double, \n                          droppedFrames: Double) -> [String: Any]?\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"let qoeObject = Media.createQoEObjectWith(bitrate: 500000, \n                                      startupTime: 2, \n                                              fps: 24, \n                                    droppedFrames: 10)\n")),(0,i.mdx)("h4",{id:"objective-c-14"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"+ (NSDictionary  <NSString *, id> * _Nullable) createQoEObjectWith:(double) \n                                                         startTime:(double) \n                                                               fps:(double) \n                                                     droppedFrames:(double)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"NSDictionary *qoeObject = [AEPMobileMedia createQoEObjectWith:500000 \n                                                    startTime:2 \n                                                          fps:24 \n                                                droppedFrames:10];\n")),(0,i.mdx)(c,{platform:"ios-acp",api:"create-qoe-object",repeat:"11",mdxType:"Variant"}),(0,i.mdx)("p",null,"Returns an NSDictionary instance that contains information about the quality of experience."),(0,i.mdx)("h4",{id:"swift-15"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"static func createQoEObject(withBitrate bitrate: Double, \n                                    startupTime: Double, \n                                            fps: Double, \n                                  droppedFrames: Double)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"let qoeObject = ACPMedia.createQoEObject(withBitrate: 10000000, startupTime: 2, fps: 23, droppedFrames: 10)\n")),(0,i.mdx)("h4",{id:"objective-c-15"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"+ (NSDictionary* _Nonnull) createQoEObjectWithBitrate: (double) bitrate\n                                          startupTime: (double) startupTime\n                                                  fps: (double) fps\n                                        droppedFrames: (double) droppedFrames;\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"NSDictionary *qoeObject = [ACPMedia createQoEObjectWithBitrate: 10000000\n                                                   startupTime: 2\n                                                           fps: 23\n                                                 droppedFrames: 10];\n")),(0,i.mdx)(c,{platform:"react-native",api:"create-qoe-object",repeat:"2",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"javascript-7"},"JavaScript"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-jsx"},"let qoeObject = ACPMedia.createQoEObject(1000000, 2, 23, 10);\n")),(0,i.mdx)(c,{platform:"android",api:"create-state-object",repeat:"6",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"java-8"},"Java"),(0,i.mdx)("p",null,"Returns a HashMap instance that contains information about the State."),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"public static HashMap<String, Object> createStateObject(String stateName);\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'HashMap<String, Object> playerStateInfo = Media.createStateObject("fullscreen");\n')),(0,i.mdx)(c,{platform:"ios-aep",api:"create-state-object",repeat:"11",mdxType:"Variant"}),(0,i.mdx)("p",null,"Returns a map that contains information about the player state."),(0,i.mdx)("h4",{id:"swift-16"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"static func createStateObjectWith(stateName: String) -> [String: Any]\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'let fullScreenState = Media.createStateObjectWith(stateName: "fullscreen")\n')),(0,i.mdx)("h4",{id:"objective-c-16"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"+ (NSDictionary  <NSString *, id> * _Nullable) createStateObjectWith:(NSString * _Nonnull)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"NSDictionary* fullScreenState = [AEPMobileMedia createStateObjectWith:AEPMediaPlayerState.FULLSCREEN]\n")),(0,i.mdx)(c,{platform:"ios-acp",api:"create-state-object",repeat:"11",mdxType:"Variant"}),(0,i.mdx)("p",null,"Returns an NSDictionary instance that contains information about the player state."),(0,i.mdx)("h4",{id:"swift-17"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"static func createStateObject(withName stateName: String)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'let playerStateObject = ACPMedia.createStateObject(withName: "fullscreen")\n')),(0,i.mdx)("h4",{id:"objective-c-17"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"+ (NSDictionary* _Nonnull) createStateObjectWithName: (NSString* _Nonnull) stateName;\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},'NSDictionary *playerStateObject = [ACPMedia createStateObjectWithName: @"fullscreen"];\n')),(0,i.mdx)(c,{platform:"react-native",api:"create-state-object",repeat:"2",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"javascript-8"},"JavaScript"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-jsx"},'let playerStateObject = ACPMedia.createStateObject("fullscreen");\n')),(0,i.mdx)(c,{platform:"android",api:"track-session-start",repeat:"5",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"java-9"},"Java"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"public void trackSessionStart(Map<String, Object> mediaInfo, Map<String, String> contextData);\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'HashMap<String, Object> mediaObject = Media.createMediaObject("media-name", "media-id", 60D, MediaConstants.StreamType.VOD, Media.MediaType.Video);\n\nHashMap<String, String> mediaMetadata = new HashMap<String, String>();\n// Standard metadata keys provided by adobe.\nmediaMetadata.put(MediaConstants.VideoMetadataKeys.EPISODE, "Sample Episode");\nmediaMetadata.put(MediaConstants.VideoMetadataKeys.SHOW, "Sample Show");\n\n// Custom metadata keys\nmediaMetadata.put("isUserLoggedIn", "false");\nmediaMetadata.put("tvStation", "Sample TV Station");\n\n_tracker.trackSessionStart(mediaInfo, mediaMetadata);\n')),(0,i.mdx)(c,{platform:"ios-aep",api:"track-session-start",repeat:"10",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"swift-18"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"public func trackSessionStart(info: [String: Any], metadata: [String: String]? = nil)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'let mediaObject = Media.createMediaObjectWith(name: "video-name", id: "videoId", length: 60, streamType: MediaConstants.StreamType.VOD, mediaType: MediaType.Video)\n\nvar videoMetadata: [String: String] = [:]\n// Sample implementation for using video standard metadata keys\nvideoMetadata[MediaConstants.VideoMetadataKeys.SHOW] = "Sample show"\nvideoMetadata[MediaConstants.VideoMetadataKeys.SEASON] = "Sample season"\n\n// Sample implementation for using custom metadata keys\nvideoMetadata["isUserLoggedIn"] = "false"\nvideoMetadata["tvStation"] = "Sample TV station"\n\ntracker.trackSessionStart(info: mediaObject, metadata: videoMetadata)\n')),(0,i.mdx)("h4",{id:"objective-c-18"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"+ (void) trackSessionStart:(NSDictionary<NSString *,id> * _Nonnull) metadata:(NSDictionary<NSString *,NSString *> * _Nullable)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},'NSDictionary *mediaObject = [AEPMobileMedia createMediaObjectWith:@"video-name" id:@"video-id" length:60 streamType:AEPMediaStreamType.VOD mediaType:AEPMediaTypeVideo];\n\nNSMutableDictionary *videoMetadata = [[NSMutableDictionary alloc] init];\n// Sample implementation for using standard video metadata keys\n[videoMetadata setObject:@"Sample show" forKey:AEPVideoMetadataKeys.SHOW];\n[videoMetadata setObject:@"Sample Season" forKey:AEPVideoMetadataKeys.SEASON];\n\n// Sample implementation for using custom metadata keys\n[videoMetadata setObject:@"false" forKey:@"isUserLoggedIn"];\n[videoMetadata setObject:@"Sample TV station" forKey:@"tvStation"];\n\n[_tracker trackSessionStart:mediaObject metadata:videoMetadata];\n')),(0,i.mdx)(c,{platform:"ios-acp",api:"track-session-start",repeat:"10",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"swift-19"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"func trackSessionStart(_ mediaInfo: [AnyHashable : Any], data contextData: [AnyHashable : Any]?)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'let mediaObject = ACPMedia.createMediaObject(withName: "media-name", mediaId: "media-id", length: 60, streamType: ACPMediaStreamTypeVod, mediaType:ACPMediaType.video)\n\n// Standard metadata keys provided by adobe.      \nvar mediaMetadata = [ACPVideoMetadataKeyShow: "Sample show", ACPVideoMetadataKeySeason: "Sample season"]\n\n// Custom metadata keys      \nmediaMetadata["isUserLoggedIn"] = "false"\nmediaMetadata["tvStation"] = "Sample TV station"\n\n_tracker.trackSessionStart(mediaObject, data: mediaMetadata)\n')),(0,i.mdx)("h4",{id:"objective-c-19"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"- (void) trackSessionStart: (NSDictionary* _Nonnull) mediaInfo data: (NSDictionary* _Nullable) contextData;\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},'NSDictionary *mediaObject = [ACPMedia createMediaObjectWithName:@"media-name" mediaId:@"media-id" length:60 streamType:ACPMediaStreamTypeVod mediaType:ACPMediaTypeVideo];\n\nNSMutableDictionary *mediaMetadata = [[NSMutableDictionary alloc] init];\n// Standard metadata keys provided by adobe.\n[mediaMetadata setObject:@"Sample show" forKey:ACPVideoMetadataKeyShow];\n[mediaMetadata setObject:@"Sample season" forKey:ACPVideoMetadataKeySeason];\n\n// Custom metadata keys\n[mediaMetadata setObject:@"false" forKey:@"isUserLoggedIn"];\n[mediaMetadata setObject:@"Sample TV station" forKey:@"tvStation"];\n\n[_tracker trackSessionStart:mediaObject data:mediaMetadata];\n')),(0,i.mdx)(c,{platform:"react-native",api:"track-session-start",repeat:"2",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"javascript-9"},"JavaScript"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-jsx"},'let mediaObject = ACPMedia.createMediaObject("media-name", "media-id", 60, ACPMediaConstants.ACPMediaStreamTypeVod, ACPMediaType.Video);\nvar mediaMetadata = new Object();\nmediaMetadata[ACPMediaConstants.ACPVideoMetadataKeyShow] = "Sample Show";\nmediaMetadata[ACPMediaConstants.ACPVideoMetadataKeySeason] = "Sample Season";\n\n// Custom metadata keys\nmediaMetadata["isUserLoggedIn"] = "false";\nmediaMetadata["tvStation"] = "Sample TV station";\n\ntracker.trackSessionStart(mediaObject, mediaMetadata);\n')),(0,i.mdx)(c,{platform:"android",api:"track-play",repeat:"5",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"java-10"},"Java"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"public void trackPlay();\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"_tracker.trackPlay();\n")),(0,i.mdx)(c,{platform:"ios-aep",api:"track-play",repeat:"10",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"swift-20"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"func trackPlay()\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"tracker.trackPlay()\n")),(0,i.mdx)("h4",{id:"objective-c-20"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"- (void) trackPlay;\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"[_tracker trackPlay];\n")),(0,i.mdx)(c,{platform:"ios-acp",api:"track-play",repeat:"10",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"swift-21"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"func trackPlay()\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"_tracker.trackPlay()\n")),(0,i.mdx)("h4",{id:"objective-c-21"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"- (void) trackPlay;\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"[_tracker trackPlay];\n")),(0,i.mdx)(c,{platform:"react-native",api:"track-play",repeat:"2",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"javascript-10"},"JavaScript"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-jsx"},"tracker.trackPlay();\n")),(0,i.mdx)(c,{platform:"android",api:"track-pause",repeat:"5",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"java-11"},"Java"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"public void trackPause();\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"_tracker.trackPause();\n")),(0,i.mdx)(c,{platform:"ios-aep",api:"track-pause",repeat:"10",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"swift-22"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"func trackPause()\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"tracker.trackPause()\n")),(0,i.mdx)("h4",{id:"objective-c-22"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"- (void) trackPause\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"[_tracker trackPause];\n")),(0,i.mdx)(c,{platform:"ios-acp",api:"track-pause",repeat:"10",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"swift-23"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"func trackPause()\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"_tracker.trackPause()\n")),(0,i.mdx)("h4",{id:"objective-c-23"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"- (void) trackPause;\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"[_tracker trackPause];\n")),(0,i.mdx)(c,{platform:"react-native",api:"track-pause",repeat:"2",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"javascript-11"},"JavaScript"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-jsx"},"tracker.trackPause();\n")),(0,i.mdx)(c,{platform:"android",api:"track-complete",repeat:"5",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"java-12"},"Java"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"public void trackComplete();\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"_tracker.trackComplete();\n")),(0,i.mdx)(c,{platform:"ios-aep",api:"track-complete",repeat:"10",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"swift-24"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"func trackComplete()\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"tracker.trackComplete()\n")),(0,i.mdx)("h4",{id:"objective-c-24"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"- (void) trackComplete\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"[_tracker trackComplete];\n")),(0,i.mdx)(c,{platform:"ios-acp",api:"track-complete",repeat:"10",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"swift-25"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"func trackComplete()\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"_tracker.trackComplete()\n")),(0,i.mdx)("h4",{id:"objective-c-25"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"- (void) trackComplete;\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"[_tracker trackComplete];\n")),(0,i.mdx)(c,{platform:"react-native",api:"track-complete",repeat:"2",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"javascript-12"},"JavaScript"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-jsx"},"tracker.trackComplete();\n")),(0,i.mdx)(c,{platform:"android",api:"track-session-end",repeat:"5",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"java-13"},"Java"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"public void trackSessionEnd();\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"_tracker.trackSessionEnd();\n")),(0,i.mdx)(c,{platform:"ios-aep",api:"track-session-end",repeat:"10",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"swift-26"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"func trackSessionEnd()\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"tracker.trackSessionEnd()\n")),(0,i.mdx)("h4",{id:"objective-c-26"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"- (void) trackSessionEnd\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"[_tracker trackSessionEnd];\n")),(0,i.mdx)(c,{platform:"ios-acp",api:"track-session-end",repeat:"10",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"swift-27"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"func trackSessionEnd()\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"_tracker.trackSessionEnd()\n")),(0,i.mdx)("h4",{id:"objective-c-27"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"- (void) trackSessionEnd;\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"[_tracker trackSessionEnd];\n")),(0,i.mdx)(c,{platform:"react-native",api:"track-session-end",repeat:"2",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"javascript-13"},"JavaScript"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-jsx"},"tracker.trackSessionEnd();\n")),(0,i.mdx)(c,{platform:"android",api:"track-error",repeat:"5",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"java-14"},"Java"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"public void trackError(String errorId);\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'_tracker.trackError("errorId");\n')),(0,i.mdx)(c,{platform:"ios-aep",api:"track-error",repeat:"10",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"swift-28"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"func trackError(errorId: String)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'tracker.trackError(errorId: "errorId")\n')),(0,i.mdx)("h4",{id:"objective-c-28"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"- (void) trackError:(NSString * _Nonnull)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},'[_tracker trackError:@"errorId"];\n')),(0,i.mdx)(c,{platform:"ios-acp",api:"track-error",repeat:"10",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"swift-29"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"func trackError(_ errorId: String)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'_tracker.trackError("errorId")\n')),(0,i.mdx)("h4",{id:"objective-c-29"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"- (void) trackError: (NSString* _Nonnull) errorId;\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},'[_tracker trackError:@"errorId"];\n')),(0,i.mdx)(c,{platform:"react-native",api:"track-error",repeat:"2",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"javascript-14"},"JavaScript"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-jsx"},'tracker.trackError("errorId");\n')),(0,i.mdx)(c,{platform:"android",api:"track-event",repeat:"16",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"java-15"},"Java"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"  public void trackEvent(Media.Event event,\n                         Map<String, Object> info,\n                         Map<String, String> data);\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Examples")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking player states")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'// StateStart\n  HashMap<String, Object> stateObject = Media.createStateObject("fullscreen");\n  _tracker.trackEvent(Media.Event.StateStart, stateObject, null);\n\n// StateEnd\n  HashMap<String, Object> stateObject = Media.createStateObject("fullscreen");\n  _tracker.trackEvent(Media.Event.StateEnd, stateObject, null);\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking ad breaks")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'// AdBreakStart\n  HashMap<String, Object> adBreakObject = Media.createAdBreakObject("adbreak-name", 1L, 0D);\n  _tracker.trackEvent(Media.Event.AdBreakStart, adBreakObject, null);\n\n// AdBreakComplete\n  _tracker.trackEvent(Media.Event.AdBreakComplete, null, null);\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking ads")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'// AdStart\n  HashMap<String, Object> adObject = Media.createAdObject("ad-name", "ad-id", 1L, 15D);\n\n  HashMap<String, String> adMetadata = new HashMap<String, String>();\n  // Standard metadata keys provided by adobe.\n  adMetadata.put(MediaConstants.AdMetadataKeys.ADVERTISER, "Sample Advertiser");\n  adMetadata.put(MediaConstants.AdMetadataKeys.CAMPAIGN_ID, "Sample Campaign");\n  // Custom metadata keys\n  adMetadata.put("affiliate", "Sample affiliate");\n\n  _tracker.trackEvent(Media.Event.AdStart, adObject, adMetadata);\n\n// AdComplete\n  _tracker.trackEvent(Media.Event.AdComplete, null, null);\n\n// AdSkip\n  _tracker.trackEvent(Media.Event.AdSkip, null, null);\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking chapters")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'// ChapterStart\n  HashMap<String, Object> chapterObject = Media.createChapterObject("chapter-name", 1L, 60D, 0D);\n\n  HashMap<String, String> chapterMetadata = new HashMap<String, String>();\n  chapterMetadata.put("segmentType", "Sample segment type");\n\n  _tracker.trackEvent(Media.Event.ChapterStart, chapterDataInfo, chapterMetadata);\n\n// ChapterComplete\n  _tracker.trackEvent(Media.Event.ChapterComplete, null, null);\n\n// ChapterSkip\n  _tracker.trackEvent(Media.Event.ChapterSkip, null, null);\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking playback events")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"// BufferStart\n  _tracker.trackEvent(Media.Event.BufferStart, null, null);\n\n// BufferComplete\n  _tracker.trackEvent(Media.Event.BufferComplete, null, null);\n\n// SeekStart\n  _tracker.trackEvent(Media.Event.SeekStart, null, null);\n\n// SeekComplete\n  _tracker.trackEvent(Media.Event.SeekComplete, null, null);\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking bitrate changes")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"// If the new bitrate value is available provide it to the tracker.\n  HashMap<String, Object> qoeObject = Media.createQoEObject(2000000L, 2D, 25D, 10D);\n  _tracker.updateQoEObject(qoeObject);\n\n// Bitrate change\n  _tracker.trackEvent(Media.Event.BitrateChange, null, null);\n")),(0,i.mdx)(c,{platform:"ios-aep",api:"track-event",repeat:"32",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"swift-30"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"func trackEvent(event: MediaEvent, info: [String: Any]?, metadata: [String: String]?)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Examples")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking player states")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"// StateStart\n  let fullScreenState = Media.createStateObjectWith(stateName: MediaConstants.PlayerState.FULLSCREEN)\n  tracker.trackEvent(event: MediaEvent.StateStart, info: fullScreenState, metadata: nil)\n\n// StateEnd\n  let fullScreenState = Media.createStateObjectWith(stateName: MediaConstants.PlayerState.FULLSCREEN)\n  tracker.trackEvent(event: MediaEvent.StateEnd, info: fullScreenState, metadata: nil)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking ad breaks")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'// AdBreakStart\n  let adBreakObject = Media.createAdBreakObjectWith(name: "adbreak-name", position: 1, startTime: 0)\n  tracker.trackEvent(event: MediaEvent.AdBreakStart, info: adBreakObject, metadata: nil)\n\n// AdBreakComplete\n  tracker.trackEvent(event: MediaEvent.AdBreakComplete, info: nil, metadata: nil)\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking ads")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'// AdStart\n  let adObject = Media.createObjectWith(name: "adbreak-name", id: "ad-id", position: 0, length: 30)\n\n// Standard metadata keys provided by adobe.\n  var adMetadata: [String: String] = [:]\n  adMetadata[MediaConstants.AdMetadataKeys.ADVERTISER] = "Sample Advertiser"\n  adMetadata[MediaConstants.AdMetadataKeys.CAMPAIGN_ID] = "Sample Campaign"\n\n// Custom metadata keys\n  adMetadata["affiliate"] = "Sample affiliate"\n\n  tracker.trackEvent(event: MediaEvent.AdStart, info: adObject, metadata: adMetadata)\n\n// AdComplete\n  tracker.trackEvent(event: MediaEvent.AdComplete, info: nil, metadata: nil)\n\n// AdSkip\n   tracker.trackEvent(event: MediaEvent.AdSkip, info: nil, metadata: nil)\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking chapters")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'// ChapterStart\n  let chapterObject = Media.createChapterObjectWith(name: "chapter_name", position: 1, length: 60, startTime: 0)\n  let chapterDictionary = ["segmentType": "Sample segment type"]\n\n  tracker.trackEvent(event: MediaEvent.ChapterStart, info: chapterObject, metadata: chapterDictionary)\n\n// ChapterComplete\n  tracker.trackEvent(event: MediaEvent.ChapterComplete, info: nil, metadata: nil)\n\n// ChapterSkip\n  tracker.trackEvent(event: MediaEvent.ChapterSkip, info: nil, metadata: nil)\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking playback events")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"// BufferStart\n   tracker.trackEvent(event: MediaEvent.BufferStart, info: nil, metadata: nil)\n\n// BufferComplete\n   tracker.trackEvent(event: MediaEvent.BufferComplete, info: nil, metadata: nil)\n\n// SeekStart\n   tracker.trackEvent(event: MediaEvent.SeekStart, info: nil, metadata: nil)\n\n// SeekComplete\n   tracker.trackEvent(event: MediaEvent.SeekComplete, info: nil, metadata: nil)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking bitrate change")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"// If the new bitrate value is available provide it to the tracker.\n  let qoeObject = Media.createQoEObjectWith(bitrate: 500000, startupTime: 2, fps: 24, droppedFrames: 10)\n  tracker.updateQoEObject(qoeObject)\n\n// Bitrate change\n  tracker.trackEvent(event: MediaEvent.BitrateChange, info: nil, metadata: nil)\n")),(0,i.mdx)("h4",{id:"objective-c-30"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"- (void) trackEvent:(enum AEPMediaEvent) info:(NSDictionary<NSString *,id> * _Nullable) metadata:(NSDictionary<NSString *,NSString *> * _Nullable)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Examples")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking player states")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"// StateStart\n  NSDictionary* fullScreenState = [AEPMobileMedia createStateObjectWith:AEPMediaPlayerState.FULLSCREEN];\n  [_tracker trackEvent:AEPMediaEventStateStart info:fullScreenState metadata:nil];\n\n// StateEnd\n  NSDictionary* fullScreenState = [AEPMobileMedia createStateObjectWith:AEPMediaPlayerState.FULLSCREEN];\n  [_tracker trackEvent:AEPMediaEventStateEnd info:fullScreenState metadata:nil];\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking ad breaks")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},'// AdBreakStart\n  NSDictionary *adBreakObject = [AEPMobileMedia createAdBreakObjectWith:@"adbreak-name" position:1 startTime:0];\n  [_tracker trackEvent:AEPMediaEventAdBreakStart info:adBreakObject metadata:nil];\n\n// AdBreakComplete\n  [_tracker trackEvent:AEPMediaEventAdBreakComplete info:nil metadata:nil];\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking ads")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},'// AdStart\n  NSDictionary *adObject = [AEPMobileMedia createAdObjectWith:@"ad-name" id:@"ad-id" position:0 length:30];\n  NSMutableDictionary* adMetadata = [[NSMutableDictionary alloc] init];\n\n// Standard metadata keys provided by adobe.\n  [adMetadata setObject:@"Sample Advertiser" forKey:AEPAdMetadataKeys.ADVERTISER];\n  [adMetadata setObject:@"Sample Campaign" forKey:AEPAdMetadataKeys.CAMPAIGN_ID];\n\n// Custom metadata keys\n  [adMetadata setObject:@"Sample affiliate" forKey:@"affiliate"];\n\n  [_tracker trackEvent:AEPMediaEventAdStart info:adObject metadata:adMetadata];\n\n// AdComplete\n  [_tracker trackEvent:AEPMediaEventAdComplete info:nil metadata:nil];\n\n// AdSkip\n  [_tracker trackEvent:AEPMediaEventAdSkip info:nil metadata:nil];\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking chapters")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},'// ChapterStart\n  NSDictionary *chapterObject = [AEPMobileMedia createChapterObjectWith:@"chapter_name" position:1 length:60 startTime:0];\n\n  NSMutableDictionary *chapterMetadata = [[NSMutableDictionary alloc] init];\n  [chapterMetadata setObject:@"Sample segment type" forKey:@"segmentType"];\n\n  [_tracker trackEvent:AEPMediaEventChapterStart info:chapterObject metadata:chapterMetadata];\n\n// ChapterComplete\n  [_tracker trackEvent:AEPMediaEventChapterComplete info:nil metadata:nil];\n\n// ChapterSkip\n  [_tracker trackEvent:AEPMediaEventChapterSkip info:nil metadata:nil];\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking playback events")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"// BufferStart\n  [_tracker trackEvent:AEPMediaEventBufferStart info:nil metadata:nil];\n\n// BufferComplete\n  [_tracker trackEvent:AEPMediaEventBufferComplete info:nil metadata:nil];\n\n// SeekStart\n  [_tracker trackEvent:AEPMediaEventSeekStart info:nil metadata:nil];\n\n// SeekComplete\n  [_tracker trackEvent:AEPMediaEventSeekComplete info:nil metadata:nil];\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking bitrate change")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"// If the new bitrate value is available provide it to the tracker.\n  NSDictionary *qoeObject = [AEPMobileMedia createQoEObjectWith:50000 startTime:2 fps:24 droppedFrames:10];\n\n// Bitrate change\n  [_tracker trackEvent:AEPMediaEventBitrateChange info:nil metadata:nil];\n")),(0,i.mdx)(c,{platform:"ios-acp",api:"track-event",repeat:"32",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"swift-31"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"func trackEvent(_ event: ACPMediaEvent, info: [AnyHashable : Any]?, data: [AnyHashable : Any]?)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Examples")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking player states")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'// StateStart\n  let stateObject = ACPMedia.createStateObject(withName: "fullscreen")\n  _tracker.trackEvent(ACPMediaEvent.stateStart, info: stateObject, data: nil)\n\n// StateEnd\n  let stateObject = ACPMedia.createStateObject(withName: "fullscreen")\n  _tracker.trackEvent(ACPMediaEvent.stateEnd, info: stateObject, data: nil)\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking ad breaks")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'// AdBreakStart\n  let adBreakObject = ACPMedia.createAdBreakObject(withName: "adbreak-name", position: 1, startTime: 0)\n  _tracker.trackEvent(ACPMediaEvent.adBreakStart, mediaObject: adBreakObject, data: nil)\n\n// AdBreakComplete\n  _tracker.trackEvent(ACPMediaEvent.adBreakComplete, mediaObject: nil, data: nil)\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking ads")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'// AdStart\n  let adObject = ACPMedia.createAdObject(withName: "ad-name", adId: "ad-id", position: 1, length: 15)\n\n  // Standard metadata keys provided by adobe.\n  var adMetadata = [ACPAdMetadataKeyAdvertiser: "Sample Advertiser", ACPAdMetadataKeyCampaignId: "Sample Campaign"]\n  // Custom metadata keys\n  adMetadata["affiliate"] = "Sample affiliate"\n\n  _tracker.trackEvent(ACPMediaEvent.adStart, mediaObject: adObject, data: adMetadata)\n\n// AdComplete\n  _tracker.trackEvent(ACPMediaEvent.adComplete, mediaObject: nil, data: nil)\n\n// AdSkip\n  _tracker.trackEvent(ACPMediaEvent.adSkip, mediaObject: nil, data: nil)\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking chapters")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'// ChapterStart\n  let chapterObject = ACPMedia.createChapterObject(withName: "chapter-name", position: 1, length: 60, startTime: 0)\n  let chapterMetadata = ["Sample segment type": "segmentType"];\n\n  _tracker.trackEvent(ACPMediaEvent.chapterStart, mediaObject: chapterObject, data: chapterMetadata)\n\n// ChapterComplete\n  _tracker.trackEvent(ACPMediaEvent.chapterComplete, mediaObject: nil, data: nil)\n\n// ChapterSkip\n  _tracker.trackEvent(ACPMediaEvent.chapterSkip, mediaObject: nil, data: nil)\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking playback events")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"// BufferStart\n  _tracker.trackEvent(ACPMediaEvent.bufferStart, mediaObject: nil, data: nil)\n\n// BufferComplete\n  _tracker.trackEvent(ACPMediaEvent.bufferComplete, mediaObject: nil, data: nil)\n\n// SeekStart\n  _tracker.trackEvent(ACPMediaEvent.seekStart, mediaObject: nil, data: nil)\n\n// SeekComplete\n  _tracker.trackEvent(ACPMediaEvent.seekComplete, mediaObject: nil, data: nil)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking bitrate change")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"// If the new bitrate value is available provide it to the tracker.\n  let qoeObject = ACPMedia.createQoEObject(withBitrate: 2000000, startupTime: 2, fps: 25, droppedFrames: 10)\n  _tracker.updateQoEObject(qoeObject)\n\n// Bitrate change\n  _tracker.trackEvent(ACPMediaEvent.bitrateChange, mediaObject: nil, data: nil)\n")),(0,i.mdx)("h4",{id:"objective-c-31"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"  - (void) trackEvent: (ACPMediaEvent) event\n                 info: (NSDictionary* _Nullable) info\n                 data: (NSDictionary* _Nullable) data;\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Examples")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking player states")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},'// StateStart\n  NSDictionary* stateObject = [ACPMedia createStateObjectWithName:@"fullscreen"];\n  [_tracker trackEvent:ACPMediaEventStateStart mediaObject:stateObject data:nil];\n\n// StateEnd\n  NSDictionary* stateObject = [ACPMedia createStateObjectWithName:@"fullscreen"];\n  [_tracker trackEvent:ACPMediaEventStateEnd mediaObject:stateObject data:nil];\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking ad breaks")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},'// AdBreakStart\n  NSDictionary* adBreakObject = [ACPMedia createAdBreakObjectWithName:@"adbreak-name" position:1 startTime:0];\n  [_tracker trackEvent:ACPMediaEventAdBreakStart mediaObject:adBreakObject data:nil];\n\n// AdBreakComplete\n  [_tracker trackEvent:ACPMediaEventAdBreakComplete mediaObject:nil data:nil];\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking ads")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},'// AdStart\n  NSDictionary* adObject = [ACPMedia createAdObjectWithName:@"ad-name" adId:@"ad-id" position:1 length:15];\n  NSMutableDictionary* adMetadata = [[NSMutableDictionary alloc] init];\n\n  // Standard metadata keys provided by adobe.\n  [adMetadata setObject:@"Sample Advertiser" forKey:ACPAdMetadataKeyAdvertiser];\n  [adMetadata setObject:@"Sample Campaign" forKey:ACPAdMetadataKeyCampaignId];\n  // Custom metadata keys\n  [adMetadata setObject:@"Sample affiliate" forKey:@"affiliate"];\n\n  [_tracker trackEvent:ACPMediaEventAdStart mediaObject:adObject data:adMetadata];\n\n// AdComplete\n  [_tracker trackEvent:ACPMediaEventAdComplete mediaObject:nil data:nil];\n\n// AdSkip\n  [_tracker trackEvent:ACPMediaEventAdSkip mediaObject:nil data:nil];\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking chapters")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},'// ChapterStart\n  NSDictionary* chapterObject = [ACPMedia createChapterObjectWithName:@"chapter-name" position:1 length:30 startTime:0];\n\n  NSMutableDictionary *chapterMetadata = [[NSMutableDictionary alloc] init];\n  [chapterMetadata setObject:@"Sample segment type" forKey:@"segmentType"];\n\n  [_tracker trackEvent:ACPMediaEventChapterStart mediaObject:chapterObject data:chapterMetadata];\n\n// ChapterComplete\n  [_tracker trackEvent:ACPMediaEventChapterComplete mediaObject:nil    data:nil];\n\n// ChapterSkip\n  [_tracker trackEvent:ACPMediaEventChapterSkip mediaObject:nil    data:nil];\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking playback events")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"// BufferStart\n  [_tracker trackEvent:ACPMediaEventBufferStart info:nil data:nil];\n\n// BufferComplete\n  [_tracker trackEvent:ACPMediaEventBufferComplete info:nil data:nil];\n\n// SeekStart\n  [_tracker trackEvent:ACPMediaEventSeekStart info:nil data:nil];\n\n// SeekComplete\n  [_tracker trackEvent:ACPMediaEventSeekComplete info:nil data:nil];\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking bitrate change")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"// If the new bitrate value is available provide it to the tracker.\n  NSDictionary* qoeObject = [ACPMedia createQoEObjectWithBitrate:2000000 startupTime:2 fps:25 droppedFrames:10];\n  [_tracker updateQoEObject:qoeObject];\n\n// Bitrate change\n  [_tracker trackEvent:ACPMediaEventBitrateChange info:nil data:nil];\n")),(0,i.mdx)(c,{platform:"react-native",api:"track-event",repeat:"14",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"javascript-15"},"JavaScript"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Examples")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking player states")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-jsx"},'// StateStart\n  let stateObject = ACPMedia.createStateObject("fullscreen");\n  tracker.trackEvent(ACPMediaEvent.EventStateStart, stateObject, null);\n\n// StateEnd\n  let stateObject = ACPMedia.createStateObject("fullscreen");\n  tracker.trackEvent(ACPMediaEvent.EventStateEnd, stateObject, null);\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking ad breaks")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-jsx"},'// AdBreakStart\n  let adBreakObject = ACPMedia.createAdBreakObject("adbreak-name", 1, 0);\n  tracker.trackEvent(ACPMediaEvent.EventAdBreakStart, adBreakObject, null);\n\n// AdBreakComplete\n  tracker.trackEvent(ACPMediaEvent.EventAdBreakComplete, null, null);\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking ads")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-jsx"},'// AdStart\n  let adObject = ACPMedia.createAdObject("ad-name", "ad-id", 1, 15);\n  var adMetadata = new Object();\n  adMetadata[ACPMediaConstants.ACPAdMetadataKeyAdvertiser] = "Sample Advertiser";\n  adMetadata[ACPMediaConstants.ACPAdMetadataKeyCampaignId] = "Sample Campaign";\n\n  // Custom metadata keys\n  adMetadata["affiliate"] = "Sample affiliate";\n\n  tracker.trackEvent(ACPMediaEvent.EventAdStart, adObject, adMetadata);\n\n// AdComplete\n  tracker.trackEvent(ACPMediaEvent.EventAdComplete, null, null);\n\n// AdSkip\n  tracker.trackEvent(ACPMediaEvent.EventAdSkip, null, null);\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking chapters")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-jsx"},'// ChapterStart\n  let chapterObject = ACPMedia.createChapterObject("chapter-name", 1, 60, 0);\n  var chapterMetadata = new Object();\n  chapterMetadata["segmentType"] = "Sample segment type";\n\n  tracker.trackEvent(ACPMediaEvent.EventChapterStart, chapterObject, chapterMetadata);\n\n// ChapterComplete\n  tracker.trackEvent(ACPMediaEvent.EventChapterComplete, null, null);\n\n// ChapterSkip\n  tracker.trackEvent(ACPMediaEvent.EventChapterSkip, null, null);\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking playback events")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-jsx"},"// BufferStart\n  tracker.trackEvent(ACPMediaEvent.EventBufferStart, null, null);\n\n// BufferComplete\n  tracker.trackEvent(ACPMediaEvent.EventBufferComplete, null, null);\n\n// SeekStart\n  tracker.trackEvent(ACPMediaEvent.EventSeekStart, null, null);\n\n// SeekComplete\n  tracker.trackEvent(ACPMediaEvent.EventSeekComplete, null, null);\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking bitrate changes")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-jsx"},"// If the new bitrate value is available provide it to the tracker.\n  let qoeObject = ACPMedia.createQoEObject(2000000, 2, 25, 10);\n  tracker.updateQoEObject(qoeObject);\n\n// Bitrate change\n  tracker.trackEvent(ACPMediaEvent.EventBitrateChange, null, null);\n")),(0,i.mdx)(c,{platform:"android",api:"update-current-playhead",repeat:"7",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"java-16"},"Java"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"public void updateCurrentPlayhead(double time);\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"_tracker.updateCurrentPlayhead(1);\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Live streaming example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"//Calculation for number of seconds since midnight UTC of the day\ndouble timeFromMidnightInSecond = (System.currentTimeMillis()/1000) % 86400;\n\n_tracker.updateCurrentPlayhead(timeFromMidnightInSecond);\n")),(0,i.mdx)(c,{platform:"ios-aep",api:"update-current-playhead",repeat:"12",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"swift-32"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"func updateCurrentPlayhead(time: Double)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"tracker.updateCurrentPlayhead(1);\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Live streaming example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"//Calculation for number of seconds since midnight UTC of the day\nlet secondsSince1970: TimeInterval = (Date().timeIntervalSince1970)\nlet timeFromMidnightInSecond = secondsSince1970.truncatingRemainder(dividingBy: 86400)\n\ntracker.updateCurrentPlayhead(time: timeFromMidnightInSecond)\n")),(0,i.mdx)("h4",{id:"objective-c-32"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"- (void) updateCurrentPlayhead:(double)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"[_tracker updateCurrentPlayhead:1];\n")),(0,i.mdx)(c,{platform:"ios-acp",api:"update-current-playhead",repeat:"12",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"swift-33"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"func updateCurrentPlayhead(_ time: Double)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"_tracker.updateCurrentPlayhead(1)\n")),(0,i.mdx)("h4",{id:"objective-c-33"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"- (void) updateCurrentPlayhead: (double) time;\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"[_tracker updateCurrentPlayhead:1];\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Live streaming example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objc"},"//Calculation for number of seconds since midnight UTC of the day\ndouble secondsSince1970 = [[NSDate date] timeIntervalSince1970];\ndouble timeFromMidnightInSecond = fmod(secondsSince1970 , 86400);\n\n[_tracker updateCurrentPlayhead: timeFromMidnightInSecond];\n")),(0,i.mdx)(c,{platform:"react-native",api:"update-current-playhead",repeat:"2",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"javascript-16"},"JavaScript"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-jsx"},"tracker.updateCurrentPlayhead(1);\n")),(0,i.mdx)(c,{platform:"android",api:"update-qoe-object",repeat:"5",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"java-17"},"Java"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"public void updateQoEObject(Map<String, Object> qoeObject);\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"HashMap<String, Object> qoeObject = Media.createQoEObject(1000000L, 2D, 25D, 10D);\n_tracker.updateQoEObject(qoeObject);\n")),(0,i.mdx)(c,{platform:"ios-aep",api:"update-qoe-object",repeat:"10",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"swift-34"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"func updateQoEObject(qoe: [String: Any])\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"let qoeObject = Media.createQoEObjectWith(bitrate: 500000, startupTime: 2, fps: 24, droppedFrames: 10)\ntracker.updateQoEObject(qoe: qoeObject)\n")),(0,i.mdx)("h4",{id:"objective-c-34"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"- (void) updateQoEObject:(NSDictionary<NSString *,id> * _Nonnull)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"NSDictionary *qoeObject = [AEPMobileMedia createQoEObjectWith:50000 startTime:2 fps:24 droppedFrames:10]\n[_tracker updateQoEObject:qoeObject];\n")),(0,i.mdx)(c,{platform:"ios-acp",api:"update-qoe-object",repeat:"10",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"swift-35"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"func updateQoEObject(_ qoeObject: [AnyHashable : Any])\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"let qoeObject = ACPMedia.createQoEObject(withBitrate: 1000000, startupTime: 2, fps: 25, droppedFrames: 10)\n_tracker.updateQoEObject(qoeObject)\n")),(0,i.mdx)("h4",{id:"objective-c-35"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"- (void) updateQoEObject: (NSDictionary* _Nonnull) qoeObject;\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"NSDictionary* qoeObject = [ACPMedia createQoEObjectWithBitrate:1000000 startupTime:2 fps:25 droppedFrames:10];\n[_tracker updateQoEObject:qoeObject];\n")),(0,i.mdx)(c,{platform:"react-native",api:"update-qoe-object",repeat:"2",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"javascript-17"},"JavaScript"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-jsx"},"let qoeObject = ACPMedia.createQoEObject(1000000, 2, 25, 10);\ntracker.updateQoEObject(qoeObject);\n")),(0,i.mdx)(c,{platform:"android",api:"media-type",repeat:"1",mdxType:"Variant"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"public class Media {\n\n  public enum MediaType {\n      /**\n      * Constant defining media type for Video streams\n      */\n      Video,\n\n      /**\n      * Constant defining media type for Audio streams\n      */\n      Audio\n  }\n\n}\n")),(0,i.mdx)(c,{platform:"ios-aep",api:"media-type",repeat:"6",mdxType:"Variant"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"@objc(AEPMediaType)\npublic enum MediaType: Int, RawRepresentable {\n //Constant defining media type for Video streams\n case Audio\n //Constant defining media type for Audio streams\n case Video\n}\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("h4",{id:"swift-36"},"Swift"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'var mediaObject = Media.createMediaObjectWith(name: "video-name", \n                                                id: "videoId", \n                                                length: "60", \n                                                streamType: MediaConstants.StreamType.VOD, \n                                                mediaType: MediaType.Video)\n')),(0,i.mdx)("h4",{id:"objective-c-36"},"Objective-C"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objc"},'NSDictionary *mediaObject = [AEPMobileMedia createMediaObjectWith:@"video-name"   \n                                                               id:@"video-id" \n                                                               length:60 streamType:AEPMediaStreamType.VOD mediaType:AEPMediaTypeVideo];\n')),(0,i.mdx)(c,{platform:"ios-acp",api:"media-type",repeat:"1",mdxType:"Variant"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objc"},"typedef NS_ENUM(NSInteger, ACPMediaType) {\n    /**\n    * Constant defining media type for Video streams\n    */\n    ACPMediaTypeVideo,\n\n    /**\n    * Constant defining media type for Audio streams\n    */\n    ACPMediaTypeAudio\n};\n")),(0,i.mdx)(c,{platform:"react-native",api:"media-type",repeat:"2",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"javascript-18"},"JavaScript"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-jsx"},"import {ACPMediaType} from '@adobe/react-native-acpmedia';\n\nACPMediaType.Video\nACPMediaType.Audio\n")),(0,i.mdx)(c,{platform:"android",api:"stream-type",repeat:"1",mdxType:"Variant"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'public class MediaConstants {\n\n  public static final class StreamType {\n      /**\n      * Constant defining stream type for VOD streams\n      */\n      public static final String VOD = "vod";\n\n      /**\n      * Constant defining stream type for Live streams\n      */\n      public static final String LIVE = "live";\n\n      /**\n      * Constant defining stream type for Linear streams\n      */\n      public static final String LINEAR = "linear";\n\n      /**\n      * Constant defining stream type for Podcast streams\n      */\n      public static final String PODCAST = "podcast";\n\n      /**\n      * Constant defining stream type for Audiobook streams\n      */\n      public static final String AUDIOBOOK = "audiobook";\n\n      /**\n      * Constant defining stream type for AOD streams\n      */\n      public static final String AOD = "aod";\n  }\n\n}\n')),(0,i.mdx)(c,{platform:"ios-aep",api:"stream-type",repeat:"6",mdxType:"Variant"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'public class MediaConstants: NSObject {\n  @objc(AEPMediaStreamType)\n  public class StreamType: NSObject {\n     // Constant defining stream type for VOD streams.\n        public static let VOD = "vod"\n     // Constant defining stream type for Live streams.\n        public static let LIVE = "live"\n     // Constant defining stream type for Linear streams.\n        public static let LINEAR = "linear"\n     // Constant defining stream type for Podcast streams.\n        public static let PODCAST = "podcast"\n     // Constant defining stream type for Audiobook streams.\n        public static let AUDIOBOOK = "audiobook"\n     // Constant defining stream type for AOD streams.\n        public static let AOD = "aod"\n    }\n}\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("h4",{id:"swift-37"},"Swift"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'var mediaObject = Media.createMediaObjectWith(name: "video-name", \n                                                id: "videoId", \n                                            length: "60", \n                                        streamType: MediaConstants.StreamType.VOD,    \n                                         mediaType: MediaType.Video)\n')),(0,i.mdx)("h4",{id:"objective-c-37"},"Objective-C"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objc"},'NSDictionary *mediaObject = [AEPMobileMedia createMediaObjectWith:@"video-name" \n                                                               id:@"video-id" \n                                                           length:60\n                                                       streamType:AEPMediaStreamType.VOD      \n                                                        mediaType:AEPMediaTypeVideo];\n')),(0,i.mdx)(c,{platform:"ios-acp",api:"stream-type",repeat:"1",mdxType:"Variant"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objc"},"/**\n * Constant defining stream type for VOD streams\n */\nFOUNDATION_EXPORT NSString* _Nonnull const ACPMediaStreamTypeVod;\n\n/**\n * Constant defining stream type for Live streams\n */\nFOUNDATION_EXPORT NSString* _Nonnull const ACPMediaStreamTypeLive;\n\n/**\n * Constant defining stream type for Linear streams\n */\nFOUNDATION_EXPORT NSString* _Nonnull const ACPMediaStreamTypeLinear;\n\n/**\n * Constant defining stream type for Podcast streams\n */\nFOUNDATION_EXPORT NSString* _Nonnull const ACPMediaStreamTypePodcast;\n\n/**\n * Constant defining stream type for Audiobook streams\n */\nFOUNDATION_EXPORT NSString* _Nonnull const ACPMediaStreamTypeAudiobook;\n\n/**\n * Constant defining stream type for AOD streams\n */\nFOUNDATION_EXPORT NSString* _Nonnull const ACPMediaStreamTypeAod;\n")),(0,i.mdx)(c,{platform:"react-native",api:"stream-type",repeat:"2",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"javascript-19"},"JavaScript"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-jsx"},"import {ACPMediaConstants} from '@adobe/react-native-acpmedia';\n\nACPMediaConstants.ACPMediaStreamTypeVod\nACPMediaConstants.ACPMediaStreamTypeLive\nACPMediaConstants.ACPMediaConstantsACPMediaStreamTypeLinear\nACPMediaConstants.ACPMediaStreamTypePodcast\nACPMediaConstants.ACPMediaStreamTypeAudiobook\nACPMediaConstants.ACPMediaStreamTypeAod\n")),(0,i.mdx)(c,{platform:"android",api:"standard-video-constants",repeat:"1",mdxType:"Variant"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'public class MediaConstants {\n\n  public static final class VideoMetadataKeys {\n      public static final String SHOW = "a.media.show";\n      public static final String SEASON = "a.media.season";\n      public static final String EPISODE = "a.media.episode";\n      public static final String ASSET_ID = "a.media.asset";\n      public static final String GENRE = "a.media.genre";\n      public static final String FIRST_AIR_DATE = "a.media.airDate";\n      public static final String FIRST_DIGITAL_DATE = "a.media.digitalDate";\n      public static final String RATING = "a.media.rating";\n      public static final String ORIGINATOR = "a.media.originator";\n      public static final String NETWORK = "a.media.network";\n      public static final String SHOW_TYPE = "a.media.type";\n      public static final String AD_LOAD = "a.media.adLoad";\n      public static final String MVPD = "a.media.pass.mvpd";\n      public static final String AUTHORIZED = "a.media.pass.auth";\n      public static final String DAY_PART = "a.media.dayPart";\n      public static final String FEED = "a.media.feed";\n      public static final String STREAM_FORMAT = "a.media.format";\n  }\n\n}\n')),(0,i.mdx)(c,{platform:"ios-aep",api:"standard-video-constants",repeat:"6",mdxType:"Variant"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'public class MediaConstants: NSObject {\n  @objc(AEPVideoMetadataKeys)\n  public class VideoMetadataKeys: NSObject {\n        public static let SHOW = "a.media.show"\n        public static let SEASON = "a.media.season"\n        public static let EPISODE = "a.media.episode"\n        public static let ASSET_ID = "a.media.asset"\n        public static let GENRE = "a.media.genre"\n        public static let FIRST_AIR_DATE = "a.media.airDate"\n        public static let FIRST_DIGITAL_DATE = "a.media.digitalDate"\n        public static let RATING = "a.media.rating"\n        public static let ORIGINATOR = "a.media.originator"\n        public static let NETWORK = "a.media.network"\n        public static let SHOW_TYPE = "a.media.type"\n        public static let AD_LOAD = "a.media.adLoad"\n        public static let MVPD = "a.media.pass.mvpd"\n        public static let AUTHORIZED = "a.media.pass.auth"\n        public static let DAY_PART = "a.media.dayPart"\n        public static let FEED = "a.media.feed"\n        public static let STREAM_FORMAT = "a.media.format"\n    }\n}\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("h4",{id:"swift-38"},"Swift"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'var mediaObject = Media.createMediaObjectWith(name: "video-name", id: "videoId", length: "60", streamType: MediaConstants.StreamType.VOD, mediaType: MediaType.Video)\n\nvar videoMetadata: [String: String] = [:]\n// Standard Video Metadata\nvideoMetadata[MediaConstants.VideoMetadataKeys.SHOW] = "Sample show"\nvideoMetadata[MediaConstants.VideoMetadataKeys.SEASON] = "Sample season"\n\ntracker.trackSessionStart(info: mediaObject, metadata: videoMetadata)\n')),(0,i.mdx)("h4",{id:"objective-c-38"},"Objective-C"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objc"},'NSDictionary *mediaObject = [AEPMobileMedia createMediaObjectWith:@"video-name" id:@"video-id" length:60 streamType:AEPMediaStreamType.VOD mediaType:AEPMediaTypeVideo];\n\nNSMutableDictionary *videoMetadata = [[NSMutableDictionary alloc] init];\n// Standard Video Metadata\n[videoMetadata setObject:@"Sample show" forKey:AEPVideoMetadataKeys.SHOW];\n[videoMetadata setObject:@"Sample Season" forKey:AEPVideoMetadataKeys.SEASON];\n\n[_tracker trackSessionStart:mediaObject metadata:videoMetadata];\n')),(0,i.mdx)(c,{platform:"ios-acp",api:"standard-video-constants",repeat:"1",mdxType:"Variant"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objc"},"FOUNDATION_EXPORT NSString* _Nonnull const ACPVideoMetadataKeyShow;\nFOUNDATION_EXPORT NSString* _Nonnull const ACPVideoMetadataKeySeason;\nFOUNDATION_EXPORT NSString* _Nonnull const ACPVideoMetadataKeyEpisode;\nFOUNDATION_EXPORT NSString* _Nonnull const ACPVideoMetadataKeyAssetId;\nFOUNDATION_EXPORT NSString* _Nonnull const ACPVideoMetadataKeyGenre;\nFOUNDATION_EXPORT NSString* _Nonnull const ACPVideoMetadataKeyFirstAirDate;\nFOUNDATION_EXPORT NSString* _Nonnull const ACPVideoMetadataKeyFirstDigitalDate;\nFOUNDATION_EXPORT NSString* _Nonnull const ACPVideoMetadataKeyRating;\nFOUNDATION_EXPORT NSString* _Nonnull const ACPVideoMetadataKeyOriginator;\nFOUNDATION_EXPORT NSString* _Nonnull const ACPVideoMetadataKeyNetwork;\nFOUNDATION_EXPORT NSString* _Nonnull const ACPVideoMetadataKeyShowType;\nFOUNDATION_EXPORT NSString* _Nonnull const ACPVideoMetadataKeyAdLoad;\nFOUNDATION_EXPORT NSString* _Nonnull const ACPVideoMetadataKeyMvpd;\nFOUNDATION_EXPORT NSString* _Nonnull const ACPVideoMetadataKeyAuthorized;\nFOUNDATION_EXPORT NSString* _Nonnull const ACPVideoMetadataKeyDayPart;\nFOUNDATION_EXPORT NSString* _Nonnull const ACPVideoMetadataKeyFeed;\nFOUNDATION_EXPORT NSString* _Nonnull const ACPVideoMetadataKeyStreamFormat;\n")),(0,i.mdx)(c,{platform:"react-native",api:"standard-video-constants",repeat:"2",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"javascript-20"},"JavaScript"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-jsx"},"import {ACPMediaConstants} from '@adobe/react-native-acpmedia';\n\nACPMediaConstants.ACPVideoMetadataKeyShow\nACPMediaConstants.ACPVideoMetadataKeySeason\nACPMediaConstants.ACPVideoMetadataKeyEpisode\nACPMediaConstants.ACPVideoMetadataKeyAssetId\nACPMediaConstants.ACPVideoMetadataKeyGenre\nACPMediaConstants.ACPVideoMetadataKeyFirstAirDate\nACPMediaConstants.ACPVideoMetadataKeyFirstDigitalDate\nACPMediaConstants.ACPVideoMetadataKeyRating\nACPMediaConstants.ACPVideoMetadataKeyOriginator\nACPMediaConstants.ACPVideoMetadataKeyNetwork\nACPMediaConstants.ACPVideoMetadataKeyShowType\nACPMediaConstants.ACPVideoMetadataKeyAdLoad\nACPMediaConstants.ACPVideoMetadataKeyMvpd\nACPMediaConstants.ACPVideoMetadataKeyAuthorized\nACPMediaConstants.ACPVideoMetadataKeyDayPart\nACPMediaConstants.ACPVideoMetadataKeyFeed\nACPMediaConstants.ACPVideoMetadataKeyStreamFormat\n")),(0,i.mdx)(c,{platform:"android",api:"standard-audio-constants",repeat:"1",mdxType:"Variant"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'public class MediaConstants {\n\n  public static final class AudioMetadataKeys {\n    public static final String ARTIST = "a.media.artist";\n    public static final String ALBUM = "a.media.album";\n    public static final String LABEL = "a.media.label";\n    public static final String AUTHOR = "a.media.author";\n    public static final String STATION = "a.media.station";\n    public static final String PUBLISHER = "a.media.publisher";\n  }\n\n}\n')),(0,i.mdx)(c,{platform:"ios-aep",api:"standard-audio-constants",repeat:"6",mdxType:"Variant"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'public class MediaConstants: NSObject {\n  @objc(AEPAudioMetadataKeys)\n  public class AudioMetadataKeys: NSObject {\n        public static let ARTIST = "a.media.artist"\n        public static let ALBUM = "a.media.album"\n        public static let LABEL = "a.media.label"\n        public static let AUTHOR = "a.media.author"\n        public static let STATION = "a.media.station"\n        public static let PUBLISHER = "a.media.publisher"\n    }\n}\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("h4",{id:"swift-39"},"Swift"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'var audioObject = Media.createMediaObjectWith(name: "audio-name", id: "audioId", length: 30, streamType: MediaConstants.StreamType.AOD, mediaType: MediaType.AUDIO)\n\nvar audioMetadata: [String: String] = [:]\n// Standard Audio Metadata\naudioMetadata[MediaConstants.AudioMetadataKeys.ARTIST] = "Sample artist"\naudioMetadata[MediaConstants.AudioMetadataKeys.ALBUM] = "Sample album"\n\ntracker.trackSessionStart(info: audioObject, metadata: audioMetadata)\n')),(0,i.mdx)("h4",{id:"objective-c-39"},"Objective-C"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objc"},'NSDictionary *audioObject = [AEPMobileMedia createMediaObjectWith:@"audio-name" id:@"audioid" length:30 streamType:AEPMediaStreamType.AOD mediaType:AEPMediaTypeAudio];\n\nNSMutableDictionary *audioMetadata = [[NSMutableDictionary alloc] init];\n// Standard Audio Metadata\n[audioMetadata setObject:@"Sample artist" forKey:AEPAudioMetadataKeys.ARTIST];\n[audioMetadata setObject:@"Sample album" forKey:AEPAudioMetadataKeys.ALBUM];\n\n[_tracker trackSessionStart:audioObject metadata:audioMetadata];\n')),(0,i.mdx)(c,{platform:"ios-acp",api:"standard-audio-constants",repeat:"1",mdxType:"Variant"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objc"},"FOUNDATION_EXPORT NSString* _Nonnull const ACPAudioMetadataKeyArtist;\nFOUNDATION_EXPORT NSString* _Nonnull const ACPAudioMetadataKeyAlbum;\nFOUNDATION_EXPORT NSString* _Nonnull const ACPAudioMetadataKeyLabel;\nFOUNDATION_EXPORT NSString* _Nonnull const ACPAudioMetadataKeyAuthor;\nFOUNDATION_EXPORT NSString* _Nonnull const ACPAudioMetadataKeyStation;\nFOUNDATION_EXPORT NSString* _Nonnull const ACPAudioMetadataKeyPublisher;\n")),(0,i.mdx)(c,{platform:"react-native",api:"standard-audio-constants",repeat:"2",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"javascript-21"},"JavaScript"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-jsx"},"import {ACPMediaConstants} from '@adobe/react-native-acpmedia';\n\nACPMediaConstants.ACPAudioMetadataKeyArtist\nACPMediaConstants.ACPAudioMetadataKeyAlbum\nACPMediaConstants.ACPAudioMetadataKeyLabel\nACPMediaConstants.ACPAudioMetadataKeyAuthor\nACPMediaConstants.ACPAudioMetadataKeyStation\nACPMediaConstants.ACPAudioMetadataKeyPublisher\n")),(0,i.mdx)(c,{platform:"android",api:"standard-ad-constants",repeat:"1",mdxType:"Variant"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'public class MediaConstants {\n\n  public static final class AdMetadataKeys {\n    public static final String ADVERTISER = "a.media.ad.advertiser";\n    public static final String CAMPAIGN_ID = "a.media.ad.campaign";\n    public static final String CREATIVE_ID = "a.media.ad.creative";\n    public static final String PLACEMENT_ID = "a.media.ad.placement";\n    public static final String SITE_ID = "a.media.ad.site";\n    public static final String CREATIVE_URL = "a.media.ad.creativeURL";\n  }\n\n}\n')),(0,i.mdx)(c,{platform:"ios-aep",api:"standard-ad-constants",repeat:"6",mdxType:"Variant"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'public class MediaConstants: NSObject {\n  @objc(AEPAdMetadataKeys)\n  public class AdMetadataKeys: NSObject {\n        public static let ADVERTISER = "a.media.ad.advertiser"\n        public static let CAMPAIGN_ID = "a.media.ad.campaign"\n        public static let CREATIVE_ID = "a.media.ad.creative"\n        public static let PLACEMENT_ID = "a.media.ad.placement"\n        public static let SITE_ID = "a.media.ad.site"\n        public static let CREATIVE_URL = "a.media.ad.creativeURL"\n    }\n}\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("h4",{id:"swift-40"},"Swift"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'let adObject = Media.createObjectWith(name: "adbreak-name", id: "ad-id", position: 0, length: 30)\nvar adMetadata: [String: String] = [:]\n// Standard Ad Metadata\nadMetadata[MediaConstants.AdMetadataKeys.ADVERTISER] = "Sample Advertiser"\nadMetadata[MediaConstants.AdMetadataKeys.CAMPAIGN_ID] = "Sample Campaign"\n\ntracker.trackEvent(event: MediaEvent.AdStart, info: adObject, metadata: adMetadata)\n')),(0,i.mdx)("h4",{id:"objective-c-40"},"Objective-C"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objc"},'NSDictionary *adObject = [AEPMobileMedia createAdObjectWith:@"ad-name" id:@"ad-id" position:0 length:30];\n\nNSMutableDictionary *adMetadata = [[NSMutableDictionary alloc] init];\n// Standard Ad Metadata\n[adMetadata setObject:@"Sample Advertiser" forKey:AEPAdMetadataKeys.ADVERTISER];\n[adMetadata setObject:@"Sample Campaign" forKey:AEPAdMetadataKeys.CAMPAIGN_ID];\n\n[_tracker trackEvent:AEPMediaEventAdStart info:adObject metadata:adMetadata];\n')),(0,i.mdx)(c,{platform:"ios-acp",api:"standard-ad-constants",repeat:"1",mdxType:"Variant"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objc"},"FOUNDATION_EXPORT NSString* _Nonnull const ACPAdMetadataKeyAdvertiser;\nFOUNDATION_EXPORT NSString* _Nonnull const ACPAdMetadataKeyCampaignId;\nFOUNDATION_EXPORT NSString* _Nonnull const ACPAdMetadataKeyCreativeId;\nFOUNDATION_EXPORT NSString* _Nonnull const ACPAdMetadataKeyPlacementId;\nFOUNDATION_EXPORT NSString* _Nonnull const ACPAdMetadataKeySiteId;\nFOUNDATION_EXPORT NSString* _Nonnull const ACPAdMetadataKeyCreativeUrl;\n")),(0,i.mdx)(c,{platform:"react-native",api:"standard-ad-constants",repeat:"2",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"javascript-22"},"JavaScript"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-jsx"},"import {ACPMediaConstants} from '@adobe/react-native-acpmedia';\n\nACPMediaConstants.ACPAdMetadataKeyAdvertiser\nACPMediaConstants.ACPAdMetadataKeyCampaignId\nACPMediaConstants.ACPAdMetadataKeyCreativeId\nACPMediaConstants.ACPAdMetadataKeyPlacementId\nACPMediaConstants.ACPAdMetadataKeySiteId\nACPMediaConstants.ACPAdMetadataKeyCreativeUrl\n")),(0,i.mdx)(c,{platform:"android",api:"player-state-constants",repeat:"1",mdxType:"Variant"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'public class MediaConstants {\n\n  public static final class PlayerState {\n    public static final String FULLSCREEN = "fullscreen";\n    public static final String PICTURE_IN_PICTURE = "pictureInPicture";\n    public static final String CLOSED_CAPTION = "closedCaptioning";\n    public static final String IN_FOCUS = "inFocus";\n    public static final String MUTE = "mute";\n  }\n\n}\n')),(0,i.mdx)(c,{platform:"ios-aep",api:"player-state-constants",repeat:"6",mdxType:"Variant"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'public class MediaConstants: NSObject {\n  @objc(AEPMediaPlayerState)\n  public class PlayerState: NSObject {\n        public static let FULLSCREEN = "fullscreen"\n        public static let PICTURE_IN_PICTURE = "pictureInPicture"\n        public static let CLOSED_CAPTION = "closedCaptioning"\n        public static let IN_FOCUS = "inFocus"\n        public static let MUTE = "mute"\n    }\n}\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("h4",{id:"swift-41"},"Swift"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"let inFocusState = Media.createStateObjectWith(stateName: MediaConstants.PlayerState.IN_FOCUS)\ntracker.trackEvent(event: MediaEvent.StateStart, info: inFocusState, metadata: nil)\n")),(0,i.mdx)("h4",{id:"objective-c-41"},"Objective-C"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objc"},"NSDictionary* inFocusState = [AEPMobileMedia createStateObjectWith:AEPMediaPlayerState.IN_FOCUS];\n[_tracker trackEvent:AEPMediaEventStateStart info:muteState metadata:nil];\n")),(0,i.mdx)(c,{platform:"ios-acp",api:"player-state-constants",repeat:"1",mdxType:"Variant"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objc"},"FOUNDATION_EXPORT NSString* _Nonnull const ACPMediaPlayerStateFullScreen;\nFOUNDATION_EXPORT NSString* _Nonnull const ACPMediaPlayerStatePictureInPicture;\nFOUNDATION_EXPORT NSString* _Nonnull const ACPMediaPlayerStateClosedCaption;\nFOUNDATION_EXPORT NSString* _Nonnull const ACPMediaPlayerStateInFocus;\nFOUNDATION_EXPORT NSString* _Nonnull const ACPMediaPlayerStateMute;\n")),(0,i.mdx)(c,{platform:"react-native",api:"player-state-constants",repeat:"2",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"javascript-23"},"JavaScript"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-jsx"},"import {ACPMediaConstants} from '@adobe/react-native-acpmedia';\n\nACPMediaConstants.ACPMediaPlayerStateFullScreen\nACPMediaConstants.ACPMediaPlayerStatePictureInPicture\nACPMediaConstants.ACPMediaPlayerStateClosedCaption\nACPMediaConstants.ACPMediaPlayerStateInFocus\nACPMediaConstants.ACPMediaPlayerStateMute\n")),(0,i.mdx)(c,{platform:"android",api:"media-events",repeat:"1",mdxType:"Variant"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"public class Media {\n\n    /**\n    * These enumeration values define the type of a tracking event\n    */\n    public enum Event {\n      /**\n      * Constant defining event type for AdBreak start\n      */\n      AdBreakStart,\n\n      /**\n      * Constant defining event type for AdBreak complete\n      */\n      AdBreakComplete,\n\n      /**\n      * Constant defining event type for Ad start\n      */\n      AdStart,\n\n      /**\n      * Constant defining event type for Ad complete\n      */\n      AdComplete,\n\n      /**\n      * Constant defining event type for Ad skip\n      */\n      AdSkip,\n\n      /**\n      * Constant defining event type for Chapter start\n      */\n      ChapterStart,\n\n      /**\n      * Constant defining event type for Chapter complete\n      */\n      ChapterComplete,\n\n      /**\n      * Constant defining event type for Chapter skip\n      */\n      ChapterSkip,\n\n      /**\n      * Constant defining event type for Seek start\n      */\n      SeekStart,\n\n      /**\n      * Constant defining event type for Seek complete\n      */\n      SeekComplete,\n\n      /**\n      * Constant defining event type for Buffer start\n      */\n      BufferStart,\n\n      /**\n      * Constant defining event type for Buffer complete\n      */\n      BufferComplete,\n\n      /**\n      * Constant defining event type for change in Bitrate\n      */\n      BitrateChange,\n\n      /**\n      * Constant defining event type for State start\n      */\n      StateStart,\n\n      /**\n      * Constant defining event type for State end\n      */\n      StateEnd\n  }\n\n}\n")),(0,i.mdx)(c,{platform:"ios-aep",api:"media-events",repeat:"6",mdxType:"Variant"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"@objc(AEPMediaEvent)\npublic enum MediaEvent: Int, RawRepresentable {\n // event type for AdBreak start\n    case AdBreakStart\n // event type for AdBreak Complete\n    case AdBreakComplete\n // event type for Ad Start\n    case AdStart\n // event type for Ad Complete\n    case AdComplete\n // event type for Ad Skip\n    case AdSkip\n // event type for Chapter Start\n    case ChapterStart\n // event type for Chapter Complete\n    case ChapterComplete\n // event type for Chapter Skip\n    case ChapterSkip\n // event type for Seek Start\n    case SeekStart\n // event type for Seek Complete\n    case SeekComplete\n // event type for Buffer Start\n    case BufferStart\n // event type for Buffer Complete\n    case BufferComplete\n // event type for change in Bitrate\n    case BitrateChange\n // event type for Player State Start\n    case StateStart\n // event type for Player State End\n    case StateEnd\n}\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("h4",{id:"swift-42"},"Swift"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"tracker.trackEvent(event: MediaEvent.BitrateChange, info: nil, metadata: nil)\n")),(0,i.mdx)("h4",{id:"objective-c-42"},"Objective-C"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objc"},"[_tracker trackEvent:AEPMediaEventBitrateChange info:nil metadata:nil];\n")),(0,i.mdx)(c,{platform:"ios-acp",api:"media-events",repeat:"1",mdxType:"Variant"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objc"},"/**\n * These enumeration values define the type of a tracking event\n */\ntypedef NS_ENUM(NSInteger, ACPMediaEvent) {\n    /**\n     * Constant defining event type for AdBreak start\n     */\n    ACPMediaEventAdBreakStart,\n    /**\n     * Constant defining event type for AdBreak complete\n     */\n    ACPMediaEventAdBreakComplete,\n    /**\n     * Constant defining event type for Ad start\n     */\n    ACPMediaEventAdStart,\n    /**\n     * Constant defining event type for Ad complete\n     */\n    ACPMediaEventAdComplete,\n    /**\n     * Constant defining event type for Ad skip\n     */\n    ACPMediaEventAdSkip,\n    /**\n     * Constant defining event type for Chapter start\n     */\n    ACPMediaEventChapterStart,\n    /**\n     * Constant defining event type for Chapter complete\n     */\n    ACPMediaEventChapterComplete,\n    /**\n     * Constant defining event type for Chapter skip\n     */\n    ACPMediaEventChapterSkip,\n    /**\n     * Constant defining event type for Seek start\n     */\n    ACPMediaEventSeekStart,\n    /**\n     * Constant defining event type for Seek complete\n     */\n    ACPMediaEventSeekComplete,\n    /**\n     * Constant defining event type for Buffer start\n     */\n    ACPMediaEventBufferStart,\n    /**\n     * Constant defining event type for Buffer complete\n     */\n    ACPMediaEventBufferComplete,\n    /**\n     * Constant defining event type for change in Bitrate\n     */\n    ACPMediaEventBitrateChange,\n    /**\n     * Constant defining event type for State start\n     */\n    ACPMediaEventStateStart\n    /**\n     * Constant defining event type for State end\n     */\n    ACPMediaEventStateEnd\n};\n")),(0,i.mdx)(c,{platform:"react-native",api:"media-events",repeat:"2",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"javascript-24"},"JavaScript"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-jsx"},"import {ACPMediaEvent} from '@adobe/react-native-acpmedia';\n\nACPMediaEvent.EventAdBreakStart\nACPMediaEvent.EventAdBreakComplete\nACPMediaEvent.EventAdStart\nACPMediaEvent.EventAdComplete\nACPMediaEvent.EventAdSkip\nACPMediaEvent.EventChapterStart\nACPMediaEvent.EventChapterComplete\nACPMediaEvent.EventChapterSkip\nACPMediaEvent.EventSeekStart\nACPMediaEvent.EventSeekComplete\nACPMediaEvent.EventBufferStart\nACPMediaEvent.EventBufferComplete\nACPMediaEvent.EventBitrateChange\nACPMediaEvent.EventStateStart\nACPMediaEvent.EventStateEnd\n")),(0,i.mdx)(c,{platform:"android",api:"media-resume",repeat:"5",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"java-18"},"Java"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"public class MediaConstants {\n\n  public static final class MediaObjectKey {\n\n      /**\n      * Constant defining explicit media resumed property. Set this to true on MediaObject if resuming a previously closed session.\n      */\n      public static final String RESUMED;\n  }\n\n}\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'HashMap<String, Object> mediaObject = Media.createMediaObject("media-name", "media-id", 60D, MediaConstants.StreamType.VOD, Media.MediaType.Video);\n\n// Attach media resumed information.\nmediaObject.put(MediaConstants.MediaObjectKey.RESUMED, true);\n\n_tracker.trackSessionStart(mediaObject, null);\n')),(0,i.mdx)(c,{platform:"ios-aep",api:"media-resume",repeat:"10",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"swift-43"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'public class MediaConstants: NSObject {\n @objc(AEPMediaObjectKey)\n public class MediaObjectKey: NSObject {\n        public static let RESUMED = "media.resumed"\n    }\n}\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'var mediaObject = Media.createMediaObjectWith(name: "video-name", id: "videoId", length: "60", streamType: MediaConstants.StreamType.VOD, mediaType: MediaType.Video)\nmediaObject[MediaConstants.MediaObjectKey.RESUMED] = true\n\ntracker.trackSessionStart(info: mediaObject, metadata: nil)\n')),(0,i.mdx)("h4",{id:"objective-c-43"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"@interface AEPMediaObjectKey : NSObject\n+ (NSString * _Nonnull)RESUMED\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},'NSDictionary *mediaObject = [AEPMobileMedia createMediaObjectWith:@"video-name" id:@"video-id" length:60 streamType:AEPMediaStreamType.VOD mediaType:AEPMediaTypeVideo];\n\n// Attach media resumed information.    \nNSMutableDictionary *obj  = [mediaObject mutableCopy];\n[obj setObject:@YES forKey:AEPMediaObjectKey.RESUMED];\n\n[_tracker trackSessionStart:obj metadata:nil];\n')),(0,i.mdx)(c,{platform:"ios-acp",api:"media-resume",repeat:"10",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"swift-44"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"public let ACPMediaKeyMediaResumed: String\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'var mediaObject = ACPMedia.createMediaObject(withName: "media-name", mediaId: "media-id", length: 60, streamType: ACPMediaStreamTypeVod, mediaType:ACPMediaType.video)\n\n// Attach media resumed information.\nmediaObject[ACPMediaKeyMediaResumed] = true\n\n_tracker.trackSessionStart(mediaObject, data: nil)\n')),(0,i.mdx)("h4",{id:"objective-c-44"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"FOUNDATION_EXPORT NSString* _Nonnull const ACPMediaKeyMediaResumed;\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},'NSDictionary *mediaObject = [ACPMedia createMediaObjectWithName:@"media-name" mediaId:@"media-id" length:60 streamType:ACPMediaStreamTypeVod mediaType:ACPMediaTypeVideo];\n\n// Attach media resumed information.\nNSMutableDictionary *obj  = [mediaObject mutableCopy];\n[obj setObject:@YES forKey:ACPMediaKeyMediaResumed];\n\n[_tracker trackSessionStart:obj data:nil];\n')),(0,i.mdx)(c,{platform:"react-native",api:"media-resume",repeat:"2",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"javascript-25"},"JavaScript"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-jsx"},'let mediaObject = ACPMedia.createMediaObject("media-name", "media-id", 60, ACPMediaConstants.ACPMediaStreamTypeVod, ACPMediaType.Video);\nmediaObject[ACPMediaConstants.ACPMediaKeyMediaResumed] = true\n\ntracker.trackSessionStart(mediaObject, null);\n')))}x.isMDXComponent=!0}}]);
//# sourceMappingURL=3c31df03f3b8035b509d38d5f3250265e9c058cd-55edcfebca793a2378ad.js.map