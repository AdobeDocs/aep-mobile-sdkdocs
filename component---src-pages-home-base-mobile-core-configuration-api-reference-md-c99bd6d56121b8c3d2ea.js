"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[771,9326],{87101:function(e,n,a){a.r(n),a.d(n,{_frontmatter:function(){return l},default:function(){return f}});var i=a(87462),t=a(63366),o=(a(15007),a(64983)),d=a(91515),r=a(97940),p=["components"],l={},m=function(e){return function(n){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.mdx)("div",n)}},u=m("TabsBlock"),x=m("InlineAlert"),c={_frontmatter:l},s=d.Z;function f(e){var n=e.components,a=(0,t.Z)(e,p);return(0,o.mdx)(s,(0,i.Z)({},c,a,{components:n,mdxType:"MDXLayout"}),(0,o.mdx)("h1",{id:"configuration-api-reference"},"Configuration API reference"),(0,o.mdx)("h2",{id:"clearupdatedconfiguration"},"clearUpdatedConfiguration"),(0,o.mdx)("p",null,"You can clear any programmatic updates made to the configuration via the ",(0,o.mdx)("inlineCode",{parentName:"p"},"clearUpdatedConfiguration")," API. This will clear programmatic updates to configuration made via the ",(0,o.mdx)("inlineCode",{parentName:"p"},"updateConfiguration(configMap)"),"(Android)/ ",(0,o.mdx)("inlineCode",{parentName:"p"},"updateConfigurationWith(configDict:)"),"(iOS) API. It will also clear any updates to the ",(0,o.mdx)("inlineCode",{parentName:"p"},"MobilePrivacyStatus"),"(Android)/ ",(0,o.mdx)("inlineCode",{parentName:"p"},"PrivacyStatus"),"(iOS)  made via ",(0,o.mdx)("inlineCode",{parentName:"p"},"setPrivacyStatus(privacyStatus)"),"(Android)/ ",(0,o.mdx)("inlineCode",{parentName:"p"},"setPrivacyStatus(_ status:)"),"(iOS)."),(0,o.mdx)("p",null," Here are some examples of scenarios:"),(0,o.mdx)("ul",null,(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("p",{parentName:"li"},(0,o.mdx)("inlineCode",{parentName:"p"},"configureWithAppId(appId)"),"(Android)/",(0,o.mdx)("inlineCode",{parentName:"p"},"configureWith(appId:)"),"(iOS) -> ",(0,o.mdx)("inlineCode",{parentName:"p"},"updateConfiguration(configMap)"),"(Android)/ ",(0,o.mdx)("inlineCode",{parentName:"p"},"updateConfigurationWith(configDict:)"),"(iOS) -> ",(0,o.mdx)("inlineCode",{parentName:"p"},"clearUpdatedConfiguration()"),": In this example, you end up with the initial configuration set via ",(0,o.mdx)("inlineCode",{parentName:"p"},"configureWithAppId(appId)"),"(Android)/ ",(0,o.mdx)("inlineCode",{parentName:"p"},"configureWith(appId:)"),"(iOS)")),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("p",{parentName:"li"},(0,o.mdx)("inlineCode",{parentName:"p"},"configureWithFileInPath(filePath)"),"(Android)/ ",(0,o.mdx)("inlineCode",{parentName:"p"},"configureWith(filePath:)"),"(iOS) -> ",(0,o.mdx)("inlineCode",{parentName:"p"},"updateConfiguration(configMap)"),"(Android)/ ",(0,o.mdx)("inlineCode",{parentName:"p"},"updateConfigurationWith(configDict)"),"(iOS) -> ",(0,o.mdx)("inlineCode",{parentName:"p"},"clearUpdatedConfiguration()"),": In this example, you end up with the initial configuration set via ",(0,o.mdx)("inlineCode",{parentName:"p"},"configureWithFileInPath(filePath)"),"(Android)/ ",(0,o.mdx)("inlineCode",{parentName:"p"},"configureWith(filePath:)"),"(iOS)")),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("p",{parentName:"li"},(0,o.mdx)("inlineCode",{parentName:"p"},"configureWithFileInAssets(fileName)"),"(Android) -> ",(0,o.mdx)("inlineCode",{parentName:"p"},"updateConfiguration(configMap)"),"(Android) -> ",(0,o.mdx)("inlineCode",{parentName:"p"},"clearUpdatedConfiguration()"),": In this example, you end up with the initial configuration set via ",(0,o.mdx)("inlineCode",{parentName:"p"},"configureWithFileInAssets(fileName)"),"(Android)")),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("p",{parentName:"li"},(0,o.mdx)("inlineCode",{parentName:"p"},"configureWithAppId(appId)"),"(Android)/",(0,o.mdx)("inlineCode",{parentName:"p"},"configureWith(appId:)"),"(iOS) or ",(0,o.mdx)("inlineCode",{parentName:"p"},"configureWithFileInPath(filePath)"),"(Android)/ ",(0,o.mdx)("inlineCode",{parentName:"p"},"configureWith(filePath:)"),"(iOS) or ",(0,o.mdx)("inlineCode",{parentName:"p"},"configureWithFileInAssets(fileName)"),"(Android) -> ",(0,o.mdx)("inlineCode",{parentName:"p"},"updateConfiguration(configMap)"),"(Android)/ ",(0,o.mdx)("inlineCode",{parentName:"p"},"updateConfigurationWith(configDict)"),"(iOS) -> ",(0,o.mdx)("inlineCode",{parentName:"p"},"clearUpdatedConfiguration()")," -> ",(0,o.mdx)("inlineCode",{parentName:"p"},"updateConfiguration(configMap)"),"(Android)/ ",(0,o.mdx)("inlineCode",{parentName:"p"},"updateConfigurationWith(configDict)"),"(iOS): In this example, the configuration will be the most recently updated configuration and will not have any keys from the first update unless they are included in the most recent update.")),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("p",{parentName:"li"},(0,o.mdx)("inlineCode",{parentName:"p"},"configureWithAppId(appId)"),"(Android)/",(0,o.mdx)("inlineCode",{parentName:"p"},"configureWith(appId:)"),"(iOS) or ",(0,o.mdx)("inlineCode",{parentName:"p"},"configureWithFileInPath(filePath)"),"(Android)/ ",(0,o.mdx)("inlineCode",{parentName:"p"},"configureWith(filePath:)"),"(iOS) or ",(0,o.mdx)("inlineCode",{parentName:"p"},"configureWithFileInAssets(fileName)"),"(Android) -> ",(0,o.mdx)("inlineCode",{parentName:"p"},"setPrivacyStatus(privacyStatus)"),"(Android)/ ",(0,o.mdx)("inlineCode",{parentName:"p"},"setPrivacyStatus(_ status:)"),"(iOS) -> ",(0,o.mdx)("inlineCode",{parentName:"p"},"clearUpdatedConfiguration()"),": In this example, the configuration will have the initial ",(0,o.mdx)("inlineCode",{parentName:"p"},"MobilePrivacyStatus"),"(Android)/ ",(0,o.mdx)("inlineCode",{parentName:"p"},"PrivacyStatus"),"(iOS) set via ",(0,o.mdx)("inlineCode",{parentName:"p"},"configureWithAppId(appId)"),"(Android)/",(0,o.mdx)("inlineCode",{parentName:"p"},"configureWith(appId:)"),"(iOS) or ",(0,o.mdx)("inlineCode",{parentName:"p"},"configureWithFileInPath(filePath)"),"(Android)/ ",(0,o.mdx)("inlineCode",{parentName:"p"},"configureWith(filePath:)"),"(iOS) or ",(0,o.mdx)("inlineCode",{parentName:"p"},"configureWithFileInAssets(fileName)"),"(Android)."))),(0,o.mdx)(u,{orientation:"horizontal",slots:"heading, content",repeat:"2",mdxType:"TabsBlock"}),(0,o.mdx)("p",null,"Android"),(0,o.mdx)(r.default,{query:"platform=android&api=clear-updated-configuration",mdxType:"Tabs"}),(0,o.mdx)("p",null,"iOS"),(0,o.mdx)(r.default,{query:"platform=ios&api=clear-updated-configuration",mdxType:"Tabs"}),(0,o.mdx)("h2",{id:"configurewithappid"},"configureWithAppID"),(0,o.mdx)("p",null,"This API causes the SDK to download the configuration for the provided app ID and apply the configuration to the current session."),(0,o.mdx)(u,{orientation:"horizontal",slots:"heading, content",repeat:"2",mdxType:"TabsBlock"}),(0,o.mdx)("p",null,"Android"),(0,o.mdx)(r.default,{query:"platform=android&api=configure-with-app-id",mdxType:"Tabs"}),(0,o.mdx)("p",null,"iOS"),(0,o.mdx)(r.default,{query:"platform=ios&api=configure-with-app-id",mdxType:"Tabs"}),(0,o.mdx)("h2",{id:"configurewithfileinassets"},"configureWithFileInAssets"),(0,o.mdx)(x,{variant:"info",slots:"text",mdxType:"InlineAlert"}),(0,o.mdx)("p",null,"This API is only available in Android."),(0,o.mdx)("p",null,"You can bundle a JSON configuration file in the app's Assets folder to replace or complement the configuration that was downloaded by using the ",(0,o.mdx)("a",{parentName:"p",href:"./index.md#configure-with-app-id-per-environment"},"Configure with App ID per environment")," approach."),(0,o.mdx)(u,{orientation:"horizontal",slots:"heading, content",repeat:"1",mdxType:"TabsBlock"}),(0,o.mdx)("p",null,"Android"),(0,o.mdx)(r.default,{query:"platform=android&api=configure-with-file-in-assets",mdxType:"Tabs"}),(0,o.mdx)("h2",{id:"configurewithfileinpath"},"configureWithFileInPath"),(0,o.mdx)("p",null,"You can include a bundled JSON configuration file in your app package to replace or complement the configuration that was downloaded by using the ",(0,o.mdx)("a",{parentName:"p",href:"./index.md#configure-with-app-id-per-environment"},"Configure with App ID per environment")," approach."),(0,o.mdx)("p",null,"To pass in a bundled path and file name:"),(0,o.mdx)(u,{orientation:"horizontal",slots:"heading, content",repeat:"2",mdxType:"TabsBlock"}),(0,o.mdx)("p",null,"Android"),(0,o.mdx)(r.default,{query:"platform=android&api=configure-with-file-in-path",mdxType:"Tabs"}),(0,o.mdx)("p",null,"iOS"),(0,o.mdx)(r.default,{query:"platform=ios&api=configure-with-file-in-path",mdxType:"Tabs"}),(0,o.mdx)("h2",{id:"extensionversion"},"extensionVersion"),(0,o.mdx)("p",null,"The ",(0,o.mdx)("inlineCode",{parentName:"p"},"extensionVersion()")," API returns the version of the Configuration extension."),(0,o.mdx)("p",null,"To get the version of the Configuration extension, use the following code sample:"),(0,o.mdx)(u,{orientation:"horizontal",slots:"heading, content",repeat:"2",mdxType:"TabsBlock"}),(0,o.mdx)("p",null,"Android"),(0,o.mdx)(r.default,{query:"platform=android&api=extension-version",mdxType:"Tabs"}),(0,o.mdx)("p",null,"iOS"),(0,o.mdx)(r.default,{query:"platform=ios&api=extension-version",mdxType:"Tabs"}),(0,o.mdx)("h2",{id:"updateconfiguration"},"updateConfiguration"),(0,o.mdx)("p",null,"You can also update the configuration programmatically by passing configuration keys and values to override the existing configuration."),(0,o.mdx)(x,{variant:"info",slots:"text",mdxType:"InlineAlert"}),(0,o.mdx)("p",null,"Keys that are not found on the current configuration are added when this method is followed. Null values are allowed and replace existing configuration values."),(0,o.mdx)(x,{variant:"warning",slots:"text",mdxType:"InlineAlert"}),(0,o.mdx)("p",null,"Do not use this API to update the ",(0,o.mdx)("inlineCode",{parentName:"p"},"build.environment")," key or any key with an environment prefix, because it can lead to unexpected behaviors. For more information, read ",(0,o.mdx)("a",{parentName:"p",href:"./index.md#environment-aware-configuration-properties"},"Environment-aware configuration properties"),"."),(0,o.mdx)(u,{orientation:"horizontal",slots:"heading, content",repeat:"2",mdxType:"TabsBlock"}),(0,o.mdx)("p",null,"Android"),(0,o.mdx)(r.default,{query:"platform=android&api=update-configuration",mdxType:"Tabs"}),(0,o.mdx)("p",null,"iOS"),(0,o.mdx)(r.default,{query:"platform=ios&api=update-configuration",mdxType:"Tabs"}))}f.isMDXComponent=!0},97940:function(e,n,a){a.r(n),a.d(n,{_frontmatter:function(){return l},default:function(){return c}});var i,t=a(87462),o=a(63366),d=(a(15007),a(64983)),r=a(91515),p=["components"],l={},m=(i="Variant",function(e){return console.warn("Component "+i+" was not imported, exported, or provided by MDXProvider as global scope"),(0,d.mdx)("div",e)}),u={_frontmatter:l},x=r.Z;function c(e){var n=e.components,a=(0,o.Z)(e,p);return(0,d.mdx)(x,(0,t.Z)({},u,a,{components:n,mdxType:"MDXLayout"}),(0,d.mdx)(m,{platform:"android",api:"clear-updated-configuration",repeat:"5",mdxType:"Variant"}),(0,d.mdx)("h4",{id:"java"},"Java"),(0,d.mdx)("p",null,(0,d.mdx)("strong",{parentName:"p"},"Syntax")),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-java"},"public static void clearUpdatedConfiguration();\n")),(0,d.mdx)("p",null,(0,d.mdx)("strong",{parentName:"p"},"Example")),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-java"},"MobileCore.clearUpdatedConfiguration();\n")),(0,d.mdx)(m,{platform:"ios",api:"clear-updated-configuration",repeat:"10",mdxType:"Variant"}),(0,d.mdx)("h4",{id:"swift"},"Swift"),(0,d.mdx)("p",null,(0,d.mdx)("strong",{parentName:"p"},"Syntax")),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-swift"},"static func clearUpdatedConfiguration()\n")),(0,d.mdx)("p",null,(0,d.mdx)("strong",{parentName:"p"},"Example")),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-swift"},"MobileCore.clearUpdatedConfiguration()\n")),(0,d.mdx)("h4",{id:"objective-c"},"Objective-C"),(0,d.mdx)("p",null,(0,d.mdx)("strong",{parentName:"p"},"Syntax")),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-objectivec"},"+ (void) clearUpdatedConfiguration(); \n")),(0,d.mdx)("p",null,(0,d.mdx)("strong",{parentName:"p"},"Example")),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-objectivec"},"[AEPMobileCore clearUpdatedConfiguration];\n")),(0,d.mdx)(m,{platform:"android",api:"configure-with-app-id",repeat:"5",mdxType:"Variant"}),(0,d.mdx)("h4",{id:"java-1"},"Java"),(0,d.mdx)("p",null,(0,d.mdx)("strong",{parentName:"p"},"Syntax")),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-java"},"public static void configureWithAppID(@NonNull final String appId);\n")),(0,d.mdx)("p",null,(0,d.mdx)("strong",{parentName:"p"},"Example")),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-java"},'MobileCore.configureWithAppId("1423ae38-8385-8963-8693-28375403491d");\n')),(0,d.mdx)(m,{platform:"ios",api:"configure-with-app-id",repeat:"10",mdxType:"Variant"}),(0,d.mdx)("h4",{id:"swift-1"},"Swift"),(0,d.mdx)("p",null,(0,d.mdx)("strong",{parentName:"p"},"Syntax")),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-swift"}," static func configureWith(appId: String)\n")),(0,d.mdx)("p",null,(0,d.mdx)("strong",{parentName:"p"},"Example")),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-swift"},' MobileCore.configureWith(appId: "1423ae38-8385-8963-8693-28375403491d")\n')),(0,d.mdx)("h4",{id:"objective-c-1"},"Objective-C"),(0,d.mdx)("p",null,(0,d.mdx)("strong",{parentName:"p"},"Syntax")),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-objectivec"},"+ (void) configureWithAppId: (NSString* appId);\n")),(0,d.mdx)("p",null,(0,d.mdx)("strong",{parentName:"p"},"Example")),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-objectivec"},' [AEPMobileCore configureWithAppId: @"1423ae38-8385-8963-8693-28375403491d"];\n')),(0,d.mdx)(m,{platform:"android",api:"configure-with-file-in-assets",repeat:"5",mdxType:"Variant"}),(0,d.mdx)("h4",{id:"java-2"},"Java"),(0,d.mdx)("p",null,(0,d.mdx)("strong",{parentName:"p"},"Syntax")),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-java"},"public static void configureWithFileInAssets(@NonNull final String fileName);\n")),(0,d.mdx)("p",null,(0,d.mdx)("strong",{parentName:"p"},"Example")),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-java"},'MobileCore.configureWithFileInAssets("exampleJSONfile.json");\n')),(0,d.mdx)(m,{platform:"android",api:"configure-with-file-in-path",repeat:"5",mdxType:"Variant"}),(0,d.mdx)("h4",{id:"java-3"},"Java"),(0,d.mdx)("p",null,(0,d.mdx)("strong",{parentName:"p"},"Syntax")),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-java"},"public static void configureWithFileInPath(@NonNull final String filePath);\n")),(0,d.mdx)("p",null,(0,d.mdx)("strong",{parentName:"p"},"Example")),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-java"},'MobileCore.configureWithFileInPath("absolute/path/to/exampleJSONfile.json");\n')),(0,d.mdx)(m,{platform:"ios",api:"configure-with-file-in-path",repeat:"10",mdxType:"Variant"}),(0,d.mdx)("h4",{id:"swift-2"},"Swift"),(0,d.mdx)("p",null,(0,d.mdx)("strong",{parentName:"p"},"Syntax")),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-swift"}," static func configureWith(filePath: String)\n")),(0,d.mdx)("p",null,(0,d.mdx)("strong",{parentName:"p"},"Example")),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-swift"},' let filePath = Bundle.main.path(forResource: "ExampleJSONFile", ofType: "json")\n MobileCore.configureWith(filePath: filePath)\n')),(0,d.mdx)("h4",{id:"objective-c-2"},"Objective-C"),(0,d.mdx)("p",null,(0,d.mdx)("strong",{parentName:"p"},"Syntax")),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-objectivec"},"+ (void) configureWithFileInPath: (NSString* __nullable) filepath;\n")),(0,d.mdx)("p",null,(0,d.mdx)("strong",{parentName:"p"},"Example")),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-objectivec"},' NSString *filePath = [[NSBundle mainBundle] pathForResource:@"ExampleJSONFile" ofType:@"json"];\n [AEPMobileCore configureWithFilePath:filePath];\n')),(0,d.mdx)(m,{platform:"android",api:"extension-version",repeat:"2",mdxType:"Variant"}),(0,d.mdx)("h4",{id:"java-4"},"Java"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-java"},"String coreExtensionVersion = MobileCore.extensionVersion();\n")),(0,d.mdx)(m,{platform:"ios",api:"extension-version",repeat:"4",mdxType:"Variant"}),(0,d.mdx)("h4",{id:"swift-3"},"Swift"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-swift"},"let version = MobileCore.extensionVersion\n")),(0,d.mdx)("h4",{id:"objective-c-3"},"Objective-C"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-objectivec"},"NSString *version = [AEPMobileCore extensionVersion];\n")),(0,d.mdx)(m,{platform:"android",api:"update-configuration",repeat:"5",mdxType:"Variant"}),(0,d.mdx)("h4",{id:"java-5"},"Java"),(0,d.mdx)("p",null,(0,d.mdx)("strong",{parentName:"p"},"Syntax")),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-java"},"public static void updateConfiguration(@NonNull final Map configMap);\n")),(0,d.mdx)("p",null,(0,d.mdx)("strong",{parentName:"p"},"Example")),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-java"},'HashMap<String, Object> data = new HashMap<String, Object>();\ndata.put("global.privacy", "optedout");\nMobileCore.updateConfiguration(data);\n')),(0,d.mdx)(m,{platform:"ios",api:"update-configuration",repeat:"10",mdxType:"Variant"}),(0,d.mdx)("h4",{id:"swift-4"},"Swift"),(0,d.mdx)("p",null,(0,d.mdx)("strong",{parentName:"p"},"Syntax")),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-swift"},"@objc(updateConfiguration:)\nstatic func updateConfigurationWith(configDict: [String: Any])\n")),(0,d.mdx)("p",null,(0,d.mdx)("strong",{parentName:"p"},"Example")),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-swift"},' let updatedConfig = ["global.privacy":"optedout"]\n MobileCore.updateConfigurationWith(configDict: updatedConfig)\n')),(0,d.mdx)("h4",{id:"objective-c-4"},"Objective-C"),(0,d.mdx)("p",null,(0,d.mdx)("strong",{parentName:"p"},"Syntax")),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-objectivec"}," + (void) updateConfiguration: (NSDictionary* __nullable) config;\n")),(0,d.mdx)("p",null,(0,d.mdx)("strong",{parentName:"p"},"Example")),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-objectivec"},' NSDictionary *updatedConfig = @{@"global.privacy":@"optedout"};\n [AEPMobileCore updateConfiguration:updatedConfig];\n')))}c.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-home-base-mobile-core-configuration-api-reference-md-c99bd6d56121b8c3d2ea.js.map