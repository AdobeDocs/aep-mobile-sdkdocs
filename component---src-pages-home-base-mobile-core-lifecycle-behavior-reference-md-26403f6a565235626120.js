"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[1102],{69475:function(e,a,n){n.r(a),n.d(a,{_frontmatter:function(){return d},default:function(){return f}});var t,l=n(87462),i=n(63366),s=(n(15007),n(64983)),c=n(91515),o=["components"],d={},r=(t="InlineAlert",function(e){return console.warn("Component "+t+" was not imported, exported, or provided by MDXProvider as global scope"),(0,s.mdx)("div",e)}),m={_frontmatter:d},p=c.Z;function f(e){var a=e.components,n=(0,i.Z)(e,o);return(0,s.mdx)(p,(0,l.Z)({},m,n,{components:a,mdxType:"MDXLayout"}),(0,s.mdx)("h1",{id:"lifecycle-behavior-reference"},"Lifecycle behavior reference"),(0,s.mdx)("p",null,"The Lifecycle extension relies solely on the Lifecycle events dispatched by the ",(0,s.mdx)("a",{parentName:"p",href:"api-reference.md#lifecyclestart"},(0,s.mdx)("inlineCode",{parentName:"a"},"lifecycleStart"))," and ",(0,s.mdx)("a",{parentName:"p",href:"api-reference.md#lifecyclepause"},(0,s.mdx)("inlineCode",{parentName:"a"},"lifecyclePause"))," calls to determine the start of new sessions and to calculate lifecycle data."),(0,s.mdx)("h2",{id:"general-behavior"},"General behavior"),(0,s.mdx)("p",null,"A Lifecycle session is the time between a ",(0,s.mdx)("inlineCode",{parentName:"p"},"lifecycleStart")," call and a ",(0,s.mdx)("inlineCode",{parentName:"p"},"lifecyclePause")," call. A new session is detected when ",(0,s.mdx)("inlineCode",{parentName:"p"},"lifecycleStart")," is called after a ",(0,s.mdx)("inlineCode",{parentName:"p"},"lifecyclePause")," and the ",(0,s.mdx)("a",{parentName:"p",href:"configuration-keys.md#lifecyclesessiontimeout"},"Lifecycle session timeout")," has elapsed."),(0,s.mdx)("p",null,"All events that are not Lifecycle start or Lifecycle pause do not affect Lifecycle state or data. Starting MobileCore using ",(0,s.mdx)("inlineCode",{parentName:"p"},"registerExtensions")," does not automatically start a Lifecycle session nor does it affect Lifecycle data."),(0,s.mdx)("h3",{id:"consecutive-lifecyclestart-api-calls"},"Consecutive ",(0,s.mdx)("inlineCode",{parentName:"h3"},"lifecycleStart")," API calls"),(0,s.mdx)("p",null,"Consecutive ",(0,s.mdx)("inlineCode",{parentName:"p"},"lifecycleStart")," calls will not update the session start timestamp from the initial ",(0,s.mdx)("inlineCode",{parentName:"p"},"lifecycleStart")," call, and Lifecycle data is not changed."),(0,s.mdx)(r,{variant:"info",slots:"text",mdxType:"InlineAlert"}),(0,s.mdx)("p",null,"In this case, a Lifecycle shared state is dispatched with its data reflecting the start timestamp from the initial ",(0,s.mdx)("inlineCode",{parentName:"p"},"lifecycleStart")," call. This can be verified in both application logs or Assurance."),(0,s.mdx)("h3",{id:"consecutive-lifecyclepause-api-calls"},"Consecutive ",(0,s.mdx)("inlineCode",{parentName:"h3"},"lifecyclePause")," API calls"),(0,s.mdx)("p",null,"Consecutive ",(0,s.mdx)("inlineCode",{parentName:"p"},"lifecyclePause")," calls will update the persisted pause timestamp. On the next ",(0,s.mdx)("inlineCode",{parentName:"p"},"lifecycleStart")," API call, the last pause timestamp is used to determine if the previous session has timed out and a new session is started."),(0,s.mdx)("h2",{id:"expected-lifecycle-scenarios"},"Expected Lifecycle scenarios"),(0,s.mdx)("p",null,"The following Lifecycle workflows show examples of the expected ordering of Lifecycle events."),(0,s.mdx)("p",null,(0,s.mdx)("strong",{parentName:"p"},"App first launch after installation")),(0,s.mdx)("p",null,(0,s.mdx)("img",{parentName:"p",src:"/aep-mobile-sdkdocs/assets/289701e75e24bf8f23329456274e091b/lifecycle-first-launch.svg",alt:null})),(0,s.mdx)("p",null,(0,s.mdx)("strong",{parentName:"p"},"Subsequent app launches, continue session with app close")),(0,s.mdx)("p",null,(0,s.mdx)("img",{parentName:"p",src:"/aep-mobile-sdkdocs/assets/349093fc619da0ca20bf6f9f593ea4c7/lifecycle-continue-session.svg",alt:null})),(0,s.mdx)("p",null,(0,s.mdx)("strong",{parentName:"p"},"Subsequent app launches, continue session without app close")),(0,s.mdx)("p",null,(0,s.mdx)("img",{parentName:"p",src:"/aep-mobile-sdkdocs/assets/0f46312b4ff0a5d0c31c7704cbe61d76/lifecycle-continue-without-close.svg",alt:null})),(0,s.mdx)("p",null,(0,s.mdx)("strong",{parentName:"p"},"Subsequent app launches, new session")),(0,s.mdx)("p",null,(0,s.mdx)("img",{parentName:"p",src:"/aep-mobile-sdkdocs/assets/10561c10df8750016d2d22e5c8d4b413/lifecycle-subsequent-new-session.svg",alt:null})),(0,s.mdx)("p",null,(0,s.mdx)("strong",{parentName:"p"},"On app crash or force close")),(0,s.mdx)("p",null,(0,s.mdx)("img",{parentName:"p",src:"/aep-mobile-sdkdocs/assets/c6c132b125aa3d4dbb5f2a84864d8ded/lifecycle-crash.svg",alt:null})),(0,s.mdx)("h2",{id:"troubleshooting-unexpected-lifecycle-scenarios"},"Troubleshooting unexpected Lifecycle scenarios"),(0,s.mdx)("p",null,"The following Lifecycle workflows show examples of the unexpected ordering of Lifecycle events that can impact Lifecycle data and can indicate an incorrect implementation of the Lifecycle APIs. To address the following scenarios, refer to the ",(0,s.mdx)("a",{parentName:"p",href:"index.md#register-lifecycle-with-mobile-core-and-add-appropriate-startpause-calls"},"implementation guide for Lifecycle"),"."),(0,s.mdx)("p",null,(0,s.mdx)("strong",{parentName:"p"},"Missing pause, app terminated"),"  "),(0,s.mdx)("p",null,"This scenario looks the same as a standard crash, but the underlying reason is an incorrect implementation where ",(0,s.mdx)("inlineCode",{parentName:"p"},"lifecyclePause")," is not called before the app is terminated."),(0,s.mdx)("p",null,(0,s.mdx)("img",{parentName:"p",src:"/aep-mobile-sdkdocs/assets/cf29e19197969e8936c7ed65deff2298/lifecycle-missing-pause-terminated.svg",alt:null})),(0,s.mdx)("p",null,(0,s.mdx)("strong",{parentName:"p"},"Missing pause, app still in memory"),"  "),(0,s.mdx)("p",null,"This scenario shows an example of ",(0,s.mdx)("a",{parentName:"p",href:"#consecutive-lifecyclestart-api-calls"},"consecutive ",(0,s.mdx)("inlineCode",{parentName:"a"},"lifecycleStart")," API calls"),". The app close is not detected because ",(0,s.mdx)("inlineCode",{parentName:"p"},"lifecyclePause")," is not called. As the app is not removed from memory, the current session continues."),(0,s.mdx)("p",null,(0,s.mdx)("img",{parentName:"p",src:"/aep-mobile-sdkdocs/assets/011c88132f5fcbaaca63442f696902b3/lifecycle-missing-pause-not-terminated.svg",alt:null})),(0,s.mdx)("p",null,"In this scenario, the ",(0,s.mdx)("inlineCode",{parentName:"p"},"lifecycleStart")," call (5) is not detected as a new session nor a crash. It will have the consequences of a ",(0,s.mdx)("a",{parentName:"p",href:"#consecutive-lifecyclestart-api-calls"},"consecutive ",(0,s.mdx)("inlineCode",{parentName:"a"},"lifecycleStart")," API call"),"."),(0,s.mdx)("p",null,(0,s.mdx)("strong",{parentName:"p"},"Missing start"),"  "),(0,s.mdx)("p",null,"This scenario shows an example of ",(0,s.mdx)("a",{parentName:"p",href:"#consecutive-lifecyclepause-api-calls"},"consecutive ",(0,s.mdx)("inlineCode",{parentName:"a"},"lifecyclePause")," API calls"),". The new session is not detected because ",(0,s.mdx)("inlineCode",{parentName:"p"},"lifecycleStart")," is not called."),(0,s.mdx)("p",null,(0,s.mdx)("img",{parentName:"p",src:"/aep-mobile-sdkdocs/assets/554eb7023f12d9f4ff01b9e778c0aa97/lifecycle-missing-start.svg",alt:null})),(0,s.mdx)("p",null,"In this scenario, the last ",(0,s.mdx)("inlineCode",{parentName:"p"},"lifecyclePause")," call (7) is effectively a ",(0,s.mdx)("a",{parentName:"p",href:"#consecutive-lifecyclepause-api-calls"},"consecutive ",(0,s.mdx)("inlineCode",{parentName:"a"},"lifecyclePause")," API call"),", with the consequences of:"),(0,s.mdx)("ol",null,(0,s.mdx)("li",{parentName:"ol"},"Actual app background time - the time between ",(0,s.mdx)("inlineCode",{parentName:"li"},"lifecyclePause")," calls (3) and (7) - to be included in Lifecycle data calculations."),(0,s.mdx)("li",{parentName:"ol"},"Potentially affecting detection of a new session start.")))}f.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-home-base-mobile-core-lifecycle-behavior-reference-md-26403f6a565235626120.js.map