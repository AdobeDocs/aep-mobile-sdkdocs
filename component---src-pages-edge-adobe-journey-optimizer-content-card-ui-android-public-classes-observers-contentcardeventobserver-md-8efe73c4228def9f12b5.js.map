{"version":3,"file":"component---src-pages-edge-adobe-journey-optimizer-content-card-ui-android-public-classes-observers-contentcardeventobserver-md-8efe73c4228def9f12b5.js","mappings":"4OAOsBA,E,wEADTC,EAAe,CAAC,EAKvBC,GAJgBF,EAIU,YAJF,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,4EAC5B,eAASG,EAClB,GAEMG,EAAc,CAClBL,aAAAA,GAEIM,EAAYC,EAAAA,EACH,SAASC,EAAW,GAGhC,IAFDC,EAAU,EAAVA,WACGP,GAAK,YAER,OAAO,SAACI,GAAS,UAAKD,EAAiBH,EAAK,CAAEO,WAAYA,EAAYC,QAAQ,eAG5E,eACE,GAAM,4BAA0B,6BAElC,kDAAmC,cAAGC,WAAW,IAC7C,KAAQ,2BAAyB,sBACN,uCAC/B,eACE,GAAM,oBAAkB,qBAE1B,oBACE,eAAIA,WAAW,OAAK,eAAIA,WAAW,MAAI,YAAkB,mBAAmB,cAAGA,WAAW,KACtF,KAAQ,oCAAkC,8BACP,kDAEzC,eACE,GAAM,WAAS,YAEjB,eACE,GAAM,WAAS,YAEjB,yFACA,eACE,GAAM,UAAQ,WAEhB,SAACV,EAAS,CAACW,MAAM,gBAAgBC,OAAO,IAAIC,UAAU,SAASJ,QAAQ,eACvE,eACE,GAAM,UAAQ,WAEhB,qBAAK,iBAAMC,WAAW,MAClB,UAAa,mBAAiB,iDAKtC,CAEAH,EAAWO,gBAAiB,C","sources":["webpack://dev-site-documentation-template/./src/pages/edge/adobe-journey-optimizer/content-card-ui/Android/public-classes/observers/contentcardeventobserver.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/aep-mobile-sdkdocs/aep-mobile-sdkdocs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst CodeBlock = makeShortcode(\"CodeBlock\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"contentcardeventobserver\"\n    }}>{`ContentCardEventObserver`}</h1>\n    <p>{`Messaging implementation of `}<a parentName=\"p\" {...{\n        \"href\": \"./aepuieventobserver.md\"\n      }}>{`AepUIEventObserver`}</a>{` for handling content card events.`}</p>\n    <h2 {...{\n      \"id\": \"class-parameters\"\n    }}>{`Class Parameters`}</h2>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`callback`}</em>{` - An optional `}<a parentName=\"li\" {...{\n          \"href\": \"../contentcarduieventlistener.md\"\n        }}>{`ContentCardUIEventListener`}</a>{` to invoke when a content card event occurs.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"methods\"\n    }}>{`Methods`}</h2>\n    <h3 {...{\n      \"id\": \"onevent\"\n    }}>{`onEvent`}</h3>\n    <p>{`Called when an event related to a Content Card UI template occurs.`}</p>\n    <h3 {...{\n      \"id\": \"syntax\"\n    }}>{`Syntax`}</h3>\n    <CodeBlock slots=\"heading, code\" repeat=\"1\" languages=\"Kotlin\" mdxType=\"CodeBlock\" />\n    <h3 {...{\n      \"id\": \"kotlin\"\n    }}>{`Kotlin`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`override fun onEvent(event: UIEvent<*, *>)\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","CodeBlock","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","slots","repeat","languages","isMDXComponent"],"sourceRoot":""}