{"version":3,"file":"component---src-pages-resources-reference-push-notifications-android-index-md-8b98ec6d0bc119e34a59.js","mappings":"4OAOsBA,E,wEADTC,EAAe,CAAC,EAKvBC,GAJgBF,EAIY,cAJJ,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,4EAC5B,eAASG,EAClB,GAEMG,EAAc,CAClBL,aAAAA,GAEIM,EAAYC,EAAAA,EACH,SAASC,EAAW,GAGhC,IAFDC,EAAU,EAAVA,WACGP,GAAK,YAER,OAAO,SAACI,GAAS,UAAKD,EAAiBH,EAAK,CAAEO,WAAYA,EAAYC,QAAQ,eAG5E,eACE,GAAM,kCAAgC,mCAExC,uIACA,SAACT,EAAW,CAACU,QAAQ,OAAOC,MAAM,OAAOF,QAAQ,iBACjD,wFAAyE,mBAAQG,WAAW,KAAG,0BAAoC,gBAAgB,qBAAM,oBAAM,yBAAyB,mBAAQA,WAAW,KAAG,8BAAwC,MACtP,eACE,GAAM,SAAO,UAEf,eACE,GAAM,gBAAc,iBAEtB,0CAA2B,cAAGA,WAAW,IACrC,KAAQ,kDAAgD,oCACf,6BAC7C,eACE,GAAM,kBAAgB,mBAExB,gDAAiC,uBAAYA,WAAW,KAAG,2CAAyD,UAAU,uBAAYA,WAAW,KAAG,qBAAmC,+BAA+B,uBAAYA,WAAW,KAAG,4BAA0C,MAC9R,oEACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,6YAcpC,CAEAL,EAAWM,gBAAiB,C","sources":["webpack://dev-site-documentation-template/./src/pages/resources/reference/push-notifications/android/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/aep-mobile-sdkdocs/aep-mobile-sdkdocs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"push-templates-setup---android\"\n    }}>{`Push templates setup - Android`}</h1>\n    <p>{`This document outlines the steps required to configure your app to use default push templates provided by Adobe.`}</p>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`Default push template functionality is available for use with the `}<strong parentName=\"p\">{`Adobe Campaign Classic`}</strong>{` extension. `}<br /><br />{`This is supported by `}<strong parentName=\"p\">{`Android SDK version 3.1.0+`}</strong>{`.`}</p>\n    <h2 {...{\n      \"id\": \"setup\"\n    }}>{`Setup`}</h2>\n    <h3 {...{\n      \"id\": \"prerequisite\"\n    }}>{`Prerequisite`}</h3>\n    <p>{`Follow the steps to `}<a parentName=\"p\" {...{\n        \"href\": \"./../../../../solution/adobe-campaign-classic/\"\n      }}>{`configure Adobe Campaign Classic`}</a>{` and add it to your app.`}</p>\n    <h3 {...{\n      \"id\": \"implementation\"\n    }}>{`Implementation`}</h3>\n    <p>{`In your application, call `}<inlineCode parentName=\"p\">{`AEPMessagingService.handleRemoteMessage`}</inlineCode>{` from `}<inlineCode parentName=\"p\">{`onMessageReceived`}</inlineCode>{` in the class implementing `}<inlineCode parentName=\"p\">{`FirebaseMessagingService`}</inlineCode>{`.`}</p>\n    <p>{`Below is an example of where to call the API:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class MyFirebaseMessagingService extends FirebaseMessagingService {\n    @Override\n    public void onMessageReceived(RemoteMessage remoteMessage) {\n        if (AEPMessagingService.handleRemoteMessage(this, remoteMessage)) {\n            // Campaign extension has handled the notification\n        } else {\n            // Handle notification from other sources\n        }\n    }\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","InlineAlert","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","variant","slots","parentName","isMDXComponent"],"sourceRoot":""}