{"version":3,"file":"component---src-pages-solution-adobe-campaign-classic-push-templates-index-md-1f583049a16bb9b4d381.js","mappings":"4OAOsBA,E,wEADTC,EAAe,CAAC,EAKvBC,GAJgBF,EAIY,cAJJ,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,4EAC5B,eAASG,EAClB,GAEMG,EAAc,CAClBL,aAAAA,GAEIM,EAAYC,EAAAA,EACH,SAASC,EAAW,GAGhC,IAFDC,EAAU,EAAVA,WACGP,GAAK,YAER,OAAO,SAACI,GAAS,UAAKD,EAAiBH,EAAK,CAAEO,WAAYA,EAAYC,QAAQ,eAG5E,eACE,GAAM,2CAAyC,4CAEjD,SAACT,EAAW,CAACU,QAAQ,UAAUC,MAAM,OAAOF,QAAQ,iBACpD,gKACA,0HACA,uBACE,kBAAOG,WAAW,UAChB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,SACR,mBAAQA,WAAW,MAAI,mBAC1B,eAAIA,WAAW,KACb,MAAS,SACR,mBAAQA,WAAW,MAAI,kBAC1B,eAAIA,WAAW,KACb,MAAS,SACR,mBAAQA,WAAW,MAAI,mBAG9B,kBAAOA,WAAW,UAChB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,SACR,cAAGA,WAAW,KACb,KAAQ,WAAS,WAErB,eAAIA,WAAW,KACb,MAAS,SACR,mBAAQA,WAAW,MAAI,WAAqB,eAAe,qBAAM,mBAAQA,WAAW,MAAI,OAAiB,mBAC5G,eAAIA,WAAW,KACb,MAAS,QAAM,wCAC0B,oBAAM,+NAEnD,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,SACR,cAAGA,WAAW,KACb,KAAQ,cAAY,cAExB,eAAIA,WAAW,KACb,MAAS,SACR,mBAAQA,WAAW,MAAI,WAAqB,eAAe,qBAAM,mBAAQA,WAAW,MAAI,OAAiB,mBAC5G,eAAIA,WAAW,KACb,MAAS,QAAM,wGAC0F,oBAAM,iBAAiB,uBAAYA,WAAW,MAAI,UAAwB,kEAAkE,uBAAYA,WAAW,MAAI,QAAsB,yDAI9S,eACE,GAAM,SAAO,UAEf,2FAA4E,mBAAQA,WAAW,KAAG,QAAkB,UAAU,uBAAYA,WAAW,KAAG,2CAAyD,UAAU,uBAAYA,WAAW,KAAG,qBAAmC,+BAA+B,uBAAYA,WAAW,KAAG,4BAA0C,MAC3X,wEACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,6YAcpC,CAEAL,EAAWM,gBAAiB,C","sources":["webpack://dev-site-documentation-template/./src/pages/solution/adobe-campaign-classic/push-templates/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/aep-mobile-sdkdocs/aep-mobile-sdkdocs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"adobe-campaign-classic---push-templates\"\n    }}>{`Adobe Campaign Classic - push templates`}</h1>\n    <InlineAlert variant=\"warning\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`Push template functionality is only available in Adobe Campaign Classic Android SDK version 2.1.0 through the next major version release.`}</p>\n    <p>{`This document outlines out of the box push templates supported in Adobe Campaign Classic extension.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><strong parentName=\"th\">{`Template Name`}</strong></th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><strong parentName=\"th\">{`Availability`}</strong></th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><strong parentName=\"th\">{`Description`}</strong></th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><a parentName=\"td\" {...{\n              \"href\": \"./basic\"\n            }}>{`Basic`}</a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><strong parentName=\"td\">{`Android`}</strong>{` - v2.1.0+ `}<br /><strong parentName=\"td\">{`iOS`}</strong>{` - coming soon`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`A basic push notification template. `}<br />{`Allows setting a title, message body, and optional image, action buttons, and click-through URL. Also supports a \"remind me later\" functionality which will schedule the notification to be re-delivered at a later time.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><a parentName=\"td\" {...{\n              \"href\": \"./carousel\"\n            }}>{`Carousel`}</a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><strong parentName=\"td\">{`Android`}</strong>{` - v2.1.0+ `}<br /><strong parentName=\"td\">{`iOS`}</strong>{` - coming soon`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Shows a series of three (3) to five (5) images that scroll on and off the side of the notification. `}<br />{`Available in `}<inlineCode parentName=\"td\">{`manual`}</inlineCode>{` mode (user must click a button to scroll carousel items) and `}<inlineCode parentName=\"td\">{`auto`}</inlineCode>{` mode (carousel items scroll every five seconds).`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"setup\"\n    }}>{`Setup`}</h2>\n    <p>{`In order for the SDK to handle these push templates, the application `}<strong parentName=\"p\">{`must`}</strong>{` call `}<inlineCode parentName=\"p\">{`AEPMessagingService.handleRemoteMessage`}</inlineCode>{` from `}<inlineCode parentName=\"p\">{`onMessageReceived`}</inlineCode>{` in the class implementing `}<inlineCode parentName=\"p\">{`FirebaseMessagingService`}</inlineCode>{`.`}</p>\n    <p>{`Below is an example of where to call the new API:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class MyFirebaseMessagingService extends FirebaseMessagingService {\n    @Override\n    public void onMessageReceived(RemoteMessage remoteMessage) {\n        if (AEPMessagingService.handleRemoteMessage(this, remoteMessage)) {\n            // Campaign extension has handled the notification\n        } else {\n            // Handle notification from other sources\n        }\n    }\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","InlineAlert","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","variant","slots","parentName","isMDXComponent"],"sourceRoot":""}