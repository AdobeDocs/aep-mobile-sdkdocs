{"version":3,"file":"ff30a8f207ce4ff56b7e5abf0c48d14984d612ea-1855bad7077424494514.js","mappings":"4OAUsBA,E,wEAFTC,EAAe,CAAC,EAOvBC,GALgBF,EAKQ,UALA,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,4EAC5B,eAASG,EACjB,GAGKG,EAAc,CAClBL,aAAAA,GAEIM,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGP,GACF,YACD,OAAO,SAACI,GAAD,UAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,eAG5E,SAACT,EAAD,CAASU,SAAS,UAAUC,IAAI,oBAAoBC,OAAO,IAAIH,QAAQ,aACvE,eACE,GAAM,QADR,SAGA,mBAAG,mBAAQI,WAAW,KAAnB,aACH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBADZ,sEAIL,SAACb,EAAD,CAASU,SAAS,UAAUC,IAAI,oBAAoBC,OAAO,KAAKH,QAAQ,aACxE,eACE,GAAM,SADR,UAGA,mBAAG,mBAAQI,WAAW,KAAnB,YACH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBADZ,2CAIL,mBAAG,mBAAQA,WAAW,KAAnB,aACH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBADZ,mEAIL,eACE,GAAM,eADR,gBAGA,mBAAG,mBAAQA,WAAW,KAAnB,YACH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBADZ,+CAIL,mBAAG,mBAAQA,WAAW,KAAnB,aACH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBADZ,kFAIL,SAACb,EAAD,CAASU,SAAS,UAAUC,IAAI,oBAAoBC,OAAO,KAAKH,QAAQ,aACxE,eACE,GAAM,WADR,UAGA,mBAAG,mBAAQI,WAAW,KAAnB,YACH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBADZ,+CAIL,mBAAG,mBAAQA,WAAW,KAAnB,aACH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBADZ,sEAIL,eACE,GAAM,iBADR,gBAGA,mBAAG,mBAAQA,WAAW,KAAnB,YACH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBADZ,WAIL,mBAAG,mBAAQA,WAAW,KAAnB,aACH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBADZ,4EAIL,SAACb,EAAD,CAASU,SAAS,eAAeC,IAAI,oBAAoBC,OAAO,IAAIH,QAAQ,aAC5E,eACE,GAAM,cADR,eAGA,mBAAG,mBAAQI,WAAW,KAAnB,aACH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBADZ,6JAIL,SAACb,EAAD,CAASU,SAAS,UAAUC,IAAI,oBAAoBC,OAAO,IAAIH,QAAQ,aACvE,eACE,GAAM,QADR,SAGA,mBAAG,mBAAQI,WAAW,KAAnB,aACH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBADZ,oFAIL,SAACb,EAAD,CAASU,SAAS,UAAUC,IAAI,oBAAoBC,OAAO,IAAIH,QAAQ,aACvE,eACE,GAAM,WADR,YAGA,mBAAG,mBAAQI,WAAW,KAAnB,aACH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBADZ,qKAQL,SAACb,EAAD,CAASU,SAAS,QAAQC,IAAI,oBAAoBC,OAAO,IAAIH,QAAQ,aACrE,eACE,GAAM,KADR,OAGA,mBAAG,mBAAQI,WAAW,KAAnB,aACH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,mBADZ,yEAIL,SAACb,EAAD,CAASU,SAAS,UAAUC,IAAI,oBAAoBC,OAAO,IAAIH,QAAQ,aACvE,eACE,GAAM,OADR,OAGA,mBAAG,mBAAQI,WAAW,KAAnB,aACH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,mBADZ,yEAIL,SAACb,EAAD,CAASU,SAAS,UAAUC,IAAI,sBAAsBC,OAAO,IAAIH,QAAQ,aACzE,yKAA0J,uBAAYI,WAAW,KAAvB,qBAA1J,yDACA,8OACA,eACE,GAAM,UADR,SAGA,mBAAG,mBAAQA,WAAW,KAAnB,YACH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBADZ,oGAIL,mBAAG,mBAAQA,WAAW,KAAnB,aACH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBADZ,sSAWL,SAACb,EAAD,CAASU,SAAS,UAAUC,IAAI,sBAAsBC,OAAO,KAAKH,QAAQ,aAC1E,mFACA,eACE,GAAM,WADR,UAGA,mBAAG,mBAAQI,WAAW,KAAnB,YACH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBADZ,gGAIL,mBAAG,mBAAQA,WAAW,KAAnB,aACH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBADZ,4LAUL,eACE,GAAM,iBADR,gBAGA,mBAAG,mBAAQA,WAAW,KAAnB,YACH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBADZ,qHAIL,mBAAG,mBAAQA,WAAW,KAAnB,aACH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBADZ,6QAUL,SAACb,EAAD,CAASU,SAAS,UAAUC,IAAI,sBAAsBC,OAAO,KAAKH,QAAQ,aAC1E,0BAAW,uBAAYI,WAAW,KAAvB,qBAAX,mJAA2N,uBAAYA,WAAW,KAAvB,kBAA3N,wDACA,0BAAW,uBAAYA,WAAW,KAAvB,0CAAX,oDACA,eACE,GAAM,WADR,UAGA,mBAAG,mBAAQA,WAAW,KAAnB,YACH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBADZ,iMAML,mBAAG,mBAAQA,WAAW,KAAnB,aACH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBADZ,yRAcL,eACE,GAAM,iBADR,gBAGA,mBAAG,mBAAQA,WAAW,KAAnB,YACH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBADZ,yQAML,mBAAG,mBAAQA,WAAW,KAAnB,aACH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBADZ,gWAcL,SAACb,EAAD,CAASU,SAAS,eAAeC,IAAI,sBAAsBC,OAAO,IAAIH,QAAQ,aAC9E,eACE,GAAM,gBADR,eAGA,mBAAG,mBAAQI,WAAW,KAAnB,aACH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBADZ,wHAIL,SAACb,EAAD,CAASU,SAAS,UAAUC,IAAI,qBAAqBC,OAAO,IAAIH,QAAQ,aACxE,eACE,GAAM,UADR,SAGA,mBAAG,mBAAQI,WAAW,KAAnB,YACH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBADZ,2EAIL,mBAAG,mBAAQA,WAAW,KAAnB,aACH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBADZ,qCAIL,SAACb,EAAD,CAASU,SAAS,UAAUC,IAAI,qBAAqBC,OAAO,KAAKH,QAAQ,aACzE,eACE,GAAM,WADR,UAGA,mBAAG,mBAAQI,WAAW,KAAnB,YACH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBADZ,yIAKL,mBAAG,mBAAQA,WAAW,KAAnB,aACH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBADZ,qDAIL,eACE,GAAM,iBADR,gBAGA,mBAAG,mBAAQA,WAAW,KAAnB,YACH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBADZ,iJAKL,mBAAG,mBAAQA,WAAW,KAAnB,aACH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBADZ,qFAIL,SAACb,EAAD,CAASU,SAAS,UAAUC,IAAI,qBAAqBC,OAAO,KAAKH,QAAQ,aACzE,eACE,GAAM,WADR,UAGA,mBAAG,mBAAQI,WAAW,KAAnB,YACH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBADZ,uCAIL,mBAAG,mBAAQA,WAAW,KAAnB,aACH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBADZ,uCAIL,eACE,GAAM,iBADR,gBAGA,mBAAG,mBAAQA,WAAW,KAAnB,YACH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBADZ,sIAKL,mBAAG,mBAAQA,WAAW,KAAnB,aACH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBADZ,wCAIL,SAACb,EAAD,CAASU,SAAS,eAAeC,IAAI,qBAAqBC,OAAO,IAAIH,QAAQ,aAC7E,eACE,GAAM,gBADR,eAGA,mBAAG,mBAAQI,WAAW,KAAnB,aACH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBADZ,wCAIL,SAACb,EAAD,CAASU,SAAS,UAAUC,IAAI,QAAQC,OAAO,IAAIH,QAAQ,aAC3D,4GAA6F,uBAAYI,WAAW,KAAvB,qCAA7F,sFACA,eACE,GAAM,UADR,SAGA,mBAAG,mBAAQA,WAAW,KAAnB,YACH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBADZ,kCAIL,mBAAG,mBAAQA,WAAW,KAAnB,aACH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBADZ,yBAIL,SAACb,EAAD,CAASU,SAAS,UAAUC,IAAI,QAAQC,OAAO,KAAKH,QAAQ,aAC5D,4GAA6F,uBAAYI,WAAW,KAAvB,gBAA7F,sFACA,eACE,GAAM,WADR,UAGA,mBAAG,mBAAQA,WAAW,KAAnB,YACH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBADZ,2BAIL,mBAAG,mBAAQA,WAAW,KAAnB,aACH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBADZ,wBAIL,eACE,GAAM,iBADR,gBAGA,mBAAG,mBAAQA,WAAW,KAAnB,YACH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBADZ,sBAIL,mBAAG,mBAAQA,WAAW,KAAnB,aACH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBADZ,kCAIL,SAACb,EAAD,CAASU,SAAS,UAAUC,IAAI,QAAQC,OAAO,KAAKH,QAAQ,aAC5D,0BAAW,uBAAYI,WAAW,KAAvB,SAAX,sFAAkJ,uBAAYA,WAAW,KAAvB,gBAAlJ,sFACA,eACE,GAAM,WADR,UAGA,mBAAG,mBAAQA,WAAW,KAAnB,YACH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBADZ,2BAIL,mBAAG,mBAAQA,WAAW,KAAnB,aACH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBADZ,2BAIL,eACE,GAAM,iBADR,gBAGA,mBAAG,mBAAQA,WAAW,KAAnB,YACH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBADZ,uBAIL,mBAAG,mBAAQA,WAAW,KAAnB,aACH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBADZ,4BAIL,SAACb,EAAD,CAASU,SAAS,eAAeC,IAAI,QAAQC,OAAO,IAAIH,QAAQ,aAChE,eACE,GAAM,gBADR,eAGA,mBAAG,mBAAQI,WAAW,KAAnB,aACH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBADZ,4BAIL,SAACb,EAAD,CAASU,SAAS,UAAUC,IAAI,mBAAmBC,OAAO,IAAIH,QAAQ,aACtE,0BAAW,uBAAYI,WAAW,KAAvB,kBAAX,sHACA,2HAA4G,uBAAYA,WAAW,KAAvB,qBAA5G,sNAA+X,uBAAYA,WAAW,KAAvB,qBAA/X,4CACA,8BAAe,uBAAYA,WAAW,KAAvB,0BAAf,qBAAsG,uBAAYA,WAAW,KAAvB,cAAtG,mKACA,eACE,GAAM,UADR,SAGA,mBAAG,mBAAQA,WAAW,KAAnB,YACH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBADZ,4HAIL,oBACE,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,QAApB,iDACA,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,YAApB,oFAEF,mBAAG,mBAAQA,WAAW,KAAnB,aACH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBADZ,qZAaL,SAACb,EAAD,CAASU,SAAS,UAAUC,IAAI,mBAAmBC,OAAO,KAAKH,QAAQ,aACvE,0BAAW,uBAAYI,WAAW,KAAvB,kBAAX,qHACA,2HAA4G,uBAAYA,WAAW,KAAvB,kBAA5G,2OAAiZ,uBAAYA,WAAW,KAAvB,kBAAjZ,4CACA,eACE,GAAM,WADR,UAGA,mBAAG,mBAAQA,WAAW,KAAnB,YACH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBADZ,qHAIL,oBACE,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,QAApB,iDACA,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,YAApB,oFAEF,mBAAG,mBAAQA,WAAW,KAAnB,aACH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBADZ,mNAUL,eACE,GAAM,iBADR,gBAGA,mBAAG,mBAAQA,WAAW,KAAnB,YACH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBADZ,6KAIL,mBAAG,mBAAQA,WAAW,KAAnB,aACH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBADZ,gWAWL,SAACb,EAAD,CAASU,SAAS,UAAUC,IAAI,mBAAmBC,OAAO,KAAKH,QAAQ,aACvE,0BAAW,uBAAYI,WAAW,KAAvB,kBAAX,sHACA,2HAA4G,uBAAYA,WAAW,KAAvB,kBAA5G,2OAAiZ,uBAAYA,WAAW,KAAvB,kBAAjZ,4CACA,2CAA4B,uBAAYA,WAAW,KAAvB,wCAA5B,oDACA,eACE,GAAM,WADR,UAGA,mBAAG,mBAAQA,WAAW,KAAnB,YACH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBADZ,mQAML,mBAAG,mBAAQA,WAAW,KAAnB,aACH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBADZ,uYAcL,eACE,GAAM,iBADR,gBAGA,mBAAG,mBAAQA,WAAW,KAAnB,YACH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBADZ,+aAQL,oBACE,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,QAApB,iDACA,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,YAApB,oFAEF,mBAAG,mBAAQA,WAAW,KAAnB,aACH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBADZ,+dAeL,SAACb,EAAD,CAASU,SAAS,eAAeC,IAAI,mBAAmBC,OAAO,IAAIH,QAAQ,aAC3E,eACE,GAAM,gBADR,eAGA,mBAAG,mBAAQI,WAAW,KAAnB,aACH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBADZ,oJAMR,CAEDN,EAAWO,gBAAiB,C","sources":["webpack://dev-site-documentation-template/./src/pages/documentation/adobe-audience-manager/tabs/api-reference.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/aep-mobile-sdkdocs/aep-mobile-sdkdocs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Variant = makeShortcode(\"Variant\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <Variant platform=\"android\" api=\"extension-version\" repeat=\"3\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`String audienceExtensionVersion = Audience.extensionVersion();\n`}</code></pre>\n    <Variant platform=\"ios-aep\" api=\"extension-version\" repeat=\"10\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`static var extensionVersion: String\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`let audienceExtensionVersion  = Audience.extensionVersion()\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`+ (nonnull NSString*) extensionVersion;\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`NSString *audienceExtensionVersion = [AEPMobileAudience extensionVersion];\n`}</code></pre>\n    <Variant platform=\"ios-acp\" api=\"extension-version\" repeat=\"10\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift-1\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`+ (nonnull NSString*) extensionVersion;\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`let audienceExtensionVersion  = ACPAudience.extensionVersion()\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-1\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`add\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`NSString *audienceExtensionVersion = [ACPAudience extensionVersion];\n`}</code></pre>\n    <Variant platform=\"react-native\" api=\"extension-version\" repeat=\"3\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"javascript\"\n    }}>{`JavaScript`}</h4>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`ACPAudience.extensionVersion().then(audienceExtensionVersion => console.log(\"AdobeExperienceSDK: ACPAudience version: \" + audienceExtensionVersion));\n`}</code></pre>\n    <Variant platform=\"flutter\" api=\"extension-version\" repeat=\"3\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"dart\"\n    }}>{`Dart`}</h4>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-dart\"\n      }}>{`String audienceExtensionVersion = await FlutterACPAudience.extensionVersion;\n`}</code></pre>\n    <Variant platform=\"cordova\" api=\"extension-version\" repeat=\"3\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"cordova\"\n    }}>{`Cordova`}</h4>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`ACPAudience.extensionVersion(function(version) {  \n   console.log(\"ACPAudience version: \" + version);\n}, function(error) {  \n   console.log(error);  \n});\n`}</code></pre>\n    <Variant platform=\"unity\" api=\"extension-version\" repeat=\"3\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"c\"\n    }}>{`C#`}</h4>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`string audienceExtensionVersion = ACPAudience.ExtensionVersion();\n`}</code></pre>\n    <Variant platform=\"xamarin\" api=\"extension-version\" repeat=\"3\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"c-1\"\n    }}>{`C#`}</h4>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`string audienceExtensionVersion = ACPAudience.ExtensionVersion();\n`}</code></pre>\n    <Variant platform=\"android\" api=\"get-visitor-profile\" repeat=\"7\" mdxType=\"Variant\" />\n    <p>{`This API returns the most recently obtained visitor profile. For easy access across multiple launches of your app, the visitor profile is saved in `}<inlineCode parentName=\"p\">{`SharedPreferences`}</inlineCode>{`. If no signal has been submitted, null is returned.`}</p>\n    <p>{`When an AdobeCallbackWithError is provided, an AdobeError can be returned in the eventuality of an unexpected error or if the default timeout (5000ms) is met before the callback is returned with the visitor profile.`}</p>\n    <h4 {...{\n      \"id\": \"java-1\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public static void getVisitorProfile(final AdobeCallback<Map<String, String>> adobeCallback)\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`AdobeCallback<Map<String, String>> visitorProfileCallback = new AdobeCallback<Map<String, String>>() {\n    @Override\n    public void call(final Map<String, String> visitorProfile) {\n        // your own customized code\n    }\n};\n\nAudience.getVisitorProfile(visitorProfileCallback);\n`}</code></pre>\n    <Variant platform=\"ios-aep\" api=\"get-visitor-profile\" repeat=\"11\" mdxType=\"Variant\" />\n    <p>{`This API returns the most recently obtained visitor profile.`}</p>\n    <h4 {...{\n      \"id\": \"swift-2\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`static func getVisitorProfile(completion: @escaping ([String: String]?, Error?) -> Void)\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`Audience.getVisitorProfile { (visitorProfile, error) in\n   if error != nil {\n    // handle the error here\n   } else {\n    // handle the retrieved visitorProfile here\n   }\n  }\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-2\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`+  (void) getVisitorProfile:^(NSDictionary<NSString *,NSString *> * _Nullable, NSError * _Nullable)completion\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objc\"\n      }}>{`[AEPMobileAudience getVisitorProfile:^(NSDictionary<NSString *,NSString *> * _Nullable visitorProfile, NSError * _Nullable error) {\n   if (error) {\n    // handle the error here\n   } else {\n    // handle the returned visitorProfile dictionary here\n   }\n}];\n`}</code></pre>\n    <Variant platform=\"ios-acp\" api=\"get-visitor-profile\" repeat=\"12\" mdxType=\"Variant\" />\n    <p>{`The `}<inlineCode parentName=\"p\">{`getVisitorProfile`}</inlineCode>{` API returns the most recently obtained visitor profile. For easy access across multiple launches of your app, the visitor profile is saved in `}<inlineCode parentName=\"p\">{`NSUserDefaults`}</inlineCode>{`. If no signal has been submitted, nil is returned.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`getVisitorProfileWithCompletionHandler`}</inlineCode>{` method was added in ACPAudience version 2.1.0.`}</p>\n    <h4 {...{\n      \"id\": \"swift-3\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`static func getVisitorProfile(_ callback: @escaping ([AnyHashable : Any]?) -> Void)\n\nstatic func getVisitorProfile(completionHandler: @escaping ([AnyHashable : Any]?, Error?) -> Void)\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`ACPAudience.getVisitorProfile { (visitorProfile) in\n  // handle the visitorProfile here\n}\n\nACPAudience.getVisitorProfile { (visitorProfile, error) in\n  if let error = error {\n    // handle error here\n  } else {\n    // handle the returned visitorProfile here\n  }\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-3\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`+ (void) getVisitorProfile: (nonnull void (^) (NSDictionary* __nullable visitorProfile)) callback;\n\n+ (void) getVisitorProfileWithCompletionHandler: (nonnull void (^) (NSDictionary* __nullable visitorProfile, NSError* __nullable error)) completionHandler;\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`[ACPAudience getVisitorProfile:^(NSDictionary* visitorProfile){\n  // handle the visitorProfile here\n}];\n\n[ACPAudience getVisitorProfileWithCompletionHandler:^(NSDictionary * _Nullable visitorProfile, NSError * _Nullable error) {\n  if (error) {\n    // handle error here\n  } else {\n    // handle the returned visitorProfile here\n  }\n}];\n`}</code></pre>\n    <Variant platform=\"react-native\" api=\"get-visitor-profile\" repeat=\"3\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"javascript-1\"\n    }}>{`JavaScript`}</h4>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`ACPAudience.getVisitorProfile().then(profile => console.log(\"AdobeExperienceSDK: Visitor Profile: \" + profile));\n`}</code></pre>\n    <Variant platform=\"android\" api=\"register-extension\" repeat=\"5\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-2\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public  static void registerExtension() throws InvalidInitException\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`Audience.registerExtension();\n`}</code></pre>\n    <Variant platform=\"ios-aep\" api=\"register-extension\" repeat=\"10\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift-4\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`static func registerExtensions(_ extensions: [NSObject.Type], \n                               _ completion: (() -> Void)? = nil)\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`MobileCore.registerExtension([Audience.self])\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-4\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`+ (void) registerExtensions: (NSArray<Class*>* _Nonnull) extensions \n                 completion: (void (^ _Nullable)(void)) completion;\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`[AEPMobileCore registerExtensions:@[AEPMobileAudience.class] completion:nil];\n`}</code></pre>\n    <Variant platform=\"ios-acp\" api=\"register-extension\" repeat=\"10\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift-5\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`static func registerExtension()\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`ACPAudience.registerExtension()\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-5\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`+ (BOOL) registerExtension: (nonnull Class) extensionClass\n                     error: (NSError* _Nullable* _Nullable) error;\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`[ACPAudience registerExtension];\n`}</code></pre>\n    <Variant platform=\"react-native\" api=\"register-extension\" repeat=\"3\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"javascript-2\"\n    }}>{`JavaScript`}</h4>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`ACPAudience.registerExtension();\n`}</code></pre>\n    <Variant platform=\"android\" api=\"reset\" repeat=\"6\" mdxType=\"Variant\" />\n    <p>{`This API resets the Audience Manager UUID and purges the current visitor profile from `}<inlineCode parentName=\"p\">{`android.content.SharedPreferences`}</inlineCode>{`. The Audience reset also clears the current in-memory DPID and DPUUID variables.`}</p>\n    <h4 {...{\n      \"id\": \"java-3\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public static void reset()\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`Audience.reset();\n`}</code></pre>\n    <Variant platform=\"ios-aep\" api=\"reset\" repeat=\"11\" mdxType=\"Variant\" />\n    <p>{`This API resets the Audience Manager UUID and purges the current visitor profile from `}<inlineCode parentName=\"p\">{`UserDefaults`}</inlineCode>{`. The Audience reset also clears the current in-memory DPID and DPUUID variables.`}</p>\n    <h4 {...{\n      \"id\": \"swift-6\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`static func reset()\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`Audience.reset()\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-6\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`+ (void) reset\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`[AEPMobileAudience reset];\n`}</code></pre>\n    <Variant platform=\"ios-acp\" api=\"reset\" repeat=\"11\" mdxType=\"Variant\" />\n    <p>{`The `}<inlineCode parentName=\"p\">{`reset`}</inlineCode>{` API resets the Audience Manager UUID and purges the current visitor profile from `}<inlineCode parentName=\"p\">{`UserDefaults`}</inlineCode>{`. The Audience reset also clears the current in-memory DPID and DPUUID variables.`}</p>\n    <h4 {...{\n      \"id\": \"swift-7\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`static func reset()\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`ACPAudience.reset()\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-7\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`+ (void) reset;\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`[ACPAudience reset];\n`}</code></pre>\n    <Variant platform=\"react-native\" api=\"reset\" repeat=\"3\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"javascript-3\"\n    }}>{`JavaScript`}</h4>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`ACPAudience.reset();\n`}</code></pre>\n    <Variant platform=\"android\" api=\"signal-with-data\" repeat=\"9\" mdxType=\"Variant\" />\n    <p>{`The `}<inlineCode parentName=\"p\">{`signalWithData`}</inlineCode>{` API sends Audience Manager a signal with traits and returns the matching segments for the visitor in a callback.`}</p>\n    <p>{`Audience Manager sends the AAM UUID in response in initial signal call. The AAM UUID is persisted in `}<inlineCode parentName=\"p\">{`SharedPreferences`}</inlineCode>{` and is sent by the SDK in all subsequent signal requests. If available, the ECID is also sent in each signal request with the DPID and the DPUUID. The visitor profile that Audience Manager returns is saved in `}<inlineCode parentName=\"p\">{`SharedPreferences`}</inlineCode>{` and is updated with every signal call.`}</p>\n    <p>{`When an `}<inlineCode parentName=\"p\">{`AdobeCallbackWithError`}</inlineCode>{` is provided, an `}<inlineCode parentName=\"p\">{`AdobeError`}</inlineCode>{` can be returned in the eventuality of an unexpected error or if the default timeout (5000ms) is met before the callback is returned with the visitor profile.`}</p>\n    <h4 {...{\n      \"id\": \"java-4\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public static void signalWithData(final Map<String, String> data, final AdobeCallback<Map<String, String>> callback)\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`data`}</inlineCode>{` is the traits data for the current visitor.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`callback`}</inlineCode>{` is the void method that is invoked with the visitor's profile as a parameter.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`AdobeCallback<Map<String, String>> visitorProfileCallback = new AdobeCallback<Map<String, String>>() {\n    @Override\n    public void call(final Map<String, String> visitorProfile) {\n        // handle the returned visitorProfile here\n    }\n};\n​\nMap<String, String> traits = new HashMap<String, String>();\ntraits.put(\"trait\", \"xyz\");\nAudience.signalWithData(traits, visitorProfileCallback);\n`}</code></pre>\n    <Variant platform=\"ios-aep\" api=\"signal-with-data\" repeat=\"13\" mdxType=\"Variant\" />\n    <p>{`The `}<inlineCode parentName=\"p\">{`signalWithData`}</inlineCode>{` API sends Audience Manager a signal with traits and returns the matching segments for the visitor in a closure.`}</p>\n    <p>{`Audience Manager sends the AAM UUID in response in initial signal call. The AAM UUID is persisted in `}<inlineCode parentName=\"p\">{`NSUserDefaults`}</inlineCode>{` and is sent by the SDK in all subsequent signal requests. If available, the Experience Cloud ID (MID) is also sent in each signal request with the DPID and the DPUUID. The visitor profile that Audience Manager returns is saved in `}<inlineCode parentName=\"p\">{`NSUserDefaults`}</inlineCode>{` and is updated with every signal call.`}</p>\n    <h4 {...{\n      \"id\": \"swift-8\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`static func signalWithData(data: [String: String], completion: @escaping ([String: String]?, Error?) -> Void)\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`data`}</inlineCode>{` is the traits data for the current visitor.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`callback`}</inlineCode>{` is the void method that is invoked with the visitor's profile as a parameter.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`Audience.signalWithData(data: [\"trait\": \"trait value\"]) { (traits, error) in\n  if error != nil {\n     // handle the error here\n     } else {\n     // handle the returned visitorProfile here\n     }\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-8\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`+ (void) signalWithData:(NSDictionary<NSString *,NSString *> * _Nonnull) completion:^(NSDictionary<NSString *,NSString *> * _Nullable, NSError * _Nullable)completion\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`NSDictionary *traits = @{@\"key1\":@\"value1\",@\"key2\":@\"value2\"};\n[AEPMobileAudience signalWithData:traits completion:^(NSDictionary<NSString *,NSString *> * _Nullable visitorProfile, NSError* _Nullable error) {\n  if (error) {\n     // handle the error here\n     } else {\n     // handle the returned visitorProfile dictionary here\n     }\n}];\n`}</code></pre>\n    <Variant platform=\"ios-acp\" api=\"signal-with-data\" repeat=\"14\" mdxType=\"Variant\" />\n    <p>{`The `}<inlineCode parentName=\"p\">{`signalWithData`}</inlineCode>{` API sends Audience Manager a signal with traits and returns the matching segments for the visitor in a callback.`}</p>\n    <p>{`Audience Manager sends the AAM UUID in response in initial signal call. The AAM UUID is persisted in `}<inlineCode parentName=\"p\">{`NSUserDefaults`}</inlineCode>{` and is sent by the SDK in all subsequent signal requests. If available, the Experience Cloud ID (MID) is also sent in each signal request with the DPID and the DPUUID. The visitor profile that Audience Manager returns is saved in `}<inlineCode parentName=\"p\">{`NSUserDefaults`}</inlineCode>{` and is updated with every signal call.`}</p>\n    <p>{`Please note that the `}<inlineCode parentName=\"p\">{`signalWithData:withCompletionHandler`}</inlineCode>{` method was added in ACPAudience version 2.1.0.`}</p>\n    <h4 {...{\n      \"id\": \"swift-9\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`static func signal(withData data: [String : String]?, callback: (([AnyHashable : Any]?) -> Void)? = nil)\n\nstatic func signal(withData data: [String : String], withCompletionHandler completionHandler: @escaping ([AnyHashable : Any]?, Error?) -> Void)\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`ACPAudience.signal(withData: [\"key1\": \"value1\", \"key2\": \"value2\"], callback: { (visitorProfile) in\n  // handle the visitorProfile here  \n})\n\nACPAudience.signal(withData: [\"key1\": \"value1\", \"key2\": \"value2\"], withCompletionHandler: { (visitorProfile, error) in\n  if let error = error {\n    // handle error\n  } else {\n    // handle the returned visitorProfile here\n  }    \n})\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-9\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`+ (void) signalWithData: (NSDictionary<NSString*, NSString*>* __nullable) data\n                       callback: (nullable void (^) (NSDictionary* __nullable visitorProfile)) callback;\n\n+ (void) signalWithData: (NSDictionary<NSString*, NSString*>* __nullable) data\n                        withCompletionHandler:: (nullable void (^) (NSDictionary* __nullable visitorProfile, NSError* __nullable error)) completionHandler;\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`data`}</inlineCode>{` is the traits data for the current visitor.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`callback`}</inlineCode>{` is the void method that is invoked with the visitor's profile as a parameter.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`NSDictionary *traits = @{@\"key1\":@\"value1\",@\"key2\":@\"value2\"};\n[ACPAudience signalWithData:traits callback:^(NSDictionary* _Nullable visitorProfile){\n  // handle the returned visitorProfile dictionary here\n}];\n\n[ACPAudience signalWithData:traits withCompletionHandler:^(NSDictionary * _Nullable visitorProfile, NSError * _Nullable error) {\n  if (error) {\n    // handle the error here\n  } else {\n    // handle the returned visitorProfile dictionary here\n  }\n}];\n`}</code></pre>\n    <Variant platform=\"react-native\" api=\"signal-with-data\" repeat=\"3\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"javascript-4\"\n    }}>{`JavaScript`}</h4>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`ACPAudience.signalWithData({\"yourDataKey\": \"yourDataValue\"}).then(profile => console.log(\"AdobeExperienceSDK: Visitor Profile: \" + profile));\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","Variant","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","platform","api","repeat","parentName","isMDXComponent"],"sourceRoot":""}