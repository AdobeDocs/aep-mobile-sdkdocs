{"version":3,"file":"component---src-pages-home-base-mobile-core-signal-index-md-e734019a7ee34903926f.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/pages/home/base/mobile-core/signal/index.md","webpack://dev-site-documentation-template/./src/pages/home/base/mobile-core/signal/tabs/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/aep-mobile-sdkdocs/aep-mobile-sdkdocs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nimport Tabs from './tabs/index.md';\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst Media = makeShortcode(\"Media\");\nconst TabsBlock = makeShortcode(\"TabsBlock\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"signal\"\n    }}>{`Signal`}</h1>\n    <p>{`The Signal extension allows marketers to send a \"signal\" to their apps through the Adobe Experience Platform Mobile SDKs. This signal might tell the Mobile SDKs or the apps to complete tasks, such as send PII-labeled data, to trigger a postback to a third-party ad-network and open an app deep link or URL. To ensure that signals are sent or are activated, the marketers need to configure triggers and traits in the Data Collection UI.`}</p>\n    <p>{`The Signal extension allows you to send postbacks to third-party endpoints and open URLs, such as web URLs or application deep links, when using rules actions in the Data Collection UI.`}</p>\n    <p>{`To send PII data to external destinations, the `}<inlineCode parentName=\"p\">{`PII`}</inlineCode>{` action can trigger the Rules Engine when certain triggers and traits match. When setting a rule, you can also set the `}<inlineCode parentName=\"p\">{`PII`}</inlineCode>{` action for a Signal event. The `}<inlineCode parentName=\"p\">{`collectPii`}</inlineCode>{` API can then be used to trigger the rule and send the PII data to a remote server.`}</p>\n    <p>{`To get started with Signal extension, complete the following steps:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Add the `}<strong parentName=\"li\">{`Signal`}</strong>{` extension to your app.`}</li>\n      <li parentName=\"ol\">{`Define the necessary rules in the Data Collection UI.`}</li>\n      <li parentName=\"ol\">{`(Optional) When using Send PII actions in the Data Collection UI, implement the APIs to collect PII data and send it to the configured third party destination.`}</li>\n    </ol>\n    <p>{`For more information about creating and configuring a rule in the Data Collection UI, see `}<a parentName=\"p\" {...{\n        \"href\": \"https://experienceleague.adobe.com/docs/experience-platform/tags/ui/rules.html\"\n      }}>{`Rules`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"watch-the-video\"\n    }}>{`Watch the video`}</h2>\n    <Media slots=\"video\" mdxType=\"Media\" />\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://www.youtube.com/watch?v=r-z9ivQjzOY\"\n      }}>{`https://www.youtube.com/watch?v=r-z9ivQjzOY`}</a></p>\n    <h2 {...{\n      \"id\": \"add-the-signal-extension-to-your-app\"\n    }}>{`Add the Signal extension to your app`}</h2>\n    <TabsBlock orientation=\"horizontal\" slots=\"heading, content\" repeat=\"2\" mdxType=\"TabsBlock\" />\n    <p>{`Android`}</p>\n    <Tabs query=\"platform=android&task=add\" mdxType=\"Tabs\" />\n    <p>{`iOS`}</p>\n    <Tabs query=\"platform=ios&task=add\" mdxType=\"Tabs\" />\n    {/*- React Native\n     <Tabs query=\"platform=react-native&task=add\"/>\n     Flutter\n     <Tabs query=\"platform=flutter&task=add\"/> -*/}\n    <h2 {...{\n      \"id\": \"register-the-signal-extension\"\n    }}>{`Register the Signal extension`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`MobileCore.registerExtensions()`}</inlineCode>{` API can be used to register the Signal extension with the Mobile Core extension. This API allows the extension to send and receive events to and from the Mobile SDK.`}</p>\n    <p>{`To register the Signal extension, use the following code sample:`}</p>\n    <TabsBlock orientation=\"horizontal\" slots=\"heading, content\" repeat=\"2\" mdxType=\"TabsBlock\" />\n    <p>{`Android`}</p>\n    <Tabs query=\"platform=android&task=register\" mdxType=\"Tabs\" />\n    <p>{`iOS`}</p>\n    <Tabs query=\"platform=ios&task=register\" mdxType=\"Tabs\" />\n    {/*- React Native\n     <Tabs query=\"platform=react-native&task=register\"/>\n     Flutter\n     <Tabs query=\"platform=flutter&task=register\"/> -*/}\n    <h2 {...{\n      \"id\": \"implement-the-mobile-sdk-to-send-pii-data-to-external-destinations\"\n    }}>{`Implement the Mobile SDK to send PII data to external destinations`}</h2>\n    <p>{`To send PII data to external destinations, the `}<inlineCode parentName=\"p\">{`PII`}</inlineCode>{` action can trigger the Rules Engine when the configured triggers and traits match. When creating a rule, you can set the `}<inlineCode parentName=\"p\">{`PII`}</inlineCode>{` action for a Signal event, so that `}<inlineCode parentName=\"p\">{`collectPii`}</inlineCode>{` can trigger the rule and send the `}<inlineCode parentName=\"p\">{`PII`}</inlineCode>{` data.`}</p>\n    <p>{`For more information about `}<inlineCode parentName=\"p\">{`collectPii`}</inlineCode>{` and its usage, see `}<a parentName=\"p\" {...{\n        \"href\": \"../api-reference.md#collectpii\"\n      }}>{`collectPii`}</a>{`.`}</p>\n    <p>{`For more information about how to configure the Signal postbacks in the Data Collection UI, see `}<a parentName=\"p\" {...{\n        \"href\": \"rules-engine-integration.md\"\n      }}>{`Signal extension and Rules Engine integration`}</a>{`.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/aep-mobile-sdkdocs/aep-mobile-sdkdocs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst Variant = makeShortcode(\"Variant\");\nconst InlineNestedAlert = makeShortcode(\"InlineNestedAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <Variant platform=\"android\" task=\"add\" repeat=\"8\" mdxType=\"Variant\" />\n    <ol>\n      <li parentName=\"ol\">{`Add the Signal extension and its dependency, the `}<a parentName=\"li\" {...{\n          \"href\": \"../index.md\"\n        }}>{`Mobile Core`}</a>{` extension to your project using the app's Gradle file.`}</li>\n    </ol>\n    <h4 {...{\n      \"id\": \"kotlin\"\n    }}>{`Kotlin`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`implementation(platform(\"com.adobe.marketing.mobile:sdk-bom:3.+\"))\nimplementation(\"com.adobe.marketing.mobile:core\")\nimplementation(\"com.adobe.marketing.mobile:signal\")\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"groovy\"\n    }}>{`Groovy`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`implementation platform('com.adobe.marketing.mobile:sdk-bom:3.+')\nimplementation 'com.adobe.marketing.mobile:core'\nimplementation 'com.adobe.marketing.mobile:signal'\n`}</code></pre>\n    <InlineNestedAlert variant=\"warning\" header=\"false\" iconPosition=\"left\" mdxType=\"InlineNestedAlert\">\n      <p>{`Using dynamic dependency versions is `}<strong parentName=\"p\">{`not`}</strong>{` recommended for production apps. Please read the `}<a parentName=\"p\" {...{\n          \"href\": \"../../resources/manage-gradle-dependencies.md\"\n        }}>{`managing Gradle dependencies guide`}</a>{` for more information.`}</p>\n    </InlineNestedAlert>\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`Import the Signal and MobileCore extensions in your application's main activity.`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import com.adobe.marketing.mobile.MobileCore;\nimport com.adobe.marketing.mobile.Signal;\n`}</code></pre>\n    <Variant platform=\"ios\" task=\"add\" repeat=\"8\" mdxType=\"Variant\" />\n    <ol>\n      <li parentName=\"ol\">{`​Add the AEPSignal extension and it's dependency, the `}<a parentName=\"li\" {...{\n          \"href\": \"../index.md\"\n        }}>{`Mobile Core`}</a>{` extension to your project using Cocoapods. Add following pods in your `}<inlineCode parentName=\"li\">{`Podfile`}</inlineCode>{`:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-pod\"\n      }}>{`pod 'AEPCore','~> 5.0'\npod 'AEPSignal','~> 5.0'\n`}</code></pre>\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`Import the Signal libraries:`}</li>\n    </ol>\n    <h4 {...{\n      \"id\": \"swift\"\n    }}>{`Swift`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`import AEPCore\nimport AEPSignal\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c\"\n    }}>{`Objective-C`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`@import AEPCore;\n@import AEPSignal;\n`}</code></pre>\n    {/*- <Variant platform=\"react-native\" task=\"add\" repeat=\"3\"/>\n     #### JavaScript\n     Importing the Signal extension:\n     ```jsx\n     import {ACPSignal} from '@adobe/react-native-acpcore';\n     ```\n     <Variant platform=\"flutter\" task=\"add\" repeat=\"3\"/>\n     #### Dart\n     Importing the Signal extension:\n     ```dart\n     import 'package:flutter_acpcore/flutter_acpsignal.dart';\n     ``` -*/}\n    <Variant platform=\"android\" task=\"register\" repeat=\"3\" mdxType=\"Variant\" />\n    <p>{`After calling the `}<inlineCode parentName=\"p\">{`setApplication()`}</inlineCode>{` method in the `}<inlineCode parentName=\"p\">{`onCreate()`}</inlineCode>{` method, register the Signal extension.`}</p>\n    <h4 {...{\n      \"id\": \"java\"\n    }}>{`Java`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class MobileApp extends Application {\n\n    @Override\n    public void onCreate() {\n        super.onCreate();\n        MobileCore.setApplication(this);\n\n        List<Class<? extends Extension>> extensions = Arrays.asList(Signal.EXTENSION, ...);\n        MobileCore.registerExtensions(extensions, o -> {\n            // Any other post registration processing\n        });\n    }\n}\n`}</code></pre>\n    <Variant platform=\"ios\" task=\"register\" repeat=\"5\" mdxType=\"Variant\" />\n    <p>{`In your app's `}<inlineCode parentName=\"p\">{`application:didFinishLaunchingWithOptions`}</inlineCode>{`, register the Signal extension with Mobile Core:`}</p>\n    <h4 {...{\n      \"id\": \"swift-1\"\n    }}>{`Swift`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {\n     MobileCore.registerExtensions([Signal.self, ...]) {\n       MobileCore.configureWith(appId: \"yourAppId\")\n       // Any other post registration processing\n     }\n     return true;\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-1\"\n    }}>{`Objective-C`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n    [AEPMobileCore registerExtensions:@[AEPMobileSignal.class, ...] completion:^{\n        [AEPMobileCore configureWithAppId: @\"yourAppId\"];\n        // Any other post registration processing\n    }];\n    return YES;\n }\n`}</code></pre>\n    {/*- <Variant platform=\"react-native\" task=\"register\" repeat=\"2\"/>\n     #### JavaScript\n     When using React Native, registering Signal with Mobile Core should be done in native code which is shown under the Android and iOS tabs.\n     <Variant platform=\"flutter\" task=\"register\" repeat=\"2\"/>\n     #### Dart\n     When using Flutter, registering Signal with Mobile Core should be done in native code which is shown under the Android and iOS tabs. -*/}\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","makeShortcode","name","props","console","warn","Media","TabsBlock","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","slots","orientation","repeat","query","isMDXComponent","Variant","InlineNestedAlert","platform","task","variant","header","iconPosition"],"sourceRoot":""}