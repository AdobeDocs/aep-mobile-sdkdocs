{"version":3,"file":"component---src-pages-documentation-mobile-core-signal-tabs-index-md-a16fb9106f125cec66a9.js","mappings":"2OAOsBA,E,wEADTC,EAAe,CAAC,EAKvBC,GAJgBF,EAIQ,UAJA,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,4EAC5B,eAASG,EAClB,GAEMG,EAAc,CAClBL,aAAAA,GAEIM,EAAYC,EAAAA,EACH,SAASC,EAAW,GAGhC,IAFDC,EAAU,EAAVA,WACGP,GAAK,YAER,OAAO,SAACI,GAAS,UAAKD,EAAiBH,EAAK,CAAEO,WAAYA,EAAYC,QAAQ,eAG5E,SAACT,EAAO,CAACU,SAAS,UAAUC,KAAK,MAAMC,OAAO,IAAIH,QAAQ,aAC1D,eACE,GAAM,QAAM,SAEd,8BAAe,cAAGI,WAAW,IACzB,KAAQ,eAAa,eACD,4DACxB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,gEAGhC,uFACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,4CAGhC,SAACb,EAAO,CAACU,SAAS,UAAUC,KAAK,MAAMC,OAAO,IAAIH,QAAQ,aAC1D,4EAA6D,cAAGI,WAAW,IACvE,KAAQ,eAAa,eACD,gDACxB,iDAAkC,uBAAYA,WAAW,KAAG,WAAyB,MACrF,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBAAc,wDAI/B,mDACA,eACE,GAAM,SAAO,UAEf,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBAAgB,wCAIjC,eACE,GAAM,eAAa,gBAErB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBAAqB,4CAItC,SAACb,EAAO,CAACU,SAAS,UAAUC,KAAK,MAAMC,OAAO,IAAIH,QAAQ,aAC1D,8FAA+E,cAAGI,WAAW,IACzF,KAAQ,eAAa,eACD,gDACxB,iDAAkC,uBAAYA,WAAW,KAAG,WAAyB,MACrF,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBAAc,+BAG/B,mDACA,eACE,GAAM,iBAAe,gBAEvB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBAAqB,kDAItC,eACE,GAAM,WAAS,UAEjB,gEACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBAAgB,sBAGjC,SAACb,EAAO,CAACU,SAAS,eAAeC,KAAK,MAAMC,OAAO,IAAIH,QAAQ,aAC/D,eACE,GAAM,cAAY,eAEpB,sDACA,qBAAK,iBAAMI,WAAW,MAClB,UAAa,gBAAc,8DAG/B,SAACb,EAAO,CAACU,SAAS,UAAUC,KAAK,MAAMC,OAAO,IAAIH,QAAQ,aAC1D,eACE,GAAM,QAAM,SAEd,sDACA,qBAAK,iBAAMI,WAAW,MAClB,UAAa,iBAAe,gEAGhC,SAACb,EAAO,CAACU,SAAS,UAAUC,KAAK,MAAMC,OAAO,IAAIH,QAAQ,aAC1D,eACE,GAAM,WAAS,YAEjB,iKACA,qBAAK,iBAAMI,WAAW,MAClB,UAAa,iBAAe,uEAGhC,SAACb,EAAO,CAACU,SAAS,QAAQC,KAAK,MAAMC,OAAO,IAAIH,QAAQ,aACxD,eACE,GAAM,KAAG,OAEX,0CAA2B,cAAGI,WAAW,IACrC,KAAQ,kFAAgF,wBAC3D,wFACjC,qBAAK,iBAAMA,WAAW,MAClB,UAAa,mBAAiB,yCAGlC,SAACb,EAAO,CAACU,SAAS,UAAUC,KAAK,MAAMC,OAAO,IAAIH,QAAQ,aAC1D,eACE,GAAM,OAAK,OAEb,oKACA,qBAAK,iBAAMI,WAAW,MAClB,UAAa,mBAAiB,yCAGlC,SAACb,EAAO,CAACU,SAAS,UAAUC,KAAK,WAAWC,OAAO,IAAIH,QAAQ,aAC/D,eACE,GAAM,UAAQ,SAEhB,wCAAyB,uBAAYI,WAAW,KAAG,oBAAkC,mBAAmB,uBAAYA,WAAW,KAAG,cAA4B,uFAAuF,uBAAYA,WAAW,KAAG,wBAAsC,gBACrT,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,ykBAsBhC,qMAAsL,uBAAYA,WAAW,KAAG,oBAAkC,8BAClP,SAACb,EAAO,CAACU,SAAS,UAAUC,KAAK,WAAWC,OAAO,IAAIH,QAAQ,aAC/D,oCAAqB,uBAAYI,WAAW,KAAG,6CAA2D,sDAC1G,eACE,GAAM,WAAS,UAEjB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBAAgB,oVASjC,eACE,GAAM,iBAAe,gBAEvB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBAAqB,qVAStC,SAACb,EAAO,CAACU,SAAS,UAAUC,KAAK,WAAWC,OAAO,IAAIH,QAAQ,aAC/D,mCAAoB,uBAAYI,WAAW,KAAG,6CAA2D,sDACzG,eACE,GAAM,iBAAe,gBAEvB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBAAqB,4TAStC,eACE,GAAM,WAAS,UAEjB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBAAgB,+VASjC,sLAAuK,uBAAYA,WAAW,KAAG,sBAAoC,8BACrO,SAACb,EAAO,CAACU,SAAS,eAAeC,KAAK,WAAWC,OAAO,IAAIH,QAAQ,aACpE,eACE,GAAM,gBAAc,eAEtB,gKACA,SAACT,EAAO,CAACU,SAAS,UAAUC,KAAK,WAAWC,OAAO,IAAIH,QAAQ,aAC/D,eACE,GAAM,UAAQ,SAEhB,2JACA,SAACT,EAAO,CAACU,SAAS,UAAUC,KAAK,WAAWC,OAAO,IAAIH,QAAQ,aAC/D,eACE,GAAM,aAAW,YAEnB,yJACA,SAACT,EAAO,CAACU,SAAS,QAAQC,KAAK,WAAWC,OAAO,IAAIH,QAAQ,aAC7D,eACE,GAAM,OAAK,OAEb,oDAAqC,uBAAYI,WAAW,KAAG,WAAyB,eACxF,qBAAK,iBAAMA,WAAW,MAClB,UAAa,mBAAiB,+DAMlC,SAACb,EAAO,CAACU,SAAS,UAAUC,KAAK,WAAWC,OAAO,IAAIH,QAAQ,aAC/D,eACE,GAAM,OAAK,OAEb,mBAAG,mBAAQI,WAAW,KAAG,SACzB,+GAAgG,uBAAYA,WAAW,KAAG,sBAAoC,sBAC9J,qBAAK,iBAAMA,WAAW,MAClB,UAAa,mBAAiB,yWAgBlC,mBAAG,mBAAQA,WAAW,KAAG,aACzB,+GAAgG,uBAAYA,WAAW,KAAG,aAA2B,aACrJ,qBAAK,iBAAMA,WAAW,MAClB,UAAa,mBAAiB,2gBAsBtC,CAEAN,EAAWO,gBAAiB,C","sources":["webpack://dev-site-documentation-template/./src/pages/documentation/mobile-core/signal/tabs/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/aep-mobile-sdkdocs/aep-mobile-sdkdocs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst Variant = makeShortcode(\"Variant\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <Variant platform=\"android\" task=\"add\" repeat=\"5\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java\"\n    }}>{`Java`}</h4>\n    <p>{`Add the `}<a parentName=\"p\" {...{\n        \"href\": \"../index.md\"\n      }}>{`Mobile Core`}</a>{` extension to your project using the app's Gradle file.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`implementation 'com.adobe.marketing.mobile:sdk-core:1.+'\n`}</code></pre>\n    <p>{`Import the Signal extension in your application's main activity.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import com.adobe.marketing.mobile.*;\n`}</code></pre>\n    <Variant platform=\"ios-aep\" task=\"add\" repeat=\"8\" mdxType=\"Variant\" />\n    <p>{`​Add the AEPSignal extension and it's dependency, the `}<a parentName=\"p\" {...{\n        \"href\": \"../index.md\"\n      }}>{`Mobile Core`}</a>{` extension to your project using Cocoapods.`}</p>\n    <p>{`Add following pods in your `}<inlineCode parentName=\"p\">{`Podfile`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-pod\"\n      }}>{`pod 'AEPCore','~> 3.0'\npod 'AEPSignal','~> 3.0'\n`}</code></pre>\n    <p>{`Import the Signal libraries:`}</p>\n    <h4 {...{\n      \"id\": \"swift\"\n    }}>{`Swift`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`import AEPCore\nimport AEPSignal\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c\"\n    }}>{`Objective-C`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`@import AEPCore;\n@import AEPSignal;\n`}</code></pre>\n    <Variant platform=\"ios-acp\" task=\"add\" repeat=\"9\" mdxType=\"Variant\" />\n    <p>{`​The Signal extension is included in the Mobile Core extension. Add the `}<a parentName=\"p\" {...{\n        \"href\": \"../index.md\"\n      }}>{`Mobile Core`}</a>{` extension to your project using Cocoapods.`}</p>\n    <p>{`Add following pods in your `}<inlineCode parentName=\"p\">{`Podfile`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-pod\"\n      }}>{`pod 'ACPCore', '~> 2.0'\n`}</code></pre>\n    <p>{`Import the Signal libraries:`}</p>\n    <h4 {...{\n      \"id\": \"objective-c-1\"\n    }}>{`Objective-C`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`#import \"ACPCore.h\"\n#import \"ACPSignal.h\"\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"swift-1\"\n    }}>{`Swift`}</h4>\n    <p>{`In Swift, the ACPCore includes ACPSignal:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`import ACPCore\n`}</code></pre>\n    <Variant platform=\"react-native\" task=\"add\" repeat=\"3\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"javascript\"\n    }}>{`JavaScript`}</h4>\n    <p>{`Importing the Signal extension:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import {ACPSignal} from '@adobe/react-native-acpcore';\n`}</code></pre>\n    <Variant platform=\"flutter\" task=\"add\" repeat=\"3\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"dart\"\n    }}>{`Dart`}</h4>\n    <p>{`Importing the Signal extension:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-dart\"\n      }}>{`import 'package:flutter_acpcore/flutter_acpsignal.dart';\n`}</code></pre>\n    <Variant platform=\"cordova\" task=\"add\" repeat=\"3\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"cordova\"\n    }}>{`Cordova`}</h4>\n    <p>{`After creating your Cordova app and adding the Android and iOS platforms, the Signal extension for Cordova can be added with this command:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-text\"\n      }}>{`cordova plugin add https://github.com/adobe/cordova-acpcore.git\n`}</code></pre>\n    <Variant platform=\"unity\" task=\"add\" repeat=\"3\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"c\"\n    }}>{`C#`}</h4>\n    <p>{`After importing the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/adobe/unity-acpcore/blob/master/bin/ACPCore-0.0.1-Unity.zip\"\n      }}>{`ACPCore.unitypackage`}</a>{`, the Signal extension for Unity can be added with following code in the MainScript`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`using com.adobe.marketing.mobile;\n`}</code></pre>\n    <Variant platform=\"xamarin\" task=\"add\" repeat=\"3\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"c-1\"\n    }}>{`C#`}</h4>\n    <p>{`After adding the iOS ACPCore NuGet package or the Android ACPSignal NuGet package, the Signal extension can be added by this import statement`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`using Com.Adobe.Marketing.Mobile;\n`}</code></pre>\n    <Variant platform=\"android\" task=\"register\" repeat=\"4\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-1\"\n    }}>{`Java`}</h4>\n    <p>{`After calling the `}<inlineCode parentName=\"p\">{`setApplication()`}</inlineCode>{` method in the `}<inlineCode parentName=\"p\">{`onCreate()`}</inlineCode>{` method, register the Signal extension. If the registration was not successful, an `}<inlineCode parentName=\"p\">{`InvalidInitException`}</inlineCode>{` is thrown.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class MobileApp extends Application {\n\n    @Override\n    public void onCreate() {\n        super.onCreate();\n        MobileCore.setApplication(this);\n        try {\n            Signal.registerExtension();\n            // register other extensions\n            MobileCore.start(new AdobeCallback () {\n                @Override\n                public void call(Object o) {\n                    MobileCore.configureWithAppID(\"yourAppId\");\n                }\n            });    \n        } catch (Exception e) {\n            //Log the exception\n         }\n    }\n}\n`}</code></pre>\n    <p>{`Please note that the Signal extension is automatically included in the Mobile Core extension by Maven. When you manually install the Signal extension, ensure that you add the `}<inlineCode parentName=\"p\">{`signal-1.x.x.aar`}</inlineCode>{` library to your project.`}</p>\n    <Variant platform=\"ios-aep\" task=\"register\" repeat=\"5\" mdxType=\"Variant\" />\n    <p>{`In your app's `}<inlineCode parentName=\"p\">{`application:didFinishLaunchingWithOptions`}</inlineCode>{`, register the Signal extension with Mobile Core:`}</p>\n    <h4 {...{\n      \"id\": \"swift-2\"\n    }}>{`Swift`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {\n     MobileCore.registerExtensions([Signal.self, ...]) {\n       MobileCore.configureWith(appId: \"yourAppId\")\n       // Any other post registration processing\n     }\n     return true;\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-2\"\n    }}>{`Objective-C`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n    [AEPMobileCore registerExtensions:@[AEPMobileSignal.class, ...] completion:^{\n        [AEPMobileCore configureWithAppId: @\"yourAppId\"];\n        // Any other post registration processing\n    }];\n    return YES;\n }\n`}</code></pre>\n    <Variant platform=\"ios-acp\" task=\"register\" repeat=\"6\" mdxType=\"Variant\" />\n    <p>{`In your app's`}<inlineCode parentName=\"p\">{`application:didFinishLaunchingWithOptions`}</inlineCode>{`, register the Signal extension with Mobile Core:`}</p>\n    <h4 {...{\n      \"id\": \"objective-c-3\"\n    }}>{`Objective-C`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n    [ACPCore configureWithAppId:@\"yourAppId\"];\n    [ACPSignal registerExtension];\n    [ACPCore start:nil];\n    // Override point for customization after application launch.\n    return YES;\n }\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"swift-3\"\n    }}>{`Swift`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {\n     ACPCore.configure(withAppId: \"yourAppId\")   \n     ACPSignal.registerExtension()\n     ACPCore.start(nil)\n     // Override point for customization after application launch.\n     return true;\n}\n`}</code></pre>\n    <p>{`Please note that the Signal extension is automatically included in the Mobile Core pod. When you manually install the Signal extension, ensure that you add the `}<inlineCode parentName=\"p\">{`libACPSignal_iOS.a`}</inlineCode>{` library to your project.`}</p>\n    <Variant platform=\"react-native\" task=\"register\" repeat=\"2\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"javascript-1\"\n    }}>{`JavaScript`}</h4>\n    <p>{`When using React Native, registering Signal with Mobile Core should be done in native code which is shown under the Android and iOS tabs.`}</p>\n    <Variant platform=\"flutter\" task=\"register\" repeat=\"2\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"dart-1\"\n    }}>{`Dart`}</h4>\n    <p>{`When using Flutter, registering Signal with Mobile Core should be done in native code which is shown under the Android and iOS tabs.`}</p>\n    <Variant platform=\"cordova\" task=\"register\" repeat=\"2\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"cordova-1\"\n    }}>{`Cordova`}</h4>\n    <p>{`When using Cordova, registering Signal with Mobile Core must be done in native code which is shown under the Android and iOS tabs.`}</p>\n    <Variant platform=\"unity\" task=\"register\" repeat=\"3\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"c-2\"\n    }}>{`C#`}</h4>\n    <p>{`Register the extension in the `}<inlineCode parentName=\"p\">{`start()`}</inlineCode>{` function:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`void Start()\n{   \n  ACPSignal.RegisterExtension();\n}\n`}</code></pre>\n    <Variant platform=\"xamarin\" task=\"register\" repeat=\"7\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"c-3\"\n    }}>{`C#`}</h4>\n    <p><strong parentName=\"p\">{`iOS`}</strong></p>\n    <p>{`Register the Signal extension with the Mobile Core by adding the following to your app's `}<inlineCode parentName=\"p\">{`FinishedLaunching:`}</inlineCode>{` delegate method:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`public override bool FinishedLaunching(UIApplication app, NSDictionary options)\n{\n  ACPSignal.RegisterExtension();\n  // start Mobile Core\n  ACPCore.Start(startCallback);\n\n  return base.FinishedLaunching(app, options);\n}\n\nprivate void startCallback()\n{\n  // set app id from the Data Collection UI\n  ACPCore.ConfigureWithAppID(\"yourAppId\");\n}\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Android`}</strong></p>\n    <p>{`Register the Signal extension with the Mobile Core by adding the following to your app's `}<inlineCode parentName=\"p\">{`OnCreate:`}</inlineCode>{` method:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`protected override void OnCreate(Bundle savedInstanceState)\n{\n  base.OnCreate(savedInstanceState);\n    LoadApplication(new App());\n  ACPCore.Application = this.Application;\n  ACPSignal.RegisterExtension();\n  // start Mobile Core\n  ACPCore.Start(new CoreStartCompletionCallback());\n}\n\nclass CoreStartCompletionCallback : Java.Lang.Object, IAdobeCallback\n{\n  public void Call(Java.Lang.Object callback)\n  {\n  // set app id from the Data Collection UI\n    ACPCore.ConfigureWithAppID(\"yourAppId\");\n  }\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","Variant","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","platform","task","repeat","parentName","isMDXComponent"],"sourceRoot":""}