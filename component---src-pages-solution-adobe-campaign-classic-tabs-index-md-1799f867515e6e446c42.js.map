{"version":3,"file":"component---src-pages-solution-adobe-campaign-classic-tabs-index-md-1799f867515e6e446c42.js","mappings":"mTAMaA,EAAe,CAAC,EACvBC,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,4EAC5B,eAASC,EAClB,CAAC,EACKG,EAAUL,EAAc,WACxBM,EAAoBN,EAAc,qBAClCO,EAAc,CAClBR,aAAAA,GAEIS,EAAYC,EAAAA,EACH,SAASC,EAAW,GAGhC,IAFDC,EAAU,EAAVA,WACGT,GAAK,YAER,OAAO,SAACM,GAAS,UAAKD,EAAiBL,EAAK,CAAES,WAAYA,EAAYC,QAAQ,eAG5E,SAACP,EAAO,CAACQ,SAAS,UAAUC,KAAK,MAAMC,OAAO,IAAIH,QAAQ,aAC1D,eACE,GAAM,QAAM,SAEd,kHACA,qBAAK,iBAAMI,WAAW,MAClB,UAAa,mBAAiB,+OAMlC,SAACV,EAAiB,CAACW,QAAQ,UAAUC,OAAO,QAAQC,aAAa,OAAOP,QAAQ,sBAC9E,2DAA4C,mBAAQI,WAAW,KAAG,OAAiB,sDAAsD,cAAGA,WAAW,IACnJ,KAAQ,iDAA+C,sCACZ,4BAEjD,SAACX,EAAO,CAACQ,SAAS,MAAMC,KAAK,MAAMC,OAAO,IAAIH,QAAQ,aACtD,mDAAoC,cAAGI,WAAW,IAC9C,KAAQ,wCAAsC,eAC1B,gCACxB,6DAA8C,uBAAYA,WAAW,KAAG,WAAyB,MACjG,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,+CAIhC,4FAA6E,cAAGA,WAAW,IACvF,KAAQ,iEAA+D,iBACjD,MAC1B,SAACX,EAAO,CAACQ,SAAS,UAAUC,KAAK,WAAWC,OAAO,IAAIH,QAAQ,aAC/D,oCAAqB,uBAAYI,WAAW,KAAG,YAA0B,qEACzE,eACE,GAAM,UAAQ,SAEhB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,osBAsBhC,eACE,GAAM,UAAQ,WAEhB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,0pBAwBhC,SAACX,EAAO,CAACQ,SAAS,MAAMC,KAAK,WAAWC,OAAO,IAAIH,QAAQ,aAC3D,oCAAqB,uBAAYI,WAAW,KAAG,8CAA4D,sDAC3G,eACE,GAAM,SAAO,UAEf,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBAAgB,iXAajC,eACE,GAAM,eAAa,gBAErB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBAAqB,kXAe1C,CAEAN,EAAWU,gBAAiB,C","sources":["webpack://dev-site-documentation-template/./src/pages/solution/adobe-campaign-classic/tabs/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/aep-mobile-sdkdocs/aep-mobile-sdkdocs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst Variant = makeShortcode(\"Variant\");\nconst InlineNestedAlert = makeShortcode(\"InlineNestedAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <Variant platform=\"android\" task=\"add\" repeat=\"4\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java\"\n    }}>{`Java`}</h4>\n    <p>{`Add the Mobile Core, Lifecycle and Campaign Classic dependencies in your app's Gradle file.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-gradle\"\n      }}>{`implementation platform('com.adobe.marketing.mobile:sdk-bom:2.+')\nimplementation 'com.adobe.marketing.mobile:core'\nimplementation 'com.adobe.marketing.mobile:lifecycle'\nimplementation 'com.adobe.marketing.mobile:campaignclassic'\n`}</code></pre>\n    <InlineNestedAlert variant=\"warning\" header=\"false\" iconPosition=\"left\" mdxType=\"InlineNestedAlert\">\n      <p>{`Using dynamic dependency versions is `}<strong parentName=\"p\">{`not`}</strong>{` recommended for production apps. Please read the `}<a parentName=\"p\" {...{\n          \"href\": \"../../resources/manage-gradle-dependencies.md\"\n        }}>{`managing Gradle dependencies guide`}</a>{` for more information.`}</p>\n    </InlineNestedAlert>\n    <Variant platform=\"ios\" task=\"add\" repeat=\"4\" mdxType=\"Variant\" />\n    <p>{`Add the Campaign Classic and `}<a parentName=\"p\" {...{\n        \"href\": \"../../home/base/mobile-core/index.md\"\n      }}>{`Mobile Core`}</a>{` libraries to your project.`}</p>\n    <p>{`You can add the following pods to your `}<inlineCode parentName=\"p\">{`Podfile`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`pod 'AEPCore'\npod 'AEPCampaignClassic'\n`}</code></pre>\n    <p>{`or you can manually include the XCFrameworks by following this GitHub `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/adobe/aepsdk-campaignclassic-ios/#binaries\"\n      }}>{`documentation`}</a>{`.`}</p>\n    <Variant platform=\"android\" task=\"register\" repeat=\"5\" mdxType=\"Variant\" />\n    <p>{`In your app's `}<inlineCode parentName=\"p\">{`OnCreate`}</inlineCode>{` method, register the Campaign Classic and Lifecycle extensions:`}</p>\n    <h4 {...{\n      \"id\": \"java-1\"\n    }}>{`Java`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import com.adobe.marketing.mobile.MobileCore;\nimport com.adobe.marketing.mobile.CampaignClassic;\nimport com.adobe.marketing.mobile.Lifecycle;\n\npublic class MainApp extends Application {\n\n    private final String ENVIRONMENT_FILE_ID = \"YOUR_APP_ENVIRONMENT_ID\";\n\n    @Override\n    public void onCreate() {\n        super.onCreate();\n        MobileCore.setApplication(this);\n        MobileCore.configureWithAppID(ENVIRONMENT_FILE_ID);\n        \n        MobileCore.registerExtensions(\n            Arrays.asList(CampaignClassic.EXTENSION, Lifecycle.EXTENSION),\n            o -> Log.d(\"MainApp\", \"Adobe Experience Platform Campaign Classic Mobile SDK was initialized.\")\n        );\n    }\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"kotlin\"\n    }}>{`Kotlin`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import com.adobe.marketing.mobile.MobileCore;\nimport com.adobe.marketing.mobile.CampaignClassic;\nimport com.adobe.marketing.mobile.Lifecycle;\n\nclass MainApp : Application() {\n\n  private var ENVIRONMENT_FILE_ID: String = \"YOUR_APP_ENVIRONMENT_ID\"\n\n    override fun onCreate() {\n        super.onCreate()\n\n        MobileCore.setApplication(this)\n        MobileCore.configureWithAppID(ENVIRONMENT_FILE_ID)\n\n        MobileCore.registerExtensions(\n          listOf(CampaignClassic.EXTENSION, Lifecycle.EXTENSION)\n        ) {\n          Log.d(\"MainApp\", \"Adobe Experience Platform Campaign Classic Mobile SDK was initialized\")\n        }\n    }\n\n}\n`}</code></pre>\n    <Variant platform=\"ios\" task=\"register\" repeat=\"5\" mdxType=\"Variant\" />\n    <p>{`In your app's `}<inlineCode parentName=\"p\">{`application:didFinishLaunchingWithOptions:`}</inlineCode>{` method, register the Campaign Classic extension:`}</p>\n    <h4 {...{\n      \"id\": \"swift\"\n    }}>{`Swift`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`// AppDelegate.swift\n\nimport AEPCore\nimport AEPCampaignClassic\n\nfunc application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {\n  MobileCore.registerExtensions([CampaignClassic.self], {\n    MobileCore.configureWith(appId: \"<YOUR_ENVIRONMENT_FILE_ID>\")\n  })\n  return true;\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c\"\n    }}>{`Objective-C`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`// AppDelegate.m\n\n@import AEPCore;\n@import AEPCampaignClassic;\n\n- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n    [AEPMobileCore registerExtensions:@[AEPMobileCampaignClassic.class] completion:^{\n    [AEPMobileCore configureWithAppId: @\"<YOUR_ENVIRONMENT_FILE_ID>\"];\n  }];\n  return YES;\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","makeShortcode","name","props","console","warn","Variant","InlineNestedAlert","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","platform","task","repeat","parentName","variant","header","iconPosition","isMDXComponent"],"sourceRoot":""}