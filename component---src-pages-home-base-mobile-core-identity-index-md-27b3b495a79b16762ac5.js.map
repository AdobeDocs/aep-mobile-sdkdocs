{"version":3,"file":"component---src-pages-home-base-mobile-core-identity-index-md-27b3b495a79b16762ac5.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/pages/home/base/mobile-core/identity/index.md","webpack://dev-site-documentation-template/./src/pages/home/base/mobile-core/identity/tabs/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/aep-mobile-sdkdocs/aep-mobile-sdkdocs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nimport Tabs from './tabs/index.md';\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst TabsBlock = makeShortcode(\"TabsBlock\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"identity\"\n    }}>{`Identity`}</h1>\n    <p>{`The Identity extension enables your app with the Experience Cloud ID (ECID). This service helps with the synchronization of Adobe and other customer identifiers.`}</p>\n    <InlineAlert variant=\"warning\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`On web or other platforms, there might situations where this extension might not be required, and the implementation of this SDK extension on mobile apps is required.`}</p>\n    <p>{`To get started with Identity, complete the following steps:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Add the `}<strong parentName=\"li\">{`Identity`}</strong>{` extension to your app.`}</li>\n      <li parentName=\"ol\">{`Implement the SDK APIs to complete the following tasks:`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Update customer IDs.`}</li>\n          <li parentName=\"ul\">{`Append Adobe visitor data to a URL string.`}</li>\n          <li parentName=\"ul\">{`Return customer IDs.`}</li>\n          <li parentName=\"ul\">{`Retrieve Experience Cloud IDs.`}</li>\n          <li parentName=\"ul\">{`Set advertising IDs.`}</li>\n          <li parentName=\"ul\">{`Set the device notification for push notifications.`}</li>\n        </ul>\n      </li>\n    </ol>\n    <h2 {...{\n      \"id\": \"add-the-identity-extension-to-your-app\"\n    }}>{`Add the Identity extension to your app`}</h2>\n    <TabsBlock orientation=\"horizontal\" slots=\"heading, content\" repeat=\"2\" mdxType=\"TabsBlock\" />\n    <p>{`Android`}</p>\n    <Tabs query=\"platform=android&task=add\" mdxType=\"Tabs\" />\n    <p>{`iOS`}</p>\n    <Tabs query=\"platform=ios&task=add\" mdxType=\"Tabs\" />\n    {/*- React Native\n     <Tabs query=\"platform=react-native&task=add\"/>\n     Flutter\n     <Tabs query=\"platform=flutter&task=add\"/> -*/}\n    <h2 {...{\n      \"id\": \"register-the-identity-extension\"\n    }}>{`Register the Identity extension`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`MobileCore.registerExtensions()`}</inlineCode>{` API can be used to register the Identity extension with the Mobile Core extension. This API allows the extension to send and receive events to and from the Mobile SDK.`}</p>\n    <p>{`To register the Identity extension, use the following code sample:`}</p>\n    <TabsBlock orientation=\"horizontal\" slots=\"heading, content\" repeat=\"2\" mdxType=\"TabsBlock\" />\n    <p>{`Android`}</p>\n    <Tabs query=\"platform=android&task=register\" mdxType=\"Tabs\" />\n    <p>{`iOS`}</p>\n    <Tabs query=\"platform=ios&task=register\" mdxType=\"Tabs\" />\n    {/*- React Native\n     <Tabs query=\"platform=react-native&task=register\"/>\n     Flutter\n     <Tabs query=\"platform=flutter&task=register\"/> -*/}\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`Previously known as MCID/MID/MCMID, the Experience Cloud ID (ECID) is a 38 character ID that uniquely identifies each visitor in the Adobe Experience Platform.`}</p>\n    <p>{`After the configuration is complete, an ECID is generated and, where applicable, is included on all Analytics and Audience Manager hits. Other IDs, such as custom and automatically-generated IDs, continue to be sent with each hit.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/aep-mobile-sdkdocs/aep-mobile-sdkdocs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst Variant = makeShortcode(\"Variant\");\nconst InlineNestedAlert = makeShortcode(\"InlineNestedAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <Variant platform=\"android\" task=\"add\" repeat=\"10\" mdxType=\"Variant\" />\n    <ol>\n      <li parentName=\"ol\">{`Add the `}<inlineCode parentName=\"li\">{`Identity`}</inlineCode>{` library to your project using the app's gradle file.`}</li>\n    </ol>\n    <h4 {...{\n      \"id\": \"kotlin\"\n    }}>{`Kotlin`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`implementation(platform(\"com.adobe.marketing.mobile:sdk-bom:3.+\"))\nimplementation(\"com.adobe.marketing.mobile:core\")\nimplementation(\"com.adobe.marketing.mobile:identity\")\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"groovy\"\n    }}>{`Groovy`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`implementation platform('com.adobe.marketing.mobile:sdk-bom:3.+')\nimplementation 'com.adobe.marketing.mobile:core'\nimplementation 'com.adobe.marketing.mobile:identity'\n`}</code></pre>\n    <InlineNestedAlert variant=\"warning\" header=\"false\" iconPosition=\"left\" mdxType=\"InlineNestedAlert\">\n      <p>{`Using dynamic dependency versions is `}<strong parentName=\"p\">{`not`}</strong>{` recommended for production apps. Please read the `}<a parentName=\"p\" {...{\n          \"href\": \"../../resources/manage-gradle-dependencies.md\"\n        }}>{`managing Gradle dependencies guide`}</a>{` for more information.`}</p>\n    </InlineNestedAlert>\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`Import the Identity and MobileCore extensions in your application's main activity.`}</li>\n    </ol>\n    <h4 {...{\n      \"id\": \"java\"\n    }}>{`Java`}</h4>\n    <p>{`Import the library:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import com.adobe.marketing.mobile.MobileCore;\nimport com.adobe.marketing.mobile.Identity;\n`}</code></pre>\n    <Variant platform=\"ios\" task=\"add\" repeat=\"7\" mdxType=\"Variant\" />\n    <ol>\n      <li parentName=\"ol\">{`Add the Mobile Core and Identity extensions to your project using Cocoapods. Add following pods in your `}<inlineCode parentName=\"li\">{`Podfile`}</inlineCode>{`:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`use_frameworks!\ntarget 'YourTargetApp' do\n    pod 'AEPCore', '~> 5.0'\n    pod 'AEPIdentity', '~> 5.0'\nend\n`}</code></pre>\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`Import the Identity library.`}</li>\n    </ol>\n    <h4 {...{\n      \"id\": \"swift\"\n    }}>{`Swift`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`import AEPCore\nimport AEPIdentity\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c\"\n    }}>{`Objective-C`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`@import AEPCore;\n@import AEPIdentity;\n`}</code></pre>\n    {/*- <Variant platform=\"react-native\" task=\"add\" repeat=\"2\"/>\n     #### JavaScript\n     ```jsx\n     import {ACPIdentity} from '@adobe/react-native-acpcore';\n     ```\n     <Variant platform=\"flutter\" task=\"add\" repeat=\"2\"/>\n     #### Dart\n     ```dart\n     import 'package:flutter_acpcore/flutter_acpidentity.dart';\n     ``` -*/}\n    <Variant platform=\"android\" task=\"register\" repeat=\"3\" mdxType=\"Variant\" />\n    <p>{`After calling the `}<inlineCode parentName=\"p\">{`setApplication()`}</inlineCode>{` method in the `}<inlineCode parentName=\"p\">{`onCreate()`}</inlineCode>{` method, register the Identity extension.`}</p>\n    <h4 {...{\n      \"id\": \"java-1\"\n    }}>{`Java`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class MobileApp extends Application {\n@Override\npublic void onCreate() {\nsuper.onCreate();\n     MobileCore.setApplication(this);\n     List<Class<? extends Extension>> extensions = Arrays.asList(Identity.EXTENSION, ...);\n     MobileCore.registerExtensions(extensions, o -> {\n        // Any other post registration processing\n    });\n  }\n}\n`}</code></pre>\n    <Variant platform=\"ios\" task=\"register\" repeat=\"6\" mdxType=\"Variant\" />\n    <p>{`Register the Identity extension in your app's `}<inlineCode parentName=\"p\">{`didFinishLaunchingWithOptions`}</inlineCode>{` function:`}</p>\n    <h4 {...{\n      \"id\": \"swift-1\"\n    }}>{`Swift`}</h4>\n    <p>{`When including both Identity and Identity for Edge Network extensions, register the extensions using their full Swift module names, such as `}<inlineCode parentName=\"p\">{`AEPIdentity.Identity.self`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {\n     MobileCore.registerExtensions([Identity.self, ...], {\n       ...\n     })\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-1\"\n    }}>{`Objective-C`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n [AEPMobileCore registerExtensions:@[AEPMobileIdentity.class, ...] completion:^{\n   ...\n }];\n return YES;\n}\n`}</code></pre>\n    {/*- <Variant platform=\"react-native\" task=\"register\" repeat=\"1\"/>\n     When using React Native, registering Identity with Mobile Core should be done in native code, which is shown under the Android and iOS tabs.\n     <Variant platform=\"flutter\" task=\"register\" repeat=\"1\"/>\n     When using Flutter, registering Identity with Mobile Core should be done in native code, which is shown under the Android and iOS tabs. -*/}\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","makeShortcode","name","props","console","warn","InlineAlert","TabsBlock","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","variant","slots","parentName","orientation","repeat","query","isMDXComponent","Variant","InlineNestedAlert","platform","task","header","iconPosition"],"sourceRoot":""}