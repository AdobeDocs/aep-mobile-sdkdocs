"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[396,9429],{1287:function(e,n,t){t.r(n),t.d(n,{_frontmatter:function(){return p},default:function(){return h}});var a=t(87462),i=t(63366),o=(t(15007),t(64983)),r=t(91515),d=t(7970),l=["components"],p={},s=function(e){return function(n){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.mdx)("div",n)}},m=s("Media"),c=s("TabsBlock"),u={_frontmatter:p},x=r.Z;function h(e){var n=e.components,t=(0,i.Z)(e,l);return(0,o.mdx)(x,(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.mdx)("h1",{id:"signal"},"Signal"),(0,o.mdx)("p",null,'The Signal extension allows marketers to send a "signal" to their apps through the Adobe Experience Platform Mobile SDKs. This signal might tell the Mobile SDKs or the apps to complete tasks, such as send PII-labeled data, to trigger a postback to a third-party ad-network and open an app deep link or URL. To ensure that signals are sent or are activated, the marketers need to configure triggers and traits in the Data Collection UI.'),(0,o.mdx)("p",null,"The Signal extension is bundled with the ",(0,o.mdx)("a",{parentName:"p",href:"../index.md"},"MobileCore (Android)/ACPCore (iOS)")," extension and allows you to send postbacks to third-party endpoints and open URLs, such as web URLs or application deep links, when using rules actions in the Data Collection UI."),(0,o.mdx)("p",null,"To send PII data to external destinations, the ",(0,o.mdx)("inlineCode",{parentName:"p"},"PII")," action can trigger the Rules Engine when certain triggers and traits match. When setting a rule, you can also set the ",(0,o.mdx)("inlineCode",{parentName:"p"},"PII")," action for a Signal event. The ",(0,o.mdx)("inlineCode",{parentName:"p"},"collectPii")," API can then be used to trigger the rule and send the PII data to a remote server."),(0,o.mdx)("p",null,"To get started with Signal extension, complete the following steps:"),(0,o.mdx)("ol",null,(0,o.mdx)("li",{parentName:"ol"},"Add the ",(0,o.mdx)("strong",{parentName:"li"},"Signal")," extension to your app."),(0,o.mdx)("li",{parentName:"ol"},"Define the necessary rules in the Data Collection UI. "),(0,o.mdx)("li",{parentName:"ol"},"(Optional) When using Send PII actions in the Data Collection UI, implement the APIs to collect PII data and send it to the configured third party destination.")),(0,o.mdx)("p",null,"For more information about creating and configuring a rule in the Data Collection UI, see ",(0,o.mdx)("a",{parentName:"p",href:"https://experienceleague.adobe.com/docs/experience-platform/tags/ui/rules.html"},"Rules"),"."),(0,o.mdx)("h2",{id:"watch-the-video"},"Watch the video"),(0,o.mdx)(m,{slots:"video",mdxType:"Media"}),(0,o.mdx)("p",null,(0,o.mdx)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=r-z9ivQjzOY"},"https://www.youtube.com/watch?v=r-z9ivQjzOY")),(0,o.mdx)("h2",{id:"add-the-signal-extension-to-your-app"},"Add the Signal extension to your app"),(0,o.mdx)(c,{orientation:"horizontal",slots:"heading, content",repeat:"8",mdxType:"TabsBlock"}),(0,o.mdx)("p",null,"Android"),(0,o.mdx)(d.default,{query:"platform=android&task=add",mdxType:"Tabs"}),(0,o.mdx)("p",null,"iOS (AEP 3.x)"),(0,o.mdx)(d.default,{query:"platform=ios-aep&task=add",mdxType:"Tabs"}),(0,o.mdx)("p",null,"iOS (ACP 2.x)"),(0,o.mdx)(d.default,{query:"platform=ios-acp&task=add",mdxType:"Tabs"}),(0,o.mdx)("p",null,"React Native"),(0,o.mdx)(d.default,{query:"platform=react-native&task=add",mdxType:"Tabs"}),(0,o.mdx)("p",null,"Flutter"),(0,o.mdx)(d.default,{query:"platform=flutter&task=add",mdxType:"Tabs"}),(0,o.mdx)("p",null,"Cordova"),(0,o.mdx)(d.default,{query:"platform=cordova&task=add",mdxType:"Tabs"}),(0,o.mdx)("p",null,"Unity"),(0,o.mdx)(d.default,{query:"platform=unity&task=add",mdxType:"Tabs"}),(0,o.mdx)("p",null,"Xamarin"),(0,o.mdx)(d.default,{query:"platform=xamarin&task=add",mdxType:"Tabs"}),(0,o.mdx)("h2",{id:"register-the-signal-extension"},"Register the Signal extension"),(0,o.mdx)("p",null,"The ",(0,o.mdx)("inlineCode",{parentName:"p"},"registerExtension()")," API registers the Signal extension with the Mobile Core extension. This API allows the extension to send and receive events to and from the Mobile SDK."),(0,o.mdx)("p",null,"To register the Identity extension, use the following code sample:"),(0,o.mdx)(c,{orientation:"horizontal",slots:"heading, content",repeat:"8",mdxType:"TabsBlock"}),(0,o.mdx)("p",null,"Android"),(0,o.mdx)(d.default,{query:"platform=android&task=register",mdxType:"Tabs"}),(0,o.mdx)("p",null,"iOS (AEP 3.x)"),(0,o.mdx)(d.default,{query:"platform=ios-aep&task=register",mdxType:"Tabs"}),(0,o.mdx)("p",null,"iOS (ACP 2.x)"),(0,o.mdx)(d.default,{query:"platform=ios-acp&task=register",mdxType:"Tabs"}),(0,o.mdx)("p",null,"React Native"),(0,o.mdx)(d.default,{query:"platform=react-native&task=register",mdxType:"Tabs"}),(0,o.mdx)("p",null,"Flutter"),(0,o.mdx)(d.default,{query:"platform=flutter&task=register",mdxType:"Tabs"}),(0,o.mdx)("p",null,"Cordova"),(0,o.mdx)(d.default,{query:"platform=cordova&task=register",mdxType:"Tabs"}),(0,o.mdx)("p",null,"Unity"),(0,o.mdx)(d.default,{query:"platform=unity&task=register",mdxType:"Tabs"}),(0,o.mdx)("p",null,"Xamarin"),(0,o.mdx)(d.default,{query:"platform=xamarin&task=register",mdxType:"Tabs"}),(0,o.mdx)("h2",{id:"implement-the-mobile-sdk-to-send-pii-data-to-external-destinations"},"Implement the Mobile SDK to send PII data to external destinations"),(0,o.mdx)("p",null,"To send PII data to external destinations, the ",(0,o.mdx)("inlineCode",{parentName:"p"},"PII")," action can trigger the Rules Engine when the configured triggers and traits match. When creating a rule, you can set the ",(0,o.mdx)("inlineCode",{parentName:"p"},"PII")," action for a Signal event, so that ",(0,o.mdx)("inlineCode",{parentName:"p"},"collectPii")," can trigger the rule and send the ",(0,o.mdx)("inlineCode",{parentName:"p"},"PII")," data."),(0,o.mdx)("p",null,"For more information about ",(0,o.mdx)("inlineCode",{parentName:"p"},"collectPii")," and its usage, see ",(0,o.mdx)("a",{parentName:"p",href:"../api-reference.md#collect-pii"},"collectPii"),"."),(0,o.mdx)("p",null,"For more information about how to configure the Signal postbacks in the Data Collection UI, see ",(0,o.mdx)("a",{parentName:"p",href:"../../user-guides/rules-engine-integration"},"Signal extension and Rules Engine integration"),"."))}h.isMDXComponent=!0},7970:function(e,n,t){t.r(n),t.d(n,{_frontmatter:function(){return p},default:function(){return u}});var a,i=t(87462),o=t(63366),r=(t(15007),t(64983)),d=t(91515),l=["components"],p={},s=(a="Variant",function(e){return console.warn("Component "+a+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.mdx)("div",e)}),m={_frontmatter:p},c=d.Z;function u(e){var n=e.components,t=(0,o.Z)(e,l);return(0,r.mdx)(c,(0,i.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,r.mdx)(s,{platform:"android",task:"add",repeat:"5",mdxType:"Variant"}),(0,r.mdx)("h4",{id:"java"},"Java"),(0,r.mdx)("p",null,"Add the ",(0,r.mdx)("a",{parentName:"p",href:"../index.md"},"Mobile Core")," extension to your project using the app's Gradle file."),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-java"},"implementation 'com.adobe.marketing.mobile:sdk-core:1.+'\n")),(0,r.mdx)("p",null,"Import the Signal extension in your application's main activity."),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-java"},"import com.adobe.marketing.mobile.*;\n")),(0,r.mdx)(s,{platform:"ios-aep",task:"add",repeat:"8",mdxType:"Variant"}),(0,r.mdx)("p",null,"​Add the AEPSignal extension and it's dependency, the ",(0,r.mdx)("a",{parentName:"p",href:"../index.md"},"Mobile Core")," extension to your project using Cocoapods."),(0,r.mdx)("p",null,"Add following pods in your ",(0,r.mdx)("inlineCode",{parentName:"p"},"Podfile"),":"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-pod"},"pod 'AEPCore','~> 3.0'\npod 'AEPSignal','~> 3.0'\n")),(0,r.mdx)("p",null,"Import the Signal libraries:"),(0,r.mdx)("h4",{id:"swift"},"Swift"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-swift"},"import AEPCore\nimport AEPSignal\n")),(0,r.mdx)("h4",{id:"objective-c"},"Objective-C"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-objectivec"},"@import AEPCore;\n@import AEPSignal;\n")),(0,r.mdx)(s,{platform:"ios-acp",task:"add",repeat:"9",mdxType:"Variant"}),(0,r.mdx)("p",null,"​The Signal extension is included in the Mobile Core extension. Add the ",(0,r.mdx)("a",{parentName:"p",href:"../index.md"},"Mobile Core")," extension to your project using Cocoapods."),(0,r.mdx)("p",null,"Add following pods in your ",(0,r.mdx)("inlineCode",{parentName:"p"},"Podfile"),":"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-pod"},"pod 'ACPCore', '~> 2.0'\n")),(0,r.mdx)("p",null,"Import the Signal libraries:"),(0,r.mdx)("h4",{id:"objective-c-1"},"Objective-C"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-objectivec"},'#import "ACPCore.h"\n#import "ACPSignal.h"\n')),(0,r.mdx)("h4",{id:"swift-1"},"Swift"),(0,r.mdx)("p",null,"In Swift, the ACPCore includes ACPSignal:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-swift"},"import ACPCore\n")),(0,r.mdx)(s,{platform:"react-native",task:"add",repeat:"3",mdxType:"Variant"}),(0,r.mdx)("h4",{id:"javascript"},"JavaScript"),(0,r.mdx)("p",null,"Importing the Signal extension:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-jsx"},"import {ACPSignal} from '@adobe/react-native-acpcore';\n")),(0,r.mdx)(s,{platform:"flutter",task:"add",repeat:"3",mdxType:"Variant"}),(0,r.mdx)("h4",{id:"dart"},"Dart"),(0,r.mdx)("p",null,"Importing the Signal extension:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-dart"},"import 'package:flutter_acpcore/flutter_acpsignal.dart';\n")),(0,r.mdx)(s,{platform:"cordova",task:"add",repeat:"3",mdxType:"Variant"}),(0,r.mdx)("h4",{id:"cordova"},"Cordova"),(0,r.mdx)("p",null,"After creating your Cordova app and adding the Android and iOS platforms, the Signal extension for Cordova can be added with this command:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-text"},"cordova plugin add https://github.com/adobe/cordova-acpcore.git\n")),(0,r.mdx)(s,{platform:"unity",task:"add",repeat:"3",mdxType:"Variant"}),(0,r.mdx)("h4",{id:"c"},"C#"),(0,r.mdx)("p",null,"After importing the ",(0,r.mdx)("a",{parentName:"p",href:"https://github.com/adobe/unity-acpcore/blob/master/bin/ACPCore-0.0.1-Unity.zip"},"ACPCore.unitypackage"),", the Signal extension for Unity can be added with following code in the MainScript"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-csharp"},"using com.adobe.marketing.mobile;\n")),(0,r.mdx)(s,{platform:"xamarin",task:"add",repeat:"3",mdxType:"Variant"}),(0,r.mdx)("h4",{id:"c-1"},"C#"),(0,r.mdx)("p",null,"After adding the iOS ACPCore NuGet package or the Android ACPSignal NuGet package, the Signal extension can be added by this import statement"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-csharp"},"using Com.Adobe.Marketing.Mobile;\n")),(0,r.mdx)(s,{platform:"android",task:"register",repeat:"4",mdxType:"Variant"}),(0,r.mdx)("h4",{id:"java-1"},"Java"),(0,r.mdx)("p",null,"After calling the ",(0,r.mdx)("inlineCode",{parentName:"p"},"setApplication()")," method in the ",(0,r.mdx)("inlineCode",{parentName:"p"},"onCreate()")," method, register the Signal extension. If the registration was not successful, an ",(0,r.mdx)("inlineCode",{parentName:"p"},"InvalidInitException")," is thrown."),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-java"},'public class MobileApp extends Application {\n\n    @Override\n    public void onCreate() {\n        super.onCreate();\n        MobileCore.setApplication(this);\n        try {\n            Signal.registerExtension();\n            // register other extensions\n            MobileCore.start(new AdobeCallback () {\n                @Override\n                public void call(Object o) {\n                    MobileCore.configureWithAppID("yourAppId");\n                }\n            });    \n        } catch (Exception e) {\n            //Log the exception\n         }\n    }\n}\n')),(0,r.mdx)("p",null,"Please note that the Signal extension is automatically included in the Mobile Core extension by Maven. When you manually install the Signal extension, ensure that you add the ",(0,r.mdx)("inlineCode",{parentName:"p"},"signal-1.x.x.aar")," library to your project."),(0,r.mdx)(s,{platform:"ios-aep",task:"register",repeat:"5",mdxType:"Variant"}),(0,r.mdx)("p",null,"In your app's ",(0,r.mdx)("inlineCode",{parentName:"p"},"application:didFinishLaunchingWithOptions"),", register the Signal extension with Mobile Core:"),(0,r.mdx)("h4",{id:"swift-2"},"Swift"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-swift"},'func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {\n     MobileCore.registerExtensions([Signal.self, ...]) {\n       MobileCore.configureWith(appId: "yourAppId")\n       // Any other post registration processing\n     }\n     return true;\n}\n')),(0,r.mdx)("h4",{id:"objective-c-2"},"Objective-C"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-objectivec"},'- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n    [AEPMobileCore registerExtensions:@[AEPMobileSignal.class, ...] completion:^{\n        [AEPMobileCore configureWithAppId: @"yourAppId"];\n        // Any other post registration processing\n    }];\n    return YES;\n }\n')),(0,r.mdx)(s,{platform:"ios-acp",task:"register",repeat:"6",mdxType:"Variant"}),(0,r.mdx)("p",null,"In your app's",(0,r.mdx)("inlineCode",{parentName:"p"},"application:didFinishLaunchingWithOptions"),", register the Signal extension with Mobile Core:"),(0,r.mdx)("h4",{id:"objective-c-3"},"Objective-C"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-objectivec"},'- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n    [ACPCore configureWithAppId:@"yourAppId"];\n    [ACPSignal registerExtension];\n    [ACPCore start:nil];\n    // Override point for customization after application launch.\n    return YES;\n }\n')),(0,r.mdx)("h4",{id:"swift-3"},"Swift"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-swift"},'func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {\n     ACPCore.configure(withAppId: "yourAppId")   \n     ACPSignal.registerExtension()\n     ACPCore.start(nil)\n     // Override point for customization after application launch.\n     return true;\n}\n')),(0,r.mdx)("p",null,"Please note that the Signal extension is automatically included in the Mobile Core pod. When you manually install the Signal extension, ensure that you add the ",(0,r.mdx)("inlineCode",{parentName:"p"},"libACPSignal_iOS.a")," library to your project."),(0,r.mdx)(s,{platform:"react-native",task:"register",repeat:"2",mdxType:"Variant"}),(0,r.mdx)("h4",{id:"javascript-1"},"JavaScript"),(0,r.mdx)("p",null,"When using React Native, registering Signal with Mobile Core should be done in native code which is shown under the Android and iOS tabs."),(0,r.mdx)(s,{platform:"flutter",task:"register",repeat:"2",mdxType:"Variant"}),(0,r.mdx)("h4",{id:"dart-1"},"Dart"),(0,r.mdx)("p",null,"When using Flutter, registering Signal with Mobile Core should be done in native code which is shown under the Android and iOS tabs."),(0,r.mdx)(s,{platform:"cordova",task:"register",repeat:"2",mdxType:"Variant"}),(0,r.mdx)("h4",{id:"cordova-1"},"Cordova"),(0,r.mdx)("p",null,"When using Cordova, registering Signal with Mobile Core must be done in native code which is shown under the Android and iOS tabs."),(0,r.mdx)(s,{platform:"unity",task:"register",repeat:"3",mdxType:"Variant"}),(0,r.mdx)("h4",{id:"c-2"},"C#"),(0,r.mdx)("p",null,"Register the extension in the ",(0,r.mdx)("inlineCode",{parentName:"p"},"start()")," function:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-csharp"},"void Start()\n{   \n  ACPSignal.RegisterExtension();\n}\n")),(0,r.mdx)(s,{platform:"xamarin",task:"register",repeat:"7",mdxType:"Variant"}),(0,r.mdx)("h4",{id:"c-3"},"C#"),(0,r.mdx)("p",null,(0,r.mdx)("strong",{parentName:"p"},"iOS")),(0,r.mdx)("p",null,"Register the Signal extension with the Mobile Core by adding the following to your app's ",(0,r.mdx)("inlineCode",{parentName:"p"},"FinishedLaunching:")," delegate method:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-csharp"},'public override bool FinishedLaunching(UIApplication app, NSDictionary options)\n{\n  ACPSignal.RegisterExtension();\n  // start Mobile Core\n  ACPCore.Start(startCallback);\n\n  return base.FinishedLaunching(app, options);\n}\n\nprivate void startCallback()\n{\n  // set app id from the Data Collection UI\n  ACPCore.ConfigureWithAppID("yourAppId");\n}\n')),(0,r.mdx)("p",null,(0,r.mdx)("strong",{parentName:"p"},"Android")),(0,r.mdx)("p",null,"Register the Signal extension with the Mobile Core by adding the following to your app's ",(0,r.mdx)("inlineCode",{parentName:"p"},"OnCreate:")," method:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-csharp"},'protected override void OnCreate(Bundle savedInstanceState)\n{\n  base.OnCreate(savedInstanceState);\n    LoadApplication(new App());\n  ACPCore.Application = this.Application;\n  ACPSignal.RegisterExtension();\n  // start Mobile Core\n  ACPCore.Start(new CoreStartCompletionCallback());\n}\n\nclass CoreStartCompletionCallback : Java.Lang.Object, IAdobeCallback\n{\n  public void Call(Java.Lang.Object callback)\n  {\n  // set app id from the Data Collection UI\n    ACPCore.ConfigureWithAppID("yourAppId");\n  }\n}\n')))}u.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-documentation-mobile-core-signal-index-md-256e9fc512669841e287.js.map