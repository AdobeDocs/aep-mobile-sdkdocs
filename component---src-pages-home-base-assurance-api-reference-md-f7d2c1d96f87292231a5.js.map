{"version":3,"file":"component---src-pages-home-base-assurance-api-reference-md-f7d2c1d96f87292231a5.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/pages/home/base/assurance/api-reference.md","webpack://dev-site-documentation-template/./src/pages/home/base/assurance/tabs/api-reference.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/aep-mobile-sdkdocs/aep-mobile-sdkdocs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nimport Tabs from './tabs/api-reference.md';\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst TabsBlock = makeShortcode(\"TabsBlock\");\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"assurance-api-reference\"\n    }}>{`Assurance API reference`}</h1>\n    <h2 {...{\n      \"id\": \"extensionversion\"\n    }}>{`extensionVersion`}</h2>\n    <p>{`Returns the current version of the AEP Assurance extension.`}</p>\n    <TabsBlock orientation=\"horizontal\" slots=\"heading, content\" repeat=\"2\" mdxType=\"TabsBlock\" />\n    <p>{`Android`}</p>\n    <Tabs query=\"platform=android&api=extension-version\" mdxType=\"Tabs\" />\n    <p>{`iOS`}</p>\n    <Tabs query=\"platform=ios&api=extension-version\" mdxType=\"Tabs\" />\n    {/*- React Native\n     <Tabs query=\"platform=react-native&api=extension-version\"/>\n     Flutter\n     <Tabs query=\"platform=flutter&api=extension-version\"/> -*/}\n    <h2 {...{\n      \"id\": \"registerextension\"\n    }}>{`registerExtension`}</h2>\n    <InlineAlert variant=\"warning\" slots=\"header, text1\" mdxType=\"InlineAlert\" />\n    <p>{`This API has been deprecated starting in v2.0.0 and removed in v3.0.0 of the Android mobile extension.`}</p>\n    <p>{`Use `}<a parentName=\"p\" {...{\n        \"href\": \"../mobile-core/api-reference.md#registerextensions\"\n      }}><inlineCode parentName=\"a\">{`MobileCore.registerExtensions()`}</inlineCode></a>{` API instead.`}</p>\n    <p>{`Registers the Assurance extension with the Mobile Core.`}</p>\n    <TabsBlock orientation=\"horizontal\" slots=\"heading, content\" repeat=\"1\" mdxType=\"TabsBlock\" />\n    <p>{`Android`}</p>\n    <Tabs query=\"platform=android&api=register-extension\" mdxType=\"Tabs\" />\n    <h2 {...{\n      \"id\": \"startsession\"\n    }}>{`startSession`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`startSession`}</inlineCode>{` API needs to be called to begin a AEP Assurance session. When called, the Mobile SDK displays a PIN authentication overlay to begin a session.`}</p>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`You may call this API when the app launches with a URL (see code snippet below for sample usage)`}</p>\n    <TabsBlock orientation=\"horizontal\" slots=\"heading, content\" repeat=\"2\" mdxType=\"TabsBlock\" />\n    <p>{`Android`}</p>\n    <Tabs query=\"platform=android&api=start-session\" mdxType=\"Tabs\" />\n    <p>{`iOS`}</p>\n    <Tabs query=\"platform=ios&api=start-session\" mdxType=\"Tabs\" />\n    {/*- React Native\n     <Tabs query=\"platform=react-native&api=start-session\"/>\n     Flutter\n     <Tabs query=\"platform=flutter&api=start-session\"/> -*/}\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/aep-mobile-sdkdocs/aep-mobile-sdkdocs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst Variant = makeShortcode(\"Variant\");\nconst InlineNestedAlert = makeShortcode(\"InlineNestedAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <Variant platform=\"android\" api=\"extension-version\" repeat=\"8\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`@NonNull\npublic static String extensionVersion()\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`final String extensionVersion = Assurance.extensionVersion();\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"kotlin\"\n    }}>{`Kotlin`}</h4>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`val extensionVersion: String = Assurance.extensionVersion()\n`}</code></pre>\n    <Variant platform=\"ios\" api=\"extension-version\" repeat=\"8\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`AEPAssurance.extensionVersion()\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`+ (nonnull NSString*) extensionVersion;\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`[AEPAssurance extensionVersion];\n`}</code></pre>\n    {/*- <Variant platform=\"react-native\" api=\"extension-version\" repeat=\"3\"/>\n     #### JavaScript\n     **Example**\n     ```objectivec\n     AEPAssurance.extensionVersion().then(version => console.log(\"AdobeExperienceSDK: AEP Assurance version: \" + version));\n     ```\n     <Variant platform=\"flutter\" api=\"extension-version\" repeat=\"5\"/>\n     #### Dart\n     **Syntax**\n     ```dart\n     static Future<String> get extensionVersion async\n     ```\n     **Example**\n     ```dart\n     assuranceVersion = await FlutterAssurance.extensionVersion;\n     ``` -*/}\n    <Variant platform=\"android\" api=\"start-session\" repeat=\"9\" mdxType=\"Variant\" />\n    <InlineNestedAlert variant=\"info\" header=\"false\" iconPosition=\"left\" mdxType=\"InlineNestedAlert\">\n      <p>{`This API is optional for Android. Deep linking is the best way to connect to an Assurance session when using the Android SDK. Assurance SDK on Android is already setup to handle incoming intents to your app. You can `}<a parentName=\"p\" {...{\n          \"href\": \"https://developer.android.com/training/app-links/deep-linking\"\n        }}>{`add an intent filter for incoming links in your app`}</a>{` to complete the deep link configuration.`}</p>\n    </InlineNestedAlert>\n    <h4 {...{\n      \"id\": \"java-1\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public static void startSession(@NonNull final String url)\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`final String url = \"<assurance_session_url>\";\nAssurance.startSession(url);\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"kotlin-1\"\n    }}>{`Kotlin`}</h4>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`val url: String = \"<assurance_session_url>\"\nAssurance.startSession(url)\n`}</code></pre>\n    <Variant platform=\"ios\" api=\"start-session\" repeat=\"10\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift-1\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`func application(_ app: UIApplication, open url: URL, options: [UIApplication.OpenURLOptionsKey : Any] = [:]) -> Bool {\n    do {\n        AEPAssurance.startSession(url)\n        return false\n    }\n}\n`}</code></pre>\n    <p>{`For SceneDelegate based applications`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`    func scene(_ scene: UIScene, openURLContexts URLContexts: Set<UIOpenURLContext>) {\n        AEPAssurance.startSession(URLContexts.first!.url)\n    }\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-1\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`+ (void) startSession: (NSURL* _Nonnull) url;\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`- (BOOL)application:(UIApplication *)app openURL:(nonnull NSURL *)url options:(nonnull NSDictionary<UIApplicationOpenURLOptionsKey,id> *)options {\n    [AEPAssurance startSession:url];\n    return false;\n}\n`}</code></pre>\n    {/*- <Variant platform=\"react-native\" api=\"start-session\" repeat=\"3\"/>\n     #### JavaScript\n     **Example**\n     ```javascript\n     AEPAssurance.startSession(\"your-assurance-session-url\");\n     ```\n     <Variant platform=\"flutter\" api=\"start-session\" repeat=\"5\"/>\n     #### Dart\n     **Syntax**\n     ```dart\n     static Future<void> startSession(String url);\n     ```\n     **Example**\n     ```dart\n     FlutterAssurance.startSession(url);\n     ``` -*/}\n    <Variant platform=\"android\" api=\"register-extension\" repeat=\"5\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-2\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public static void registerExtension()\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`Assurance.registerExtension();\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","makeShortcode","name","props","console","warn","TabsBlock","InlineAlert","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","orientation","slots","repeat","query","variant","parentName","isMDXComponent","Variant","InlineNestedAlert","platform","api","header","iconPosition"],"sourceRoot":""}