"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[1046],{78819:function(e,a,t){t.r(a),t.d(a,{_frontmatter:function(){return p},default:function(){return x}});var n,d=t(87462),r=t(63366),i=(t(15007),t(64983)),m=t(91515),l=["components"],p={},c=(n="Variant",function(e){return console.warn("Component "+n+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.mdx)("div",e)}),o={_frontmatter:p},s=m.Z;function x(e){var a=e.components,t=(0,r.Z)(e,l);return(0,i.mdx)(s,(0,d.Z)({},o,t,{components:a,mdxType:"MDXLayout"}),(0,i.mdx)(c,{platform:"android",api:"extension-version",repeat:"8",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"java"},"Java"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"public static String extensionVersion() {\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"String mediaExtensionVersion = Media.extensionVersion();\n")),(0,i.mdx)("h4",{id:"kotlin"},"Kotlin"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"val mediaExtensionVersion = Media.extensionVersion()\n")),(0,i.mdx)(c,{platform:"ios",api:"extension-version",repeat:"10",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"swift"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"static var extensionVersion: String\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"let mediaExtensionVersion = Media.extensionVersion()\n")),(0,i.mdx)("h4",{id:"objective-c"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"+ (nonnull NSString*) extensionVersion;\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"NSString *mediaExtensionVersion = [AEPMobileEdgeMedia extensionVersion];\n")),(0,i.mdx)(c,{platform:"android",api:"create-tracker",repeat:"8",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"java-1"},"Java"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"public static MediaTracker createTracker()\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"MediaTracker mediaTracker = Media.createTracker();  // Use the instance for tracking media.\n")),(0,i.mdx)("h4",{id:"kotlin-1"},"Kotlin"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"val tracker = Media.createTracker()\n")),(0,i.mdx)(c,{platform:"ios",api:"create-tracker",repeat:"10",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"swift-1"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"static func createTracker()\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"let tracker = Media.createTracker()  // Use the instance for tracking media.\n")),(0,i.mdx)("h4",{id:"objective-c-1"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"+ (void) createTracker\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objc"},"id<AEPEdgeMediaTracker> tracker;\ntracker = [AEPMobileEdgeMedia createTracker];  // Use the instance for tracking media.\n")),(0,i.mdx)(c,{platform:"android",api:"create-tracker-with-config",repeat:"8",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"java-2"},"Java"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"public static MediaTracker createTracker(Map<String, Object> config)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'HashMap<String, Object> config = new HashMap<String, Object>();\nconfig.put(MediaConstants.TrackerConfig.CHANNEL, "custom-channel");  // Overwrites channel configured in the Data Collection UI.\nconfig.put(MediaConstants.TrackerConfig.AD_PING_INTERVAL, 1);   // Overwrites ad content ping interval to 1 second.\nconfig.put(MediaConstants.TrackerConfig.MAIN_PING_INTERVAL, 30);   // Overwrites main content ping interval to 30 seconds.\n\nMediaTracker mediaTracker = Media.createTracker(config);  // Use the instance for tracking media.\n')),(0,i.mdx)("h4",{id:"kotlin-2"},"Kotlin"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'val config = mapOf(\n                MediaConstants.TrackerConfig.CHANNEL to "custom-channel",\n                MediaConstants.TrackerConfig.AD_PING_INTERVAL to 1,\n                MediaConstants.TrackerConfig.MAIN_PING_INTERVAL to 30,\n            )\nval tracker = Media.createTracker(config) // Use the instance for tracking media.\n')),(0,i.mdx)(c,{platform:"ios",api:"create-tracker-with-config",repeat:"10",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"swift-2"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"static func createTrackerWith(config: [String: Any]?)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'var config: [String: Any] = [:]\nconfig[MediaConstants.TrackerConfig.CHANNEL] = "custom-channel" // Overrides channel configured in the Data Collection UI.\nâ€‹config[MediaConstants.TrackerConfig.AD_PING_INTERVAL] = 1 // Overwrites ad content ping interval to 1 second.\nconfig[MediaConstants.TrackerConfig.MAIN_PING_INTERVAL] = 30 // Overwrites main content ping interval to 30 seconds.\n\nlet tracker = Media.createTrackerWith(config: config)\n')),(0,i.mdx)("h4",{id:"objective-c-2"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"+(id<AEPEdgeMediaTracker> _Nonnull) createTrackerWithConfig:(NSDictionary<NSString *,id> * _Nullable)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},'id<AEPEdgeMediaTracker> tracker;\nNSMutableDictionary* config = [NSMutableDictionary dictionary];\n\nconfig[AEPEdgeMediaTrackerConfig.CHANNEL] = @"custom-channel"; // Overrides channel configured in the Data Collection UI.\nconfig[AEPEdgeMediaTrackerConfig.AD_PING_INTERVAL] = 1; // Overwrites ad content ping interval to 1 second.\nconfig[AEPEdgeMediaTrackerConfig.MAIN_PING_INTERVAL] = 30; // Overwrites main content ping interval to 30 seconds.\n\ntracker = [AEPMobileEdgeMedia createTrackerWithConfig:config];\n')),(0,i.mdx)(c,{platform:"android",api:"create-media-object",repeat:"8",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"java-3"},"Java"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"public static HashMap<String, Object> createMediaObject(String name,\n                                                        String id,\n                                                        int length,\n                                                        String streamType,\n                                                        MediaType mediaType);\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'HashMap<String, Object> mediaInfo = Media.createMediaObject("videoName",\n                                                            "videoId",\n                                                            60,\n                                                            MediaConstants.StreamType.VOD,\n                                                            Media.MediaType.Video);\n')),(0,i.mdx)("h4",{id:"kotlin-3"},"Kotlin"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'var mediaInfo = Media.createMediaObject("videoName",\n                                        "videoId",\n                                        60,\n                                        MediaConstants.StreamType.VOD,\n                                        Media.MediaType.Video)\n')),(0,i.mdx)(c,{platform:"ios",api:"create-media-object",repeat:"10",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"swift-3"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"static func createMediaObjectWith(name: String,\n                                    id: String,\n                                length: Int,\n                            streamType: String,\n                             mediaType: MediaType) -> [String: Any]?\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'let mediaObject = Media.createMediaObjectWith(name: "videoName",\n                                                id: "videoId",\n                                            length: 60,\n                                        streamType: MediaConstants.StreamType.VOD,\n                                         mediaType: MediaType.Video)\n')),(0,i.mdx)("h4",{id:"objective-c-3"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"+ (NSDictionary<NSString *, id> * _Nullable) createMediaObjectWith:(NSString * _Nonnull) id:(NSString * _Nonnull) length:(NSInteger) streamType:(NSString * _Nonnull) mediaType:(enum AEPEdgeMediaType)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},'NSDictionary *mediaObject = [AEPMobileEdgeMedia createMediaObjectWith:@"videoName"\n                                                                id:@"videoId"\n                                                            length:60\n                                                        streamType:AEPEdgeMediaStreamType.VOD\n                                                         mediaType:AEPEdgeMediaTypeVideo];\n')),(0,i.mdx)(c,{platform:"android",api:"create-ad-break-object",repeat:"8",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"java-4"},"Java"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"public static HashMap<String, Object> createAdBreakObject(String name, int position, int startTime);\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'HashMap<String, Object> adBreakInfo = Media.createAdBreakObject("adbreakName", 1, 0);\n')),(0,i.mdx)("h4",{id:"kotlin-4"},"Kotlin"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'val adBreakInfo = Media.createAdBreakObject("adbreakName", 1, 0)\n')),(0,i.mdx)(c,{platform:"ios",api:"create-ad-break-object",repeat:"10",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"swift-4"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"static func createAdBreakObjectWith(name: String,\n                                position: Int,\n                               startTime: Int) -> [String: Any]?\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'let adBreakInfo = Media.createAdBreakObjectWith(name: "adbreakName",\n                                              position: 1,\n                                             startTime: 0)\n')),(0,i.mdx)("h4",{id:"objective-c-4"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"+ (NSDictionary  <NSString *, id> * _Nullable) createAdBreakObjectWith:(NSString * _Nonnull)position:(NSInteger) startTime:(NSInteger)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},'NSDictionary *adBreakInfo = [AEPMobileEdgeMedia createAdBreakObjectWith:@"adbreakName"\n                                                                 position:1\n                                                                startTime:0];\n')),(0,i.mdx)(c,{platform:"android",api:"create-ad-object",repeat:"8",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"java-5"},"Java"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"public static HashMap<String, Object> createAdObject(String name, String id, int position, int length);\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'HashMap<String, Object> adInfo = Media.createAdObject("adName", "adId", 1, 15);\n')),(0,i.mdx)("h4",{id:"kotlin-5"},"Kotlin"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'val adInfo = Media.createAdObject("adName", "adId", 1, 15)\n')),(0,i.mdx)(c,{platform:"ios",api:"create-ad-object",repeat:"10",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"swift-5"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"static func createAdObjectWith(name: String,\n                                 id: String,\n                           position: Int,\n                             length: Int) -> [String: Any]?\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'let adInfo = Media.createObjectWith(name: "adName",\n                                        id: "adId",\n                                  position: 0,\n                                    length: 30)\n')),(0,i.mdx)("h4",{id:"objective-c-5"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"+ (NSDictionary  <NSString *, id> * _Nullable) createAdObjectWith:(NSString * _Nonnull)\n                                                               id:(NSString * _Nonnull)\n                                                         position:(NSInteger)\n                                                           length:(NSInteger)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},'NSDictionary *adInfo = [AEPMobileEdgeMedia createAdObjectWith:@"adName"\n                                                             id:@"adId"\n                                                       position:0\n                                                         length:30];\n')),(0,i.mdx)(c,{platform:"android",api:"create-chapter-object",repeat:"8",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"java-6"},"Java"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"public static HashMap<String, Object> createChapterObject(String name,\n                                                          int position,\n                                                          int length,\n                                                          int startTime);\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'HashMap<String, Object> chapterInfo = Media.createChapterObject("chapterName", 1, 60, 0);\n')),(0,i.mdx)("h4",{id:"kotlin-6"},"Kotlin"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'val chapterInfo = Media.createChapterObject("chapterName", 1, 60, 0)\n')),(0,i.mdx)(c,{platform:"ios",api:"create-chapter-object",repeat:"10",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"swift-6"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"static func createChapterObjectWith(name: String,\n                                position: Int,\n                                  length: Int,\n                               startTime: Int) -> [String: Any]?\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'let chapterInfo = Media.createChapterObjectWith(name: "chapterName",\n                                              position: 1,\n                                                length: 60,\n                                             startTime: 0)\n')),(0,i.mdx)("h4",{id:"objective-c-6"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"+ (NSDictionary  <NSString *, id> * _Nullable) createChapterObjectWith:(NSString * _Nonnull)\n                                                              position:(NSInteger)\n                                                                length:(NSInteger)\n                                                             startTime:(NSInteger)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivc"},'NSDictionary *chapterInfo = [AEPMobileEdgeMedia createChapterObjectWith:@"chapterName"\n                                                                 position:1\n                                                                   length:60\n                                                                startTime:0];\n')),(0,i.mdx)(c,{platform:"android",api:"create-qoe-object",repeat:"8",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"java-7"},"Java"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"public static HashMap<String, Object> createQoEObject(int bitrate,\n                                                      int startupTime,\n                                                      int fps,\n                                                      int droppedFrames);\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"HashMap<String, Object> qoeInfo = Media.createQoEObject(10000000, 2, 23, 10);\n")),(0,i.mdx)("h4",{id:"kotlin-7"},"Kotlin"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"val qoeInfo = Media.createQoEObject(10000000, 2, 23, 10)\n")),(0,i.mdx)(c,{platform:"ios",api:"create-qoe-object",repeat:"10",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"swift-7"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"static func createQoEObjectWith(bitrate: Int,\n                            startupTime: Int,\n                                    fps: Int,\n                          droppedFrames: Int) -> [String: Any]?\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"let qoeInfo = Media.createQoEObjectWith(bitrate: 500000,\n                                      startupTime: 2,\n                                              fps: 24,\n                                    droppedFrames: 10)\n")),(0,i.mdx)("h4",{id:"objective-c-7"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"+ (NSDictionary  <NSString *, id> * _Nullable) createQoEObjectWith:(NSInteger)\n                                                         startTime:(NSInteger)\n                                                               fps:(NSInteger)\n                                                     droppedFrames:(NSInteger)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"NSDictionary *qoeInfo = [AEPMobileEdgeMedia createQoEObjectWith:500000\n                                                        startTime:2\n                                                              fps:24\n                                                    droppedFrames:10];\n")),(0,i.mdx)(c,{platform:"android",api:"create-state-object",repeat:"8",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"java-8"},"Java"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"public static HashMap<String, Object> createStateObject(String stateName);\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"HashMap<String, Object> fullScreenState = Media.createStateObject(MediaConstants.PlayerState.FULLSCREEN);\n")),(0,i.mdx)("h4",{id:"kotlin-8"},"Kotlin"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"val fullScreenState = Media.createStateObject(MediaConstants.PlayerState.FULLSCREEN)\n")),(0,i.mdx)(c,{platform:"ios",api:"create-state-object",repeat:"10",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"swift-8"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"static func createStateObjectWith(stateName: String) -> [String: Any]\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"let fullScreenState = Media.createStateObjectWith(stateName: MediaConstants.PlayerState.FULLSCREEN)\n")),(0,i.mdx)("h4",{id:"objective-c-8"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"+ (NSDictionary  <NSString *, id> * _Nullable) createStateObjectWith:(NSString * _Nonnull)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"NSDictionary* fullScreenState = [AEPMobileEdgeMedia createStateObjectWith:AEPEdgeMediaPlayerState.FULLSCREEN]\n")),(0,i.mdx)(c,{platform:"android",api:"track-session-start",repeat:"8",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"java-9"},"Java"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"public void trackSessionStart(Map<String, Object> mediaInfo, Map<String, String> contextData);\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'HashMap<String, Object> mediaInfo = Media.createMediaObject("mediaName", "mediaId", 60, MediaConstants.StreamType.VOD, Media.MediaType.Video);\n\nHashMap<String, String> mediaMetadata = new HashMap<String, String>();\n// Standard metadata keys provided by adobe.\nmediaMetadata.put(MediaConstants.VideoMetadataKeys.EPISODE, "Sample Episode");\nmediaMetadata.put(MediaConstants.VideoMetadataKeys.SHOW, "Sample Show");\n\n// Custom metadata keys\nmediaMetadata.put("isUserLoggedIn", "false");\nmediaMetadata.put("tvStation", "Sample TV Station");\n\ntracker.trackSessionStart(mediaInfo, mediaMetadata);\n')),(0,i.mdx)("h4",{id:"kotlin-9"},"Kotlin"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'val mediaInfo = Media.createMediaObject(\n                        "mediaName",\n                        "mediaId",\n                        60,\n                        MediaConstants.StreamType.VOD,\n                        Media.MediaType.Video\n                    )\n\nval mediaMetadata = mapOf<String, String>(\n    // Standard metadata keys provided by Adobe\n    MediaConstants.VideoMetadataKeys.EPISODE to "Sample Episode",\n    MediaConstants.VideoMetadataKeys.SHOW to "Sample Show",\n    // Custom metadata keys\n    "isUserLoggedIn" to "false",\n    "tvStation" to "Sample TV Station"\n)\n\ntracker.trackSessionStart(mediaInfo, mediaMetadata)\n')),(0,i.mdx)(c,{platform:"ios",api:"track-session-start",repeat:"10",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"swift-9"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"public func trackSessionStart(info: [String: Any], metadata: [String: String]? = nil)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'let mediaInfo = Media.createMediaObjectWith(name: "videoName", id: "videoId", length: 60, streamType: MediaConstants.StreamType.VOD, mediaType: MediaType.Video)\n\nvar mediaMetadata: [String: String] = [\n  // Standard metadata keys provided by Adobe\n  MediaConstants.VideoMetadataKeys.SHOW : "Sample Show",\n  MediaConstants.VideoMetadataKeys.SEASON : "Sample Season",\n  // Custom metadata keys\n  "isUserLoggedIn" : "false",\n  "isUserLoggedIn" : "Sample TV station"\n]\n\ntracker.trackSessionStart(info: mediaInfo, metadata: mediaMetadata)\n')),(0,i.mdx)("h4",{id:"objective-c-9"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"+ (void) trackSessionStart:(NSDictionary<NSString *,id> * _Nonnull) metadata:(NSDictionary<NSString *,NSString *> * _Nullable)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},'NSDictionary *mediaInfo = [AEPMobileEdgeMedia createMediaObjectWith:@"videoName" id:@"videoId" length:60 streamType:AEPEdgeMediaStreamType.VOD mediaType:AEPEdgeMediaTypeVideo];\n\nNSMutableDictionary *mediaMetadata = [[NSMutableDictionary alloc] init];\n// Standard metadata keys provided by Adobe\n[mediaMetadata setObject:@"Sample Show" forKey:AEPEdgeMediaVideoMetadataKeys.SHOW];\n[mediaMetadata setObject:@"Sample Season" forKey:AEPEdgeMediaVideoMetadataKeys.SEASON];\n\n// Custom metadata keys\n[mediaMetadata setObject:@"false" forKey:@"isUserLoggedIn"];\n[mediaMetadata setObject:@"Sample TV station" forKey:@"tvStation"];\n\n[tracker trackSessionStart:mediaInfo metadata:mediaMetadata];\n')),(0,i.mdx)(c,{platform:"android",api:"track-play",repeat:"8",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"java-10"},"Java"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"public void trackPlay();\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"tracker.trackPlay();\n")),(0,i.mdx)("h4",{id:"kotlin-10"},"Kotlin"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"tracker.trackPlay()\n")),(0,i.mdx)(c,{platform:"ios",api:"track-play",repeat:"10",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"swift-10"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"func trackPlay()\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"tracker.trackPlay()\n")),(0,i.mdx)("h4",{id:"objective-c-10"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"- (void) trackPlay;\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"[tracker trackPlay];\n")),(0,i.mdx)(c,{platform:"android",api:"track-pause",repeat:"8",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"java-11"},"Java"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"public void trackPause();\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"tracker.trackPause();\n")),(0,i.mdx)("h4",{id:"kotlin-11"},"Kotlin"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"tracker.trackPause()\n")),(0,i.mdx)(c,{platform:"ios",api:"track-pause",repeat:"10",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"swift-11"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"func trackPause()\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"tracker.trackPause()\n")),(0,i.mdx)("h4",{id:"objective-c-11"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"- (void) trackPause\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"[tracker trackPause];\n")),(0,i.mdx)(c,{platform:"android",api:"track-complete",repeat:"8",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"java-12"},"Java"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"public void trackComplete();\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"tracker.trackComplete();\n")),(0,i.mdx)("h4",{id:"kotlin-12"},"Kotlin"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"tracker.trackComplete()\n")),(0,i.mdx)(c,{platform:"ios",api:"track-complete",repeat:"10",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"swift-12"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"func trackComplete()\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"tracker.trackComplete()\n")),(0,i.mdx)("h4",{id:"objective-c-12"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"- (void) trackComplete\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"[tracker trackComplete];\n")),(0,i.mdx)(c,{platform:"android",api:"track-session-end",repeat:"8",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"java-13"},"Java"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"public void trackSessionEnd();\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"tracker.trackSessionEnd();\n")),(0,i.mdx)("h4",{id:"kotlin-13"},"Kotlin"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-kotlin"},"tracker.trackSessionEnd()\n")),(0,i.mdx)(c,{platform:"ios",api:"track-session-end",repeat:"10",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"swift-13"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"func trackSessionEnd()\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"tracker.trackSessionEnd()\n")),(0,i.mdx)("h4",{id:"objective-c-13"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"- (void) trackSessionEnd\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"[tracker trackSessionEnd];\n")),(0,i.mdx)(c,{platform:"android",api:"track-error",repeat:"8",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"java-14"},"Java"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"public void trackError(String errorId);\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'tracker.trackError("errorId");\n')),(0,i.mdx)("h4",{id:"kotlin-14"},"Kotlin"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'tracker.trackError("errorId")\n')),(0,i.mdx)(c,{platform:"ios",api:"track-error",repeat:"10",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"swift-14"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"func trackError(errorId: String)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'tracker.trackError(errorId: "errorId")\n')),(0,i.mdx)("h4",{id:"objective-c-14"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"- (void) trackError:(NSString * _Nonnull)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},'[tracker trackError:@"errorId"];\n')),(0,i.mdx)(c,{platform:"android",api:"track-event",repeat:"30",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"java-15"},"Java"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"  public void trackEvent(Media.Event event,\n                         Map<String, Object> info,\n                         Map<String, String> data);\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Examples")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking player states")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"// StateStart\n  HashMap<String, Object> fullScreenState = Media.createStateObject(MediaConstants.PlayerState.FULLSCREEN);\n  tracker.trackEvent(Media.Event.StateStart, fullScreenState, null);\n\n// StateEnd\n  HashMap<String, Object> fullScreenState = Media.createStateObject(MediaConstants.PlayerState.FULLSCREEN);\n  tracker.trackEvent(Media.Event.StateEnd, fullScreenState, null);\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking ad breaks")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'// AdBreakStart\n  HashMap<String, Object> adBreakInfo = Media.createAdBreakObject("adbreakName", 1, 0);\n  tracker.trackEvent(Media.Event.AdBreakStart, adBreakInfo, null);\n\n// AdBreakComplete\n  tracker.trackEvent(Media.Event.AdBreakComplete, null, null);\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking ads")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'// AdStart\n  HashMap<String, Object> adInfo = Media.createAdObject("adName", "adId", 1, 15);\n\n  HashMap<String, String> adMetadata = new HashMap<String, String>();\n  // Standard metadata keys provided by Adobe\n  adMetadata.put(MediaConstants.AdMetadataKeys.ADVERTISER, "Sample Advertiser");\n  adMetadata.put(MediaConstants.AdMetadataKeys.CAMPAIGN_ID, "Sample Campaign");\n  // Custom metadata keys\n  adMetadata.put("affiliate", "Sample Affiliate");\n\n  tracker.trackEvent(Media.Event.AdStart, adInfo, adMetadata);\n\n// AdComplete\n  tracker.trackEvent(Media.Event.AdComplete, null, null);\n\n// AdSkip\n  tracker.trackEvent(Media.Event.AdSkip, null, null);\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking chapters")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'// ChapterStart\n  HashMap<String, Object> chapterInfo = Media.createChapterObject("chapterName", 1, 60, 0);\n\n  HashMap<String, String> chapterMetadata = new HashMap<String, String>();\n  chapterMetadata.put("segmentType", "Sample Segment type");\n\n  tracker.trackEvent(Media.Event.ChapterStart, chapterInfo, chapterMetadata);\n\n// ChapterComplete\n  tracker.trackEvent(Media.Event.ChapterComplete, null, null);\n\n// ChapterSkip\n  tracker.trackEvent(Media.Event.ChapterSkip, null, null);\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking playback events")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"// BufferStart\n  tracker.trackEvent(Media.Event.BufferStart, null, null);\n\n// BufferComplete\n  tracker.trackEvent(Media.Event.BufferComplete, null, null);\n\n// SeekStart\n  tracker.trackEvent(Media.Event.SeekStart, null, null);\n\n// SeekComplete\n  tracker.trackEvent(Media.Event.SeekComplete, null, null);\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking bitrate changes")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"// If the new bitrate value is available provide it to the tracker.\n  HashMap<String, Object> qoeInfo = Media.createQoEObject(2000000, 2, 25, 10);\n  tracker.updateQoEObject(qoeInfo);\n\n// Bitrate change\n  tracker.trackEvent(Media.Event.BitrateChange, null, null);\n")),(0,i.mdx)("h4",{id:"kotlin-15"},"Kotlin"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Examples")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking player states")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"// StateStart\n    val stateInfo = Media.createStateObject(MediaConstants.PlayerState.FULLSCREEN)\n    tracker.trackEvent(Media.Event.StateStart, stateInfo, null)\n\n// StateEnd\n    val stateInfo = Media.createStateObject(MediaConstants.PlayerState.FULLSCREEN)\n    tracker.trackEvent(Media.Event.StateEnd, stateInfo, null)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking ad breaks")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'// AdBreakStart\n    val adBreakInfo = Media.createAdBreakObject("adbreakName", 1, 0)\n    tracker.trackEvent(Media.Event.AdBreakStart, adBreakInfo, null)\n\n// AdBreakComplete\n    tracker.trackEvent(Media.Event.AdBreakComplete, null, null)\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking ads")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'//AdStart\n    val adInfo = Media.createAdObject("adName", "adId", 1, 15)\n\n    val adMetadata = mapOf<String, String>(\n    // Standard metadata keys provided by Adobe\n    MediaConstants.AdMetadataKeys.ADVERTISER to "Sample Advertiser",\n    MediaConstants.AdMetadataKeys.CAMPAIGN_ID to "Sample Campaign",\n    // Custom metadata keys\n    "affiliate" to "Sample Affiliate",\n    "tvStation" to "Sample TV Station"\n    )\n\n    tracker.trackEvent(Media.Event.AdStart, adInfo, adMetadata)\n\n// AdComplete\n    tracker.trackEvent(Media.Event.AdComplete, null, null)\n\n// AdSkip\n    tracker.trackEvent(Media.Event.AdSkip, null, null)\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking chapters")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'// ChapterStart\n  val chapterInfo = Media.createChapterObject("chapterName", 1L, 60, 0)\n\n  val chapterMetadata = mapOf<String, String>(\n    "segmentType" to "Sample Segment type"\n  )\n\n  tracker.trackEvent(Media.Event.ChapterStart, chapterInfo, chapterMetadata)\n\n// ChapterComplete\n  tracker.trackEvent(Media.Event.ChapterComplete, null, null)\n\n// ChapterSkip\n  tracker.trackEvent(Media.Event.ChapterSkip, null, null)\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking playback events")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"// BufferStart\n   tracker.trackEvent(Media.Event.BufferStart, null, null)\n\n// BufferComplete\n   tracker.trackEvent(Media.Event.BufferComplete, null, null)\n\n// SeekStart\n   tracker.trackEvent(Media.Event.SeekStart, null, null)\n\n// SeekComplete\n   tracker.trackEvent(Media.Event.SeekComplete, null, null)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking bitrate changes")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"// If the new bitrate value is available provide it to the tracker.\n  val qoeInfo = Media.createQoEObject(2000000, 2, 25, 10)\n  tracker.updateQoEObject(qoeInfo)\n\n// Bitrate change\n  tracker.trackEvent(Media.Event.BitrateChange, null, null)\n")),(0,i.mdx)(c,{platform:"ios",api:"track-event",repeat:"32",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"swift-15"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"func trackEvent(event: MediaEvent, info: [String: Any]?, metadata: [String: String]?)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Examples")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking player states")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"// StateStart\n  let fullScreenState = Media.createStateObjectWith(stateName: MediaConstants.PlayerState.FULLSCREEN)\n  tracker.trackEvent(event: MediaEvent.StateStart, info: fullScreenState, metadata: nil)\n\n// StateEnd\n  let fullScreenState = Media.createStateObjectWith(stateName: MediaConstants.PlayerState.FULLSCREEN)\n  tracker.trackEvent(event: MediaEvent.StateEnd, info: fullScreenState, metadata: nil)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking ad breaks")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'// AdBreakStart\n  let adBreakInfo = Media.createAdBreakObjectWith(name: "adbreakName", position: 1, startTime: 0)\n  tracker.trackEvent(event: MediaEvent.AdBreakStart, info: adBreakInfo, metadata: nil)\n\n// AdBreakComplete\n  tracker.trackEvent(event: MediaEvent.AdBreakComplete, info: nil, metadata: nil)\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking ads")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'// AdStart\n  let adInfo = Media.createObjectWith(name: "adName", id: "adId", position: 0, length: 30)\n\n// Standard metadata keys provided by Adobe\n  var adMetadata: [String: String] = [:]\n  adMetadata[MediaConstants.AdMetadataKeys.ADVERTISER] = "Sample Advertiser"\n  adMetadata[MediaConstants.AdMetadataKeys.CAMPAIGN_ID] = "Sample Campaign"\n\n// Custom metadata keys\n  adMetadata["affiliate"] = "Sample Affiliate"\n\n  tracker.trackEvent(event: MediaEvent.AdStart, info: adInfo, metadata: adMetadata)\n\n// AdComplete\n  tracker.trackEvent(event: MediaEvent.AdComplete, info: nil, metadata: nil)\n\n// AdSkip\n   tracker.trackEvent(event: MediaEvent.AdSkip, info: nil, metadata: nil)\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking chapters")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'// ChapterStart\n  let chapterInfo = Media.createChapterObjectWith(name: "chapterName", position: 1, length: 60, startTime: 0)\n  let chapterMetadata = ["segmentType": "Sample Segment type"]\n\n  tracker.trackEvent(event: MediaEvent.ChapterStart, info: chapterInfo, metadata: chapterMetadata)\n\n// ChapterComplete\n  tracker.trackEvent(event: MediaEvent.ChapterComplete, info: nil, metadata: nil)\n\n// ChapterSkip\n  tracker.trackEvent(event: MediaEvent.ChapterSkip, info: nil, metadata: nil)\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking playback events")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"// BufferStart\n   tracker.trackEvent(event: MediaEvent.BufferStart, info: nil, metadata: nil)\n\n// BufferComplete\n   tracker.trackEvent(event: MediaEvent.BufferComplete, info: nil, metadata: nil)\n\n// SeekStart\n   tracker.trackEvent(event: MediaEvent.SeekStart, info: nil, metadata: nil)\n\n// SeekComplete\n   tracker.trackEvent(event: MediaEvent.SeekComplete, info: nil, metadata: nil)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking bitrate change")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"// If the new bitrate value is available provide it to the tracker.\n  let qoeInfo = Media.createQoEObjectWith(bitrate: 500000, startupTime: 2, fps: 24, droppedFrames: 10)\n  tracker.updateQoEObject(qoeInfo)\n\n// Bitrate change\n  tracker.trackEvent(event: MediaEvent.BitrateChange, info: nil, metadata: nil)\n")),(0,i.mdx)("h4",{id:"objective-c-15"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"- (void) trackEvent:(enum AEPEdgeMediaEvent) info:(NSDictionary<NSString *,id> * _Nullable) metadata:(NSDictionary<NSString *,NSString *> * _Nullable)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Examples")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking player states")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"// StateStart\n  NSDictionary* fullScreenState = [AEPMobileEdgeMedia createStateObjectWith:AEPEdgeMediaPlayerState.FULLSCREEN];\n  [tracker trackEvent:AEPEdgeMediaEventStateStart info:fullScreenState metadata:nil];\n\n// StateEnd\n  NSDictionary* fullScreenState = [AEPMobileEdgeMedia createStateObjectWith:AEPEdgeMediaPlayerState.FULLSCREEN];\n  [tracker trackEvent:AEPEdgeMediaEventStateEnd info:fullScreenState metadata:nil];\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking ad breaks")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},'// AdBreakStart\n  NSDictionary *adBreakInfo = [AEPMobileEdgeMedia createAdBreakObjectWith:@"adbreakName" position:1 startTime:0];\n  [tracker trackEvent:AEPEdgeMediaEventAdBreakStart info:adBreakInfo metadata:nil];\n\n// AdBreakComplete\n  [tracker trackEvent:AEPEdgeMediaEventAdBreakComplete info:nil metadata:nil];\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking ads")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},'// AdStart\n  NSDictionary *adInfo = [AEPMobileEdgeMedia createAdObjectWith:@"adName" id:@"adId" position:0 length:30];\n  NSMutableDictionary* adMetadata = [[NSMutableDictionary alloc] init];\n\n// Standard metadata keys provided by adobe.\n  [adMetadata setObject:@"Sample Advertiser" forKey:AEPEdgeAdMetadataKeys.ADVERTISER];\n  [adMetadata setObject:@"Sample Campaign" forKey:AEPEdgeAdMetadataKeys.CAMPAIGN_ID];\n\n// Custom metadata keys\n  [adMetadata setObject:@"Sample Affiliate" forKey:@"affiliate"];\n\n  [tracker trackEvent:AEPEdgeMediaEventAdStart info:adInfo metadata:adMetadata];\n\n// AdComplete\n  [tracker trackEvent:AEPEdgeMediaEventAdComplete info:nil metadata:nil];\n\n// AdSkip\n  [tracker trackEvent:AEPEdgeMediaEventAdSkip info:nil metadata:nil];\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking chapters")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},'// ChapterStart\n  NSDictionary *chapterInfo = [AEPMobileEdgeMedia createChapterObjectWith:@"chapterName" position:1 length:60 startTime:0];\n\n  NSMutableDictionary *chapterMetadata = [[NSMutableDictionary alloc] init];\n  [chapterMetadata setObject:@"Sample Segment type" forKey:@"segmentType"];\n\n  [tracker trackEvent:AEPEdgeMediaEventChapterStart info:chapterInfo metadata:chapterMetadata];\n\n// ChapterComplete\n  [tracker trackEvent:AEPEdgeMediaEventChapterComplete info:nil metadata:nil];\n\n// ChapterSkip\n  [tracker trackEvent:AEPEdgeMediaEventChapterSkip info:nil metadata:nil];\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking playback events")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"// BufferStart\n  [tracker trackEvent:AEPEdgeMediaEventBufferStart info:nil metadata:nil];\n\n// BufferComplete\n  [tracker trackEvent:AEPEdgeMediaEventBufferComplete info:nil metadata:nil];\n\n// SeekStart\n  [tracker trackEvent:AEPEdgeMediaEventSeekStart info:nil metadata:nil];\n\n// SeekComplete\n  [tracker trackEvent:AEPEdgeMediaEventSeekComplete info:nil metadata:nil];\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Tracking bitrate change")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"// If the new bitrate value is available provide it to the tracker.\n  NSDictionary *qoeInfo = [AEPMobileEdgeMedia createQoEObjectWith:50000 startTime:2 fps:24 droppedFrames:10];\n\n// Bitrate change\n  [tracker trackEvent:AEPEdgeMediaEventBitrateChange info:nil metadata:nil];\n")),(0,i.mdx)(c,{platform:"android",api:"update-current-playhead",repeat:"12",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"java-16"},"Java"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"public void updateCurrentPlayhead(int time);\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"tracker.updateCurrentPlayhead(1);\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Live streaming example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"//Calculation for number of seconds since midnight UTC of the day\nint timeFromMidnightInSecond = (int)((System.currentTimeMillis() / 1000) % 86400);\n\ntracker.updateCurrentPlayhead(timeFromMidnightInSecond);\n")),(0,i.mdx)("h4",{id:"kotlin-16"},"Kotlin"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"tracker.updateCurrentPlayhead(1)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Live streaming example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"val timeFromMidnightInSecond = ((System.currentTimeMillis() / 1000) % 86400).toInt()\ntracker.updateCurrentPlayhead(timeFromMidnightInSecond)\n}\n")),(0,i.mdx)(c,{platform:"ios",api:"update-current-playhead",repeat:"12",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"swift-16"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"func updateCurrentPlayhead(time: Int)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"tracker.updateCurrentPlayhead(1)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Live streaming example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"//Calculation for number of seconds since midnight UTC of the day\nlet secondsSince1970: TimeInterval = (Date().timeIntervalSince1970)\nlet timeFromMidnightInSecond = Int(secondsSince1970.truncatingRemainder(dividingBy: 86400))\n\ntracker.updateCurrentPlayhead(time: timeFromMidnightInSecond)\n")),(0,i.mdx)("h4",{id:"objective-c-16"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"- (void) updateCurrentPlayhead:(NSInteger)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"[tracker updateCurrentPlayhead:1];\n")),(0,i.mdx)(c,{platform:"android",api:"update-qoe-object",repeat:"8",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"java-17"},"Java"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"public void updateQoEObject(Map<String, Object> qoeInfo);\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"HashMap<String, Object> qoeInfo = Media.createQoEObject(1000000, 2, 25, 10);\ntracker.updateQoEObject(qoeInfo);\n")),(0,i.mdx)("h4",{id:"kotlin-17"},"Kotlin"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"val qoeInfo = Media.createQoEObject(1000000, 2, 25, 10)\ntracker.updateQoEObject(qoeInfo)\n")),(0,i.mdx)(c,{platform:"ios",api:"update-qoe-object",repeat:"10",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"swift-17"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"func updateQoEObject(qoe: [String: Any])\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"let qoeInfo = Media.createQoEObjectWith(bitrate: 500000, startupTime: 2, fps: 24, droppedFrames: 10)\ntracker.updateQoEObject(qoe: qoeInfo)\n")),(0,i.mdx)("h4",{id:"objective-c-17"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"- (void) updateQoEObject:(NSDictionary<NSString *,id> * _Nonnull)\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"NSDictionary *qoeInfo = [AEPMobileEdgeMedia createQoEObjectWith:50000 startTime:2 fps:24 droppedFrames:10]\n[tracker updateQoEObject:qoeInfo];\n")),(0,i.mdx)(c,{platform:"android",api:"media-type",repeat:"6",mdxType:"Variant"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"public class Media {\n\n  public enum MediaType {\n      /**\n      * Constant defining media type for Video streams\n      */\n      Video,\n\n      /**\n      * Constant defining media type for Audio streams\n      */\n      Audio\n  }\n\n}\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("h4",{id:"java-18"},"Java"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'HashMap<String, Object> mediaInfo = Media.createMediaObject("videoName",\n                                                            "videoId",\n                                                            60,\n                                                            MediaConstants.StreamType.VOD,\n                                                            Media.MediaType.Video)\n')),(0,i.mdx)("h4",{id:"kotlin-18"},"Kotlin"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-kotlin"},'val mediaInfo = Media.createMediaObject("videoName",\n                                        "videoId",\n                                        60,\n                                        MediaConstants.StreamType.VOD,\n                                        Media.MediaType.Video)\n')),(0,i.mdx)(c,{platform:"ios",api:"media-type",repeat:"6",mdxType:"Variant"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"@objc(AEPEdgeMediaType)\npublic enum MediaType: Int, RawRepresentable {\n //Constant defining media type for Video streams\n case Audio\n //Constant defining media type for Audio streams\n case Video\n}\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("h4",{id:"swift-18"},"Swift"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'var mediaObject = Media.createMediaObjectWith(name: "videoName",\n                                                id: "videoId",\n                                            length: 60,\n                                        streamType: MediaConstants.StreamType.VOD,\n                                        mediaType: MediaType.Video)\n')),(0,i.mdx)("h4",{id:"objective-c-18"},"Objective-C"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objc"},'NSDictionary *mediaObject = [AEPMobileEdgeMedia createMediaObjectWith:@"videoName"\n                                                               id:@"videoId"\n                                                               length:60\n                                                           streamType:AEPEdgeMediaStreamType.VOD\n                                                            mediaType:AEPEdgeMediaTypeVideo];\n')),(0,i.mdx)(c,{platform:"android",api:"stream-type",repeat:"6",mdxType:"Variant"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'public class MediaConstants {\n\n  public static final class StreamType {\n      /**\n      * Constant defining stream type for VOD streams\n      */\n      public static final String VOD = "vod";\n\n      /**\n      * Constant defining stream type for Live streams\n      */\n      public static final String LIVE = "live";\n\n      /**\n      * Constant defining stream type for Linear streams\n      */\n      public static final String LINEAR = "linear";\n\n      /**\n      * Constant defining stream type for Podcast streams\n      */\n      public static final String PODCAST = "podcast";\n\n      /**\n      * Constant defining stream type for Audiobook streams\n      */\n      public static final String AUDIOBOOK = "audiobook";\n\n      /**\n      * Constant defining stream type for AOD streams\n      */\n      public static final String AOD = "aod";\n  }\n\n}\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("h4",{id:"java-19"},"Java"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'HashMap<String, Object> mediaInfo = Media.createMediaObject("videoName",\n                                                            "videoId",\n                                                            60,\n                                                            MediaConstants.StreamType.VOD,\n                                                            Media.MediaType.Video)\n')),(0,i.mdx)("h4",{id:"kotlin-19"},"Kotlin"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-kotlin"},'val mediaInfo = Media.createMediaObject("videoName",\n                                        "videoId",\n                                        60,\n                                        MediaConstants.StreamType.VOD,\n                                        Media.MediaType.Video)\n')),(0,i.mdx)(c,{platform:"ios",api:"stream-type",repeat:"6",mdxType:"Variant"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'public class MediaConstants: NSObject {\n  @objc(AEPEdgeMediaStreamType)\n  public class StreamType: NSObject {\n     // Constant defining stream type for VOD streams.\n        public static let VOD = "vod"\n     // Constant defining stream type for Live streams.\n        public static let LIVE = "live"\n     // Constant defining stream type for Linear streams.\n        public static let LINEAR = "linear"\n     // Constant defining stream type for Podcast streams.\n        public static let PODCAST = "podcast"\n     // Constant defining stream type for Audiobook streams.\n        public static let AUDIOBOOK = "audiobook"\n     // Constant defining stream type for AOD streams.\n        public static let AOD = "aod"\n    }\n}\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("h4",{id:"swift-19"},"Swift"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'var mediaObject = Media.createMediaObjectWith(name: "videoName",\n                                                id: "videoId",\n                                            length: 60,\n                                        streamType: MediaConstants.StreamType.VOD,\n                                         mediaType: MediaType.Video)\n')),(0,i.mdx)("h4",{id:"objective-c-19"},"Objective-C"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objc"},'NSDictionary *mediaObject = [AEPMobileEdgeMedia createMediaObjectWith:@"videoName"\n                                                               id:@"videoId"\n                                                           length:60\n                                                       streamType:AEPEdgeMediaStreamType.VOD\n                                                        mediaType:AEPEdgeMediaTypeVideo];\n')),(0,i.mdx)(c,{platform:"android",api:"standard-video-constants",repeat:"6",mdxType:"Variant"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'public class MediaConstants {\n\n  public static final class VideoMetadataKeys {\n    public static final String AD_LOAD = "adLoad";\n    public static final String ASSET_ID = "assetID";\n    public static final String AUTHORIZED = "isAuthenticated";\n    public static final String DAY_PART = "dayPart";\n    public static final String EPISODE = "episode";\n    public static final String FEED = "feed";\n    public static final String FIRST_AIR_DATE = "firstAirDate";\n    public static final String FIRST_DIGITAL_DATE = "firstDigitalDate";\n    public static final String GENRE = "genre";\n    public static final String MVPD = "mvpd";\n    public static final String NETWORK = "network";\n    public static final String ORIGINATOR = "originator";\n    public static final String SEASON = "season";\n    public static final String SHOW = "show";\n    public static final String SHOW_TYPE = "showType";\n    public static final String STREAM_FORMAT = "streamFormat";\n    public static final String RATING = "rating";\n  }\n\n}\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("h4",{id:"java-20"},"Java"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'HashMap<String, Object> mediaInfo = Media.createMediaObject("videoName",\n                                                            "videoId",\n                                                            60,\n                                                            MediaConstants.StreamType.VOD,\n                                                            Media.MediaType.Video)\n\nHashMap<String, String> videoMetadata = new HashMap<String, String>();\n\n// Standard Video Metadata\nvideoMetadata.put(MediaConstants.VideoMetadataKeys.SHOW, "Sample Show");\nvideoMetadata.put(MediaConstants.VideoMetadataKeys.SEASON, "Sample Season");\n\ntracker.trackSessionStart(mediaInfo, videoMetadata);\n')),(0,i.mdx)("h4",{id:"kotlin-20"},"Kotlin"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-kotlin"},'val mediaInfo = Media.createMediaObject("videoName",\n                                        "videoId",\n                                        60,\n                                        MediaConstants.StreamType.VOD,\n                                        Media.MediaType.Video)\n\nval videoMetadata = mutableMapOf(MediaConstants.VideoMetadataKeys.SHOW to "Sample Show",\n                                 MediaConstants.VideoMetadataKeys.SEASON to "Sample Season")\n\ntracker.trackSessionStart(mediaInfo, videoMetadata)\n')),(0,i.mdx)(c,{platform:"ios",api:"standard-video-constants",repeat:"6",mdxType:"Variant"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'public class MediaConstants: NSObject {\n  @objc(AEPEdgeMediaVideoMetadataKeys)\n  public class VideoMetadataKeys: NSObject {\n        public static let AD_LOAD = "adLoad"\n        public static let ASSET_ID = "assetID"\n        public static let AUTHORIZED = "isAuthenticated"\n        public static let DAY_PART = "dayPart"\n        public static let EPISODE = "episode"\n        public static let FEED = "feed"\n        public static let FIRST_AIR_DATE = "firstAirDate"\n        public static let FIRST_DIGITAL_DATE = "firstDigitalDate"\n        public static let GENRE = "genre"\n        public static let MVPD = "mvpd"\n        public static let NETWORK = "network"\n        public static let ORIGINATOR = "originator"\n        public static let RATING = "rating"\n        public static let SEASON = "season"\n        public static let SHOW = "show"\n        public static let SHOW_TYPE = "showType"\n        public static let STREAM_FORMAT = "streamFormat"\n    }\n}\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("h4",{id:"swift-20"},"Swift"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'var mediaInfo = Media.createMediaObjectWith(name: "videoName", id: "videoId", length: 60, streamType: MediaConstants.StreamType.VOD, mediaType: MediaType.Video)\n\nvar videoMetadata: [String: String] = [:]\n// Standard Video Metadata\nvideoMetadata[MediaConstants.VideoMetadataKeys.SHOW] = "Sample Show"\nvideoMetadata[MediaConstants.VideoMetadataKeys.SEASON] = "Sample Season"\n\ntracker.trackSessionStart(info: mediaInfo, metadata: videoMetadata)\n')),(0,i.mdx)("h4",{id:"objective-c-20"},"Objective-C"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objc"},'NSDictionary *mediaInfo = [AEPMobileEdgeMedia createMediaObjectWith:@"videoName" id:@"videoId" length:60 streamType:AEPEdgeMediaStreamType.VOD mediaType:AEPEdgeMediaTypeVideo];\n\nNSMutableDictionary *videoMetadata = [[NSMutableDictionary alloc] init];\n// Standard Video Metadata\n[videoMetadata setObject:@"Sample Show" forKey:AEPEdgeMediaVideoMetadataKeys.SHOW];\n[videoMetadata setObject:@"Sample Season" forKey:AEPEdgeMediaVideoMetadataKeys.SEASON];\n\n[tracker trackSessionStart:mediaInfo metadata:videoMetadata];\n')),(0,i.mdx)(c,{platform:"android",api:"standard-audio-constants",repeat:"6",mdxType:"Variant"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'public class MediaConstants {\n\n  public static final class AudioMetadataKeys {\n    public static final String ALBUM = "album";\n    public static final String ARTIST = "artist";\n    public static final String AUTHOR = "author";\n    public static final String LABEL = "label";\n    public static final String PUBLISHER = "publisher";\n    public static final String STATION = "station";\n  }\n\n}\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("h4",{id:"java-21"},"Java"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'HashMap<String, Object> mediaInfo = Media.createMediaObject("videoName",\n                                                            "videoId",\n                                                            60,\n                                                            MediaConstants.StreamType.AOD,\n                                                            Media.MediaType.Audio)\n\nHashMap<String, String> audioMetadata = new HashMap<String, String>();\n\n// Standard Video Metadata\naudioMetadata.put(MediaConstants.AudioMetadataKeys.ARTIST, "Sample Artist");\naudioMetadata.put(MediaConstants.AudioMetadataKeys.ALBUM, "Sample Album");\n\ntracker.trackSessionStart(mediaInfo, audioMetadata);\n')),(0,i.mdx)("h4",{id:"kotlin-21"},"Kotlin"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-kotlin"},'val mediaInfo = Media.createMediaObject("videoName",\n                                        "videoId",\n                                        60,\n                                        MediaConstants.StreamType.AOD,\n                                        Media.MediaType.Audio)\n\nval audioMetadata = mutableMapOf(MediaConstants.AudioMetadataKeys.ARTIST to "Sample Artist",\n                                 MediaConstants.AudioMetadataKeys.ALBUM to "Sample Album")\n\ntracker.trackSessionStart(mediaInfo, audioMetadata)\n')),(0,i.mdx)(c,{platform:"ios",api:"standard-audio-constants",repeat:"6",mdxType:"Variant"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'public class MediaConstants: NSObject {\n  @objc(AEPEdgeMediaAudioMetadataKeys)\n  public class AudioMetadataKeys: NSObject {\n      public static let ALBUM = "album"\n      public static let ARTIST = "artist"\n      public static let AUTHOR = "author"\n      public static let LABEL = "label"\n      public static let PUBLISHER = "publisher"\n      public static let STATION = "station"\n    }\n}\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("h4",{id:"swift-21"},"Swift"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'var audioObject = Media.createMediaObjectWith(name: "audioName", id: "audioId", length: 30, streamType: MediaConstants.StreamType.AOD, mediaType: MediaType.AUDIO)\n\nvar audioMetadata: [String: String] = [:]\n// Standard Audio Metadata\naudioMetadata[MediaConstants.AudioMetadataKeys.ARTIST] = "Sample Artist"\naudioMetadata[MediaConstants.AudioMetadataKeys.ALBUM] = "Sample Album"\n\ntracker.trackSessionStart(info: audioObject, metadata: audioMetadata)\n')),(0,i.mdx)("h4",{id:"objective-c-21"},"Objective-C"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objc"},'NSDictionary *audioObject = [AEPMobileEdgeMedia createMediaObjectWith:@"audioName" id:@"audioid" length:30 streamType:AEPEdgeMediaStreamType.AOD mediaType:AEPEdgeMediaTypeAudio];\n\nNSMutableDictionary *audioMetadata = [[NSMutableDictionary alloc] init];\n// Standard Audio Metadata\n[audioMetadata setObject:@"Sample Artist" forKey:AEPEdgeMediaAudioMetadataKeys.ARTIST];\n[audioMetadata setObject:@"Sample Album" forKey:AEPEdgeMediaAudioMetadataKeys.ALBUM];\n\n[tracker trackSessionStart:audioObject metadata:audioMetadata];\n')),(0,i.mdx)(c,{platform:"android",api:"standard-ad-constants",repeat:"6",mdxType:"Variant"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'public class MediaConstants {\n\n  public static final class AdMetadataKeys {\n    public static final String ADVERTISER = "advertiser";\n    public static final String CAMPAIGN_ID = "campaignID";\n    public static final String CREATIVE_ID = "creativeID";\n    public static final String CREATIVE_URL = "creativeURL";\n    public static final String PLACEMENT_ID = "placementID";\n    public static final String SITE_ID = "siteID";\n  }\n\n}\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("h4",{id:"java-22"},"Java"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'HashMap<String, Object> adInfo = Media.createAdObject("adName", "adId", 1, 15);\n\nHashMap<String, String> adMetadata = new HashMap<String, String>();\n\n// Standard Video Metadata\nadMetadata.put(MediaConstants.AdMetadataKeys.ADVERTISER, "Sample Advertiser");\nadMetadata.put(MediaConstants.AdMetadataKeys.CAMPAIGN_ID, "Sample Campaign");\n\ntracker.trackEvent(Media.Event.AdStart, adInfo, adMetadata);\n')),(0,i.mdx)("h4",{id:"kotlin-22"},"Kotlin"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'val adInfo = Media.createAdObject("adName", "adId", 1, 15)\nval adMetadata = mutableMapOf(MediaConstants.AdMetadataKeys.ADVERTISER to "Sample Advertiser",\n                              MediaConstants.AdMetadataKeys.CAMPAIGN_ID to "Sample Campaign")\n\n\ntracker.trackEvent(Media.Event.AdStart, adInfo, adMetadata)\n')),(0,i.mdx)(c,{platform:"ios",api:"standard-ad-constants",repeat:"6",mdxType:"Variant"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'public class MediaConstants: NSObject {\n  @objc(AEPEdgeAdMetadataKeys)\n  public class AdMetadataKeys: NSObject {\n      public static let ADVERTISER = "advertiser"\n      public static let CAMPAIGN_ID = "campaignID"\n      public static let CREATIVE_ID = "creativeID"\n      public static let CREATIVE_URL = "creativeURL"\n      public static let PLACEMENT_ID = "placementID"\n      public static let SITE_ID = "siteID"\n    }\n}\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("h4",{id:"swift-22"},"Swift"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'let adInfo = Media.createObjectWith(name: "adName", id: "adId", position: 0, length: 30)\nvar adMetadata: [String: String] = [:]\n// Standard Ad Metadata\nadMetadata[MediaConstants.AdMetadataKeys.ADVERTISER] = "Sample Advertiser"\nadMetadata[MediaConstants.AdMetadataKeys.CAMPAIGN_ID] = "Sample Campaign"\n\ntracker.trackEvent(event: MediaEvent.AdStart, info: adInfo, metadata: adMetadata)\n')),(0,i.mdx)("h4",{id:"objective-c-22"},"Objective-C"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objc"},'NSDictionary *adInfo = [AEPMobileEdgeMedia createAdObjectWith:@"adName" id:@"adId" position:0 length:30];\n\nNSMutableDictionary *adMetadata = [[NSMutableDictionary alloc] init];\n// Standard Ad Metadata\n[adMetadata setObject:@"Sample Advertiser" forKey:AEPEdgeAdMetadataKeys.ADVERTISER];\n[adMetadata setObject:@"Sample Campaign" forKey:AEPEdgeAdMetadataKeys.CAMPAIGN_ID];\n\n[tracker trackEvent:AEPEdgeMediaEventAdStart info:adInfo metadata:adMetadata];\n')),(0,i.mdx)(c,{platform:"android",api:"player-state-constants",repeat:"6",mdxType:"Variant"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'public class MediaConstants {\n\n  public static final class PlayerState {\n    public static final String FULLSCREEN = "fullscreen";\n    public static final String PICTURE_IN_PICTURE = "pictureInPicture";\n    public static final String CLOSED_CAPTION = "closeCaption";\n    public static final String IN_FOCUS = "inFocus";\n    public static final String MUTE = "mute";\n  }\n\n}\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("h4",{id:"java-23"},"Java"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"HashMap<String, Object> fullScreenState = Media.createStateObject(MediaConstants.PlayerState.FULLSCREEN);\n")),(0,i.mdx)("h4",{id:"kotlin-23"},"Kotlin"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"val fullScreenState = Media.createStateObject(MediaConstants.PlayerState.FULLSCREEN)\n")),(0,i.mdx)(c,{platform:"ios",api:"player-state-constants",repeat:"6",mdxType:"Variant"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'public class MediaConstants: NSObject {\n  @objc(AEPEdgeMediaPlayerState)\n  public class PlayerState: NSObject {\n        public static let FULLSCREEN = "fullscreen"\n        public static let PICTURE_IN_PICTURE = "pictureInPicture"\n        public static let CLOSED_CAPTION = "closeCaption"\n        public static let IN_FOCUS = "inFocus"\n        public static let MUTE = "mute"\n    }\n}\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("h4",{id:"swift-23"},"Swift"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"let inFocusState = Media.createStateObjectWith(stateName: MediaConstants.PlayerState.IN_FOCUS)\ntracker.trackEvent(event: MediaEvent.StateStart, info: inFocusState, metadata: nil)\n")),(0,i.mdx)("h4",{id:"objective-c-23"},"Objective-C"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objc"},"NSDictionary* inFocusState = [AEPMobileEdgeMedia createStateObjectWith:AEPEdgeMediaPlayerState.IN_FOCUS];\n[tracker trackEvent:AEPEdgeMediaEventStateStart info:muteState metadata:nil];\n")),(0,i.mdx)(c,{platform:"android",api:"media-events",repeat:"6",mdxType:"Variant"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"public class Media {\n\n    /**\n    * These enumeration values define the type of a tracking event\n    */\n    public enum Event {\n      /**\n      * Constant defining event type for AdBreak start\n      */\n      AdBreakStart,\n\n      /**\n      * Constant defining event type for AdBreak complete\n      */\n      AdBreakComplete,\n\n      /**\n      * Constant defining event type for Ad start\n      */\n      AdStart,\n\n      /**\n      * Constant defining event type for Ad complete\n      */\n      AdComplete,\n\n      /**\n      * Constant defining event type for Ad skip\n      */\n      AdSkip,\n\n      /**\n      * Constant defining event type for Chapter start\n      */\n      ChapterStart,\n\n      /**\n      * Constant defining event type for Chapter complete\n      */\n      ChapterComplete,\n\n      /**\n      * Constant defining event type for Chapter skip\n      */\n      ChapterSkip,\n\n      /**\n      * Constant defining event type for Seek start\n      */\n      SeekStart,\n\n      /**\n      * Constant defining event type for Seek complete\n      */\n      SeekComplete,\n\n      /**\n      * Constant defining event type for Buffer start\n      */\n      BufferStart,\n\n      /**\n      * Constant defining event type for Buffer complete\n      */\n      BufferComplete,\n\n      /**\n      * Constant defining event type for change in Bitrate\n      */\n      BitrateChange,\n\n      /**\n      * Constant defining event type for State start\n      */\n      StateStart,\n\n      /**\n      * Constant defining event type for State end\n      */\n      StateEnd\n  }\n\n}\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Examples")),(0,i.mdx)("h4",{id:"java-24"},"Java"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"tracker.trackEvent(Media.Event.BitrateChange, null, null);\n")),(0,i.mdx)("h4",{id:"kotlin-24"},"Kotlin"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"tracker.trackEvent(Media.Event.BitrateChange, null, null)\n")),(0,i.mdx)(c,{platform:"ios",api:"media-events",repeat:"6",mdxType:"Variant"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"@objc(AEPEdgeMediaEvent)\npublic enum MediaEvent: Int, RawRepresentable {\n // event type for AdBreak start\n    case AdBreakStart\n // event type for AdBreak Complete\n    case AdBreakComplete\n // event type for Ad Start\n    case AdStart\n // event type for Ad Complete\n    case AdComplete\n // event type for Ad Skip\n    case AdSkip\n // event type for Chapter Start\n    case ChapterStart\n // event type for Chapter Complete\n    case ChapterComplete\n // event type for Chapter Skip\n    case ChapterSkip\n // event type for Seek Start\n    case SeekStart\n // event type for Seek Complete\n    case SeekComplete\n // event type for Buffer Start\n    case BufferStart\n // event type for Buffer Complete\n    case BufferComplete\n // event type for change in Bitrate\n    case BitrateChange\n // event type for Player State Start\n    case StateStart\n // event type for Player State End\n    case StateEnd\n}\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("h4",{id:"swift-24"},"Swift"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"tracker.trackEvent(event: MediaEvent.BitrateChange, info: nil, metadata: nil)\n")),(0,i.mdx)("h4",{id:"objective-c-24"},"Objective-C"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objc"},"[tracker trackEvent:AEPEdgeMediaEventBitrateChange info:nil metadata:nil];\n")),(0,i.mdx)(c,{platform:"android",api:"media-resume",repeat:"8",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"java-25"},"Java"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"public class MediaConstants {\n\n  public static final class MediaObjectKey {\n      /**\n      * Constant defining explicit media resumed property. Set this to true on MediaObject if resuming a previously closed session.\n      */\n      public static final String RESUMED;\n  }\n\n}\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("h4",{id:"java-26"},"Java"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'HashMap<String, Object> mediaInfo = Media.createMediaObject("mediaName", "mediaId", 60, MediaConstants.StreamType.VOD, Media.MediaType.Video);\n\n// Attach media resumed information.\nmediaInfo.put(MediaConstants.MediaObjectKey.RESUMED, true);\n\ntracker.trackSessionStart(mediaInfo, null);\n')),(0,i.mdx)("h4",{id:"kotlin-25"},"Kotlin"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'val mediaInfo = Media.createMediaObject("mediaName", "mediaId", 60, MediaConstants.StreamType.VOD, Media.MediaType.Video)\n\n// Attach media resumed information.\nmediaInfo[MediaConstants.MediaObjectKey.RESUMED] = true\n\ntracker.trackSessionStart(mediaInfo, null)\n')),(0,i.mdx)(c,{platform:"ios",api:"media-resume",repeat:"10",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"swift-25"},"Swift"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'public class MediaConstants: NSObject {\n @objc(AEPEdgeMediaObjectKey)\n public class MediaObjectKey: NSObject {\n        public static let RESUMED = "media.resumed"\n    }\n}\n')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},'var mediaObject = Media.createMediaObjectWith(name: "videoName", id: "videoId", length: 60, streamType: MediaConstants.StreamType.VOD, mediaType: MediaType.Video)\nmediaObject[MediaConstants.MediaObjectKey.RESUMED] = true\n\ntracker.trackSessionStart(info: mediaObject, metadata: nil)\n')),(0,i.mdx)("h4",{id:"objective-c-25"},"Objective-C"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Syntax")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"@interface AEPEdgeMediaObjectKey : NSObject\n+ (NSString * _Nonnull)RESUMED\n")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Example")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},'NSDictionary *mediaObject = [AEPMobileEdgeMedia createMediaObjectWith:@"videoName" id:@"videoId" length:60 streamType:AEPEdgeMediaStreamType.VOD mediaType:AEPEdgeMediaTypeVideo];\n\n// Attach media resumed information.\nNSMutableDictionary *obj  = [mediaObject mutableCopy];\n[obj setObject:@YES forKey:AEPEdgeMediaObjectKey.RESUMED];\n\n[tracker trackSessionStart:obj metadata:nil];\n')))}x.isMDXComponent=!0}}]);
//# sourceMappingURL=b62798f9332687b20554b1737f615b6a288a6074-a0ea80da1c73a1ed2d65.js.map