{"version":3,"file":"component---src-pages-documentation-adobe-campaign-classic-tabs-index-md-eec4b44ec6c0061a5b59.js","mappings":"4OAUsBA,E,wEAFTC,EAAe,CAAC,EAOvBC,GALgBF,EAKQ,UALA,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,4EAC5B,eAASG,EACjB,GAGKG,EAAc,CAClBL,aAAAA,GAEIM,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGP,GACF,YACD,OAAO,SAACI,GAAD,UAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,eAG5E,SAACT,EAAD,CAASU,SAAS,UAAUC,KAAK,MAAMC,OAAO,IAAIH,QAAQ,aAC1D,eACE,GAAM,QADR,SAGA,oBACE,eAAII,WAAW,MAAf,qFAEF,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBADZ,uEAIL,4EAA6D,cAAGA,WAAW,IACvE,KAAQ,sDADiD,YAA7D,qBAGA,eACE,MAAS,IAET,eAAIA,WAAW,MAAf,+FAEF,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBADZ,wGAKL,SAACb,EAAD,CAASU,SAAS,UAAUC,KAAK,MAAMC,OAAO,IAAIH,QAAQ,aAC1D,qQACA,SAACT,EAAD,CAASU,SAAS,UAAUC,KAAK,MAAMC,OAAO,IAAIH,QAAQ,aAC1D,oBACE,eAAII,WAAW,MAAf,iCAAqD,cAAGA,WAAW,KAC/D,KAAQ,2BADyC,eAArD,iCAIF,mDAAoC,cAAGA,WAAW,IAC9C,KAAQ,iFADwB,eAApC,SAEiC,cAAGA,WAAW,IAC3C,KAAQ,4FADqB,oBAFjC,iEAI8F,uBAAYA,WAAW,KAAvB,WAJ9F,MAKA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBADZ,mEAML,eACE,MAAS,IAET,eAAIA,WAAW,MAAf,mFAEF,mBAAG,mBAAQA,WAAW,KAAnB,iBACH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBADZ,8FAML,mBAAG,mBAAQA,WAAW,KAAnB,WACH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBADZ,+EAML,SAACb,EAAD,CAASU,SAAS,UAAUC,KAAK,WAAWC,OAAO,IAAIH,QAAQ,aAC/D,oCAAqB,uBAAYI,WAAW,KAAvB,YAArB,qEACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBADZ,qfAqBL,SAACb,EAAD,CAASU,SAAS,UAAUC,KAAK,WAAWC,OAAO,IAAIH,QAAQ,aAC/D,qQACA,SAACT,EAAD,CAASU,SAAS,UAAUC,KAAK,WAAWC,OAAO,IAAIH,QAAQ,aAC/D,oCAAqB,uBAAYI,WAAW,KAAvB,8CAArB,qEACA,eACE,GAAM,SADR,UAGA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBADZ,2TASL,eACE,GAAM,eADR,gBAGA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBADZ,4RAWR,CAEDN,EAAWO,gBAAiB,C","sources":["webpack://dev-site-documentation-template/./src/pages/documentation/adobe-campaign-classic/tabs/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/aep-mobile-sdkdocs/aep-mobile-sdkdocs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Variant = makeShortcode(\"Variant\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <Variant platform=\"android\" task=\"add\" repeat=\"6\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java\"\n    }}>{`Java`}</h4>\n    <ol>\n      <li parentName=\"ol\">{`Add the Campaign Classic extension to your project using the app's Gradle file.`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`implementation 'com.adobe.marketing.mobile:campaignclassic:1.+'\n`}</code></pre>\n    <p>{`or you can manually include the binaries found in the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/Adobe-Marketing-Cloud/acp-sdks/\"\n      }}>{`acp-sdks`}</a>{` repo on GitHub.`}</p>\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`Import the Campaign Classic and Lifecycle extensions in your application's main activity.`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import com.adobe.marketing.mobile.CampaignClassic;\nimport com.adobe.marketing.mobile.Lifecycle;\n`}</code></pre>\n    <Variant platform=\"ios-aep\" task=\"add\" repeat=\"1\" mdxType=\"Variant\" />\n    <p>{`Adobe Campaign Classic has not yet been released as an AEP 3.x Swift extension. Please reach out to your Adobe customer account manager if you have any questions or would like to express interest in the AEP 3.x Campaign Classic extension.`}</p>\n    <Variant platform=\"ios-acp\" task=\"add\" repeat=\"8\" mdxType=\"Variant\" />\n    <ol>\n      <li parentName=\"ol\">{`Add the Campaign Classic and `}<a parentName=\"li\" {...{\n          \"href\": \"../mobile-core/index.md\"\n        }}>{`Mobile Core`}</a>{` libraries to your project.`}</li>\n    </ol>\n    <p>{`You can manually include the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/Adobe-Marketing-Cloud/acp-sdks/releases/tag/v1.0.1-ACPCore\"\n      }}>{`Mobile Core`}</a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/Adobe-Marketing-Cloud/acp-sdks/releases/tag/v1.0.0-ACPCampaignClassic\"\n      }}>{`Campaign Classic`}</a>{` libraries found in Github or add the following pods to your `}<inlineCode parentName=\"p\">{`Podfile`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-pod\"\n      }}>{`pod 'ACPCampaignClassic'\npod 'ACPLifecycle'\npod 'ACPCore'\n`}</code></pre>\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`In the Xcode project, import the Mobile Core and Campaign Classic extensions:`}</li>\n    </ol>\n    <p><strong parentName=\"p\">{`Objective-C`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`   #import \"ACPCore.h\"\n   #import \"ACPCampaignClassic.h\"\n   #import \"ACPLifecycle.h\"\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Swift`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`   import ACPCore\n   import ACPCampaignClassic\n   import ACPLifecycle\n`}</code></pre>\n    <Variant platform=\"android\" task=\"register\" repeat=\"2\" mdxType=\"Variant\" />\n    <p>{`In your app's `}<inlineCode parentName=\"p\">{`OnCreate`}</inlineCode>{` method, register the Campaign Classic and Lifecycle extensions:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class CampaignClassicTestApp extends Application {\n\n    @Override\n    public void onCreate() {\n        super.onCreate();\n        MobileCore.setApplication(this);\n        MobileCore.setLogLevel(LoggingMode.VERBOSE);\n\n        try {\n            CampaignClassic.registerExtension();\n            Lifecycle.registerExtension();\n            MobileCore.start(null);\n        } catch (Exception e) {\n            Log.e(\"CampaignClassicTestApp\", e.getMessage());\n        }\n\n    }\n}\n`}</code></pre>\n    <Variant platform=\"ios-aep\" task=\"register\" repeat=\"1\" mdxType=\"Variant\" />\n    <p>{`Adobe Campaign Classic has not yet been released as an AEP 3.x Swift extension. Please reach out to your Adobe customer account manager if you have any questions or would like to express interest in the AEP 3.x Campaign Classic extension.`}</p>\n    <Variant platform=\"ios-acp\" task=\"register\" repeat=\"5\" mdxType=\"Variant\" />\n    <p>{`In your app's `}<inlineCode parentName=\"p\">{`application:didFinishLaunchingWithOptions:`}</inlineCode>{` method, register the Campaign Classic and Lifecycle extensions:`}</p>\n    <h4 {...{\n      \"id\": \"swift\"\n    }}>{`Swift`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {\n   ACPCampaignClassic.registerExtension();\n   ACPLifecycle.registerExtension();\n  // Override point for customization after application launch.\n  return true;\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c\"\n    }}>{`Objective-C`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n    [ACPCampaignClassic registerExtension];\n    [ACPLifecycle registerExtension];\n  // Override point for customization after application launch.\n  return YES;\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","Variant","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","platform","task","repeat","parentName","isMDXComponent"],"sourceRoot":""}