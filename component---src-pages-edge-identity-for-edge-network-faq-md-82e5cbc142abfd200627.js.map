{"version":3,"file":"component---src-pages-edge-identity-for-edge-network-faq-md-82e5cbc142abfd200627.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/pages/edge/identity-for-edge-network/faq.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/aep-mobile-sdkdocs/aep-mobile-sdkdocs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nimport Tabs from './tabs/faq.md';\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst TabsBlock = makeShortcode(\"TabsBlock\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"frequently-asked-questions\"\n    }}>{`Frequently asked questions`}</h1>\n    <h2 {...{\n      \"id\": \"q-i-am-using-edge-and-adobe-solutions-extensions-which-identity-extension-should-i-install-and-register\"\n    }}>{`Q: I am using Edge and Adobe Solutions extensions, which Identity extension should I install and register?`}</h2>\n    <p>{`A: Both.`}</p>\n    <p>{`When using both Adobe Experience Platform Edge and Adobe Solutions extensions, both Identity for Edge Network and Identity for Experience Cloud ID Service extensions can be registered with the Mobile SDK at the same time.`}</p>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`The following instructions are for configuring an application using both Edge Network and Adobe Solutions mobile extensions. If an application will include only Adobe Experience Platform Edge extensions, follow the instructions `}<a parentName=\"p\" {...{\n        \"href\": \"./index.md#download-and-import-the-identity-extension\"\n      }}>{`here`}</a>{`.`}</p>\n    <h3 {...{\n      \"id\": \"download-and-import-the-identity-and-identity-for-edge-network-extensions\"\n    }}>{`Download and import the Identity and Identity for Edge Network extensions`}</h3>\n    <TabsBlock orientation=\"horizontal\" slots=\"heading, content\" repeat=\"2\" mdxType=\"TabsBlock\" />\n    <p>{`Android`}</p>\n    <Tabs query=\"platform=android&task=download\" mdxType=\"Tabs\" />\n    <p>{`iOS`}</p>\n    <Tabs query=\"platform=ios&task=download\" mdxType=\"Tabs\" />\n    <h3 {...{\n      \"id\": \"register-the-identity-and-identity-for-edge-network-extensions-with-mobile-core\"\n    }}>{`Register the Identity and Identity for Edge Network extensions with Mobile Core`}</h3>\n    <TabsBlock orientation=\"horizontal\" slots=\"heading, content\" repeat=\"2\" mdxType=\"TabsBlock\" />\n    <p>{`Android`}</p>\n    <Tabs query=\"platform=android&task=register\" mdxType=\"Tabs\" />\n    <p>{`iOS`}</p>\n    <Tabs query=\"platform=ios&task=register\" mdxType=\"Tabs\" />\n    <h2 {...{\n      \"id\": \"q-will-an-existing-experience-cloud-id-ecid-migrate-to-the-identity-for-edge-network-extension\"\n    }}>{`Q: Will an existing Experience Cloud ID (ECID) migrate to the Identity for Edge Network extension?`}</h2>\n    <p>{`A: Yes.`}</p>\n    <p>{`If the application previously installed the Identity for Experience Cloud ID Service extension and upgrades to the Identity for Edge Network extension, the existing ECID value is migrated to the Identity for Edge Network extension on first launch of the application.`}</p>\n    <p>{`Note, however, if the Mobile SDK's privacy status was set to `}<inlineCode parentName=\"p\">{`optedOut`}</inlineCode>{` at the time the application is upgraded, the Identity for Experience Cloud ID Service extension will not have an ECID, as it was cleared. In this case, the Identity for Edge Network extension will generate a new ECID.`}</p>\n    <h2 {...{\n      \"id\": \"q-what-is-the-experience-cloud-id-ecid-used-by-the-sdk-when-using-both-aep-edge-extensions-and-adobe-solutions-extensions\"\n    }}>{`Q: What is the Experience Cloud ID (ECID) used by the SDK when using both AEP Edge extensions and Adobe Solutions extensions?`}</h2>\n    <p>{`A: The Identity for Edge Network extension and the Identity for Experience Cloud ID Service extension each manage their own ECID. However, the two ECIDs are synced as part of the XDM IdentityMap.`}</p>\n    <p>{`At first launch of the application after upgrading to the Identity for Edge Network extension, the existing ECID from the Identity for Experience Cloud ID Service extension is migrated to the Identity for Edge Network extension. In this case both extensions will have the same ECID value.`}</p>\n    <p>{`The `}<a parentName=\"p\" {...{\n        \"href\": \"./api-reference.md#resetidentities\"\n      }}>{`resetIdentities`}</a>{` API causes the Identity for Edge Network extension and the Identity for Experience Cloud ID Service extension to independently generate new ECID values. After calling this API, the ECID used by each identity extension will be different.`}</p>\n    <p>{`Changing the privacy status to `}<inlineCode parentName=\"p\">{`optedOut`}</inlineCode>{` will clear the ECID value used by the Identity for Experience Cloud ID Service extension. Changing the privacy status back to `}<inlineCode parentName=\"p\">{`optedIn`}</inlineCode>{` will generate a new ECID used by the Identity for Experience Cloud ID Service extension. Privacy status changes do not change the ECID used by the Identity for Edge Network extension. Changing the privacy status will cause the ECID used by each identity extension to be different.`}</p>\n    <p>{`When each identity extension has a different ECID, the Identity for Edge Network extension will include the Identity for Experience Cloud ID Service ECID in its `}<a parentName=\"p\" {...{\n        \"href\": \"./api-reference.md#identitymap\"\n      }}>{`IdentityMap`}</a>{`, and so the Adobe Experience Platform Identity Service will link the the two ECIDs in the customer's Identity Graph.`}</p>\n    <p>{`The following example shows an IdentityMap containing the ECIDs from both Identity for Edge Network extension and Identity for Experience Cloud ID Service extension. The ECID from the Identity for Edge Network extension is always listed first in the list of ECIDs.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`\"identityMap\" : {\n      \"ECID\" : [\n        {\n          \"id\" : \"73586628797489658169123381027155647197\",\n          \"authenticatedState\" : \"ambiguous\",\n          \"primary\" : false\n        },\n        {\n          \"id\" : \"81117527655405132265917409409236407340\",\n          \"authenticatedState\" : \"ambiguous\",\n          \"primary\" : false\n        }\n      ]\n    }\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"q-i-set-privacy-status-to-opted-out-why-do-i-see-an-ecid-value-when-calling-identitygetexperiencecloudid\"\n    }}>{`Q: I set privacy status to opted out, why do I see an ECID value when calling `}<inlineCode parentName=\"h2\">{`Identity.getExperienceCloudId()`}</inlineCode>{`?`}</h2>\n    <p>{`A: The Identity for Edge Network extension does not change its ECID based on privacy status changes.`}</p>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`The Identity for Edge Network extension and the Identity for Experience Cloud ID Service extension each manage their own ECID value and are generated independently of each other.`}</p>\n    <p>{`The Identity for Edge Network extension does not clear its stored identities or regenerate the ECID due to privacy status changes. Instead, use the `}<a parentName=\"p\" {...{\n        \"href\": \"./api-reference.md#resetidentities\"\n      }}>{`resetIdentities`}</a>{` API. Note this API does not clear the ECID but instead generates a new ECID.`}</p>\n    <p>{`Each identity extension has its own API to retrieve their respective ECIDs as well. Use `}<a parentName=\"p\" {...{\n        \"href\": \"./api-reference.md#getexperiencecloudid\"\n      }}>{`Identity.getExperienceCloudId`}</a>{` to get the Identity for Edge Network extension's ECID, and `}<a parentName=\"p\" {...{\n        \"href\": \"../mobile-core/identity/api-reference.md#getexperiencecloudid\"\n      }}>{`Identity.getExperienceCloudId`}</a>{` to get the Identity for Experience Cloud ID Service extension's ECID.`}</p>\n    <h2 {...{\n      \"id\": \"q-how-can-i-get-all-the-identifiers-used-by-the-sdk-when-using-both-edge-extensions-and-adobe-solutions-extensions\"\n    }}>{`Q: How can I get all the identifiers used by the SDK when using both Edge extensions and Adobe Solutions extensions?`}</h2>\n    <p>{`A: Use both `}<inlineCode parentName=\"p\">{`getSdkIdentities`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`getIdentities`}</inlineCode></p>\n    <p>{`To get the identifiers used by the Adobe Solutions extensions, call `}<a parentName=\"p\" {...{\n        \"href\": \"../../home/base/mobile-core/api-reference.md#getsdkidentities\"\n      }}>{`getSdkIdentities`}</a>{`.`}</p>\n    <p>{`To get the identifiers used by the Edge extensions, call `}<a parentName=\"p\" {...{\n        \"href\": \"./api-reference.md#getidentities\"\n      }}>{`getIdentities`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"q-how-can-i-clear-all-the-identifiers-from-the-sdk-when-using-both-edge-extensions-and-adobe-solutions-extensions\"\n    }}>{`Q: How can I clear all the identifiers from the SDK when using both Edge extensions and Adobe Solutions extensions?`}</h2>\n    <p>{`A: Set privacy status to `}<inlineCode parentName=\"p\">{`optedOut`}</inlineCode>{` and call `}<inlineCode parentName=\"p\">{`resetIdentities`}</inlineCode></p>\n    <p>{`To clear the identifiers used by the Adobe Solutions extensions, call `}<a parentName=\"p\" {...{\n        \"href\": \"../../resources/privacy-and-gdpr.md#set-and-get-privacy-status\"\n      }}>{`setPrivacyStatus`}</a>{` and set the privacy status to `}<inlineCode parentName=\"p\">{`optedOut`}</inlineCode>{`.`}</p>\n    <p>{`To clear the identifiers used by the Edge extensions, call `}<a parentName=\"p\" {...{\n        \"href\": \"../../home/base/mobile-core/api-reference.md#resetidentities\"\n      }}>{`resetIdentities`}</a></p>\n    <h2 {...{\n      \"id\": \"q-in-what-cases-is-the-experience-cloud-id-ecid-reset-or-cleared\"\n    }}>{`Q: In what cases is the Experience Cloud ID (ECID) reset or cleared?`}</h2>\n    <p>{`A: The Identity for the Edge Network extension does not automatically reset or clear the ECID. If you observe the ECID being reset, identify if it falls into one of the following cases:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Cleared when the app is uninstalled.`}</li>\n      <li parentName=\"ul\">{`Reset using the `}<a parentName=\"li\" {...{\n          \"href\": \"../../home/base/mobile-core/api-reference.md#resetidentities\"\n        }}><inlineCode parentName=\"a\">{`resetIdentities`}</inlineCode></a>{` API.`}</li>\n      <li parentName=\"ul\">{`Reset when the app local persistence is cleared for any reason in the app implementation. To learn more, see where the `}<a parentName=\"li\" {...{\n          \"href\": \"../../../pages/resources/faq.md#where-does-the-sdk-store-identities-and-preferences-on-the-app\"\n        }}>{`Mobile SDK stores identity data`}</a>{`.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"q-what-steps-are-needed-to-generate-a-new-experience-cloud-id-ecid-for-a-user-when-using-both-edge-extensions-and-adobe-solutions-extensions\"\n    }}>{`Q: What steps are needed to generate a new Experience Cloud ID (ECID) for a user when using both Edge extensions and Adobe Solutions extensions?`}</h2>\n    <p>{`A: Both identity extensions' ECID must be regenerated in sequence to avoid linking the old and new ECIDs in Adobe Experience Platform.`}</p>\n    <p>{`When using Real-time Customer Profile and Identity Service, the ECIDs from both identity extensions are linked together in the customer's Identity Graph. Care must be taken when regenerating new ECIDs such that the old and new ECIDs are not linked within the same Identity Graph.`}</p>\n    <p>{`Perform the following API calls to regenerate the ECIDs in sequence:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Set `}<a parentName=\"li\" {...{\n          \"href\": \"../../resources/privacy-and-gdpr.md#set-and-get-privacy-status\"\n        }}>{`privacy status`}</a>{` to `}<inlineCode parentName=\"li\">{`optedOut`}</inlineCode>{` to clear the ECID from the Identity direct service extension.`}</li>\n      <li parentName=\"ol\">{`Call `}<a parentName=\"li\" {...{\n          \"href\": \"./api-reference.md#resetidentities\"\n        }}>{`resetIdentities`}</a>{` to regenerate a new ECID in the Identity for Edge Network extension.`}</li>\n      <li parentName=\"ol\">{`Call `}<a parentName=\"li\" {...{\n          \"href\": \"./api-reference.md#getexperiencecloudid\"\n        }}>{`getExperienceCloudId`}</a>{` on the Identity for Edge Network extension. This ensures the new ECID is generated before continuing.`}</li>\n      <li parentName=\"ol\">{`Set `}<a parentName=\"li\" {...{\n          \"href\": \"../../resources/privacy-and-gdpr.md#set-and-get-privacy-status\"\n        }}>{`privacy status`}</a>{` to `}<inlineCode parentName=\"li\">{`optedIn`}</inlineCode>{` to generate a new ECID in the Identity direct service extension.`}</li>\n    </ol>\n    <p>{`After completing the above steps, each identity extension will have its own, different, ECID. The new ECIDs will get linked under a new Identity Graph for the customer.`}</p>\n    <TabsBlock orientation=\"horizontal\" slots=\"heading, content\" repeat=\"2\" mdxType=\"TabsBlock\" />\n    <p>{`Android`}</p>\n    <Tabs query=\"platform=android&task=link\" mdxType=\"Tabs\" />\n    <p>{`iOS`}</p>\n    <Tabs query=\"platform=ios&task=link\" mdxType=\"Tabs\" />\n    <h2 {...{\n      \"id\": \"q-can-i-safely-remove-the-identity-for-experience-cloud-id-service-extension-in-an-app-if-i-am-using-the-edge-network-extension\"\n    }}>{`Q: Can I safely remove the Identity for Experience Cloud ID Service extension in an app if I am using the Edge Network extension?`}</h2>\n    <p>{`If no other extension relies on the Identity for Experience Cloud ID Service extension, you can safely remove it. Please refer to the `}<a parentName=\"p\" {...{\n        \"href\": \"../../solution/adobe-analytics/migrate-to-edge-network.md#identity-consideration-for-the-migration\"\n      }}>{`Identity consideration document`}</a>{` for more information.`}</p>\n    <h2 {...{\n      \"id\": \"q-i-am-passing-the-ecid-from-to-the-webview-using-geturlvariables-api-but-the-web-interactions-get-a-new-ecid-assigned-how-do-i-fix-this\"\n    }}>{`Q: I am passing the ECID from to the WebView using `}<inlineCode parentName=\"h2\">{`getUrlVariables`}</inlineCode>{` API, but the web interactions get a new ECID assigned, how do I fix this?`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`Ensure that the output from the `}<inlineCode parentName=\"li\">{`getUrlVariables`}</inlineCode>{` API includes accurate `}<strong parentName=\"li\">{`ECID`}</strong>{` and `}<strong parentName=\"li\">{`Experience Cloud orgID`}</strong>{` values. Please note that the orgID set up for the Mobile SDK must match the orgID configured in the Web SDK.`}</li>\n      <li parentName=\"ol\">{`Make sure the timestamp (TS) included in the `}<inlineCode parentName=\"li\">{`getUrlVariables`}</inlineCode>{` result did not expire (that is, it is not older than 5 minutes since the time it was retrieved). For this reason, it is recommended that the result from `}<inlineCode parentName=\"li\">{`getUrlVariables`}</inlineCode>{` is not cached and reused in the app, but retrieved on demand before loading the WebView.`}</li>\n      <li parentName=\"ol\">{`The query string returned by the `}<inlineCode parentName=\"li\">{`getUrlVariables`}</inlineCode>{` API is already encoded, so please ensure that you do not re-encode the generated query string.`}</li>\n      <li parentName=\"ol\">{`If you are using Visitor ID and AppMeasurement, please make sure that you have the latest versions.`}</li>\n    </ol>\n    <p>{`For further information, refer to the documentation on `}<a parentName=\"p\" {...{\n        \"href\": \"https://experienceleague.adobe.com/docs/experience-platform/edge/identity/id-sharing.html?lang=en\"\n      }}>{`mobile-to-web and cross-domain ID sharing`}</a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"https://experienceleague.adobe.com/docs/platform-learn/implement-mobile-sdk/app-implementation/web-views.html?lang=en#implementation\"\n      }}>{`handling WebViews`}</a>{`.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","makeShortcode","name","props","console","warn","InlineAlert","TabsBlock","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","variant","slots","parentName","orientation","repeat","query","isMDXComponent"],"sourceRoot":""}