"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[5520,9943],{18154:function(e,n,t){t.r(n),t.d(n,{_frontmatter:function(){return d},default:function(){return f}});var o=t(87462),a=t(63366),i=(t(15007),t(64983)),r=t(91515),l=t(92422),s=["components"],d={},m=function(e){return function(n){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.mdx)("div",n)}},p=m("InlineAlert"),c=m("TabsBlock"),x={_frontmatter:d},u=r.Z;function f(e){var n=e.components,t=(0,a.Z)(e,s);return(0,i.mdx)(u,(0,o.Z)({},x,t,{components:n,mdxType:"MDXLayout"}),(0,i.mdx)("h1",{id:"profile"},"Profile"),(0,i.mdx)("p",null,"You can use the Profile extension to store attributes about your user on the client. This information can be used later to target and personalize messages during online or offline scenarios, without having to connect to a server for optimal performance. The Profile extension manages the Client-Side Operation Profile (CSOP) and provides a way to react to APIs, updates user profile attributes, and shares the user profile attributes with the rest of the system as a generated event."),(0,i.mdx)("p",null,"The Profile data is used by other extensions to perform profile-related actions. An example is the Rules Engine extension that consumes the profile data and runs rules based on the profile data."),(0,i.mdx)(p,{variant:"info",slots:"text",mdxType:"InlineAlert"}),(0,i.mdx)("p",null,"The Profile extension does not require any configuration."),(0,i.mdx)("p",null,"To get started with the Profile extension:"),(0,i.mdx)("ol",null,(0,i.mdx)("li",{parentName:"ol"},"Configure the Profile Extension in the Data Collection UI."),(0,i.mdx)("li",{parentName:"ol"},"Add the Profile extension to your app."),(0,i.mdx)("li",{parentName:"ol"},"Implement Profile APIs to:",(0,i.mdx)("ul",{parentName:"li"},(0,i.mdx)("li",{parentName:"ul"},"Update user attributes."),(0,i.mdx)("li",{parentName:"ul"},"Remove user attributes.")))),(0,i.mdx)("h2",{id:"install-the-profile-extension-in-the-data-collection-ui"},"Install the Profile extension in the Data Collection UI"),(0,i.mdx)("ol",null,(0,i.mdx)("li",{parentName:"ol"},"In the Data Collection UI, in your mobile property, select the ",(0,i.mdx)("strong",{parentName:"li"},"Extensions")," tab."),(0,i.mdx)("li",{parentName:"ol"},"On the ",(0,i.mdx)("strong",{parentName:"li"},"Catalog")," tab, locate or search for the ",(0,i.mdx)("strong",{parentName:"li"},"Profile")," extension, and select ",(0,i.mdx)("strong",{parentName:"li"},"Install"),"."),(0,i.mdx)("li",{parentName:"ol"},"There are no configuration settings for ",(0,i.mdx)("strong",{parentName:"li"},"Profile"),"."),(0,i.mdx)("li",{parentName:"ol"},"Select ",(0,i.mdx)("strong",{parentName:"li"},"Save"),"."),(0,i.mdx)("li",{parentName:"ol"},"Follow the publishing process to update SDK configuration.")),(0,i.mdx)("p",null,(0,i.mdx)("span",{parentName:"p",className:"gatsby-resp-image-wrapper",style:{position:"relative",display:"block",marginLeft:"auto",marginRight:"auto",maxWidth:"1280px"}},"\n      ",(0,i.mdx)("span",{parentName:"span",className:"gatsby-resp-image-background-image",style:{paddingBottom:"45.62500000000001%",position:"relative",bottom:"0",left:"0",display:"block",transition:"opacity 0.5s 0.5s",pointerEvents:"none"}}),"\n  ",(0,i.mdx)("picture",{parentName:"span"},"\n          ",(0,i.mdx)("source",{parentName:"picture",srcSet:["/aep-mobile-sdkdocs/static/49b0637eaf534688564dcae0ae808f4b/5530d/configuration.webp 320w","/aep-mobile-sdkdocs/static/49b0637eaf534688564dcae0ae808f4b/0c8fb/configuration.webp 640w","/aep-mobile-sdkdocs/static/49b0637eaf534688564dcae0ae808f4b/94b1e/configuration.webp 1280w","/aep-mobile-sdkdocs/static/49b0637eaf534688564dcae0ae808f4b/ff8b5/configuration.webp 1494w"],sizes:"(max-width: 1280px) 100vw, 1280px",type:"image/webp"}),"\n          ",(0,i.mdx)("source",{parentName:"picture",srcSet:["/aep-mobile-sdkdocs/static/49b0637eaf534688564dcae0ae808f4b/dd4a7/configuration.png 320w","/aep-mobile-sdkdocs/static/49b0637eaf534688564dcae0ae808f4b/0f09e/configuration.png 640w","/aep-mobile-sdkdocs/static/49b0637eaf534688564dcae0ae808f4b/bbbf7/configuration.png 1280w","/aep-mobile-sdkdocs/static/49b0637eaf534688564dcae0ae808f4b/60b6f/configuration.png 1494w"],sizes:"(max-width: 1280px) 100vw, 1280px",type:"image/png"}),"\n          ",(0,i.mdx)("img",{parentName:"picture",className:"gatsby-resp-image-image",src:"/aep-mobile-sdkdocs/static/49b0637eaf534688564dcae0ae808f4b/bbbf7/configuration.png",alt:"AEP Profile extension configuration",title:"AEP Profile extension configuration",loading:"lazy",style:{width:"100%",height:"100%",margin:"0",verticalAlign:"middle",position:"absolute",opacity:"0",transition:"opacity 0.5s",color:"inherit",boxShadow:"inset 0px 0px 0px 400px none",top:"0",left:"0"}}),"\n        "),"\n    ")),(0,i.mdx)("h2",{id:"add-the-profile-extension-to-your-app"},"Add the Profile extension to your app"),(0,i.mdx)("p",null,"To add the Profile extension to your app:"),(0,i.mdx)(c,{orientation:"horizontal",slots:"heading, content",repeat:"2",mdxType:"TabsBlock"}),(0,i.mdx)("p",null,"Android"),(0,i.mdx)(l.default,{query:"platform=android&task=add",mdxType:"Tabs"}),(0,i.mdx)("p",null,"iOS"),(0,i.mdx)(l.default,{query:"platform=ios&task=add",mdxType:"Tabs"}),(0,i.mdx)("h2",{id:"register-the-extension"},"Register the extension"),(0,i.mdx)(c,{orientation:"horizontal",slots:"heading, content",repeat:"2",mdxType:"TabsBlock"}),(0,i.mdx)("p",null,"Android"),(0,i.mdx)(l.default,{query:"platform=android&task=register",mdxType:"Tabs"}),(0,i.mdx)("p",null,"iOS"),(0,i.mdx)(l.default,{query:"platform=ios&task=register",mdxType:"Tabs"}))}f.isMDXComponent=!0},92422:function(e,n,t){t.r(n),t.d(n,{_frontmatter:function(){return s},default:function(){return u}});var o=t(87462),a=t(63366),i=(t(15007),t(64983)),r=t(91515),l=["components"],s={},d=function(e){return function(n){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.mdx)("div",n)}},m=d("Variant"),p=d("InlineNestedAlert"),c={_frontmatter:s},x=r.Z;function u(e){var n=e.components,t=(0,a.Z)(e,l);return(0,i.mdx)(x,(0,o.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,i.mdx)(m,{platform:"android",task:"add",repeat:"8",mdxType:"Variant"}),(0,i.mdx)("ol",null,(0,i.mdx)("li",{parentName:"ol"},"Add the ",(0,i.mdx)("inlineCode",{parentName:"li"},"UserProfile")," library to your project using the app's gradle file.")),(0,i.mdx)("h4",{id:"kotlin"},"Kotlin"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-kotlin"},'implementation(platform("com.adobe.marketing.mobile:sdk-bom:3.+"))\nimplementation("com.adobe.marketing.mobile:core")\nimplementation("com.adobe.marketing.mobile:userprofile")\n')),(0,i.mdx)("h4",{id:"groovy"},"Groovy"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"implementation platform('com.adobe.marketing.mobile:sdk-bom:3.+')\nimplementation 'com.adobe.marketing.mobile:core'\nimplementation 'com.adobe.marketing.mobile:userprofile'\n")),(0,i.mdx)(p,{variant:"warning",header:"false",iconPosition:"left",mdxType:"InlineNestedAlert"},(0,i.mdx)("p",null,"Using dynamic dependency versions is ",(0,i.mdx)("strong",{parentName:"p"},"not")," recommended for production apps. Please read the ",(0,i.mdx)("a",{parentName:"p",href:"../../resources/manage-gradle-dependencies.md"},"managing Gradle dependencies guide")," for more information.")),(0,i.mdx)("ol",{start:2},(0,i.mdx)("li",{parentName:"ol"},"Import the ",(0,i.mdx)("inlineCode",{parentName:"li"},"UserProfile")," library and any other SDK library in your application's main activity.")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"import com.adobe.marketing.mobile.MobileCore;\nimport com.adobe.marketing.mobile.UserProfile;\n")),(0,i.mdx)(m,{platform:"ios",task:"add",repeat:"7",mdxType:"Variant"}),(0,i.mdx)("ol",null,(0,i.mdx)("li",{parentName:"ol"},"Add the Mobile Core and Profile extensions to your project using Cocoapods. Add following pods in your ",(0,i.mdx)("inlineCode",{parentName:"li"},"Podfile"),":")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-ruby"},"use_frameworks!\ntarget 'YourTargetApp' do\n    pod 'AEPCore', '~> 5.0'\n    pod 'AEPUserProfile', '~> 5.0'\nend\n")),(0,i.mdx)("ol",{start:2},(0,i.mdx)("li",{parentName:"ol"},"Import the UserProfile library.")),(0,i.mdx)("h4",{id:"swift"},"Swift"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"   import AEPCore\n   import AEPUserProfile\n")),(0,i.mdx)("h4",{id:"objective-c"},"Objective-C"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"   @import AEPCore;\n   @import AEPUserProfile;\n")),(0,i.mdx)(m,{platform:"android",task:"register",repeat:"6",mdxType:"Variant"}),(0,i.mdx)("p",null,"After calling the ",(0,i.mdx)("inlineCode",{parentName:"p"},"setApplication()")," method in the ",(0,i.mdx)("inlineCode",{parentName:"p"},"onCreate()")," method, register the UserProfile extension."),(0,i.mdx)("ol",null,(0,i.mdx)("li",{parentName:"ol"},"The ",(0,i.mdx)("inlineCode",{parentName:"li"},"UserProfile")," extension must be registered with Mobile Core before calling an ",(0,i.mdx)("inlineCode",{parentName:"li"},"UserProfile")," API.")),(0,i.mdx)("h4",{id:"java"},"Java"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"   public class MobileApp extends Application {\n\n       @Override\n       public void onCreate() {\n            super.onCreate();\n            MobileCore.setApplication(this);\n            List<Class<? extends Extension>> extensions = Arrays.asList(UserProfile.EXTENSION, ...);\n            MobileCore.registerExtensions(extensions, o -> {\n                // Any other post registration processing\n            });\n       }\n   }\n")),(0,i.mdx)("h4",{id:"kotlin-1"},"Kotlin"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},'class MyApp : Application() {\n\n    override fun onCreate() {\n        super.onCreate()\n        MobileCore.setApplication(this)\n        MobileCore.setLogLevel(LoggingMode.VERBOSE)\n        MobileCore.configureWithAppID("YOUR_APP_ID")\n\n        val extensions = listOf(UserProfile.EXTENSION, ...)\n        MobileCore.registerExtensions(extensions) {\n            Log.d(LOG_TAG, "AEP Mobile SDK is initialized")\n        }\n    }\n}\n')),(0,i.mdx)(m,{platform:"ios",task:"register",repeat:"4",mdxType:"Variant"}),(0,i.mdx)("h4",{id:"swift-1"},"Swift"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-swift"},"// AppDelegate.swift\nfunc application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {\n    MobileCore.registerExtensions([UserProfile.self], {\n  })\n  ...\n}\n")),(0,i.mdx)("h4",{id:"objective-c-1"},"Objective-C"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-objectivec"},"- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n    [AEPMobileCore registerExtensions:@AEPMobileUserProfile.class] completion:^{\n    ...\n  }];\n  ...\n  // Override point for customization after application launch.\n  return YES;\n}\n")))}u.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-home-base-profile-index-md-2358e54b842ad269ad05.js.map