{"version":3,"file":"component---src-pages-documentation-platform-assurance-sdk-api-reference-md-055f68948cf5dab88602.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/pages/documentation/platform-assurance-sdk/api-reference.md","webpack://dev-site-documentation-template/./src/pages/documentation/platform-assurance-sdk/tabs/api-reference.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/aep-mobile-sdkdocs/aep-mobile-sdkdocs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nimport Tabs from './tabs/api-reference.md';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst TabsBlock = makeShortcode(\"TabsBlock\");\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"assurance-api-reference\"\n    }}>{`Assurance API reference`}</h1>\n    <h2 {...{\n      \"id\": \"extensionversion\"\n    }}>{`extensionVersion`}</h2>\n    <p>{`Returns the current version of the AEP Assurance extension.`}</p>\n    <TabsBlock orientation=\"horizontal\" slots=\"heading, content\" repeat=\"7\" mdxType=\"TabsBlock\" />\n    <p>{`Android`}</p>\n    <Tabs query=\"platform=android&api=extension-version\" mdxType=\"Tabs\" />\n    <p>{`iOS`}</p>\n    <Tabs query=\"platform=ios&api=extension-version\" mdxType=\"Tabs\" />\n    <p>{`React Native`}</p>\n    <Tabs query=\"platform=react-native&api=extension-version\" mdxType=\"Tabs\" />\n    <p>{`Flutter`}</p>\n    <Tabs query=\"platform=flutter&api=extension-version\" mdxType=\"Tabs\" />\n    <p>{`Cordova`}</p>\n    <Tabs query=\"platform=cordova&api=extension-version\" mdxType=\"Tabs\" />\n    <p>{`Unity`}</p>\n    <Tabs query=\"platform=unity&api=extension-version\" mdxType=\"Tabs\" />\n    <p>{`Xamarin`}</p>\n    <Tabs query=\"platform=xamarin&api=extension-version\" mdxType=\"Tabs\" />\n    <h2 {...{\n      \"id\": \"startsession\"\n    }}>{`startSession`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`startSession`}</inlineCode>{` API needs to be called to begin a AEP Assurance session. When called, the Mobile SDK displays a PIN authentication overlay to begin a session.`}</p>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`You may call this API when the app launches with a URL (see code snippet below for sample usage)`}</p>\n    <TabsBlock orientation=\"horizontal\" slots=\"heading, content\" repeat=\"7\" mdxType=\"TabsBlock\" />\n    <p>{`Android`}</p>\n    <Tabs query=\"platform=android&api=start-session\" mdxType=\"Tabs\" />\n    <p>{`iOS`}</p>\n    <Tabs query=\"platform=ios&api=start-session\" mdxType=\"Tabs\" />\n    <p>{`React Native`}</p>\n    <Tabs query=\"platform=react-native&api=start-session\" mdxType=\"Tabs\" />\n    <p>{`Flutter`}</p>\n    <Tabs query=\"platform=flutter&api=start-session\" mdxType=\"Tabs\" />\n    <p>{`Cordova`}</p>\n    <Tabs query=\"platform=cordova&api=start-session\" mdxType=\"Tabs\" />\n    <p>{`Unity`}</p>\n    <Tabs query=\"platform=unity&api=start-session\" mdxType=\"Tabs\" />\n    <p>{`Xamarin`}</p>\n    <Tabs query=\"platform=xamarin&api=start-session\" mdxType=\"Tabs\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/aep-mobile-sdkdocs/aep-mobile-sdkdocs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Variant = makeShortcode(\"Variant\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <Variant platform=\"android\" api=\"extension-version\" repeat=\"5\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public static String extensionVersion()\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`Assurance.extensionVersion()\n`}</code></pre>\n    <Variant platform=\"ios\" api=\"extension-version\" repeat=\"8\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`AEPAssurance.extensionVersion()\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`+ (nonnull NSString*) extensionVersion;\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`[AEPAssurance extensionVersion];\n`}</code></pre>\n    <Variant platform=\"react-native\" api=\"extension-version\" repeat=\"3\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"javascript\"\n    }}>{`JavaScript`}</h4>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`AEPAssurance.extensionVersion().then(version => console.log(\"AdobeExperienceSDK: AEP Assurance version: \" + version));\n`}</code></pre>\n    <Variant platform=\"flutter\" api=\"extension-version\" repeat=\"5\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"dart\"\n    }}>{`Dart`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-dart\"\n      }}>{`static Future<String> get extensionVersion async\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-dart\"\n      }}>{`assuranceVersion = await FlutterAssurance.extensionVersion;\n`}</code></pre>\n    <Variant platform=\"cordova\" api=\"extension-version\" repeat=\"4\" mdxType=\"Variant\" />\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`AEPAssurance.extensionVersion = function(success, fail);\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`AEPAssurance.extensionVersion(function(version) {  \n   console.log(\"AEPAssurance version: \" + version);\n}, function(error) {  \n   console.log(error);  \n});\n`}</code></pre>\n    <Variant platform=\"unity\" api=\"extension-version\" repeat=\"5\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"c\"\n    }}>{`C#`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`public static string ExtensionVersion()\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`string version = AEPAssurance.ExtensionVersion();\nprint(LOG_TAG + \"Assurance version: \"+version);\n`}</code></pre>\n    <Variant platform=\"xamarin\" api=\"extension-version\" repeat=\"3\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"c-1\"\n    }}>{`C#`}</h4>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`string version = AEPAssurance.ExtensionVersion()  \nConsole.WriteLine(\"AEPAssurance version installed is: \" + version);\n`}</code></pre>\n    <Variant platform=\"android\" api=\"start-session\" repeat=\"7\" mdxType=\"Variant\" />\n    <p>{`This API is optional for Android.`}</p>\n    <p>{`Android does not require this API to be called. When the `}<inlineCode parentName=\"p\">{`registerExtension`}</inlineCode>{` API is called, AEP Assurance extension registers the app lifecycle handlers which automatically pick up any deep links and use them to start the session.`}</p>\n    <h4 {...{\n      \"id\": \"java-1\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public static void startSession(final String url)\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{` Assurance.startSession(url);\n`}</code></pre>\n    <Variant platform=\"ios\" api=\"start-session\" repeat=\"10\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift-1\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`func application(_ app: UIApplication, open url: URL, options: [UIApplication.OpenURLOptionsKey : Any] = [:]) -> Bool {\n    do {\n        AEPAssurance.startSession(url)\n        return false\n    }\n}\n`}</code></pre>\n    <p>{`For SceneDelegate based applications`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`    func scene(_ scene: UIScene, openURLContexts URLContexts: Set<UIOpenURLContext>) {\n        AEPAssurance.startSession(URLContexts.first!.url)\n    }\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-1\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`+ (void) startSession: (NSURL* _Nonnull) url;\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`- (BOOL)application:(UIApplication *)app openURL:(nonnull NSURL *)url options:(nonnull NSDictionary<UIApplicationOpenURLOptionsKey,id> *)options {\n    [AEPAssurance startSession:url];\n    return false;\n}\n`}</code></pre>\n    <Variant platform=\"react-native\" api=\"start-session\" repeat=\"3\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"javascript-1\"\n    }}>{`JavaScript`}</h4>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`AEPAssurance.startSession(\"your-assurance-session-url\");\n`}</code></pre>\n    <Variant platform=\"flutter\" api=\"start-session\" repeat=\"5\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"dart-1\"\n    }}>{`Dart`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-dart\"\n      }}>{`static Future<void> startSession(String url);\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-dart\"\n      }}>{`FlutterAssurance.startSession(url);\n`}</code></pre>\n    <Variant platform=\"cordova\" api=\"start-session\" repeat=\"4\" mdxType=\"Variant\" />\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`AEPAssurance.startSession = function(sessionurl,success, fail);\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`AEPAssurance.startSession(url,function(result) {  \n   console.log(\"AdobeExperenceSDK: AEPAssurance session started succesfully: \" + result);\n}, function(error) {  \n   console.log(\"AdobeExperenceSDK: Failed to start AEPAssurance session: \" + error);\n});\n`}</code></pre>\n    <Variant platform=\"unity\" api=\"start-session\" repeat=\"5\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"c-2\"\n    }}>{`C#`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`public static void StartSession(string url)\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`AEPAssurance.StartSession(url);\n`}</code></pre>\n    <Variant platform=\"xamarin\" api=\"start-session\" repeat=\"2\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"c-3\"\n    }}>{`C#`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`AEPAssurance.StartSession(url);\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","makeShortcode","name","props","console","warn","TabsBlock","InlineAlert","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","orientation","slots","repeat","query","parentName","variant","isMDXComponent","Variant","platform","api"],"sourceRoot":""}