"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[8269],{36713:function(e,t,n){n.r(t),n.d(t,{_frontmatter:function(){return m},default:function(){return s}});var i=n(87462),a=n(63366),o=(n(15007),n(64983)),d=n(91515),r=["components"],m={},l={_frontmatter:m},p=d.Z;function s(e){var t=e.components,n=(0,a.Z)(e,r);return(0,o.mdx)(p,(0,i.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.mdx)("h1",{id:"configure-the-notification-content-extension"},"Configure the Notification Content extension"),(0,o.mdx)("p",null,"With the ",(0,o.mdx)("inlineCode",{parentName:"p"},"AEPNotificationContent")," package now available after following the ",(0,o.mdx)("a",{parentName:"p",href:"./index.md"},"installation steps"),", the app and notification content extension must be configured to use it."),(0,o.mdx)("h2",{id:"app-configuration"},"App configuration"),(0,o.mdx)("ol",null,(0,o.mdx)("li",{parentName:"ol"},(0,o.mdx)("p",{parentName:"li"},"Ensure the ",(0,o.mdx)("inlineCode",{parentName:"p"},"AppDelegate")," implements ",(0,o.mdx)("inlineCode",{parentName:"p"},"UNUserNotificationCenterDelegate"),"."),(0,o.mdx)("pre",{parentName:"li"},(0,o.mdx)("code",{parentName:"pre",className:"language-swift"},"@main\nclass AppDelegate: UIResponder, UIApplicationDelegate, UNUserNotificationCenterDelegate {\n    ...\n}\n"))),(0,o.mdx)("li",{parentName:"ol"},(0,o.mdx)("p",{parentName:"li"},"In your ",(0,o.mdx)("inlineCode",{parentName:"p"},"AppDelegate"),", after the user has granted your app permission to display notifications, create any custom notification actions needed by your app and register a category with identifier ",(0,o.mdx)("inlineCode",{parentName:"p"},"AEPNotification"),"."),(0,o.mdx)("pre",{parentName:"li"},(0,o.mdx)("code",{parentName:"pre",className:"language-swift"},'let center = UNUserNotificationCenter.current()\n\n// ask user for permission to display notifications\ncenter.requestAuthorization(options: [.badge, .sound, .alert]) { [weak self] granted, _ in\n    \n    // return early if the user does not consent \n    guard granted else { return }\n    \n    center.delegate = self\n    \n    // create a category with desired actions and `AEPNotification` as the identifier\n    let myCategory = UNNotificationCategory(identifier: "AEPNotification",\n                                            actions: [],\n                                            intentIdentifiers: [],\n                                            options: [.customDismissAction])\n\n    // register the category\n    UNUserNotificationCenter.current().setNotificationCategories([myCategory])\n    \n    // if not done elsewhere, register the app to receive remote notifications\n    DispatchQueue.main.async {\n        application.registerForRemoteNotifications()\n    }\n}\n')))),(0,o.mdx)("h2",{id:"notification-content-extension-configuration"},"Notification Content extension configuration"),(0,o.mdx)("p",null,"Update the ",(0,o.mdx)("inlineCode",{parentName:"p"},"Info.plist")," for your Notification Content extension with the following values:"),(0,o.mdx)("table",null,(0,o.mdx)("thead",{parentName:"table"},(0,o.mdx)("tr",{parentName:"thead"},(0,o.mdx)("th",{parentName:"tr",align:null},"Key"),(0,o.mdx)("th",{parentName:"tr",align:null},"Type"),(0,o.mdx)("th",{parentName:"tr",align:null},"Value"))),(0,o.mdx)("tbody",{parentName:"table"},(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:null},(0,o.mdx)("inlineCode",{parentName:"td"},"NSExtension.NSExtensionPrincipalClass")),(0,o.mdx)("td",{parentName:"tr",align:null},(0,o.mdx)("inlineCode",{parentName:"td"},"String")),(0,o.mdx)("td",{parentName:"tr",align:null},(0,o.mdx)("inlineCode",{parentName:"td"},"AEPNotificationContent.AEPNotificationViewController"))),(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:null},(0,o.mdx)("inlineCode",{parentName:"td"},"NSExtension.NSExtensionAttributes.UNNotificationExtensionUserInteractionEnabled")),(0,o.mdx)("td",{parentName:"tr",align:null},(0,o.mdx)("inlineCode",{parentName:"td"},"Boolean")),(0,o.mdx)("td",{parentName:"tr",align:null},(0,o.mdx)("inlineCode",{parentName:"td"},"YES"))),(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:null},(0,o.mdx)("inlineCode",{parentName:"td"},"NSExtension.NSExtensionAttributes.UNNotificationExtensionDefaultContentHidden")),(0,o.mdx)("td",{parentName:"tr",align:null},(0,o.mdx)("inlineCode",{parentName:"td"},"Boolean")),(0,o.mdx)("td",{parentName:"tr",align:null},(0,o.mdx)("inlineCode",{parentName:"td"},"YES"))),(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:null},(0,o.mdx)("inlineCode",{parentName:"td"},"NSExtension.NSExtensionAttributes.UNNotificationExtensionCategory")),(0,o.mdx)("td",{parentName:"tr",align:null},(0,o.mdx)("inlineCode",{parentName:"td"},"String")),(0,o.mdx)("td",{parentName:"tr",align:null},(0,o.mdx)("inlineCode",{parentName:"td"},"AEPNotification"))),(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:null},(0,o.mdx)("inlineCode",{parentName:"td"},"NSExtension.NSExtensionAttributes.UNNotificationExtensionInitialContentSizeRatio")),(0,o.mdx)("td",{parentName:"tr",align:null},(0,o.mdx)("inlineCode",{parentName:"td"},"Number")),(0,o.mdx)("td",{parentName:"tr",align:null},(0,o.mdx)("inlineCode",{parentName:"td"},"0.2"))))),(0,o.mdx)("p",null,(0,o.mdx)("span",{parentName:"p",className:"gatsby-resp-image-wrapper",style:{position:"relative",display:"block",marginLeft:"auto",marginRight:"auto",maxWidth:"1280px"}},"\n      ",(0,o.mdx)("span",{parentName:"span",className:"gatsby-resp-image-background-image",style:{paddingBottom:"29.375%",position:"relative",bottom:"0",left:"0",display:"block",transition:"opacity 0.5s 0.5s",pointerEvents:"none"}}),"\n  ",(0,o.mdx)("picture",{parentName:"span"},"\n          ",(0,o.mdx)("source",{parentName:"picture",srcSet:["/aep-mobile-sdkdocs/static/e515ddd02c83f1a988dece86568c6a45/5530d/configurePlist.webp 320w","/aep-mobile-sdkdocs/static/e515ddd02c83f1a988dece86568c6a45/0c8fb/configurePlist.webp 640w","/aep-mobile-sdkdocs/static/e515ddd02c83f1a988dece86568c6a45/94b1e/configurePlist.webp 1280w","/aep-mobile-sdkdocs/static/e515ddd02c83f1a988dece86568c6a45/3951f/configurePlist.webp 1528w"],sizes:"(max-width: 1280px) 100vw, 1280px",type:"image/webp"}),"\n          ",(0,o.mdx)("source",{parentName:"picture",srcSet:["/aep-mobile-sdkdocs/static/e515ddd02c83f1a988dece86568c6a45/dd4a7/configurePlist.png 320w","/aep-mobile-sdkdocs/static/e515ddd02c83f1a988dece86568c6a45/0f09e/configurePlist.png 640w","/aep-mobile-sdkdocs/static/e515ddd02c83f1a988dece86568c6a45/bbbf7/configurePlist.png 1280w","/aep-mobile-sdkdocs/static/e515ddd02c83f1a988dece86568c6a45/1debb/configurePlist.png 1528w"],sizes:"(max-width: 1280px) 100vw, 1280px",type:"image/png"}),"\n          ",(0,o.mdx)("img",{parentName:"picture",className:"gatsby-resp-image-image",src:"/aep-mobile-sdkdocs/static/e515ddd02c83f1a988dece86568c6a45/bbbf7/configurePlist.png",alt:"configure notification content extension plist",title:"configure notification content extension plist",loading:"lazy",style:{width:"100%",height:"100%",margin:"0",verticalAlign:"middle",position:"absolute",opacity:"0",transition:"opacity 0.5s",color:"inherit",boxShadow:"inset 0px 0px 0px 400px none",top:"0",left:"0"}}),"\n        "),"\n    ")),(0,o.mdx)("h2",{id:"next-steps"},"Next steps"),(0,o.mdx)("p",null,"Use a sample payload to generate a notification in your app by completing the steps in ",(0,o.mdx)("a",{parentName:"p",href:"./validate-integration.md"},"Validate AEPNotificationContent integration"),"."))}s.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-resources-reference-push-notifications-ios-configure-extension-md-87239b0bd1194d837e00.js.map