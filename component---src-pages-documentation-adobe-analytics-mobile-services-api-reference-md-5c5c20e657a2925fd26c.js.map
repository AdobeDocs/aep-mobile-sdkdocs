{"version":3,"file":"component---src-pages-documentation-adobe-analytics-mobile-services-api-reference-md-5c5c20e657a2925fd26c.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/pages/documentation/adobe-analytics-mobile-services/api-reference.md","webpack://dev-site-documentation-template/./src/pages/documentation/adobe-analytics-mobile-services/tabs/api-reference.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/aep-mobile-sdkdocs/aep-mobile-sdkdocs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nimport Tabs from './tabs/api-reference.md';\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst TabsBlock = makeShortcode(\"TabsBlock\");\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"mobile-services-api-reference\"\n    }}>{`Mobile Services API reference`}</h1>\n    <h2 {...{\n      \"id\": \"extensionversion\"\n    }}>{`extensionVersion`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`extensionVersion()`}</inlineCode>{` API returns the version of the Mobile Services extension that is registered with the Mobile Core extension.`}</p>\n    <TabsBlock orientation=\"horizontal\" slots=\"heading, content\" repeat=\"3\" mdxType=\"TabsBlock\" />\n    <p>{`Android`}</p>\n    <Tabs query=\"platform=android&api=extension-version\" mdxType=\"Tabs\" />\n    <p>{`iOS (AEP 3.x)`}</p>\n    <Tabs query=\"platform=ios-aep&api=extension-version\" mdxType=\"Tabs\" />\n    <p>{`iOS (ACP 2.x)`}</p>\n    <Tabs query=\"platform=ios-acp&api=extension-version\" mdxType=\"Tabs\" />\n    <h2 {...{\n      \"id\": \"processreferrer\"\n    }}>{`processReferrer`}</h2>\n    <p>{`You can use this API to process the referrer intent that was received from Android.`}</p>\n    <InlineAlert variant=\"warning\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`This API is `}<strong parentName=\"p\">{`only`}</strong>{` available in Android.`}</p>\n    <h4 {...{\n      \"id\": \"java\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public static void processReferrer(final Context context, final Intent intent)\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public  void onReceive(Context context, Intent intent) {\n    MobileServices.processReferrer(context, intent);\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"processgoogleplayinstallreferrerurl\"\n    }}>{`processGooglePlayInstallReferrerUrl`}</h2>\n    <p>{`You can use this API to process the data you get from the Google Play Install Referrer APIs.`}</p>\n    <InlineAlert variant=\"warning\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`This API is `}<strong parentName=\"p\">{`only`}</strong>{` available on Android, starting in version `}<inlineCode parentName=\"p\">{`1.1.0`}</inlineCode>{`.`}</p>\n    <h4 {...{\n      \"id\": \"java-1\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public static void processGooglePlayInstallReferrerUrl(final Context context, final Intent intent)\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`void handleGooglePlayReferrer() {\n    // Google recommends only calling this API the first time you need it:\n    // https://developer.android.com/google/play/installreferrer/library#install-referrer\n\n    // Store a boolean in SharedPreferences to ensure we only call it once.\n    final SharedPreferences prefs = getSharedPreferences(\"acquisition\", 0);\n    if (prefs != null) {\n        if (prefs.getBoolean(\"referrerHasBeenProcessed\", false)) {\n            return;\n        }\n    }\n\n    final InstallReferrerClient referrerClient = InstallReferrerClient.newBuilder(getApplicationContext()).build();\n    referrerClient.startConnection(new InstallReferrerStateListener() {\n        private boolean complete = false;\n\n        @Override\n        public void onInstallReferrerSetupFinished(int responseCode) {\n            switch (responseCode) {\n                case InstallReferrerClient.InstallReferrerResponse.OK:\n                    // connection is established\n                    complete();\n                    try {\n                        final ReferrerDetails details = referrerClient.getInstallReferrer();                        \n\n                        // pass the install referrer url to the SDK\n                        MobileServices.processGooglePlayInstallReferrerUrl(details.getInstallReferrer());\n\n                    } catch (final RemoteException ex) {\n                        Log.w(\"Acquisition - RemoteException while retrieving referrer information (%s)\", ex.getLocalizedMessage() == null ? \"unknown\" : ex.getLocalizedMessage());\n                    } finally {\n                        referrerClient.endConnection();\n                    }\n                    break;\n                case InstallReferrerClient.InstallReferrerResponse.FEATURE_NOT_SUPPORTED:\n                case InstallReferrerClient.InstallReferrerResponse.SERVICE_UNAVAILABLE:\n                default:\n                    // API not available in the Play Store app - nothing to do here\n                    complete();\n                    referrerClient.endConnection();\n                    break;\n            }\n        }\n\n        @Override\n        public void onInstallReferrerServiceDisconnected() {\n            if (!complete) {\n                // something went wrong trying to get a connection, try again\n                referrerClient.startConnection(this);\n            }\n        }\n\n        void complete() {\n            complete = true;\n            SharedPreferences.Editor editor = getSharedPreferences(\"acquisition\", 0).edit();\n            editor.putBoolean(\"referrerHasBeenProcessed\", true);\n            editor.apply();\n        }\n    });\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"trackadobedeeplink\"\n    }}>{`trackAdobeDeepLink`}</h2>\n    <p>{`You can use this API to track a deep link or a marketing link, as long as the link contains a key `}<inlineCode parentName=\"p\">{`a.deeplink.id`}</inlineCode>{` and a corresponding non-null and user generated value. The link can be created in the Adobe Mobile Services UI or be generated by another vendor.`}</p>\n    <TabsBlock orientation=\"horizontal\" slots=\"heading, content\" repeat=\"3\" mdxType=\"TabsBlock\" />\n    <p>{`Android`}</p>\n    <Tabs query=\"platform=android&api=track-adobe-deep-link\" mdxType=\"Tabs\" />\n    <p>{`iOS (AEP 3.x)`}</p>\n    <Tabs query=\"platform=ios-aep&api=track-adobe-deep-link\" mdxType=\"Tabs\" />\n    <p>{`iOS (ACP 2.x)`}</p>\n    <Tabs query=\"platform=ios-acp&api=track-adobe-deep-link\" mdxType=\"Tabs\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/aep-mobile-sdkdocs/aep-mobile-sdkdocs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst Variant = makeShortcode(\"Variant\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <Variant platform=\"android\" api=\"extension-version\" repeat=\"2\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java\"\n    }}>{`Java`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`String mobileServicesExtensionVersion = MobileServices.extensionVersion();\n`}</code></pre>\n    <Variant platform=\"ios-aep\" api=\"extension-version\" repeat=\"4\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift\"\n    }}>{`Swift`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`let mobileServicesExtensionVersion  = AEPMobileServices.extensionVersion()\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c\"\n    }}>{`Objective-C`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`NSString *mobileServicesExtensionVersion = [AEPMobileServices extensionVersion];\n`}</code></pre>\n    <Variant platform=\"ios-acp\" api=\"extension-version\" repeat=\"4\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"objective-c-1\"\n    }}>{`Objective-C`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`NSString *mobileServicesExtensionVersion = [ACPMobileServices extensionVersion];\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"swift-1\"\n    }}>{`Swift`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`let mobileServicesExtensionVersion  = ACPMobileServices.extensionVersion()\n`}</code></pre>\n    <Variant platform=\"android\" api=\"track-adobe-deep-link\" repeat=\"5\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-1\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public static void trackAdobeDeepLink(final Uri uri)\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`Uri testUri = new Uri.Builder()\n        .scheme(\"adobelinktest\")\n        .appendQueryParameter(\"a.deeplink.id\", \"test_deeplinkId\")\n        .appendQueryParameter(\"a.launch.campaign.trackingcode\", \"code\")\n        .appendQueryParameter(\"test_key\", \"test_value\")        \n        .build();\n\n        MobileServices.trackAdobeDeepLink(testUri);\n`}</code></pre>\n    <Variant platform=\"ios-aep\" api=\"track-adobe-deep-link\" repeat=\"7\" mdxType=\"Variant\" />\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`+ (void) trackAdobeDeepLink: (NSURL* _Nonnull) deeplink;\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <p><strong parentName=\"p\">{`Swift`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`let url = URL(string: \"adobelinktest://x?a.deeplink.id=test_deeplinkId&a.launch.campaign.trackingcode=code&test_key=test_value\")!\nAEPMobileServices.trackAdobeDeepLink(url)\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Objective-C`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`NSURL* url = [NSURL URLWithString:@\"adobelinktest://x?a.deeplink.id=test_deeplinkId&a.launch.campaign.trackingcode=code&test_key=test_value\"];\n\n[AEPMobileServices trackAdobeDeepLink:url];\n`}</code></pre>\n    <Variant platform=\"ios-acp\" api=\"track-adobe-deep-link\" repeat=\"7\" mdxType=\"Variant\" />\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`+ (void) trackAdobeDeepLink: (NSURL*) url;\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <p><strong parentName=\"p\">{`Swift`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`let url = URL(string: \"adobelinktest://x?a.deeplink.id=test_deeplinkId&a.launch.campaign.trackingcode=code&test_key=test_value\")!\nACPMobileServices.trackAdobeDeepLink(url)\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Objective-C`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`NSURL* url = [NSURL URLWithString:@\"adobelinktest://x?a.deeplink.id=test_deeplinkId&a.launch.campaign.trackingcode=code&test_key=test_value\"];\n\n[ACPMobileServices trackAdobeDeepLink:url];\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","makeShortcode","name","props","console","warn","TabsBlock","InlineAlert","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","orientation","slots","repeat","query","variant","isMDXComponent","Variant","platform","api"],"sourceRoot":""}