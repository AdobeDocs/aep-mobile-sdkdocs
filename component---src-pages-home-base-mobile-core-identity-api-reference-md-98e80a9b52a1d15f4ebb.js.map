{"version":3,"file":"component---src-pages-home-base-mobile-core-identity-api-reference-md-98e80a9b52a1d15f4ebb.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/pages/home/base/mobile-core/identity/api-reference.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/aep-mobile-sdkdocs/aep-mobile-sdkdocs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nimport Tabs from './tabs/api-reference.md';\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst TabsBlock = makeShortcode(\"TabsBlock\");\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"identity-api-reference\"\n    }}>{`Identity API reference`}</h1>\n    <h2 {...{\n      \"id\": \"appendtourl--appendvisitorinfoforurl\"\n    }}>{`appendToURL / appendVisitorInfoForURL`}</h2>\n    <p>{`This API appends Adobe visitor information to the query component of the specified URL.`}</p>\n    <p>{`If the provided URL is null or empty, it is returned as is. Otherwise, the following information is added to the query component of the specified URL and is returned in the callback function:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`The `}<inlineCode parentName=\"li\">{`adobe_mc`}</inlineCode>{` attribute is a URL encoded list that contains:`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`MCMID`}</inlineCode>{` - Experience Cloud ID (ECID)`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`MCORGID`}</inlineCode>{` - Experience Cloud Org ID`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`MCAID`}</inlineCode>{` - Analytics Tracking ID (AID), if available from the `}<a parentName=\"li\" {...{\n              \"href\": \"../../../solution/adobe-analytics/api-reference.md#gettrackingidentifier\"\n            }}>{`Analytics extension`}</a></li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`TS`}</inlineCode>{` - A timestamp taken when this request was made`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`The optional `}<inlineCode parentName=\"li\">{`adobe_aa_vid`}</inlineCode>{` attribute is the URL-encoded Analytics Custom Visitor ID (VID), if previously set in the `}<a parentName=\"li\" {...{\n          \"href\": \"../../../solution/adobe-analytics/api-reference.md#setvisitoridentifier\"\n        }}>{`Analytics extension`}</a>{`.`}</li>\n    </ul>\n    <p>{`This API is designed to handle the following URL formats:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-text\"\n      }}>{`scheme://authority/path?query=param#fragment\n`}</code></pre>\n    <p>{`In this example, the Adobe visitor data is appended as:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-text\"\n      }}>{`scheme://authority/path?query=param&adobe_mc=TS%3Dtimestamp%7CMCMID%3Decid%7CMCORGID%3Decorgid%40AdobeOrg#fragment\n`}</code></pre>\n    <p>{`Similarly, URLs without a query component:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-text\"\n      }}>{`scheme://authority/path#fragment\n`}</code></pre>\n    <p>{`The Adobe visitor data is appended as:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-text\"\n      }}>{`scheme://authority/path?adobe_mc=TS%3Dtimestamp%7CMCMID%3Decid%7CMCORGID%3Decorgid%40AdobeOrg#fragment\n`}</code></pre>\n    <p>{`In these examples the `}<inlineCode parentName=\"p\">{`adobe_mc`}</inlineCode>{` parameters are separated by \"|\" (pipe) and are encoded.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-text\"\n      }}>{`adobe_mc = TS=XXXXXX|MCMID=XXXXXX|MCAID=XXXXXX|MCORGID=XXXXXX@AdobeOrg\n`}</code></pre>\n    <p>{`If your application uses more complicated URLs, such as Angular URLs, you should use `}<a parentName=\"p\" {...{\n        \"href\": \"#geturlvariables\"\n      }}>{`getUrlVariables`}</a>{`.`}</p>\n    <TabsBlock orientation=\"horizontal\" slots=\"heading, content\" repeat=\"2\" mdxType=\"TabsBlock\" />\n    <p>{`Android`}</p>\n    <Tabs query=\"platform=android&api=append-to-url\" mdxType=\"Tabs\" />\n    <p>{`iOS`}</p>\n    <Tabs query=\"platform=ios&api=append-to-url\" mdxType=\"Tabs\" />\n    {/*- React Native\n     <Tabs query=\"platform=react-native&api=append-to-url\"/>\n     Flutter\n     <Tabs query=\"platform=flutter&api=append-to-url\"/> -*/}\n    <h2 {...{\n      \"id\": \"extensionversion\"\n    }}>{`extensionVersion`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`extensionVersion()`}</inlineCode>{` API returns the version of the Identity extension that is registered with the Mobile Core extension.`}</p>\n    <p>{`To get the version of the Identity extension, use the following code sample:`}</p>\n    <TabsBlock orientation=\"horizontal\" slots=\"heading, content\" repeat=\"2\" mdxType=\"TabsBlock\" />\n    <p>{`Android`}</p>\n    <Tabs query=\"platform=android&api=extension-version\" mdxType=\"Tabs\" />\n    <p>{`iOS`}</p>\n    <Tabs query=\"platform=ios&api=extension-version\" mdxType=\"Tabs\" />\n    {/*- React Native\n     <Tabs query=\"platform=react-native&api=extension-version\"/>\n     Flutter\n     <Tabs query=\"platform=flutter&api=extension-version\"/> -*/}\n    <h2 {...{\n      \"id\": \"getexperiencecloudid\"\n    }}>{`getExperienceCloudId`}</h2>\n    <p>{`This API retrieves the Adobe Experience Cloud ID (ECID) that was generated when the app was initially launched and is stored in the Adobe Experience Cloud Identity Service.`}</p>\n    <p>{`This ID is preserved between app upgrades, is saved and restored during the standard application backup process, and is removed at uninstall.`}</p>\n    <TabsBlock orientation=\"horizontal\" slots=\"heading, content\" repeat=\"2\" mdxType=\"TabsBlock\" />\n    <p>{`Android`}</p>\n    <Tabs query=\"platform=android&api=get-experience-cloud-id\" mdxType=\"Tabs\" />\n    <p>{`iOS`}</p>\n    <Tabs query=\"platform=ios&api=get-experience-cloud-id\" mdxType=\"Tabs\" />\n    {/*- React Native\n     <Tabs query=\"platform=react-native&api=get-experience-cloud-id\"/>\n     Flutter\n     <Tabs query=\"platform=flutter&api=get-experience-cloud-id\"/> -*/}\n    <h2 {...{\n      \"id\": \"getidentifiers\"\n    }}>{`getIdentifiers`}</h2>\n    <p>{`This API returns all customer identifiers that were previously synced with the Adobe Experience Cloud Identity Service.`}</p>\n    <TabsBlock orientation=\"horizontal\" slots=\"heading, content\" repeat=\"2\" mdxType=\"TabsBlock\" />\n    <p>{`Android`}</p>\n    <Tabs query=\"platform=android&api=get-identifiers\" mdxType=\"Tabs\" />\n    <p>{`iOS`}</p>\n    <Tabs query=\"platform=ios&api=get-identifiers\" mdxType=\"Tabs\" />\n    {/*- React Native\n     <Tabs query=\"platform=react-native&api=get-identifiers\"/>\n     Flutter\n     <Tabs query=\"platform=flutter&api=get-identifiers\"/> -*/}\n    <h2 {...{\n      \"id\": \"geturlvariables\"\n    }}>{`getUrlVariables`}</h2>\n    <p>{`This API gets the Adobe Experience Cloud Identity Service variables in URL query parameter form, and these variables will be consumed by the hybrid app. This method returns an appropriately formed string that contains the Experience Cloud Identity Service URL variables. There will be no leading (&) or (?) punctuation because the caller is responsible for placing the variables in their resulting URL in the correct location.`}</p>\n    <p>{`If an error occurs while retrieving the URL string, the callback handler will be called with a null value. Otherwise, the following information is added to the string that is returned in the callback:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`The `}<inlineCode parentName=\"li\">{`adobe_mc`}</inlineCode>{` attribute is an URL encoded list that contains:`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`MCMID`}</inlineCode>{` - Experience Cloud ID (ECID)`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`MCORGID`}</inlineCode>{` - Experience Cloud Org ID`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`MCAID`}</inlineCode>{` - Analytics Tracking ID (AID), if available from the `}<a parentName=\"li\" {...{\n              \"href\": \"../../../solution/adobe-analytics/index.md\"\n            }}>{`Analytics extension`}</a></li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`TS`}</inlineCode>{` - A timestamp taken when this request was made`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`The optional `}<inlineCode parentName=\"li\">{`adobe_aa_vid`}</inlineCode>{` attribute is the URL-encoded Analytics Custom Visitor ID (VID), if previously set in the `}<a parentName=\"li\" {...{\n          \"href\": \"../../../solution/adobe-analytics/index.md\"\n        }}>{`Analytics extension`}</a>{`.`}</li>\n    </ul>\n    <TabsBlock orientation=\"horizontal\" slots=\"heading, content\" repeat=\"2\" mdxType=\"TabsBlock\" />\n    <p>{`Android`}</p>\n    <Tabs query=\"platform=android&api=get-url-variables\" mdxType=\"Tabs\" />\n    <p>{`iOS`}</p>\n    <Tabs query=\"platform=ios&api=get-url-variables\" mdxType=\"Tabs\" />\n    {/*- React Native\n     <Tabs query=\"platform=react-native&api=get-url-variables\"/>\n     Flutter\n     <Tabs query=\"platform=flutter&api=get-url-variables\"/> -*/}\n    <h2 {...{\n      \"id\": \"registerextension\"\n    }}>{`registerExtension`}</h2>\n    <InlineAlert variant=\"warning\" slots=\"header, text1\" mdxType=\"InlineAlert\" />\n    <p>{`This API has been deprecated starting in v2.0.0 and removed in v3.0.0 of the Android mobile extension.`}</p>\n    <p>{`Use `}<a parentName=\"p\" {...{\n        \"href\": \"../api-reference.md#registerextensions\"\n      }}><inlineCode parentName=\"a\">{`MobileCore.registerExtensions()`}</inlineCode></a>{` API instead.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`registerExtension()`}</inlineCode>{` API registers the Identity extension with the Mobile Core extension. This API allows the extension to send and receive events to and from the Mobile SDK.`}</p>\n    <TabsBlock orientation=\"horizontal\" slots=\"heading, content\" repeat=\"1\" mdxType=\"TabsBlock\" />\n    <p>{`Android`}</p>\n    <Tabs query=\"platform=android&api=register-extension\" mdxType=\"Tabs\" />\n    <h2 {...{\n      \"id\": \"resetidentities\"\n    }}>{`resetIdentities`}</h2>\n    <p>{`Clears all identities stored in the Identity extension and generates a new Experience Cloud ID (ECID). Using this API does not remove the identifiers from the server-side service.`}</p>\n    <p>{`This is a destructive action, since once an ECID is removed it cannot be reused. The new ECID generated by this API can increase metrics like unique visitors when a new user profile is created.`}</p>\n    <p>{`Some example use cases for this API are:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`During debugging, to see how new ECIDs (and other identifiers paired with it) behave with existing rules and metrics.`}</li>\n      <li parentName=\"ul\">{`A last-resort reset for when an ECID should no longer be used.`}</li>\n    </ul>\n    <p>{`This API is `}<strong parentName=\"p\">{`not`}</strong>{` recommended for:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Resetting a user's privacy settings; see `}<a parentName=\"li\" {...{\n          \"href\": \"../../../resources/privacy-and-gdpr.md\"\n        }}>{`Privacy and GDPR`}</a>{`.`}</li>\n      <li parentName=\"ul\">{`Removing existing custom identifiers; use the `}<a parentName=\"li\" {...{\n          \"href\": \"#syncidentifier\"\n        }}><inlineCode parentName=\"a\">{`syncIdentifier`}</inlineCode></a>{` API instead.`}</li>\n      <li parentName=\"ul\">{`Removing a previously synced advertising identifier after the advertising tracking settings were changed by the user; use the `}<a parentName=\"li\" {...{\n          \"href\": \"#setadvertisingidentifier\"\n        }}><inlineCode parentName=\"a\">{`setAdvertisingIdentifier`}</inlineCode></a>{` API instead.`}</li>\n    </ul>\n    <p>{`See `}<a parentName=\"p\" {...{\n        \"href\": \"../api-reference.md#resetidentities\"\n      }}><inlineCode parentName=\"a\">{`MobileCore.resetIdentities`}</inlineCode></a>{` for more details.`}</p>\n    <h2 {...{\n      \"id\": \"setadvertisingidentifier\"\n    }}>{`setAdvertisingIdentifier`}</h2>\n    <p>{`The advertising ID is preserved between app upgrades, is saved and restored during the standard application backup process, available via the `}<a parentName=\"p\" {...{\n        \"href\": \"../signal/index.md\"\n      }}>{`Signals`}</a>{` extension, and is removed at uninstall.`}</p>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`If the current SDK privacy status is `}<inlineCode parentName=\"p\">{`optedout`}</inlineCode>{`, the advertising identifier is not set or stored.`}</p>\n    <TabsBlock orientation=\"horizontal\" slots=\"heading, content\" repeat=\"2\" mdxType=\"TabsBlock\" />\n    <p>{`Android`}</p>\n    <Tabs query=\"platform=android&api=set-advertising-identifier\" mdxType=\"Tabs\" />\n    <p>{`iOS`}</p>\n    <Tabs query=\"platform=ios&api=set-advertising-identifier\" mdxType=\"Tabs\" />\n    {/*- React Native\n     <Tabs query=\"platform=react-native&api=set-advertising-identifier\"/>\n     Flutter\n     <Tabs query=\"platform=flutter&api=set-advertising-identifier\"/> -*/}\n    <h2 {...{\n      \"id\": \"setpushidentifier\"\n    }}>{`setPushIdentifier`}</h2>\n    <p>{`This API sets the device token for push notifications in the SDK. If the current SDK privacy status is `}<inlineCode parentName=\"p\">{`optedout`}</inlineCode>{`, the push identifier is not set.`}</p>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`You should call `}<inlineCode parentName=\"p\">{`setPushIdentifier`}</inlineCode>{` on each application launch to ensure the most up-to-date device token is set to the SDK. If no device token is available, `}<inlineCode parentName=\"p\">{`null`}</inlineCode>{`/`}<inlineCode parentName=\"p\">{`nil`}</inlineCode>{` should be passed.`}</p>\n    <TabsBlock orientation=\"horizontal\" slots=\"heading, content\" repeat=\"2\" mdxType=\"TabsBlock\" />\n    <p>{`Android`}</p>\n    <Tabs query=\"platform=android&api=set-push-identifier\" mdxType=\"Tabs\" />\n    <p>{`iOS`}</p>\n    <Tabs query=\"platform=ios&api=set-push-identifier\" mdxType=\"Tabs\" />\n    {/*- React Native\n     <Tabs query=\"platform=react-native&api=set-push-identifier\"/> -*/}\n    <h2 {...{\n      \"id\": \"syncidentifier\"\n    }}>{`syncIdentifier`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`syncIdentifier()`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`syncIdentifiers()`}</inlineCode>{` APIs update the specified customer IDs with the Adobe Experience Cloud Identity Service.`}</p>\n    <p>{`These APIs synchronize the provided customer identifier type key and value with the authentication state to the Experience Cloud Identity Service. If the specified customer ID type exists in the service, this ID type is updated with the new ID and the authentication state. Otherwise, a new customer ID is added.`}</p>\n    <p>{`Starting with `}<em parentName=\"p\">{`ACPIdentity v2.1.3 (iOS)`}</em>{` and `}<em parentName=\"p\">{`Identity v1.1.2 (Android)`}</em>{` if the new `}<inlineCode parentName=\"p\">{`identifier`}</inlineCode>{` value is null or empty, this ID type is removed from the local storage, Identity shared state and not synced with the Experience Cloud Identity Service.`}</p>\n    <p>{`These IDs are preserved between app upgrades, are saved and restored during the standard application backup process, and are removed at uninstall.`}</p>\n    <p>{`If the current SDK privacy status is `}<inlineCode parentName=\"p\">{`MobilePrivacyStatus.OPT_OUT`}</inlineCode>{`, calling this method results in no operations being performed.`}</p>\n    <p>{`This API updates or appends the provided customer identifier type key and value with the given authentication state to the Experience Cloud Identity Service. If the specified customer ID type exists in the service, the ID is updated with the new ID and authentication state. Otherwise a new customer ID is added.`}</p>\n    <TabsBlock orientation=\"horizontal\" slots=\"heading, content\" repeat=\"2\" mdxType=\"TabsBlock\" />\n    <p>{`Android`}</p>\n    <Tabs query=\"platform=android&api=sync-identifier\" mdxType=\"Tabs\" />\n    <p>{`iOS`}</p>\n    <Tabs query=\"platform=ios&api=sync-identifier\" mdxType=\"Tabs\" />\n    {/*- React Native\n     <Tabs query=\"platform=react-native&api=sync-identifier\"/>\n     Flutter\n     <Tabs query=\"platform=flutter&api=sync-identifier\"/> -*/}\n    <h2 {...{\n      \"id\": \"syncidentifiers\"\n    }}>{`syncIdentifiers`}</h2>\n    <p>{`This API is an overloaded version, which does not include the parameter for the authentication state and it assumes a default value of `}<inlineCode parentName=\"p\">{`VisitorID.AuthenticationState.UNKNOWN`}</inlineCode>{`.`}</p>\n    <TabsBlock orientation=\"horizontal\" slots=\"heading, content\" repeat=\"2\" mdxType=\"TabsBlock\" />\n    <p>{`Android`}</p>\n    <Tabs query=\"platform=android&api=sync-identifiers\" mdxType=\"Tabs\" />\n    <p>{`iOS`}</p>\n    <Tabs query=\"platform=ios&api=sync-identifiers\" mdxType=\"Tabs\" />\n    {/*- React Native\n     <Tabs query=\"platform=react-native&api=sync-identifiers\"/>\n     Flutter\n     <Tabs query=\"platform=flutter&api=sync-identifiers\"/> -*/}\n    <h2 {...{\n      \"id\": \"syncidentifiers-overloaded\"\n    }}>{`syncIdentifiers (overloaded)`}</h2>\n    <p>{`The function of this API is the same as the `}<inlineCode parentName=\"p\">{`syncIdentifier`}</inlineCode>{` API. This API passes a list of identifiers, and each identifier contains an `}<inlineCode parentName=\"p\">{`identifier type`}</inlineCode>{` as the key and an `}<inlineCode parentName=\"p\">{`identifier`}</inlineCode>{` as the value. In each identifier pair, if the `}<inlineCode parentName=\"p\">{`identifier type`}</inlineCode>{` contains a null or an empty string, the identifier is ignored by the Identity extension.`}</p>\n    <p>{`Starting with `}<em parentName=\"p\">{`ACPIdentity v2.1.3 (iOS)`}</em>{` and `}<em parentName=\"p\">{`Identity v1.1.2 (Android)`}</em>{` if the new `}<inlineCode parentName=\"p\">{`identifier`}</inlineCode>{` value is null or empty, this ID type is removed from the local storage, Identity shared state and not synced with the Adobe Experience Cloud Identity Service.`}</p>\n    <TabsBlock orientation=\"horizontal\" slots=\"heading, content\" repeat=\"2\" mdxType=\"TabsBlock\" />\n    <p>{`Android`}</p>\n    <Tabs query=\"platform=android&api=sync-identifiers-overloaded\" mdxType=\"Tabs\" />\n    <p>{`iOS`}</p>\n    <Tabs query=\"platform=ios&api=sync-identifiers-overloaded\" mdxType=\"Tabs\" />\n    {/*- React Native\n     <Tabs query=\"platform=react-native&api=sync-identifiers-overloaded\"/>\n     Flutter\n     <Tabs query=\"platform=flutter&api=sync-identifiers-overloaded\"/> -*/}\n    <h2 {...{\n      \"id\": \"public-classes\"\n    }}>{`Public classes`}</h2>\n    <TabsBlock orientation=\"horizontal\" slots=\"heading, content\" repeat=\"2\" mdxType=\"TabsBlock\" />\n    <p>{`Android`}</p>\n    <Tabs query=\"platform=android&api=public-classes\" mdxType=\"Tabs\" />\n    <p>{`iOS`}</p>\n    <Tabs query=\"platform=ios&api=public-classes\" mdxType=\"Tabs\" />\n    {/*- React Native\n     <Tabs query=\"platform=react-native&api=public-classes\"/>\n     Flutter\n     <Tabs query=\"platform=flutter&api=public-classes\"/> -*/}\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","makeShortcode","name","props","console","warn","TabsBlock","InlineAlert","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","orientation","slots","repeat","query","variant","isMDXComponent"],"sourceRoot":""}