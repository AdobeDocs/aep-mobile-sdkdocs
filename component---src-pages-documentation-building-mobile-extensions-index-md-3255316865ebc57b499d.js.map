{"version":3,"file":"component---src-pages-documentation-building-mobile-extensions-index-md-3255316865ebc57b499d.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/pages/documentation/building-mobile-extensions/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/aep-mobile-sdkdocs/aep-mobile-sdkdocs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"building-mobile-extensions\"\n    }}>{`Building mobile extensions`}</h1>\n    <p>{`To support customer-specific features, and allow for the greatest flexibility, Adobe Experience Platform Mobile SDK provides an interface that allows customers to integrate with the Mobile Core at a much lower level. This interface allows customers to define extensions, which are similar in capabilities to the `}<a parentName=\"p\" {...{\n        \"href\": \"https://experienceleague.adobe.com/docs/experience-platform/tags/ui/extensions/overview.html\"\n      }}>{`tag extensions`}</a>{`. The Mobile Core allows all extensions to access the events and data being sent through the Experience Platform SDK.`}</p>\n    <p>{`Extensions allow customers to extend the Experience Platform SDKs with their own code. This includes listening for and dispatching events, reading the shared state of any registered extension, and sharing the state of the current extension. The application can use the extension to monitor for information that Adobe does not expose by default. It can also use the extension to modify Experience Platform SDK internal operations. For example, the application can use the extension to add additional data to messages that are sent or by sending data to other systems.`}</p>\n    <h2 {...{\n      \"id\": \"namespace-conventions\"\n    }}>{`Namespace conventions`}</h2>\n    <p>{`Components or data that are provided by Adobe must be clearly distinguished from the components or data that are provided by external parties. Inconsistent naming conventions impact module naming, event type, source names, and event data keys.`}</p>\n    <p>{`The following naming rulesÂ apply for extensions:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`The `}<inlineCode parentName=\"li\">{`ADOBE_PREFIX`}</inlineCode>{` is `}<inlineCode parentName=\"li\">{`com.adobe`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`The `}<inlineCode parentName=\"li\">{`THIRDPARTY_PREFIX`}</inlineCode>{` is `}<inlineCode parentName=\"li\">{`com.`}</inlineCode>{`. The prefix `}<inlineCode parentName=\"li\">{`com.adobe.*`}</inlineCode>{` is reserved for Adobe.`}</li>\n      <li parentName=\"ul\">{`Third parties must prefix their extension name and any custom event types or sources they create with the `}<inlineCode parentName=\"li\">{`THIRDPARTY_PREFIX`}</inlineCode>{` followed by their company name.`}</li>\n      <li parentName=\"ul\">{`By convention, Adobe will not prefix shared state keys or event data keys.  These names will be in the global namespace. For example: `}<inlineCode parentName=\"li\">{`mid`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`Adobe internal module names follow the pattern `}<inlineCode parentName=\"li\">{`ADOBE_PREFIX.module.{moduleName}`}</inlineCode>{`. `}</li>\n      <li parentName=\"ul\">{`Adobe event types follow the pattern `}<inlineCode parentName=\"li\">{`ADOBE_PREFIX.eventType.{eventType}`}</inlineCode>{`. `}</li>\n      <li parentName=\"ul\">{`Adobe event sources follow the pattern `}<inlineCode parentName=\"li\">{`ADOBE_PREFIX.eventSource.{eventSource}`}</inlineCode>{`. `}</li>\n      <li parentName=\"ul\">{`Shared state `}<strong parentName=\"li\">{`names`}</strong>{` (not `}<strong parentName=\"li\">{`keys`}</strong>{`) must equal the module name. `}</li>\n      <li parentName=\"ul\">{`All constants will be named using `}<inlineCode parentName=\"li\">{`lowerCamelCase`}</inlineCode>{`, and cases are normalized internally to make comparisons case-insensitive.  For example, if you use `}<inlineCode parentName=\"li\">{`Com.Adobe.moDule.AnAlytiCS`}</inlineCode>{` it will be internally converted to `}<inlineCode parentName=\"li\">{`com.adobe.module.analytics`}</inlineCode>{`. An exception to this rule is that shared state names that are used in rules are compared in a case-sensitive manner. This means that when registering an extension, the actual case is retained internally, so that rule comparison can succeed.`}</li>\n    </ul>\n    <InlineAlert variant=\"warning\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`You should use ASCII characters, even if your company name contains non-ASCII characters.`}</p>\n    <h2 {...{\n      \"id\": \"extension-architecture\"\n    }}>{`Extension architecture`}</h2>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"442px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"151.25%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/aep-mobile-sdkdocs/static/834d231b0134b6171a463dea1f1d35fb/5530d/architecture.webp 320w\", \"/aep-mobile-sdkdocs/static/834d231b0134b6171a463dea1f1d35fb/61bb9/architecture.webp 442w\"],\n            \"sizes\": \"(max-width: 442px) 100vw, 442px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/aep-mobile-sdkdocs/static/834d231b0134b6171a463dea1f1d35fb/dd4a7/architecture.png 320w\", \"/aep-mobile-sdkdocs/static/834d231b0134b6171a463dea1f1d35fb/e669e/architecture.png 442w\"],\n            \"sizes\": \"(max-width: 442px) 100vw, 442px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/aep-mobile-sdkdocs/static/834d231b0134b6171a463dea1f1d35fb/e669e/architecture.png\",\n            \"alt\": \"architecture\",\n            \"title\": \"architecture\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <h3 {...{\n      \"id\": \"error-handling\"\n    }}>{`Error handling`}</h3>\n    <p>{`When using an extension, you can get asynchronous or synchronous errors.`}</p>\n    <h4 {...{\n      \"id\": \"synchronous-errors\"\n    }}>{`Synchronous errors`}</h4>\n    <p>{`Synchronous errors are caught outside the Experience Platform SDK and may occur for the following reasons:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`When registering a class with the incorrect parent class.`}</li>\n      <li parentName=\"ul\">{`When passing empty strings to certain parameters. Examples include an extension name, an event type, or a shared state name.`}</li>\n      <li parentName=\"ul\">{`When passing malformed JSON `}<inlineCode parentName=\"li\">{`data.Synchronous`}</inlineCode>{` errors are returned immediately on the same thread. `}</li>\n    </ul>\n    <InlineAlert variant=\"warning\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`In iOS, a `}<inlineCode parentName=\"p\">{`@false`}</inlineCode>{` value is returned to indicate an error and filling in an optional `}<inlineCode parentName=\"p\">{`NSError`}</inlineCode>{` out parameter.`}</p>\n    <h4 {...{\n      \"id\": \"asynchronous-errors\"\n    }}>{`Asynchronous errors`}</h4>\n    <p>{`Asynchronous errors are caught in the Experience Platform SDKs. When they occur, the error is handled with a callback function, which can be called back on a different thread.`}</p>\n    <p>{`Asynchronous errors may occur for the following reasons:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`When registering an extension with a name that duplicates an internal module or a previously registered extension.`}</li>\n      <li parentName=\"ul\">{`When using a deprecated shared state name.`}</li>\n      <li parentName=\"ul\">{`When registration is attempted during extension shutdown.`}</li>\n      <li parentName=\"ul\">{`When an event is being dispatched while the extension is being shut down.`}</li>\n      <li parentName=\"ul\">{`When a callback from the Experience Platform SDKs to the external code throws an exception.`}</li>\n      <li parentName=\"ul\">{`When an internal error occurs, or an unexpected exception is thrown.`}</li>\n    </ul>\n    <InlineAlert variant=\"warning\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`In iOS, asynchronous errors are handled by using the `}<inlineCode parentName=\"p\">{`unexpectedError`}</inlineCode>{` method that is defined in the `}<inlineCode parentName=\"p\">{`ACPExtension`}</inlineCode>{` class.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","InlineAlert","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","variant","slots","isMDXComponent"],"sourceRoot":""}