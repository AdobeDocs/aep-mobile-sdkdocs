"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[6044],{40008:function(e,a,n){n.r(a),n.d(a,{_frontmatter:function(){return p},default:function(){return y}});var t,i=n(87462),o=n(63366),l=(n(15007),n(64983)),r=n(91515),c=n(47968),d=["components"],p={},m=(t="Variant",function(e){return console.warn("Component "+t+" was not imported, exported, or provided by MDXProvider as global scope"),(0,l.mdx)("div",e)}),s={_frontmatter:p},u=r.Z;function y(e){var a=e.components,n=(0,o.Z)(e,d);return(0,l.mdx)(u,(0,i.Z)({},s,n,{components:a,mdxType:"MDXLayout"}),(0,l.mdx)(m,{platform:"android-kotlin",task:"add",repeat:"3",mdxType:"Variant"}),(0,l.mdx)("p",null,"Add the required dependencies to your project by including them in the app's Gradle file."),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-kotlin"},'implementation(platform("com.adobe.marketing.mobile:sdk-bom:3.+"))\nimplementation("com.adobe.marketing.mobile:core")\nimplementation("com.adobe.marketing.mobile:lifecycle")\n')),(0,l.mdx)(c.default,{query:"platform=android-gradle&componentClass=InlineNestedAlert",mdxType:"Alerts"}),(0,l.mdx)(m,{platform:"android-groovy",task:"add",repeat:"3",mdxType:"Variant"}),(0,l.mdx)("p",null,"Add the required dependencies to your project by including them in the app's Gradle file."),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"implementation platform('com.adobe.marketing.mobile:sdk-bom:3.+')\nimplementation 'com.adobe.marketing.mobile:core'\nimplementation 'com.adobe.marketing.mobile:lifecycle'\n")),(0,l.mdx)(c.default,{query:"platform=android-gradle&componentClass=InlineNestedAlert",mdxType:"Alerts"}),(0,l.mdx)(m,{platform:"ios-pods",task:"add",repeat:"2",mdxType:"Variant"}),(0,l.mdx)("p",null,"Add the required dependencies to your project using CocoaPods. Add following pods in your ",(0,l.mdx)("inlineCode",{parentName:"p"},"Podfile"),":"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},"use_frameworks!\n\ntarget 'YourTargetApp' do\n  pod 'AEPCore', '~> 5.0'\n  pod 'AEPLifecycle', '~> 5.0'\nend\n")),(0,l.mdx)(m,{platform:"android-java",task:"activity-start-pause",repeat:"5",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"java"},"Java"),(0,l.mdx)("p",null,"Add the following to each Android Activity class."),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"import com.adobe.marketing.mobile.MobileCore;\nimport com.adobe.marketing.mobile.Lifecycle;\n...\n")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"    @Override\n    public void onResume() {\n        MobileCore.setApplication(getApplication());\n        MobileCore.lifecycleStart(null);\n    }\n")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"    @Override\n    public void onPause() {\n        MobileCore.lifecyclePause();\n    }\n")),(0,l.mdx)(m,{platform:"android-kotlin",task:"activity-start-pause",repeat:"5",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"kotlin"},"Kotlin"),(0,l.mdx)("p",null,"Add the following to each Android Activity class."),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-kotlin"},"import com.adobe.marketing.mobile.MobileCore\nimport com.adobe.marketing.mobile.Lifecycle\n...\n")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-kotlin"},"    override fun onResume() {\n        MobileCore.setApplication(this.application)\n        MobileCore.lifecycleStart(null)\n    }\n")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-kotlin"},"    override fun onPause() {\n        MobileCore.lifecyclePause()\n    }\n")),(0,l.mdx)(m,{platform:"android-java",task:"context-data",repeat:"1",mdxType:"Variant"}),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},'HashMap<String, Object> additionalContextData = new HashMap<String, Object>();\ncontextData.put("myapp.category", "Game");\nMobileCore.lifecycleStart(additionalContextData);\n')),(0,l.mdx)(m,{platform:"android-kotlin",task:"context-data",repeat:"1",mdxType:"Variant"}),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-kotlin"},'MobileCore.lifecycleStart(mapOf("myapp.category" to "Game"))\n')),(0,l.mdx)(m,{platform:"ios-swift",task:"context-data",repeat:"1",mdxType:"Variant"}),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},'MobileCore.lifecycleStart(additionalContextData: ["myapp.category": "Game"])\n')),(0,l.mdx)(m,{platform:"ios-objc",task:"context-data",repeat:"1",mdxType:"Variant"}),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objectivec"},'[AEPMobileCore lifecycleStart:@{@"myapp.category": @"Game"}];      \n')),(0,l.mdx)(m,{platform:"android-java",task:"global-lifecycle",repeat:"1",mdxType:"Variant"}),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"import com.adobe.marketing.mobile.MobileCore;\nimport com.adobe.marketing.mobile.Lifecycle;\n\npublic class MobileApp extends Application {\n\n@Override\nprotected void onCreate() {\n    super.onCreate();\n\n    registerActivityLifecycleCallbacks(new ActivityLifecycleCallbacks() {\n        @Override\n        public void onActivityResumed(Activity activity) {\n            MobileCore.setApplication(activity.getApplication());\n            MobileCore.lifecycleStart(null);\n        }\n\n        @Override\n        public void onActivityPaused(Activity activity) {\n            MobileCore.lifecyclePause();\n        }\n\n        // the following methods aren't needed for our lifecycle purposes, but are\n        // required to be implemented by the ActivityLifecycleCallbacks object\n        @Override\n        public void onActivityCreated(Activity activity, Bundle savedInstanceState) {}\n        @Override\n        public void onActivityStarted(Activity activity) {}\n        @Override\n        public void onActivityStopped(Activity activity) {}\n        @Override\n        public void onActivitySaveInstanceState(Activity activity, Bundle outState) {}\n        @Override\n        public void onActivityDestroyed(Activity activity) {}\n    });\n\n    ...\n}\n ...\n}\n")),(0,l.mdx)(m,{platform:"android-kotlin",task:"global-lifecycle",repeat:"1",mdxType:"Variant"}),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-kotlin"},"import com.adobe.marketing.mobile.MobileCore\nimport com.adobe.marketing.mobile.Lifecycle\n\nclass MobileApp : Application() {\n\noverride fun onCreate() {\n    super.onCreate()\n\n    registerActivityLifecycleCallbacks(object: ActivityLifecycleCallbacks {\n        override fun onActivityResumed(activity: Activity) {\n            MobileCore.setApplication(activity.application)\n            MobileCore.lifecycleStart(null)\n        }\n\n        override fun onActivityPaused(activity: Activity) {\n            MobileCore.lifecyclePause()\n        }\n\n        // the following methods aren't needed for our lifecycle purposes, but are\n        // required to be implemented by the ActivityLifecycleCallbacks object\n        override fun onActivityCreated(activity: Activity, savedInstanceState: Bundle?) {}\n        override fun onActivityStarted(activity: Activity) {}\n        override fun onActivityStopped(activity: Activity) {}\n        override fun onActivitySaveInstanceState(activity: Activity, outState: Bundle) {}\n        override fun onActivityDestroyed(activity: Activity) {}\n    })\n\n    ...\n}\n ...\n}\n")),(0,l.mdx)(m,{platform:"ios-swift",task:"start-lifecycle-didfinishlaunch",repeat:"1",mdxType:"Variant"}),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},"func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplicationLaunchOptionsKey: Any]?) -> Bool {\n    let appState = application.applicationState\n    MobileCore.registerExtensions([Lifecycle.self, ...], {\n        if appState != .background {\n        // only start lifecycle if the application is not in the background\n        MobileCore.lifecycleStart(additionalContextData: nil)\n        }\n    }\n}\n")),(0,l.mdx)(m,{platform:"ios-objc",task:"start-lifecycle-didfinishlaunch",repeat:"1",mdxType:"Variant"}),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objectivec"},"- (BOOL) application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n    const UIApplicationState appState = application.applicationState;\n    [AEPMobileCore registerExtensions:@[AEPMobileLifecycle.class, ...] completion:^{\n    // only start lifecycle if the application is not in the background\n    if (appState != UIApplicationStateBackground) {\n        [AEPMobileCore lifecycleStart:nil];\n    }\n    }];\n}\n")),(0,l.mdx)(m,{platform:"ios-swift",task:"start-pause",repeat:"6",mdxType:"Variant"}),(0,l.mdx)("p",null,"In iOS 13 and later, for a scene-based application, use the ",(0,l.mdx)("inlineCode",{parentName:"p"},"UISceneDelegate")," as follows:"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},"func sceneWillEnterForeground(_ scene: UIScene) {\n    MobileCore.lifecycleStart(additionalContextData: nil)\n}\n")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},"func sceneDidEnterBackground(_ scene: UIScene) {\n    MobileCore.lifecyclePause()\n}\n")),(0,l.mdx)("p",null,"In iOS 12 and earlier, use the ",(0,l.mdx)("inlineCode",{parentName:"p"},"UIApplicationDelegate")," as follows:"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},"func applicationWillEnterForeground(_ application: UIApplication) {\n    MobileCore.lifecycleStart(additionalContextData: nil)\n}\n")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},"func applicationDidEnterBackground(_ application: UIApplication) {\n    MobileCore.lifecyclePause()\n}\n")),(0,l.mdx)(m,{platform:"ios-objc",task:"start-pause",repeat:"6",mdxType:"Variant"}),(0,l.mdx)("p",null,"In iOS 13 and later, for a scene-based application, use the ",(0,l.mdx)("inlineCode",{parentName:"p"},"UISceneDelegate")," as follows:"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objectivec"},"- (void) sceneWillEnterForeground:(UIScene *)scene {\n    [AEPMobileCore lifecycleStart:nil];\n}\n")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objectivec"},"- (void) sceneDidEnterBackground:(UIScene *)scene {\n    [AEPMobileCore lifecyclePause];\n}\n")),(0,l.mdx)("p",null,"In iOS 12 and earlier, use the ",(0,l.mdx)("inlineCode",{parentName:"p"},"UIApplicationDelegate")," as follows:"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objectivec"},"- (void) applicationWillEnterForeground:(UIApplication *)application {\n    [AEPMobileCore lifecycleStart:nil];\n}\n")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objectivec"},"- (void) applicationDidEnterBackground:(UIApplication *)application {\n    [AEPMobileCore lifecyclePause];\n}\n")))}y.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-home-base-mobile-core-lifecycle-tabs-index-md-24da73f85482c5caaf3a.js.map