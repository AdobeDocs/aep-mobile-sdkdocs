"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[4124],{45129:function(e,n,t){t.r(n),t.d(n,{_frontmatter:function(){return l},default:function(){return c}});var a,i=t(87462),s=t(63366),o=(t(15007),t(64983)),r=t(91515),d=["components"],l={},p=(a="InlineAlert",function(e){return console.warn("Component "+a+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.mdx)("div",e)}),m={_frontmatter:l},u=r.Z;function c(e){var n=e.components,t=(0,s.Z)(e,d);return(0,o.mdx)(u,(0,i.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,o.mdx)("h1",{id:"push-templates-setup---android"},"Push templates setup - Android"),(0,o.mdx)("p",null,"This document outlines the steps required to configure your app to use default push templates provided by Adobe."),(0,o.mdx)(p,{variant:"info",slots:"text",mdxType:"InlineAlert"}),(0,o.mdx)("p",null,"Default push template functionality is available for use with the ",(0,o.mdx)("strong",{parentName:"p"},"Adobe Campaign Classic")," extension. ",(0,o.mdx)("br",null),(0,o.mdx)("br",null),"This is supported by ",(0,o.mdx)("strong",{parentName:"p"},"Android SDK version 3.1.0+"),"."),(0,o.mdx)("h2",{id:"setup"},"Setup"),(0,o.mdx)("h3",{id:"prerequisite"},"Prerequisite"),(0,o.mdx)("p",null,"Follow the steps to ",(0,o.mdx)("a",{parentName:"p",href:"./../../../../solution/adobe-campaign-classic/"},"configure Adobe Campaign Classic")," and add it to your app."),(0,o.mdx)("h3",{id:"implementation"},"Implementation"),(0,o.mdx)("p",null,"In your application, call ",(0,o.mdx)("inlineCode",{parentName:"p"},"AEPMessagingService.handleRemoteMessage")," from ",(0,o.mdx)("inlineCode",{parentName:"p"},"onMessageReceived")," in the class implementing ",(0,o.mdx)("inlineCode",{parentName:"p"},"FirebaseMessagingService"),"."),(0,o.mdx)("p",null,"Below is an example of where to call the API:"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-java"},"public class MyFirebaseMessagingService extends FirebaseMessagingService {\n    @Override\n    public void onMessageReceived(RemoteMessage remoteMessage) {\n        if (AEPMessagingService.handleRemoteMessage(this, remoteMessage)) {\n            // Campaign extension has handled the notification\n        } else {\n            // Handle notification from other sources\n        }\n    }\n}\n")))}c.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-resources-reference-push-notifications-android-index-md-8b98ec6d0bc119e34a59.js.map