"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[6945],{71784:function(e,a,t){t.r(a),t.d(a,{_frontmatter:function(){return i},default:function(){return u}});var r,n=t(87462),d=t(63366),o=(t(15007),t(64983)),p=t(91515),l=["components"],i={},m=(r="Variant",function(e){return console.warn("Component "+r+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.mdx)("div",e)}),c={_frontmatter:i},s=p.Z;function u(e){var a=e.components,t=(0,d.Z)(e,l);return(0,o.mdx)(s,(0,n.Z)({},c,t,{components:a,mdxType:"MDXLayout"}),(0,o.mdx)(m,{platform:"android",task:"add",repeat:"5",mdxType:"Variant"}),(0,o.mdx)("h4",{id:"java"},"Java"),(0,o.mdx)("ol",null,(0,o.mdx)("li",{parentName:"ol"},"Add the Mobile Core and Target extensions to your project using the app's Gradle file.")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-java"},"implementation 'com.adobe.marketing.mobile:sdk-core:1.+'\nimplementation 'com.adobe.marketing.mobile:target:1.+'\n")),(0,o.mdx)("ol",{start:2},(0,o.mdx)("li",{parentName:"ol"},"Import the Target extension to your application's main activity.")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-java"},"import com.adobe.marketing.mobile.*;\n")),(0,o.mdx)(m,{platform:"ios-aep",task:"add",repeat:"7",mdxType:"Variant"}),(0,o.mdx)("ol",null,(0,o.mdx)("li",{parentName:"ol"},"Add the AEPCore, AEPIdentity, and AEPTarget CocoaPods to your project via your ",(0,o.mdx)("inlineCode",{parentName:"li"},"Podfile"),".")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-ruby"},"pod 'AEPCore','~>3.0'    \npod 'AEPIdentity','~>3.0'\npod 'AEPTarget','~>3.0'\n")),(0,o.mdx)("ol",{start:2},(0,o.mdx)("li",{parentName:"ol"},"Import the Target and Identity libraries.")),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Swift")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-swift"},"    import AEPCore\n    import AEPTarget\n    import AEPIdentity\n")),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Objective-C")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-objectivec"},"    @import AEPCore\n    @import AEPTarget\n    @import AEPIdentity\n")),(0,o.mdx)(m,{platform:"ios-acp",task:"add",repeat:"7",mdxType:"Variant"}),(0,o.mdx)("ol",null,(0,o.mdx)("li",{parentName:"ol"},"Add the ACPCore and ACPTarget CocoaPods to your project via your ",(0,o.mdx)("inlineCode",{parentName:"li"},"Podfile"),".")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-ruby"},"pod 'ACPCore','~>2.0'\npod 'ACPTarget','~>2.0'\n")),(0,o.mdx)("ol",{start:2},(0,o.mdx)("li",{parentName:"ol"},"Import the Target and Identity libraries.")),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Swift")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-swift"},"    import ACPCore\n    import ACPTarget\n")),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Objective-C")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-objectivec"},'    #import "ACPCore.h"\n    #import "ACPTarget.h"\n    #import "ACPIdentity.h"\n    #import "ACPTargetRequestObject.h"\n    #import "ACPTargetPrefetchObject.h"\n')),(0,o.mdx)(m,{platform:"react-native",task:"add",repeat:"7",mdxType:"Variant"}),(0,o.mdx)("h4",{id:"javascript"},"JavaScript"),(0,o.mdx)("ol",null,(0,o.mdx)("li",{parentName:"ol"},"Install Target.")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-javascript"},"npm install @adobe/react-native-acptarget\nreact-native link @adobe/react-native-acptarget\n")),(0,o.mdx)("ol",{start:2},(0,o.mdx)("li",{parentName:"ol"},"Import the extension and related libraries.")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-javascript"},"import {ACPTarget, ACPTargetPrefetchObject, ACPTargetRequestObject, ACPTargetOrder, ACPTargetProduct, ACPTargetParameters} from '@adobe/react-native-acptarget';\n")),(0,o.mdx)("ol",{start:3},(0,o.mdx)("li",{parentName:"ol"},"Get the extension version.")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-javascript"},'ACPTarget.extensionVersion().then(version => console.log("AdobeExperienceSDK: ACPTarget version: " + version));\n')),(0,o.mdx)(m,{platform:"android",task:"register",repeat:"4",mdxType:"Variant"}),(0,o.mdx)("h4",{id:"java-1"},"Java"),(0,o.mdx)("p",null,"In your Application's ",(0,o.mdx)("inlineCode",{parentName:"p"},"onCreate()")," method, after calling the ",(0,o.mdx)("inlineCode",{parentName:"p"},"setApplication()")," method, register Target with Mobile Core."),(0,o.mdx)("p",null,"Here is code sample that calls these set up methods:"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-java"},'public class TargetApp extends Application {\n\n @Override\n public void onCreate() {\n     super.onCreate();\n     MobileCore.setApplication(this);\n     MobileCore.configureWithAppId("yourAppId");\n\n     try {\n         Target.registerExtension();\n         Identity.registerExtension();\n         MobileCore.start(null);\n     } catch (Exception e) {\n         //Log the exception\n     }\n }\n}\n')),(0,o.mdx)(m,{platform:"ios-aep",task:"register",repeat:"5",mdxType:"Variant"}),(0,o.mdx)("h4",{id:"swift"},"Swift"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-swift"},'func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {    \n  MobileCore.registerExtensions([Target.self, Identity.self]) {\n       //Completion callback\n       // Use the App id assigned to this application via Adobe Data Collection UI\n       MobileCore.configureWith(appId: "yourAppId")\n  }\n  return true\n}\n')),(0,o.mdx)("h4",{id:"objective-c"},"Objective-C"),(0,o.mdx)("p",null,"In your app's ",(0,o.mdx)("inlineCode",{parentName:"p"},"didFinishLaunchingWithOptions")," function, register the Target extension with Mobile Core:"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-objectivec"},'- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n    [AEPMobileCore registerExtensions: @[AEPMobileIdentity.class, AEPMobileTarget.class] completion:^{\n        //Completion callback\n        // Use the app ID assigned to this application via Data Collection UI\n        [AEPMobileCore configureWithAppId: @"yourAppId"];\n    }];\n\n    return YES;\n}\n')),(0,o.mdx)(m,{platform:"ios-acp",task:"register",repeat:"5",mdxType:"Variant"}),(0,o.mdx)("h4",{id:"swift-1"},"Swift"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-swift"},'func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {\n  ACPCore.configure(withAppId: "yourAppId")   \n  ACPTarget.registerExtension()\n  ACPIdentity.registerExtension()\n  ACPCore.start(nil)\n  // Override point for customization after application launch.\n  return true\n}\n')),(0,o.mdx)("h4",{id:"objective-c-1"},"Objective-C"),(0,o.mdx)("p",null,"In your app's ",(0,o.mdx)("inlineCode",{parentName:"p"},"didFinishLaunchingWithOptions")," function, register the Target extension with Mobile Core:"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-objectivec"},'- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n  [ACPCore configureWithAppId:@"yourAppId"];\n  [ACPTarget registerExtension];\n  [ACPIdentity registerExtension];\n  [ACPCore start:nil];\n  // Override point for customization after application launch.\n  return YES;\n}\n')),(0,o.mdx)(m,{platform:"react-native",task:"register",repeat:"3",mdxType:"Variant"}),(0,o.mdx)("p",null,"To register the Target extension with the Mobile Core extension, use the following API:"),(0,o.mdx)("h4",{id:"javascript-1"},"JavaScript"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-javascript"},"ACPTarget.registerExtension();\n")),(0,o.mdx)(m,{platform:"android",task:"target-order",repeat:"5",mdxType:"Variant"}),(0,o.mdx)("h4",{id:"java-2"},"Java"),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Syntax")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-java"},"public TargetOrder(final String id, final double total, final List<String> purchasedProductIds)\n")),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Example")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-java"},'List<String> purchasedProductIds = new ArrayList<String>();\npurchasedProductIds.add("34");\npurchasedProductIds.add("125");\nTargetOrder targetOrder = new TargetOrder("123", 567.89, purchasedProductIds);\n')),(0,o.mdx)(m,{platform:"ios-aep",task:"target-order",repeat:"10",mdxType:"Variant"}),(0,o.mdx)("h4",{id:"swift-2"},"Swift"),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Syntax")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-swift"},"public init(id: String, total: Double = 0, purchasedProductIds: [String]? = nil)\n")),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Example")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-swift"},'let order = TargetOrder(id: "id1", total: 1.0, purchasedProductIds: ["ppId1"])\n')),(0,o.mdx)("h4",{id:"objective-c-2"},"Objective-C"),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Syntax")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-objectivec"},"- (nonnull instancetype) initWithId: (nonnull NSString*) id total: (double) total purchasedProductIds: (nullable NSArray<NSString*>*) purchasedProductIds;\n")),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Example")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-objectivec"},'AEPTargetOrder *order = [[AEPTargetOrder alloc] initWithId:@"id1" total:1.0 purchasedProductIds:@[@"ppId1"]];\n')),(0,o.mdx)(m,{platform:"ios-acp",task:"target-order",repeat:"10",mdxType:"Variant"}),(0,o.mdx)("h4",{id:"swift-3"},"Swift"),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Syntax")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-swift"},"public convenience init(id orderId: String, total: NSNumber?, purchasedProductIds: [String]?)\n")),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Example")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-swift"},'let order = ACPTargetOrder(id: "ADCKKBC", total: NSNumber(value: 400.50), purchasedProductIds: ["34", "125"])\n')),(0,o.mdx)("h4",{id:"objective-c-3"},"Objective-C"),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Syntax")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-objectivec"},"+ (nonnull instancetype) targetOrderWithId: (nonnull NSString*) orderId total: (nullable NSNumber*) total purchasedProductIds: (nullable NSArray <NSString*>*)  purchasedProductIds;\n")),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Example")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-objectivec"},'ACPTargetOrder *order = [ACPTargetOrder targetOrderWithId:@"ADCKKBC" total:@(400.50) purchasedProductIds:@[@"34", @"125"]];\n')),(0,o.mdx)(m,{platform:"react-native",task:"target-order",repeat:"2",mdxType:"Variant"}),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"JavaScript")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-javascript"},'var targetOrder = new ACPTargetOrder("ADCKKBC", 400.50, ["34","125"]);\n')),(0,o.mdx)(m,{platform:"android",task:"target-product",repeat:"5",mdxType:"Variant"}),(0,o.mdx)("h4",{id:"java-3"},"Java"),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Syntax")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-java"},"public TargetProduct(final String id, final String categoryId)\n")),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Example")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-java"},'TargetProduct targetProduct = new TargetProduct("123", "Books");\n')),(0,o.mdx)(m,{platform:"ios-aep",task:"target-product",repeat:"10",mdxType:"Variant"}),(0,o.mdx)("h4",{id:"swift-4"},"Swift"),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Syntax")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-swift"},"public init(productId: String, categoryId: String? = nil)\n")),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Example")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-swift"},'let product = TargetProduct(productId: "pId1", categoryId: "cId1")\n')),(0,o.mdx)("h4",{id:"objective-c-4"},"Objective-C"),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Syntax")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-objectivec"},"- (nonnull instancetype) initWithProductId:(nonnull NSString*) productId categoryId:(nullable NSString*) categoryId;\n")),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Example")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-objectivec"},'AEPTargetProduct *product =[[AEPTargetProduct alloc] initWithProductId:@"pId1" categoryId:@"cId1"];\n')),(0,o.mdx)(m,{platform:"ios-acp",task:"target-product",repeat:"10",mdxType:"Variant"}),(0,o.mdx)("h3",{id:"swift-5"},"Swift"),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Syntax")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-swift"},"public convenience init(id productId: String, categoryId: String?)\n")),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Example")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-swift"},'let product = ACPTargetProduct(id: "24D334", categoryId: "Stationary")\n')),(0,o.mdx)("h4",{id:"objective-c-5"},"Objective-C"),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Syntax")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-objectivec"},"+ (nonnull instancetype) targetProductWithId: (nonnull NSString*) productId categoryId: (nullable NSString*) categoryId;\n")),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Example")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-objectivec"},'ACPTargetProduct *product = [ACPTargetProduct targetProductWithId:@"24D334" categoryId:@"Stationary"];\n')),(0,o.mdx)(m,{platform:"react-native",task:"target-product",repeat:"2",mdxType:"Variant"}),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"JavaScript")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-javascript"},'var targetProduct = new ACPTargetProduct("24D334", "Stationary");\n')),(0,o.mdx)(m,{platform:"android",task:"target-parameters",repeat:"5",mdxType:"Variant"}),(0,o.mdx)("h4",{id:"java-4"},"Java"),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Syntax")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-java"},'TargetParameters targetParameters = new TargetParameters.Builder()\n.parameters(new HashMap<String, String>())\n.profileParameters(new HashMap<String, String>())\n.product(new TargetProduct("productId", "productCategoryId"))\n.order(new TargetOrder("orderId", 0.0, new ArrayList<String>()))\n.build();\n')),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Example")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-java"},'List<String> purchasedProductIds = new ArrayList<String>();\npurchasedProductIds.add("34");\npurchasedProductIds.add("125");\nTargetOrder targetOrder = new TargetOrder("123", 567.89, purchasedProductIds);\n\nTargetProduct targetProduct = new TargetProduct("123", "Books");\n\nMap<String, String> mboxParameters = new HashMap<String, String>();\nmboxParameters1.put("status", "platinum");\n\nMap<String, String> profileParameters = new HashMap<String, String>();\nprofileParameters1.put("gender", "male");\n\nTargetParameters targetParameters = new TargetParameters.Builder()\n.parameters(mboxParameters)\n.profileParameters(profileParameters)\n.product(targetProduct)\n.order(targetOrder)\n.build();\n')),(0,o.mdx)(m,{platform:"ios-aep",task:"target-parameters",repeat:"10",mdxType:"Variant"}),(0,o.mdx)("h4",{id:"swift-6"},"Swift"),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Syntax")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-swift"},"public init(parameters: [String: String]? = nil, profileParameters: [String: String]? = nil, order: TargetOrder? = nil, product: TargetProduct? = nil)\n")),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Example")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-swift"},'let mboxParameters = [\n"status": "Platinum"\n]\nlet profileParameters = [\n"gender": "female"\n]\n\nlet order = TargetOrder(id: "id1", total: 1.0, purchasedProductIds: ["ppId1"])\n\nlet product = TargetProduct(productId: "pId1", categoryId: "cId1")\n\nlet targetParameters = TargetParameters(parameters: mboxParameters, profileParameters: profileParameters, order: order, product: product))\n')),(0,o.mdx)("h4",{id:"objective-c-6"},"Objective-C"),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Syntax")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-objectivec"},"- (nonnull instancetype) initWithParameters:(nullable NSDictionary<NSString*, NSString*>*) parameters profileParameters:(nullable NSDictionary<NSString*, NSString*>*) profileParameters order:(nullable AEPTargetOrder*) order product:(nullable AEPTargetProduct*) product;\n")),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Example")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-objectivec"},'NSDictionary *mboxParameters = @{@"status":@"Platinum"};\nNSDictionary *profileParameters = @{@"gender":@"female"};\n\nAEPTargetProduct *product =[[AEPTargetProduct alloc] initWithProductId:@"pId1" categoryId:@"cId1"];\n\nAEPTargetOrder *order = [[AEPTargetOrder alloc] initWithId:@"id1" total:1.0 purchasedProductIds:@[@"ppId1"]];\n\nAEPTargetParameters * targetParams = [[AEPTargetParameters alloc] initWithParameters:mboxParameters profileParameters:profileParameters order:order product:product];\n')),(0,o.mdx)(m,{platform:"ios-acp",task:"target-parameters",repeat:"10",mdxType:"Variant"}),(0,o.mdx)("h4",{id:"swift-7"},"Swift"),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Syntax")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-swift"},"public convenience init(parameters: [AnyHashable: Any]?, profileParameters: [AnyHashable: Any]?, order: ACPTargetOrder?, product: ACPTargetProduct?)\n")),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Example")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-swift"},'let mboxParameters = [\n"status": "Platinum"\n]\nlet profileParameters = [\n"gender": "female"\n]\n\nlet product = ACPTargetProduct(id: "24D334", categoryId: "Stationary")\n\nlet order = ACPTargetOrder(id: "ADCKKBC", total: NSNumber(value: 400.50), purchasedProductIds: ["34", "125"])\n\nlet targetParameters = ACPTargetParameters(parameters: mboxParameters, profileParameters: profileParameters, product: product, order: order)\n')),(0,o.mdx)("h4",{id:"objective-c-7"},"Objective-C"),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Syntax")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-objectivec"},"+ (nonnull instancetype) targetParametersWithParameters: (nullable NSDictionary*) targetParameters profileParameters: (nullable NSDictionary*) profileParameters product: (nullable ACPTargetProduct*) product order: (nullable ACPTargetOrder*) order;\n")),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Example")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-objectivec"},'NSDictionary *mboxParameters = @{@"status":@"Platinum"};\nNSDictionary *profileParameters = @{@"gender":@"female"};\n\nACPTargetProduct *product = [ACPTargetProduct targetProductWithId:@"24D334" categoryId:@"Stationary"];\n\nACPTargetOrder *order = [ACPTargetOrder targetOrderWithId:@"ADCKKBC" total:@(400.50) purchasedProductIds:@[@"34", @"125"]];\n\nACPTargetParameters *targetParameters = [ACPTargetParameters targetParametersWithParameters:mboxParameters\nprofileParameters:profileParameters\nproduct:product\norder:order];\n')),(0,o.mdx)(m,{platform:"react-native",task:"target-parameters",repeat:"2",mdxType:"Variant"}),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"JavaScript")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-javascript"},'var mboxParameters = {"status": "platinum"};\nvar profileParameters = {"gender": "female"};\nvar targetProduct = new ACPTargetProduct("24D334", "Stationary");\nvar purchaseIDs = ["34","125"];\nvar targetOrder = new ACPTargetOrder("ADCKKBC", 400.50, purchaseIDs);\nvar targetParameters = new ACPTargetParameters(mboxParameters, profileParameters, targetProduct, targetOrder);\n')),(0,o.mdx)(m,{platform:"android",task:"visual-preview",repeat:"2",mdxType:"Variant"}),(0,o.mdx)("p",null,"On Android, when the application is launched as a result of a deep link, the ",(0,o.mdx)("inlineCode",{parentName:"p"},"collectLaunchInfo")," API is internally invoked, and the Target activity and deep link information is extracted from the Intent extras."),(0,o.mdx)("p",null,"The SDK can only collect information from the launching Activity if ",(0,o.mdx)("a",{parentName:"p",href:"../mobile-core/api-reference.md#application-reference-android-only"},(0,o.mdx)("inlineCode",{parentName:"a"},"setApplication"))," has been called. Setting the Application is only necessary on an Activity that is also an entry point for your application. However, setting the Application on each Activity has no negative impact and ensures that the SDK always has the necessary reference to your Application. We recommend that you call ",(0,o.mdx)("inlineCode",{parentName:"p"},"setApplication")," in each of your Activities."),(0,o.mdx)(m,{platform:"ios-aep",task:"visual-preview",repeat:"10",mdxType:"Variant"}),(0,o.mdx)("h4",{id:"swift-8"},"Swift"),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Syntax")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-swift"},"public static func collectLaunchInfo(_ userInfo: [String: Any])\n")),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Example")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-swift"},'    MobileCore.collectLaunchInfo(["adb_deeplink" : "com.adobe.targetpreview://app.adobetarget.com?at_preview_token=tokenFromTarget"])\n')),(0,o.mdx)("h4",{id:"objective-c-8"},"Objective-C"),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Syntax")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-objectivec"},"+ (void)collectLaunchInfo:(nonnull NSDictionary<NSString*, id>*) userInfo;\n")),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Example")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-objectivec"},' [AEPMobileCore collectLaunchInfo:@{@"adb_deeplink" : @"com.adobe.targetpreview://app.adobetarget.com?at_preview_token=tokenFromTarget"}];\n')),(0,o.mdx)(m,{platform:"ios-acp",task:"visual-preview",repeat:"10",mdxType:"Variant"}),(0,o.mdx)("h4",{id:"swift-9"},"Swift"),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Syntax")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-swift"},"open class func collectLaunchInfo(_ userinfo: [AnyHashable: Any])\n")),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Example")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-swift"},'ACPCore.collectLaunchInfo(["adb_deeplink" : "com.adobe.targetpreview://app.adobetarget.com?at_preview_token=tokenFromTarget"])\n')),(0,o.mdx)("h4",{id:"objective-c-9"},"Objective-C"),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Syntax")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-objectivec"},"+ (void) collectLaunchInfo: (nonnull NSDictionary*) userInfo;\n")),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Example")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-objectivec"},'[ACPCore collectLaunchInfo: @{@"adb_deeplink":@"com.adobe.targetpreview://app.adobetarget.com?at_preview_token=tokenFromTarget"}];`\n')))}u.isMDXComponent=!0}}]);
//# sourceMappingURL=ba293107d20f42ac347b71e1c21db18aa2d36f6a-247fece9bea3a4accd46.js.map