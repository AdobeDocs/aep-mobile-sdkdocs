{"version":3,"file":"component---src-pages-home-getting-started-get-the-sdk-md-2c782d214f6d8e50d0ad.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/pages/home/getting-started/get-the-sdk.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/aep-mobile-sdkdocs/aep-mobile-sdkdocs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nimport Tabs from './tabs/get-the-sdk.md';\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst TabsBlock = makeShortcode(\"TabsBlock\");\nconst Media = makeShortcode(\"Media\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"get-the-adobe-experience-platform-mobile-sdk\"\n    }}>{`Get the Adobe Experience Platform Mobile SDK`}</h1>\n    <p>{`The Adobe Experience Platform SDK is available for Apple iOS (includes iOS, iPadOS, and tvOS) via `}<a parentName=\"p\" {...{\n        \"href\": \"https://cocoapods.org/\"\n      }}>{`Cocoapods`}</a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.swift.org/package-manager/\"\n      }}>{`Swift Package Manager`}</a>{`, and for Google Android via `}<a parentName=\"p\" {...{\n        \"href\": \"https://gradle.org\"\n      }}>{`Gradle`}</a>{`.`}</p>\n    <p>{`Follow the directions below to include the SDK into your mobile application.`}</p>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`For iOS and Android projects, the recommended approach for integrating the SDK is to use supported dependency and package managers as listed for each platform such as Maven (Android), and Cocoapods or Swift Package Manager (iOS).`}</p>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`The SDK can also be downloaded for iOS and Android projects following the listed methods: `}<br />{` 1. For iOS, XCFramework for different SDK extensions are also available for download from corresponding GitHub repositories. For example, Mobile Core and related extensions XCFramework zip file can be found on the GitHub by selecting `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/adobe/aepsdk-core-ios/releases\"\n      }}>{`Releases`}</a>{`. `}<br />{`2. For Android, the aar is already available for download from Maven central. For example, Mobile Core extension aar file can be found under the corresponding `}<a parentName=\"p\" {...{\n        \"href\": \"https://central.sonatype.com/artifact/com.adobe.marketing.mobile/core/2.3.1/versions\"\n      }}>{`package`}</a>{` by selecting `}<a parentName=\"p\" {...{\n        \"href\": \"https://repo1.maven.org/maven2/com/adobe/marketing/mobile/core/2.3.1/\"\n      }}>{`Browse`}</a>{`.`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Select the tag property you created earlier in the Data Collection UI.`}</li>\n      <li parentName=\"ol\">{`In your tag property's details page, Select the `}<strong parentName=\"li\">{`Environments`}</strong>{` tab on the left nav. The `}<strong parentName=\"li\">{`Environments`}</strong>{` tab lists the different environments where you can publish, e.g. `}<strong parentName=\"li\">{`Development`}</strong>{`, `}<strong parentName=\"li\">{`Staging`}</strong>{`, and `}<strong parentName=\"li\">{`Production`}</strong>{`.`}</li>\n      <li parentName=\"ol\">{`Select the install package icon (under `}<strong parentName=\"li\">{`INSTALL`}</strong>{` column) for the appropriate environment row. You should see a dialog box titled `}<strong parentName=\"li\">{`Mobile Install Instructions`}</strong>{`.`}</li>\n      <li parentName=\"ol\">{`On the open dialog box, select the appropriate platform tab `}<strong parentName=\"li\">{`Android`}</strong>{` or `}<strong parentName=\"li\">{`iOS`}</strong>{`.`}</li>\n      <li parentName=\"ol\">{`Copy the necessary dependencies and initialization code from the dialog box to your mobile application project.`}</li>\n    </ol>\n    <TabsBlock orientation=\"horizontal\" slots=\"heading, content\" repeat=\"2\" mdxType=\"TabsBlock\" />\n    <p>{`Android`}</p>\n    <Tabs query=\"platform=android&task=get\" mdxType=\"Tabs\" />\n    <p>{`iOS`}</p>\n    <Tabs query=\"platform=ios&task=get\" mdxType=\"Tabs\" />\n    {/*  React Native\n     <Tabs query=\"platform=react-native&task=get\"/> */}\n    {/* Flutter\n     <Tabs query=\"platform=flutter&task=get\"/> */}\n    <h2 {...{\n      \"id\": \"installation-instructions\"\n    }}>{`Installation instructions`}</h2>\n    <p>{`If you cannot access the `}<strong parentName=\"p\">{`Mobile Install Instructions`}</strong>{` dialog box in the Data Collection UI, complete the following sections to get the Adobe Experience Platform SDK. If you already completed the steps in the Mobile Install Instructions dialog box, no need to complete these steps.`}</p>\n    <h3 {...{\n      \"id\": \"1-add-dependencies-to-your-project\"\n    }}>{`1. Add dependencies to your project`}</h3>\n    <p>{`Each extension needs to be added as a dependency to the mobile application project. The following examples will add the Mobile Core and Profile extensions.`}</p>\n    <TabsBlock orientation=\"horizontal\" slots=\"heading, content\" repeat=\"2\" mdxType=\"TabsBlock\" />\n    <p>{`Android`}</p>\n    <Tabs query=\"platform=android&task=add-dependencies\" mdxType=\"Tabs\" />\n    <p>{`iOS`}</p>\n    <Tabs query=\"platform=ios&task=add-dependencies\" mdxType=\"Tabs\" />\n    <h3 {...{\n      \"id\": \"2-add-initialization-code\"\n    }}>{`2. Add initialization code`}</h3>\n    <p>{`Next you'll need to import SDK libraries into your project and register them for initialization. Extensions are registered with Mobile Core so that they can dispatch and listen for events.`}</p>\n    <InlineAlert variant=\"warning\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`Extension registration is `}<strong parentName=\"p\">{`mandatory`}</strong>{`. Attempting to make extension-specific API calls without registering the extension will lead to undefined behavior.`}</p>\n    <InlineAlert variant=\"warning\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`Currently, the Adobe Experience Platform SDKs do not support running under `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.android.com/training/articles/direct-boot\"\n      }}>{`Direct Boot`}</a>{` mode on Android devices. For Android applications configured to be run during Direct Boot mode, verify if the user has unlocked the devices by calling `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.android.com/reference/android/os/UserManager#isUserUnlocked()\"\n      }}>{`UserManager.isUserUnlocked()`}</a>{` before initializing the SDK.`}</p>\n    <p>{`The following code snippets demonstrate how you can import and register the Mobile Core and Profile extensions. You can also see, for reference, how Identity, Lifecycle, Signal, Profile, and other extensions are imported and registered.`}</p>\n    <TabsBlock orientation=\"horizontal\" slots=\"heading, content\" repeat=\"2\" mdxType=\"TabsBlock\" />\n    <p>{`Android`}</p>\n    <Tabs query=\"platform=android&task=add-initialization\" mdxType=\"Tabs\" />\n    <p>{`iOS`}</p>\n    <Tabs query=\"platform=ios&task=add-initialization\" mdxType=\"Tabs\" />\n    {/* React Native\n     <Tabs query=\"platform=react-native&task=add-initialization\"/> */}\n    {/* Flutter\n     <Tabs query=\"platform=flutter&task=add-initialization\"/> */}\n    <h3 {...{\n      \"id\": \"3-ensure-app-permissions-android-only\"\n    }}>{`3. Ensure app permissions (Android only)`}</h3>\n    <p>{`For Android, the SDK requires standard `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.android.com/training/basics/network-ops/connecting\"\n      }}>{`network connection`}</a>{` permissions in your manifest to send data, collect cellular provider, and record offline tracking calls.`}</p>\n    <p>{`To enable these permissions, add the following lines to your `}<inlineCode parentName=\"p\">{`AndroidManifest.xml`}</inlineCode>{` file, located in your app's application project directory:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-markup\"\n      }}>{`<uses-permission android:name=\"android.permission.INTERNET\" />\n<uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"watch-the-video\"\n    }}>{`Watch the Video`}</h2>\n    <Media slots=\"video\" mdxType=\"Media\" />\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://www.youtube.com/watch?v=K99NwR6Y08E\"\n      }}>{`https://www.youtube.com/watch?v=K99NwR6Y08E`}</a></p>\n    <h2 {...{\n      \"id\": \"additional-information\"\n    }}>{`Additional information`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://docs.gradle.org/current/userguide/userguide.html\"\n        }}>{`How to use Gradle for Android`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://guides.cocoapods.org/using/using-cocoapods\"\n        }}>{`How to use CocoaPods for iOS`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.swift.org/package-manager/#example-usage\"\n        }}>{`How to use Swift Package Manager for iOS`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"../current-sdk-versions.md\"\n        }}>{`Current SDK Versions`}</a></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"get-help\"\n    }}>{`Get help`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Visit the SDK `}<a parentName=\"li\" {...{\n          \"href\": \"https://experienceleaguecommunities.adobe.com/t5/adobe-experience-platform/ct-p/adobe-experience-platform-community\"\n        }}>{`community forum`}</a>{` to ask questions`}</li>\n      <li parentName=\"ul\">{`Contact `}<a parentName=\"li\" {...{\n          \"href\": \"https://experienceleague.adobe.com/?support-solution=General#support\"\n        }}>{`Adobe Experience Cloud customer care`}</a>{` for immediate assistance`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","makeShortcode","name","props","console","warn","InlineAlert","TabsBlock","Media","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","variant","slots","orientation","repeat","query","isMDXComponent"],"sourceRoot":""}