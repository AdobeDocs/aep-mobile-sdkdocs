{"version":3,"file":"component---src-pages-edge-adobe-journey-optimizer-public-classes-inapp-schema-data-md-cd7205510167e32a8ab4.js","mappings":"oTAMaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAW,GAGhC,IAFDC,EAAU,EAAVA,WACGC,GAAK,YAER,OAAO,SAACJ,GAAS,UAAKD,EAAiBK,EAAK,CAAED,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,mBAAiB,oBAEzB,8EAA+D,uBAAYC,WAAW,KAAG,UAAwB,aACjH,eACE,GAAM,iBAAe,kBAEvB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBAAgB,+qCA+BjC,eACE,GAAM,qBAAmB,sBAE3B,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,i/BA+BpC,CAEAJ,EAAWK,gBAAiB,C","sources":["webpack://dev-site-documentation-template/./src/pages/edge/adobe-journey-optimizer/public-classes/inapp-schema-data.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/aep-mobile-sdkdocs/aep-mobile-sdkdocs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"inappschemadata\"\n    }}>{`InAppSchemaData`}</h1>\n    <p>{`Represents the proposition response object containing a `}<inlineCode parentName=\"p\">{`in-app`}</inlineCode>{` schema.`}</p>\n    <h2 {...{\n      \"id\": \"ios-interface\"\n    }}>{`iOS Interface`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`@objc(AEPInAppSchemaData)\n@objcMembers\npublic class InAppSchemaData: NSObject, Codable {\n    /// Represents the content of the InAppSchemaData object.  Its value's type is determined by \\`contentType\\`.\n    public let content: Any\n    \n    /// Determines the value type of \\`content\\`.\n    public let contentType: ContentType\n    \n    /// Date and time this in-app campaign was published represented as epoch seconds\n    public let publishedDate: Int?\n    \n    /// Date and time this in-app campaign will expire represented as epoch seconds\n    public let expiryDate: Int?\n    \n    /// Dictionary containing any additional meta data for this content card\n    public let meta: [String: Any]?\n    \n    /// Dictionary containing parameters that help control display and behavior of the in-app message on mobile\n    public let mobileParameters: [String: Any]?\n    \n    /// Dictionary containing parameters that help control display and behavior of the in-app message on web\n    public let webParameters: [String: Any]?\n    \n    /// Array of remote assets to be downloaded and cached for future use with the in-app message\n    public let remoteAssets: [String]?\n\n    ...\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"android-interface\"\n    }}>{`Android Interface`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class InAppSchemaData implements SchemaData {\n    private Object content = null;\n    private ContentType contentType = null;\n    private int publishedDate = 0;\n    private int expiryDate = 0;\n    private Map<String, Object> meta = null;\n    private Map<String, Object> mobileParameters = null;\n    private Map<String, Object> webParameters = null;\n    private List<String> remoteAssets = null;\n\n    @Override\n    public Object getContent() { return content; }\n\n    public ContentType getContentType() { return contentType; }\n\n    public int getPublishedDate() { return publishedDate; }\n\n    public int getExpiryDate() { return expiryDate; }\n\n    @Nullable public Map<String, Object> getMeta() { return meta; }\n\n    @Nullable public Map<String, Object> getMobileParameters() { return mobileParameters; }\n\n    @Nullable public Map<String, Object> getWebParameters() { return webParameters; }\n\n    @Nullable public List<String> getRemoteAssets() { return remoteAssets; }\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}