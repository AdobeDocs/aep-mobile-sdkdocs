{"version":3,"file":"component---src-pages-documentation-mobile-core-lifecycle-ios-md-bda93953d20ad0eb2add.js","mappings":"4OAUsBA,E,wEAFTC,EAAe,CAAC,EAOvBC,GALgBF,EAKY,cALJ,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,4EAC5B,eAASG,EACjB,GAGKG,EAAc,CAClBL,aAAAA,GAEIM,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGP,GACF,YACD,OAAO,SAACI,GAAD,UAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,eAG5E,eACE,GAAM,8BADR,+BAGA,SAACT,EAAD,CAAaU,QAAQ,UAAUC,MAAM,OAAOF,QAAQ,iBACpD,oGAAqF,qBAAM,oBAA3F,yIAA0O,cAAGG,WAAW,IACpP,KAAQ,4CAD8N,mCAA1O,MAGA,eACE,GAAM,yCADR,0CAGA,gFAAiE,cAAGA,WAAW,IAC3E,KAAQ,wFADqD,uFAAjE,MAGA,eACE,GAAM,+BADR,gCAGA,oIACA,SAACZ,EAAD,CAAaU,QAAQ,OAAOC,MAAM,OAAOF,QAAQ,iBACjD,4JACA,eACE,GAAM,iCADR,mCAGA,0GAA2F,uBAAYG,WAAW,KAAvB,kBAA3F,sIACA,6DAA8C,uBAAYA,WAAW,KAAvB,kBAA9C,+BAAuI,uBAAYA,WAAW,KAAvB,kBAAvI,8BACA,eACE,GAAM,2CADR,6CAGA,iJACA,6HAA8G,uBAAYA,WAAW,KAAvB,eAA9G,yKAA8U,uBAAYA,WAAW,KAAvB,eAA9U,iHACA,eACE,GAAM,+CADR,iDAGA,4GACA,oBACE,eAAIA,WAAW,MAAf,oHACE,eAAIA,WAAW,OACb,eAAIA,WAAW,MAAf,gHAGJ,eAAIA,WAAW,MAAf,2IAA+J,uBAAYA,WAAW,MAAvB,kBAA/J,4IACA,eAAIA,WAAW,MAAf,2DAA+E,uBAAYA,WAAW,MAAvB,kBAA/E,qFAEF,eACE,GAAM,uDADR,yDAGA,kGACA,oBACE,eAAIA,WAAW,MAAf,+HACA,eAAIA,WAAW,MAAf,iIAAqJ,uBAAYA,WAAW,MAAvB,kBAArJ,MACA,eAAIA,WAAW,MAAf,iFAAqG,uBAAYA,WAAW,MAAvB,kBAArG,wFAEF,eACE,GAAM,6CADR,8CAGA,mCAAoB,uBAAYA,WAAW,KAAvB,mBAApB,4GACA,SAACZ,EAAD,CAAaU,QAAQ,OAAOC,MAAM,OAAOF,QAAQ,iBACjD,6GACA,qBAAK,iBAAMG,WAAW,MAClB,UAAa,uBADZ,sKAOL,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBADZ,iJASR,CAEDL,EAAWM,gBAAiB,C","sources":["webpack://dev-site-documentation-template/./src/pages/documentation/mobile-core/lifecycle/ios.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/aep-mobile-sdkdocs/aep-mobile-sdkdocs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"lifecycle-extension-in-ios\"\n    }}>{`Lifecycle extension in iOS`}</h1>\n    <InlineAlert variant=\"warning\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`In version 4 of the iOS SDK, this implementation was completed automatically. `}<br /><br />{`When upgrading to the Experience Platform SDK, you must add code to continue collecting Lifecycle metrics. For more information, see `}<a parentName=\"p\" {...{\n        \"href\": \"../../upgrade-platform-sdks/lifecycle.md\"\n      }}>{`Manual Lifecycle Implementation`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"implementing-lifecycle-metrics-in-ios\"\n    }}>{`Implementing Lifecycle metrics in iOS`}</h2>\n    <p>{`For implementation details, please reference the guide on `}<a parentName=\"p\" {...{\n        \"href\": \"./index.md#register-lifecycle-with-mobile-core-and-add-appropriate-start-pause-calls\"\n      }}>{`registering Lifecycle with Mobile Core and adding the appropriate start/pause calls`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"tracking-app-crashes-in-ios\"\n    }}>{`Tracking app crashes in iOS`}</h2>\n    <p>{`This information helps you understand how crashes are tracked and the best practices to handle false crashes.`}</p>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" /> \n    <p>{`You should upgrade to Adobe Experience Platform SDKs, which contains critical changes that prevent false crashes from being reported.`}</p>\n    <h3 {...{\n      \"id\": \"how-does-crash-reporting-work\"\n    }}>{`How does crash reporting work?`}</h3>\n    <p>{`When creating a new lifecycle session, the SDK looks for a variable it maintains in `}<inlineCode parentName=\"p\">{`NSUserDefaults`}</inlineCode>{` that indicates the previous session was paused. If the flag is not set, then the ensuing launch will also be treated as a crash.`}</p>\n    <p>{`The variable is controlled by calls to `}<inlineCode parentName=\"p\">{`lifecyclePause`}</inlineCode>{` (which sets the flag) and `}<inlineCode parentName=\"p\">{`lifecycleStart`}</inlineCode>{` (which clears the flag).`}</p>\n    <h3 {...{\n      \"id\": \"why-does-adobe-measure-crashes-this-way\"\n    }}>{`Why does Adobe measure crashes this way?`}</h3>\n    <p>{`This approach of measuring crashes provides a high-level answer to the question, \"Did the user exit my app intentionally?\"`}</p>\n    <p>{`Crash reporting libraries provided by companies such as Apteligent (formerly Crittercism) use a global `}<inlineCode parentName=\"p\">{`NSException`}</inlineCode>{` handler to provide more detailed crash reporting. Your app is not allowed to have more than one of these kinds of handlers. Adobe decided to not implement a global `}<inlineCode parentName=\"p\">{`NSException`}</inlineCode>{` handler to prevent build errors, knowing that our customers might be using other crash reporting providers.`}</p>\n    <h3 {...{\n      \"id\": \"what-can-cause-a-false-crash-to-be-reported\"\n    }}>{`What can cause a false crash to be reported?`}</h3>\n    <p>{`The following scenarios are known to falsely cause a crash to be reported by the SDK:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`If you are debugging using Xcode, re-launching the app while it is running in the foreground will cause a crash.`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`You can avoid a crash in this scenario by backgrounding the app prior to re-launching the app from Xcode.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`If your app is launched in the background because of an enabled background capability (e.g. - background fetch, location update), then `}<inlineCode parentName=\"li\">{`lifecycleStart`}</inlineCode>{` is called and the app never comes to the foreground, the next launch (whether in the background or foreground) will result in a crash.`}</li>\n      <li parentName=\"ul\">{`If you programmatically delete Adobeâ€™s pause flag from `}<inlineCode parentName=\"li\">{`NSUserDefaults`}</inlineCode>{`, while the app is in the background, the next launch or resume causes a crash.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"how-can-i-prevent-false-crashes-from-being-reported\"\n    }}>{`How can I prevent false crashes from being reported?`}</h3>\n    <p>{`The following practices can help prevent false crashes from being reported:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Perform your development against non-production report suites to ensure there aren't false crashes from Xcode development.`}</li>\n      <li parentName=\"ul\">{`If your app has background capabilities, ensure that you are checking that the app is not in the background prior to calling `}<inlineCode parentName=\"li\">{`lifecycleStart`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`Do not delete or modify any values that the Experience Platform SDKs puts in `}<inlineCode parentName=\"li\">{`NSUserDefaults`}</inlineCode>{`. If these values are modified outside the SDK, the data reported will be invalid.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"collecting-additional-data-with-lifecycle\"\n    }}>{`Collecting additional data with Lifecycle`}</h2>\n    <p>{`When calling `}<inlineCode parentName=\"p\">{`lifecycleStart:`}</inlineCode>{`, you can optionally pass a dictionary of additional data that will be attached to the lifecycle event.`}</p>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" /> \n    <p>{`You can pass additional data to lifecycle on app launch, app resume, both, or neither.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`// Objective-C\n- (void) applicationWillEnterForeground:(UIApplication *)application {      \n    [ACPCore lifecycleStart:@{@\"state\": @\"appResume\"}];      \n}\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`// Swift\nfunc applicationWillEnterForeground(_ application: UIApplication) {      \n    ACPCore.lifecycleStart([\"state\": \"appResume\"])\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","InlineAlert","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","variant","slots","parentName","isMDXComponent"],"sourceRoot":""}