{"version":3,"file":"component---src-pages-edge-adobe-journey-optimizer-tutorials-handle-clicks-md-278453fea7d60e391bec.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/pages/edge/adobe-journey-optimizer/tutorials/handle-clicks.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/aep-mobile-sdkdocs/aep-mobile-sdkdocs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"handle-url-clicks-from-an-in-app-message\"\n    }}>{`Handle URL clicks from an in-app message`}</h1>\n    <p>{`When a link is clicked in an in-app message, the `}<inlineCode parentName=\"p\">{`FullscreenMessageDelegate`}</inlineCode>{` is responsible for handling behavior.`}</p>\n    <p>{`If the scheme used in the link `}<strong parentName=\"p\">{`is not`}</strong>{` `}<inlineCode parentName=\"p\">{`adbinapp://`}</inlineCode>{`, the link will open in the containing WKWebView (iOS) or WebView (Android) - this is default behavior.`}</p>\n    <p>{`If the scheme used in the link `}<strong parentName=\"p\">{`is`}</strong>{` `}<inlineCode parentName=\"p\">{`adbinapp://`}</inlineCode>{`, the following behavior may occur:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`The in-app message is dismissed`}</li>\n      <li parentName=\"ul\">{`An interaction event is sent to Experience Edge`}</li>\n      <li parentName=\"ul\">{`The default animation is overridden`}</li>\n      <li parentName=\"ul\">{`The URL will be opened by the OS, potentially resulting in:`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`The link being opened by the device's default web browser`}</li>\n          <li parentName=\"ul\">{`Opening of a deeplink`}</li>\n        </ul>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"dismiss-the-in-app-message\"\n    }}>{`Dismiss the in-app message`}</h2>\n    <p>{`In order for the SDK to remove the view containing an in-app message from the UI, the clicked link must have a host of `}<inlineCode parentName=\"p\">{`dismiss`}</inlineCode>{`.`}</p>\n    <p>{`The example below is a link that will dismiss the current in-app message:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`adbinapp://dismiss\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"send-a-message-interaction-event-to-experience-edge\"\n    }}>{`Send a message interaction event to Experience Edge`}</h2>\n    <p>{`Adding a URL variable named `}<inlineCode parentName=\"p\">{`interaction`}</inlineCode>{` will cause the SDK to send an Experience Event to the Adobe Experience Edge.`}</p>\n    <p>{`The example below will dismiss the current in-app message and send a `}<inlineCode parentName=\"p\">{`decisioning.propositionInteract`}</inlineCode>{` event to edge with an action of `}<inlineCode parentName=\"p\">{`imageLiked`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`adbinapp://dismiss?interaction=imageLiked\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"override-the-default-dismiss-animation\"\n    }}>{`Override the default dismiss animation`}</h2>\n    <p>{`Adding a URL variable named `}<inlineCode parentName=\"p\">{`animate`}</inlineCode>{` will cause the SDK to override the dismiss animation for the message.`}</p>\n    <p>{`The example below will dismiss the current in-app message, and override the animation so the message exits to the right side of the screen:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`adbinapp://dismiss?animate=right\n`}</code></pre>\n    <p>{`Below is a list of valid values for `}<inlineCode parentName=\"p\">{`animate`}</inlineCode>{`:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Value`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`none`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Message is removed with no animation`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`left`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Message animates off the screen to the `}<strong parentName=\"td\">{`left`}</strong>{` when dismissed`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`right`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Message animates off the screen to the `}<strong parentName=\"td\">{`right`}</strong>{` when dismissed`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`top`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Message animates off the screen to the `}<strong parentName=\"td\">{`top`}</strong>{` when dismissed`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`bottom`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Message animates off the screen to the `}<strong parentName=\"td\">{`bottom`}</strong>{` when dismissed`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`If the value for `}<inlineCode parentName=\"p\">{`animate`}</inlineCode>{` is empty, or if it doesn't match one of the above valid values, an animation of `}<inlineCode parentName=\"p\">{`none`}</inlineCode>{` will be used.`}</p>\n    <h2 {...{\n      \"id\": \"open-a-link-from-the-url\"\n    }}>{`Open a link from the URL`}</h2>\n    <p>{`If the value for a URL variable named `}<inlineCode parentName=\"p\">{`link`}</inlineCode>{` contains a valid URL, the SDK will open the link using the OS-defined API.`}</p>\n    <h3 {...{\n      \"id\": \"open-location-in-the-default-web-browser\"\n    }}>{`Open location in the default web browser`}</h3>\n    <p>{`If the provided URL does not contain a custom scheme, the URL will be loaded in the device's default web browser.  `}</p>\n    <p>{`The example below will dismiss the current in-app message, send a `}<inlineCode parentName=\"p\">{`decisioning.propositionInteract`}</inlineCode>{` event to edge with an action of `}<inlineCode parentName=\"p\">{`adobe`}</inlineCode>{`, and open the adobe.com website in the default web browser for the user's device:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`adbinapp://dismiss?interaction=adobe&link=https%3A%2F%2Fwww.adobe.com%3Fkey%3Dvalue\n`}</code></pre>\n    <InlineAlert variant=\"warning\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`The `}<inlineCode parentName=\"p\">{`link`}</inlineCode>{` parameter must be URL encoded. If you are setting this value in the AJO message authoring UI, the value will automatically be encoded. If your message is custom HTML, you must encode the value manually.`}</p>\n    <h3 {...{\n      \"id\": \"open-a-deeplink\"\n    }}>{`Open a deeplink`}</h3>\n    <InlineAlert variant=\"help\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`Android deeplinks require intent filters to be added in the app manifest to correctly handle deeplink URLs. Please see the `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.android.com/training/app-links/deep-linking\"\n      }}>{`Android developer documentation`}</a>{` for more information.`}</p>\n    <InlineAlert variant=\"help\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`iOS deeplinks require a custom URL scheme to be setup in the application's `}<inlineCode parentName=\"p\">{`info`}</inlineCode>{` tab within Xcode to correctly handle deeplink URLs. Please see the `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.apple.com/documentation/xcode/defining-a-custom-url-scheme-for-your-app\"\n      }}>{`Apple developer documentation`}</a>{` for more information.`}</p>\n    <p>{`If the provided URL contains a custom scheme, the app that handles the custom scheme will be launched.`}</p>\n    <p>{`The example below will dismiss the current in-app message, then launch an app owned by the same developer which handles the scheme `}<inlineCode parentName=\"p\">{`myAppScheme`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`adbinapp://dismiss?link=myAppScheme://deeplinked\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","InlineAlert","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","variant","slots","isMDXComponent"],"sourceRoot":""}