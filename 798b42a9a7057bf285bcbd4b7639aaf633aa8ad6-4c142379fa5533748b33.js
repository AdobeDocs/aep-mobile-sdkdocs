"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[5216],{41233:function(e,a,t){t.r(a),t.d(a,{_frontmatter:function(){return o},default:function(){return u}});var r=t(87462),n=t(63366),l=(t(15007),t(64983)),i=t(91515),d=["components"],o={},m=function(e){return function(a){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,l.mdx)("div",a)}},s=m("Variant"),p=m("InlineNestedAlert"),c={_frontmatter:o},g=i.Z;function u(e){var a=e.components,t=(0,n.Z)(e,d);return(0,l.mdx)(g,(0,r.Z)({},c,t,{components:a,mdxType:"MDXLayout"}),(0,l.mdx)(s,{platform:"android",api:"clear-prefetch-cache",repeat:"5",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"java"},"Java"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"public static void clearPrefetchCache()\n")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"Target.clearPrefetchCache();\n")),(0,l.mdx)(s,{platform:"ios",api:"clear-prefetch-cache",repeat:"10",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"swift"},"Swift"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},"static func clearPrefetchCache()\n")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},"Target.clearPrefetchCache()\n")),(0,l.mdx)("h4",{id:"objective-c"},"Objective-C"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objc"},"+ (void) clearPrefetchCache\n")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objc"},"[AEPMobileTarget clearPrefetchCache];\n")),(0,l.mdx)(s,{platform:"android",api:"clicked-location",repeat:"6",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"java-1"},"Java"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"public static void clickedLocation(final String mboxName, final TargetParameters parameters)\n")),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("inlineCode",{parentName:"li"},"mboxName"),": A string that contains the mbox location for which the click notification will be sent to Target."),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("inlineCode",{parentName:"li"},"parameters"),": A ",(0,l.mdx)("inlineCode",{parentName:"li"},"TargetParameters")," object configured for the request.")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},'// Mbox parameters\nMap<String, String> mboxParameters = new HashMap<>();\nmboxParameters.put("membership", "prime");\n\n// Product parameters\nTargetProduct targetProduct = new TargetProduct("CEDFJC", "Electronics");\n\n\n// Order parameters\nList<String> purchasedIds = new ArrayList<String>();\npurchasedIds.add("81");\npurchasedIds.add("123");\npurchasedIds.add("190");\nTargetOrder targetOrder = new TargetOrder("NJJICK", "650", purchasedIds);\n\n// Profile parameters\nMap<String, String> profileParameters = new HashMap<>();\nprofileParameters.put("ageGroup", "20-32");\n\n// Create Target Parameters\nTargetParameters targetParameters = new TargetParameters.Builder(mboxParameters)\n                                .profileParameters(profileParameters)\n                                .order(targetOrder)\n                                .product(targetProduct)\n                                .build();\n\nTarget.clickedLocation("cartLocation", targetParameters);\n')),(0,l.mdx)(s,{platform:"ios",api:"clicked-location",repeat:"12",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"swift-1"},"Swift"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},"static func clickedLocation(_ name: String, targetParameters: TargetParameters?)\n")),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("inlineCode",{parentName:"li"},"name"),": A string that contains the mbox location for which the click notification will be sent to Target."),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("inlineCode",{parentName:"li"},"targetParameters"),": A ",(0,l.mdx)("inlineCode",{parentName:"li"},"TargetParameters")," object configured for the request.")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},'Target.clickedLocation("aep-loc-1", targetParameters: TargetParameters(parameters: ["mbox_parameter_key": "mbox_parameter_value"], profileParameters: ["name": "Smith"], order: TargetOrder(id: "id1", total: 1.0, purchasedProductIds: ["ppId1"]), product: TargetProduct(productId: "pId1", categoryId: "cId1")))\n')),(0,l.mdx)("h4",{id:"objective-c-1"},"Objective-C"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objc"},"+ (void) clickedLocation: (nonnull NSString*) name withTargetParameters: (nullable AEPTargetParameters* targetParameters\n")),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("inlineCode",{parentName:"li"},"name"),": A string that contains the mbox location for which the click notification will be sent to Target."),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("inlineCode",{parentName:"li"},"targetParameters"),": A ",(0,l.mdx)("inlineCode",{parentName:"li"},"TargetParameters")," object configured for the request.")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objc"},'AEPTargetOrder *order = [[AEPTargetOrder alloc] initWithId:@"id1" total:1.0 purchasedProductIds:@[@"ppId1"]];\nAEPTargetProduct *product =[[AEPTargetProduct alloc] initWithProductId:@"pId1" categoryId:@"cId1"];\nAEPTargetParameters * targetParams = [[AEPTargetParameters alloc] initWithParameters:@{@"mbox_parameter_key":@"mbox_parameter_value"} profileParameters:@{@"name":@"Smith"} order:order product:product];\n[AEPMobileTarget clickedLocation:@"aep-loc-1" withTargetParameters:targetParams];\n')),(0,l.mdx)(s,{platform:"android",api:"displayed-locations",repeat:"6",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"java-2"},"Java"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"public static void displayedLocations(final List<String> mboxNames, final TargetParameters targetParameters)\n")),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("inlineCode",{parentName:"li"},"mboxNames"),": A list of the mbox locations for which the display notification will be sent to Target."),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("inlineCode",{parentName:"li"},"targetParameters"),": The ",(0,l.mdx)("inlineCode",{parentName:"li"},"TargetParameters")," object configured for the request.")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},'List<String> purchasedProductIds = new ArrayList<String>();\npurchasedProductIds.add("34");\npurchasedProductIds.add("125"); \nTargetOrder targetOrder = new TargetOrder("123", 567.89, purchasedProductIds);\n\nTargetProduct targetProduct = new TargetProduct("123", "Books");\n\nTargetParameters targetParameters = new TargetParameters.Builder()\n.parameters(new HashMap<String, String>())\n.profileParameters(new HashMap<String, String>())\n.product(targetProduct)\n.order(targetOrder)\n.build();\n\nList<String> mboxList = new ArrayList<>();\nmboxList.add("mboxName1");\n\nTarget.displayedLocations(mboxList, targetParameters);\n')),(0,l.mdx)(s,{platform:"ios",api:"displayed-locations",repeat:"12",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"swift-2"},"Swift"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},"static func displayedLocations(_ names: [String], targetParameters: TargetParameters?)\n")),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("inlineCode",{parentName:"li"},"names"),": An array of the mbox locations for which the display notification will be sent to Target."),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("inlineCode",{parentName:"li"},"targetParameters"),": A ",(0,l.mdx)("inlineCode",{parentName:"li"},"TargetParameters")," object configured for the request.")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},'Target.displayedLocations(\n              ["mboxName1", "mboxName2"], \n        targetParameters: TargetParameters(\n        parameters: nil,\n        profileParameters: nil,\n        order: TargetOrder(id: "ADCKKBC", total: 400.50, purchasedProductIds: ["34", "125"]),\n        product: TargetProduct(productId: "24D334", categoryId: "Stationary")\n        )\n)\n')),(0,l.mdx)("h4",{id:"objective-c-2"},"Objective-C"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objc"},"+ (void) displayedLocations: (nonnull NSArray<NSString*>*) names withTargetParameters: (nullable AEPTargetParameters*) targetParameters\n")),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("inlineCode",{parentName:"li"},"names"),": An array of the mbox locations for which the display notification will be sent to Target."),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("inlineCode",{parentName:"li"},"targetParameters"),": A ",(0,l.mdx)("inlineCode",{parentName:"li"},"TargetParameters")," object configured for the request.")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objc"},'AEPTargetOrder *order = [[AEPTargetOrder alloc] initWithId:@"ADCKKBC" total:400.50 purchasedProductIds:@[@"34", @"125"]];\nAEPTargetProduct *product =[[AEPTargetProduct alloc] initWithProductId:@"24D334" categoryId:@"Stationary"];\nAEPTargetParameters * targetParams = [[AEPTargetParameters alloc] initWithParameters:nil profileParameters:nil order:order product:product];\n[AEPMobileTarget displayedLocations:@[@"mboxName1", @"mboxName2"] withTargetParameters:targetParams];\n')),(0,l.mdx)(s,{platform:"android",api:"extension-version",repeat:"5",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"java-3"},"Java"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"public String extensionVersion()\n")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"Target.extensionVersion();\n")),(0,l.mdx)(s,{platform:"ios",api:"extension-version",repeat:"10",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"swift-3"},"Swift"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},"static var extensionVersion: String\n")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},"let targetVersion = Target.extensionVersion\n")),(0,l.mdx)("h4",{id:"objective-c-3"},"Objective-C"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objc"},"+ (nonnull NSString*) extensionVersion\n")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objc"},"NSString *targetVersion = [AEPMobileTarget extensionVersion];\n")),(0,l.mdx)(s,{platform:"android",api:"get-session-id",repeat:"6",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"java-4"},"Java"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"public static void getSessionId(final AdobeCallback<String> callback)\n")),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("inlineCode",{parentName:"li"},"callback"),": A callback that is invoked with the ",(0,l.mdx)("inlineCode",{parentName:"li"},"sessionId")," value, or ",(0,l.mdx)("inlineCode",{parentName:"li"},"null")," if there was an error retrieving it.")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"Target.getSessionId(new AdobeCallback<String>() {                    \n    @Override\n    public void call(String sessionId) {\n                // read Target sessionId\n    }\n});\n")),(0,l.mdx)(s,{platform:"ios",api:"get-session-id",repeat:"12",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"swift-4"},"Swift"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},"static func getSessionId(_ completion: @escaping (String?, Error?) -> Void)\n")),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("inlineCode",{parentName:"li"},"completion"),": A callback that is invoked with the ",(0,l.mdx)("inlineCode",{parentName:"li"},"sessionId")," value, or ",(0,l.mdx)("inlineCode",{parentName:"li"},"nil")," if there was an error retrieving it.")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},"Target.getSessionId { (id, err) in\n    // read Target sessionId\n}\n")),(0,l.mdx)("h4",{id:"objective-c-4"},"Objective-C"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objc"},"+ (void) getSessionId: (void (nonnull ^) (nullable NSString* sessionId, nullable NSError* error)) completion\n")),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("inlineCode",{parentName:"li"},"completion"),": A callback that is invoked with the ",(0,l.mdx)("inlineCode",{parentName:"li"},"sessionId")," value, or ",(0,l.mdx)("inlineCode",{parentName:"li"},"nil")," if there was an error retrieving it.")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objc"},"[AEPMobileTarget getSessionId:^(NSString *sessionId, NSError *error){\n    // read Target sessionId\n}];\n")),(0,l.mdx)(s,{platform:"android",api:"get-third-party-id",repeat:"6",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"java-5"},"Java"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"public static void getThirdPartyId(final AdobeCallback<String> callback)\n")),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("inlineCode",{parentName:"li"},"callback"),": A callback that is invoked with the ",(0,l.mdx)("inlineCode",{parentName:"li"},"thirdPartyId")," value. If no third-party ID was set, this value will be ",(0,l.mdx)("inlineCode",{parentName:"li"},"null"),".")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"Target.getThirdPartyId(new AdobeCallback<String>() {                    \n    @Override\n    public void call(String thirdPartyId) {\n                // read Target thirdPartyId\n    }\n});\n")),(0,l.mdx)(s,{platform:"ios",api:"get-third-party-id",repeat:"12",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"swift-5"},"Swift"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},"static func getThirdPartyId(_ completion: @escaping (String?, Error?) -> Void)\n")),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("inlineCode",{parentName:"li"},"completion"),": A callback that is invoked with the ",(0,l.mdx)("inlineCode",{parentName:"li"},"thirdPartyId")," value. If no ",(0,l.mdx)("inlineCode",{parentName:"li"},"third-party")," ID was set, this value will be ",(0,l.mdx)("inlineCode",{parentName:"li"},"nil"),".")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},"Target.getThirdPartyId { (id, err) in\n    // read Target thirdPartyId\n}\n")),(0,l.mdx)("h4",{id:"objective-c-5"},"Objective-C"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objc"},"+ (void) getThirdPartyId: (nonnull void (^) (nullable NSString* thirdPartyId, nullable NSError* error)) completion\n")),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("inlineCode",{parentName:"li"},"completion"),": A callback that is invoked with the ",(0,l.mdx)("inlineCode",{parentName:"li"},"thirdPartyId")," value. If no ",(0,l.mdx)("inlineCode",{parentName:"li"},"third-party")," ID was set, this value will be ",(0,l.mdx)("inlineCode",{parentName:"li"},"nil"),".")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objc"},"[AEPMobileTarget getThirdPartyId:^(NSString *thirdPartyID, NSError *error){\n    // read Target thirdPartyId\n}];\n")),(0,l.mdx)(s,{platform:"android",api:"get-tnt-id",repeat:"6",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"java-6"},"Java"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"public static void getTntId(final AdobeCallback<String> callback)\n")),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("inlineCode",{parentName:"li"},"callback"),": A callabck that is invoked with the ",(0,l.mdx)("inlineCode",{parentName:"li"},"tntId")," value, or ",(0,l.mdx)("inlineCode",{parentName:"li"},"null")," if there was an error retrieving it.")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"Target.getTntId(new AdobeCallback<String>() {\n    @Override\n    public void call(String tntId) {\n        // read target's tntid\n    }\n});\n")),(0,l.mdx)(s,{platform:"ios",api:"get-tnt-id",repeat:"12",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"swift-6"},"Swift"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},"static func getTntId(_ completion: @escaping (String?, Error?) -> Void)\n")),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("inlineCode",{parentName:"li"},"completion"),": A callback that is invoked with the ",(0,l.mdx)("inlineCode",{parentName:"li"},"tntId")," value. If no Target ID was set, this value will be ",(0,l.mdx)("inlineCode",{parentName:"li"},"nil"),".")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},"Target.getTntId({ (id, err) in\n    // read target's tntId        \n})\n")),(0,l.mdx)("h4",{id:"objective-c-6"},"Objective-C"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objc"},"+ (void) getTntId: (void (nonnull ^) (nullable NSString* tntId, nullable NSError* error)) completion\n")),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("inlineCode",{parentName:"li"},"completion"),": A callback that is invoked with the ",(0,l.mdx)("inlineCode",{parentName:"li"},"tntId")," value. If no Target ID was set, this value will be ",(0,l.mdx)("inlineCode",{parentName:"li"},"nil"),".")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objc"},"[AEPMobileTarget getTntId:^(NSString *tntID, NSError *error){\n    // read target's tntId \n}];\n")),(0,l.mdx)(s,{platform:"android",api:"prefetch-content",repeat:"6",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"java-7"},"Java"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"public static void prefetchContent(final List<TargetPrefetch> mboxPrefetchList, final TargetParameters parameters, final AdobeCallback<String> callback)\n")),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("inlineCode",{parentName:"li"},"mboxPrefetchList"),": A list of ",(0,l.mdx)("inlineCode",{parentName:"li"},"TargetPrefetch")," objects for various mbox locations."),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("inlineCode",{parentName:"li"},"parameters"),": A ",(0,l.mdx)("inlineCode",{parentName:"li"},"TargetParameters")," object configured for the prefetch request."),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("inlineCode",{parentName:"li"},"callback"),": A callback that is invoked with a ",(0,l.mdx)("inlineCode",{parentName:"li"},"null")," value if the prefetch is successful, or with an error message string otherwise.")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},'// first prefetch request\nMap<String, String> mboxParameters1 = new HashMap<>();\nmboxParameters1.put("status", "platinum");\n\nTargetParameters targetParameters1 = new TargetParameters.Builder()\n.parameters(mboxParameters1)\n.build();\n\nTargetPrefetch prefetchRequest1 = new TargetPrefetch("mboxName1", targetParameters1);\n\n// second prefetch request\nMap<String, String> mboxParameters2 = new HashMap<>();\nmboxParameters2.put("userType", "paid");\n\nList<String> purchasedIds = new ArrayList<String>();\npurchasedIds.add("34");\npurchasedIds.add("125");\nTargetOrder targetOrder = new TargetOrder("ADCKKIM", 344.30, purchasedIds);\n\nTargetProduct targetProduct = new TargetProduct("24D3412", "Books");\n\nTargetParameters targetParameters2 = new TargetParameters.Builder()\n.parameters(mboxParameters2)\n.product(targetProduct)\n.order(targetOrder)\n.build();\n\nTargetPrefetch prefetchRequest2 = new TargetPrefetch("mboxName2", targetParameters2);\n\nList<TargetPrefetch> prefetchMboxesList = new ArrayList<>();\nprefetchMboxesList.add(prefetchRequest1);\nprefetchMboxesList.add(prefetchRequest2);\n\n// Call the prefetchContent API.\nTargetParamters targetParameters = null;\nTarget.prefetchContent(prefetchMboxesList, targetParameters, prefetchStatusCallback);\n')),(0,l.mdx)(s,{platform:"ios",api:"prefetch-content",repeat:"12",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"swift-7"},"Swift"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},"static func prefetchContent(_ prefetchArray: [TargetPrefetch], with targetParameters: TargetParameters? = nil, _ completion: ((Error?) -> Void)?)\n")),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("inlineCode",{parentName:"li"},"prefetchArray"),": An array of ",(0,l.mdx)("inlineCode",{parentName:"li"},"TargetPrefetch")," objects for various mbox locations."),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("inlineCode",{parentName:"li"},"targetParameters"),": A ",(0,l.mdx)("inlineCode",{parentName:"li"},"TargetParameters")," object configured for the prefetch request."),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("inlineCode",{parentName:"li"},"completion"),": A callback that is invoked with a ",(0,l.mdx)("inlineCode",{parentName:"li"},"nil")," value if the prefetch is successful, or with an error otherwise.")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},'let TargetParameters1 = TargetParameters(\n    parameters: ["status": "platinum"],\n    profileParameters: ["age": "20"],\n    order: TargetOrder(id: "ADCKKIM", total: 344.30, purchasedProductIds: ["34", "125"]),\n    product: TargetProduct(productId: "24D3412", categoryId:"Books")\n    )\n\nlet TargetParameters2 = TargetParameters(\n    parameters: ["userType": "Paid"],\n    profileParameters: nil,\n    order: TargetOrder(id: "ADCKKIM", total: 344.30, purchasedProductIds: ["id1", "id2"]),\n    product: TargetProduct(productId: "764334", categoryId:"Online")\n    )\n\nlet globalTargetParameters = TargetParameters(\n    parameters: ["status": "progressive"],\n    profileParameters: ["age": "20-32"],\n    order: TargetOrder(id: "ADCKKBC", total: 400.50, purchasedProductIds: ["34", "125"]),\n    product: TargetProduct(productId: "24D334", categoryId:"Stationary")\n    )\n\nTarget.prefetchContent([\n    TargetPrefetch(name: "mboxName1", targetParameters: TargetParameters1),\n    TargetPrefetch(name: "mboxName2", targetParameters: TargetParameters2),\n    ],\n    with: globalTargetParameters\n    ){ error in\n        // do something with the callback response\n}\n')),(0,l.mdx)("h4",{id:"objective-c-7"},"Objective-C"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objc"},"+ (void) prefetchContent: (nonnull NSArray<AEPTargetPrefetchObject*>*) targetPrefetchObjectArray \n         withParameters: (nullable AEPTargetParameters*) targetParameters \n         callback: (nullable void (^) (nullable NSError* error)) completion\n")),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("inlineCode",{parentName:"li"},"targetPrefetchObjectArray"),": An array of ",(0,l.mdx)("inlineCode",{parentName:"li"},"AEPTargetPrefetchObject")," objects for various mbox locations."),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("inlineCode",{parentName:"li"},"targetParameters"),": An ",(0,l.mdx)("inlineCode",{parentName:"li"},"AEPTargetParameters")," object configured for the prefetch request."),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("inlineCode",{parentName:"li"},"completion"),": A callback that is invoked with a ",(0,l.mdx)("inlineCode",{parentName:"li"},"nil")," value if the prefetch is successful, or with an error otherwise.")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objc"},'NSDictionary *mboxParameters1 = @{@"status":@"platinum"};\nNSDictionary *profileParameters1 = @{@"age":@"20"};\nAEPTargetProduct *product1 = [[AEPTargetProduct alloc] initWithProductId:@"24D3412" categoryId:@"Books"];\nAEPTargetOrder *order1 = [[AEPTargetOrder alloc] initWithId:@"ADCKKIM" total:[@(344.30) doubleValue] purchasedProductIds:@[@"34", @"125"]];\n\nAEPTargetParameters *targetParameters1 = [[AEPTargetParameters alloc] initWithParameters:mboxParameters1 profileParameters:profileParameters1 order:order1 product:product1 ];\n\nNSDictionary *mboxParameters2 = @{@"userType":@"Paid"};\nAEPTargetProduct *product2 = [[AEPTargetProduct alloc] initWithProductId:@"764334" categoryId:@"Online"];\nAEPTargetOrder *order2 = [[AEPTargetOrder alloc] initWithId:@"ADCKKIM" total:[@(344.30) doubleValue] purchasedProductIds:@[@"id1",@"id2"]];\nAEPTargetParameters *targetParameters2 = [[AEPTargetParameters alloc] initWithParameters:mboxParameters2 profileParameters:nil order:order2 product:product2 ];\n\n// Creating Prefetch Objects\nAEPTargetPrefetchObject *prefetch1 = [[AEPTargetPrefetchObject alloc] initWithName: @"logo" targetParameters:targetParameters1];\nAEPTargetPrefetchObject *prefetch2 = [[AEPTargetPrefetchObject alloc] initWithName: @"buttonColor" targetParameters:targetParameters2];\n\n// Creating prefetch Array\nNSArray *prefetchArray = @[prefetch1,prefetch2];\n\n// Creating Target parameters\nNSDictionary *mboxParameters = @{@"status":@"progressive"};\nNSDictionary *profileParameters = @{@"age":@"20-32"};\nAEPTargetProduct *product = [[AEPTargetProduct alloc] initWithProductId:@"24D334" categoryId:@"Stationary"];\nAEPTargetOrder *order = [[AEPTargetOrder alloc] initWithId:@"ADCKKBC" total:[@(400.50) doubleValue] purchasedProductIds:@[@"34", @"125"]];\n\nAEPTargetParameters *targetParameters = [[AEPTargetParameters alloc] initWithParameters:mboxParameters\nprofileParameters:profileParameters\norder:order\nproduct:product];\n\n// Target API Call\n[AEPMobileTarget prefetchContent:prefetchArray withParameters:targetParameters callback:^(NSError * _Nullable error){\n// do something with the callback response\n}];\n')),(0,l.mdx)(s,{platform:"android",api:"register-extension",repeat:"5",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"java-8"},"Java"),(0,l.mdx)("h4",{id:"syntax"},"Syntax"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"public static void registerExtension()\n")),(0,l.mdx)("h4",{id:"example"},"Example"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"Target.registerExtension();\n")),(0,l.mdx)(s,{platform:"android",api:"reset-experience",repeat:"5",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"java-9"},"Java"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"public static void resetExperience()\n")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"Target.resetExperience();\n")),(0,l.mdx)(s,{platform:"ios",api:"reset-experience",repeat:"10",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"swift-8"},"Swift"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},"static func resetExperience()\n")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},"Target.resetExperience()\n")),(0,l.mdx)("h4",{id:"objective-c-8"},"Objective-C"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objc"},"+ (void) resetExperience\n")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objc"},"[AEPMobileTarget resetExperience];\n")),(0,l.mdx)(s,{platform:"android",api:"retrieve-location-content",repeat:"6",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"java-10"},"Java"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"public static void retrieveLocationContent(final List<TargetRequest> targetRequestList, final TargetParameters parameters)\n")),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("inlineCode",{parentName:"li"},"targetRequestList"),": A list of ",(0,l.mdx)("inlineCode",{parentName:"li"},"TargetRequest")," objects for various mbox locations."),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("inlineCode",{parentName:"li"},"parameters"),": A ",(0,l.mdx)("inlineCode",{parentName:"li"},"TargetParameters")," object configured for the retrieve location request.")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},'// define parameters for first request\nMap<String, String> mboxParameters1 = new HashMap<>();\nmboxParameters1.put("status", "platinum");\n\nTargetParameters parameters1 = new TargetParameters.Builder().parameters(mboxParameters1).build();\n\nTargetRequest request1 = new TargetRequest("mboxName1", parameters1, "defaultContent1",\n                                            new AdobeCallback<String>() {\n                                                @Override\n                                                public void call(String value) {\n                                                    // do something with target content.\n                                                }\n                                            });\n\n// define parameters for second request\nMap<String, String> mboxParameters2 = new HashMap<>();\nmboxParameters2.put("userType", "paid");\n\nList<String> purchasedIds = new ArrayList<String>();\npurchasedIds.add("34");\npurchasedIds.add("125");\nTargetOrder targetOrder = new TargetOrder("ADCKKIM", 344.30, purchasedIds);\n\nTargetProduct targetProduct = new TargetProduct("24D3412", "Books");\n\nTargetParameters parameters2 = new TargetParameters.Builder()\n                               .parameters(mboxParameters2)\n                               .product(targetProduct)\n                               .order(targetOrder)\n                               .build();\n\nTargetRequest request2 = new TargetRequest("mboxName2", parameters2, "defaultContent2",\n                                            new AdobeTargetDetailedCallback() {\n                                                @Override\n                                                public void call(final String content, final Map<String, Object> data) {\n                                                    if (content != null && !content.isEmpty()) {\n                                                        // do something with the target content.\n                                                    }\n\n                                                    // Read the data Map containing one or more of response tokens, analytics payload \n                                                    // and click metric analytics payload, if available\n                                                    if (data != null && !data.isEmpty()) {\n\n                                                        Map<String, Object> responseTokens = data.containsKey("responseTokens") ? \n                                                                                            (Map<String, Object>) data.get("responseTokens") : \n                                                                                            null;\n\n                                                        Map<String, String> analyticsPayload = data.containsKey("analytics.payload") ? \n                                                                                              (Map<String, String>) data.get("analytics.payload") : \n                                                                                              null;\n\n                                                        Map<String, String> clickMetricAnalyticsPayload = data.containsKey("clickmetric.analytics.payload") ? \n                                                                                                          (Map<String, String>) data.get("clickmetric.analytics.payload") : \n                                                                                                          null;\n\n                                                        ...\n                                                    }\n                                                }\n\n                                                @Overrides\n                                                void fail(final AdobeError error) {\n                                                    // take appropriate action upon error.\n                                                }\n                                            });\n\n// Creating Array of Request Objects\nList<TargetRequest> locationRequests = new ArrayList<>();\nlocationRequests.add(request1);\nlocationRequests.add(request2);\n\n // Define the profile parameters map.\nMap<String, String> profileParameters1 = new HashMap<>();\nprofileParameters1.put("ageGroup", "20-32");\n\nTargetParameters parameters = new TargetParameters.Builder().profileParameters(profileParameters1).build();\n\n// Call the targetRetrieveLocationContent API.\nTarget.retrieveLocationContent(locationRequests, parameters);\n')),(0,l.mdx)(s,{platform:"ios",api:"retrieve-location-content",repeat:"12",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"swift-9"},"Swift"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},"static func retrieveLocationContent(_ requestArray: [TargetRequest], with targetParameters: TargetParameters? = nil)\n")),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("inlineCode",{parentName:"li"},"requestArray"),": An array of ",(0,l.mdx)("inlineCode",{parentName:"li"},"TargetRequest")," objects to retrieve content."),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("inlineCode",{parentName:"li"},"targetParameters"),": A ",(0,l.mdx)("inlineCode",{parentName:"li"},"TargetParameters")," object containing parameters for all locations in the requests array.")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},'let TargetParameters1 = TargetParameters(\n    parameters: ["status": "platinum"],\n    profileParameters: ["age": "20"],\n    order: TargetOrder(id: "ADCKKIM", total: 344.30, purchasedProductIds: ["34", "125"]),\n    product: TargetProduct(productId: "24D3412", categoryId: "Books")\n)\n\nlet TargetParameters2 = TargetParameters(\n    parameters: ["userType": "Paid"],\n    profileParameters: nil,\n    order: TargetOrder(id: "ADCKKIM", total: 344.30, purchasedProductIds: ["id1", "id2"]),\n    product: TargetProduct(productId: "764334", categoryId: "Online")\n)\n\nlet globalTargetParameters = TargetParameters(\n    parameters: ["status": "progressive"],\n    profileParameters: ["age": "20-32"],\n    order: TargetOrder(id: "ADCKKBC", total: 400.50, purchasedProductIds: ["34", "125"]),\n    product: TargetProduct(productId: "24D334", categoryId: "Stationary")\n)\n\nlet request1 = TargetRequest(mboxName: "logo", defaultContent: "BlueWhale", targetParameters: TargetParameters1) { content in\n    if let content = content {\n        // do something with the target content.\n    }\n}\nlet request2 = TargetRequest(mboxName: "logo", defaultContent: "red", targetParameters: TargetParameters2) { content, data in\n        if let content = content {\n        // do something with the target content.\n    }\n\n    // Read the data dictionary containing one or more of response tokens, analytics payload and click-tracking analytics payload, if available.\n    if let data = data {\n        let responseTokens = data["responseTokens"] as? [String: Any] ?? [:]\n\n        let analyticsPayload = data["analytics.payload"] as? [String: String] ?? [:]\n\n        let clickMetricAnalyticsPayload = data["clickmetric.analytics.payload"] as? [String: String] ?? [:]\n        ...\n    }\n}\nTarget.retrieveLocationContent([request1, request2], with: globalTargetParameters)\n')),(0,l.mdx)("h4",{id:"objective-c-9"},"Objective-C"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objc"},"+ (void) retrieveLocationContent: (nonnull NSArray<AEPTargetRequestObject*>*) requests withParameters: (nullable AEPTargetParameters*) parameters\n")),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("inlineCode",{parentName:"li"},"requests"),": An array of ",(0,l.mdx)("inlineCode",{parentName:"li"},"TargetRequest")," objects to retrieve content."),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("inlineCode",{parentName:"li"},"parameters"),": An ",(0,l.mdx)("inlineCode",{parentName:"li"},"AEPTargetParameters")," object containing parameters for all locations in the requests array.")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objc"},'NSDictionary *mboxParameters1 = @{@"status":@"platinum"};\nNSDictionary *profileParameters1 = @{@"age":@"20"};\nAEPTargetProduct *product1 = [[AEPTargetProduct alloc] initWithProductId:@"24D3412" categoryId:@"Books"];\nAEPTargetOrder *order1 = [[AEPTargetOrder alloc] initWithId:@"ADCKKIM" total:[@(344.30) doubleValue] purchasedProductIds:@[@"34", @"125"]];\n\nAEPTargetParameters *targetParameters1 = [[AEPTargetParameters alloc] initWithParameters:mboxParameters1 profileParameters:profileParameters1 order:order1 product:product1 ];\n\nNSDictionary *mboxParameters2 = @{@"userType":@"Paid"};\nAEPTargetProduct *product2 = [[AEPTargetProduct alloc] initWithProductId:@"764334" categoryId:@"Online"];\nAEPTargetOrder *order2 = [[AEPTargetOrder alloc] initWithId:@"ADCKKIM" total:[@(344.30) doubleValue] purchasedProductIds:@[@"id1",@"id2"]];\nAEPTargetParameters *targetParameters2 = [[AEPTargetParameters alloc] initWithParameters:mboxParameters2 profileParameters:nil order:order2 product:product2 ];\n\nAEPTargetRequestObject *request1 = [[AEPTargetRequestObject alloc] initWithMboxName: @"logo" defaultContent: @"BlueWhale" targetParameters: targetParameters1 contentCallback:^(NSString * _Nullable content) {\n    // do something with the received content\n    NSString *targetContent = content ?: @"";\n}];\nAEPTargetRequestObject *request2 = [[AEPTargetRequestObject alloc] initWithMboxName: @"logo" defaultContent: @"red" targetParameters: targetParameters2 contentWithDataCallback:^(NSString * _Nullable content, NSDictionary<NSString *,id> * _Nullable data) {\n    // do something with the target content.\n    NSString *targetContent = content ?: @"";\n\n    // Read the data dictionary containing one or more of response tokens, analytics payload and click-tracking analytics payload, if available.      \n    if ([data count] > 0) {\n        if ([data objectForKey:@"responseTokens"]) {\n            // read response tokens\n        }\n\n        if ([data objectForKey:@"analytics.payload"]) {\n          // read analytics payload\n        }\n\n        if ([data objectForKey:@"clickmetric.analytics.payload"]) {\n          // read click-tracking analytics payload\n        }\n    }   \n}];\n\n// Create request object array\nNSArray *requestArray = @[request1,request2];\n\n// Creating Target parameters\nNSDictionary *mboxParameters = @{@"status":@"progressive"};\nNSDictionary *profileParameters = @{@"age":@"20-32"};\nAEPTargetProduct *product = [[AEPTargetProduct alloc] initWithProductId:@"24D334" categoryId:@"Stationary"];\nAEPTargetOrder *order = [[AEPTargetOrder alloc] initWithId:@"ADCKKBC" total:[@(400.50) doubleValue] purchasedProductIds:@[@"34", @"125"]];\n\nAEPTargetParameters *targetParameters = [[AEPTargetParameters alloc] initWithParameters:mboxParameters\n                                                                      profileParameters:profileParameters\n                                                                                  order:order\n                                                                                product:product];\n[AEPMobileTarget retrieveLocationContent: requestArray withParameters: targetParameters];\n')),(0,l.mdx)(s,{platform:"android",api:"set-preview-restart-deep-link",repeat:"6",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"java-11"},"Java"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"public static void setPreviewRestartDeepLink(final Uri deepLink)\n")),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("inlineCode",{parentName:"li"},"deeplink"),": A URL that contains the preview restart deeplink.")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},'Target.setPreviewRestartDeepLink("myapp://HomePage");\n')),(0,l.mdx)(s,{platform:"ios",api:"set-preview-restart-deep-link",repeat:"12",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"swift-10"},"Swift"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},"static func setPreviewRestartDeepLink(_ deeplink: URL)\n")),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("inlineCode",{parentName:"li"},"deeplink"),": A URL that contains the preview restart deeplink.")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},'if let url = URL(string: "myapp://HomePage") {\n    Target.setPreviewRestartDeepLink(url)\n}\n')),(0,l.mdx)("h4",{id:"objective-c-10"},"Objective-C"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objc"},"+ (void) setPreviewRestartDeeplink: (nonnull NSURL*) deeplink\n")),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("inlineCode",{parentName:"li"},"deeplink"),": A URL that contains the preview restart deeplink.")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objc"},'[AEPMobileTarget setPreviewRestartDeepLink:@"myapp://HomePage"];\n')),(0,l.mdx)(s,{platform:"android",api:"set-session-id",repeat:"6",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"java-12"},"Java"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"public static void setSessionId(final String sessionId)\n")),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("inlineCode",{parentName:"li"},"sessionId"),": A string that contains the Target session identifier to be set in the SDK.")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},'Target.setSessionId("3f24b997-ea74-420c-81f8-96a8b92c3961");\n')),(0,l.mdx)(s,{platform:"ios",api:"set-session-id",repeat:"12",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"swift-11"},"Swift"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},"static func setSessionId(_ id: String?)\n")),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("inlineCode",{parentName:"li"},"id"),": A string that contains the Target session identifier to be set in the SDK.")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},'Target.setSessionId("3f24b997-ea74-420c-81f8-96a8b92c3961")\n')),(0,l.mdx)("h4",{id:"objective-c-11"},"Objective-C"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objc"},"+ (void) setSessionId: (nullable NSString*) id\n")),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("inlineCode",{parentName:"li"},"id"),": A string that contains the Target session identifier to be set in the SDK.")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objc"},'[AEPMobileTarget setSessionId:@"3f24b997-ea74-420c-81f8-96a8b92c3961"]\n')),(0,l.mdx)(s,{platform:"android",api:"set-third-party-id",repeat:"6",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"java-13"},"Java"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"public static void setThirdPartyId(final String thirdPartyId)\n")),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("inlineCode",{parentName:"li"},"thirdPartyId"),": A string that contains the custom visitor ID to be set in Target.")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},'Target.setThirdPartyId("third-party-id");\n')),(0,l.mdx)(s,{platform:"ios",api:"set-third-party-id",repeat:"12",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"swift-12"},"Swift"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},"static func setThirdPartyId(_ id: String)\n")),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("inlineCode",{parentName:"li"},"id"),": A string that contains the custom visitor ID to be set in Target.")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},'Target.setThirdPartyId("third-party-id")\n')),(0,l.mdx)("h4",{id:"objective-c-12"},"Objective-C"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objc"},"+ (void) setThirdPartyId: (nullable NSString*) thirdPartyId\n")),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("inlineCode",{parentName:"li"},"id"),": A string that contains the custom visitor ID to be set in Target.")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objc"},'[AEPMobileTarget setThirdPartyId:@"third-party-id"]\n')),(0,l.mdx)(s,{platform:"android",api:"set-tnt-id",repeat:"6",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"java-14"},"Java"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"public static void setTntId(final String tntId)\n")),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("inlineCode",{parentName:"li"},"tntId"),": A string that contains the Target user identifier to be set in the SDK.")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},'Target.setTntId("f741a5d5-09c0-4931-bf53-b9e568c5f782.35_0");\n')),(0,l.mdx)(s,{platform:"ios",api:"set-tnt-id",repeat:"12",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"swift-13"},"Swift"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},"static func setTntId(_ id: String?)\n")),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("inlineCode",{parentName:"li"},"id"),": A string that contains the Target user identifier to be set in the SDK.")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},'Target.setTntId("f741a5d5-09c0-4931-bf53-b9e568c5f782.35_0")\n')),(0,l.mdx)("h4",{id:"objective-c-13"},"Objective-C"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objc"},"+ (void) setTntId: (nullable NSString*) id\n")),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("inlineCode",{parentName:"li"},"id"),": A string that contains the Target user identifier to be set in the SDK.")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objc"},'[AEPMobileTarget setTntId:@"f741a5d5-09c0-4931-bf53-b9e568c5f782.35_0"]\n')),(0,l.mdx)(s,{platform:"android",api:"visual-preview",repeat:"2",mdxType:"Variant"}),(0,l.mdx)("p",null,"On Android, when the application is launched as a result of a deep link, the Mobile Core's ",(0,l.mdx)("a",{parentName:"p",href:"../../home/base/mobile-core/api-reference.md#collectlaunchinfo"},"collectLaunchInfo")," API is internally invoked, and the Target activity and deep link information is extracted from the Intent extras."),(0,l.mdx)(p,{variant:"info",header:"false",iconPosition:"left",mdxType:"InlineNestedAlert"},(0,l.mdx)("p",null,"The SDK can only collect information from the launching Activity if ",(0,l.mdx)("a",{parentName:"p",href:"../../home/base/mobile-core/api-reference.md#setapplication"},(0,l.mdx)("inlineCode",{parentName:"a"},"setApplication"))," API has been called. Setting the Application is only necessary on an Activity that is also an entry point for your application. However, setting the Application on each Activity has no negative impact and ensures that the SDK always has the necessary reference to your Application. We recommend that you call ",(0,l.mdx)("inlineCode",{parentName:"p"},"setApplication")," API in each of your Activities.")),(0,l.mdx)(s,{platform:"ios",api:"visual-preview",repeat:"7",mdxType:"Variant"}),(0,l.mdx)("p",null,"To enter the visual preview mode, use the Mobile Core's ",(0,l.mdx)("a",{parentName:"p",href:"../../home/base/mobile-core/api-reference.md#collectlaunchinfo"},"collectLaunchInfo")," API to enable the mode, and select the red floating button that appears on the app screen."),(0,l.mdx)("h4",{id:"swift-14"},"Swift"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},'    MobileCore.collectLaunchInfo(["adb_deeplink" : "com.adobe.targetpreview://app.adobetarget.com?at_preview_token=tokenFromTarget"])\n')),(0,l.mdx)("h4",{id:"objective-c-14"},"Objective-C"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objectivec"},' [AEPMobileCore collectLaunchInfo:@{@"adb_deeplink" : @"com.adobe.targetpreview://app.adobetarget.com?at_preview_token=tokenFromTarget"}];\n')),(0,l.mdx)(s,{platform:"android",api:"target-request",repeat:"3",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"java-15"},"Java"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"public class TargetRequest extends TargetObject {\n\n    /**\n     * Instantiate a TargetRequest object\n     * @param mboxName String mbox name for this request\n     * @param targetParameters TargetParameters for this request\n     * @param defaultContent String default content for this request\n     * @param contentCallback AdobeCallback<String> which will get called with Target mbox content\n     */\n    public TargetRequest(final String mboxName,\n                         final TargetParameters targetParameters,\n                         final String defaultContent,\n                         final AdobeCallback<String> contentCallback);\n\n    /**\n    * Instantiate a TargetRequest object.\n    *\n    * @param mboxName String mbox name for this request.\n    * @param targetParameters TargetParameters for this request.\n    * @param defaultContent String default content for this request.\n    * @param contentWithDataCallback AdobeTargetDetailedCallback which will get called with Target mbox content and other optional data such as Target response tokens, analytics payload, click metric analytics payload if available.\n    */\n    public TargetRequest(final String mboxName, \n                         final TargetParameters targetParameters, \n                         final String defaultContent,\n                         final AdobeTargetDetailedCallback contentWithDataCallback);\n}\n")),(0,l.mdx)(s,{platform:"ios",api:"target-request",repeat:"10",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"swift-15"},"Swift"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},"@objc(AEPTargetRequestObject)\npublic class TargetRequest: NSObject, Codable {\n    @objc public let name: String\n    @objc public let defaultContent: String\n    @objc public let targetParameters: TargetParameters?\n    @objc let responsePairId: String\n    @objc var contentCallback: ((String?) -> Void)?\n\n    /// Instantiate a `TargetRequest` object\n    /// - Parameters:\n    ///   - name: `String` mbox name for this request\n    ///   - defaultContent: `String` default content for this request\n    ///   - targetParameters: `TargetParameters` for this request\n    ///   - contentCallback: which will get called with target mbox content\n    @objc public init(mboxName: String, defaultContent: String, targetParameters: TargetParameters? = nil, contentCallback: ((String?) -> Void)? = nil) {\n        name = mboxName\n        self.defaultContent = defaultContent\n        self.targetParameters = targetParameters\n        self.contentCallback = contentCallback\n        contentWithDataCallback = nil\n        responsePairId = UUID().uuidString\n    }\n\n    /// Instantiate a `TargetRequest` object\n    /// - Parameters:\n    ///   - name: `String` mbox name for this request\n    ///   - defaultContent: `String` default content for this request\n    ///   - targetParameters: `TargetParameters` for this request\n    ///   - contentWithDataCallback: which will get called with target mbox content, and an optional dictionary containing one or more of response tokens, analytics payload, and click metric analytics payload, if available.\n    @objc public init(mboxName: String, defaultContent: String, targetParameters: TargetParameters? = nil, contentWithDataCallback: ((String?, [String: Any]?) -> Void)? = nil) {\n        name = mboxName\n        self.defaultContent = defaultContent\n        self.targetParameters = targetParameters\n        self.contentWithDataCallback = contentWithDataCallback\n        contentCallback = nil\n        responsePairId = UUID().uuidString\n    }\n}\n")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("p",null,"The following example shows how to create an instance of a TargetRequest object that might be used to make a batch request to the configured Target server to fetch content for mbox locations."),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},'let request1 = TargetRequest(mboxName: "mboxName", defaultContent: "default content", targetParameters: nil, contentCallback: { content in\n    print(content ?? "")\n})\n\nlet request2 = TargetRequest(mboxName: "mboxName", defaultContent: "default content", targetParameters: nil, contentwithDataCallback: { content, data in\n    print(content ?? "")\n\n  if let data = data {\n      // read response tokens\n      let responseTokens = data["responseTokens"] as? [String: String] ?? [:]\n\n      // read analytics payload\n      let analyticsPayload = data["analytics.payload"] as? [String: String] ?? [:]\n\n      // read click-tracking analytics payload\n      let clickMetricAnalyticsPayload = data["clickmetric.analytics.payload"] as? [String: String] ?? [:]\n  }\n})\n')),(0,l.mdx)("h4",{id:"objective-c-15"},"Objective-C"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("p",null,"The following example shows how to create an instance of a TargetRequest object that might be used to make a batch request to the configured Target server to fetch content for mbox locations."),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objc"},'AEPTargetRequestObject *request1 = [[AEPTargetRequestObject alloc] initWithMboxName:@"mboxName" defaultContent:@"defaultContent" targetParameters:nil contentCallback:^(NSString * _Nullable content) {\n      NSLog(@"%@", content ?: @"");\n}];\n\nAEPTargetRequestObject *request2 = [[AEPTargetRequestObject alloc] initWithMboxName: @"logo" defaultContent: @"red" targetParameters: targetParameters2 contentWithDataCallback:^(NSString * _Nullable content, NSDictionary<NSString *,id> * _Nullable data) {\n    NSLog(@"%@", content ?: @"");\n\n    if ([data count] > 0) {\n        if ([data objectForKey:@"responseTokens"]) {\n            // read response tokens\n        }\n\n        if ([data objectForKey:@"analytics.payload"]) {\n          // read analytics payload\n        }\n\n        if ([data objectForKey:@"clickmetric.analytics.payload"]) {\n          // read click-tracking analytics payload\n        }\n    }   \n}];\n')),(0,l.mdx)(s,{platform:"android",api:"target-prefetch",repeat:"3",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"java-16"},"Java"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"public class TargetPrefetch extends TargetObject {\n\n    /**\n     * Instantiate a TargetPrefetch object\n     * @param mboxName String mbox name for this prefetch request\n     * @param targetParameters TargetParameters for this prefetch request\n     */\n     public TargetPrefetch(final String mboxName, final TargetParameters targetParameters)\n}\n")),(0,l.mdx)(s,{platform:"ios",api:"target-prefetch",repeat:"10",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"swift-16"},"Swift"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},"/// `TargetPrefetch` class, used for specifying a mbox location.\n@objc(AEPTargetPrefetchObject)\npublic class TargetPrefetch: NSObject, Codable {\n    @objc public let name: String\n    @objc public let targetParameters: TargetParameters?\n\n    /// Instantiate a `TargetPrefetch` object\n    /// - Parameters:\n    ///   - name: `String` mbox name for this prefetch\n    ///   - targetParameters: `TargetParameters` for this prefetch\n    @objc public init(name: String, targetParameters: TargetParameters? = nil) {\n        self.name = name\n        self.targetParameters = targetParameters\n    }\n}\n")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("p",null,"The following example can be used to create an instance of a TargetPrefetch object that might be used to make a prefetch request to the configured Target server to prefetch content for mbox locations."),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},'let prefetch = TargetPrefetch(name: "mboxName", targetParameters: nil)\n')),(0,l.mdx)("h4",{id:"objective-c-16"},"Objective-C"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("p",null,"The following example can be used to create an instance of a TargetPrefetch object that might be used to make a prefetch request to the configured Target server to prefetch content for mbox locations."),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objc"},'AEPTargetPrefetchObject *prefetch = [[AEPTargetPrefetchObject alloc] initWithName:@"mboxName" targetParameters:nil];\n')),(0,l.mdx)(s,{platform:"android",api:"target-parameters",repeat:"3",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"java-17"},"Java"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"public class TargetParameters {\n\n    private TargetParameters() {}\n\n    /**\n    * Builder used to construct a TargetParameters object\n    */\n    public static class Builder {\n        private Map<String, String> parameters;\n        private Map<String, String> profileParameters;\n        private TargetProduct product;\n        private TargetOrder order;\n\n        /**\n         * Create a TargetParameters object Builder\n         */\n        public Builder() {}\n\n        /**\n         * Create a TargetParameters object Builder\n         *\n         * @param parameters mbox parameters for the built TargetParameters\n         */\n        public Builder(final Map<String, String> parameters);\n\n        /**\n         * Set mbox parameters on the built TargetParameters\n         *\n         * @param parameters mbox parameters map\n         * @return this builder\n         */\n        public Builder parameters(final Map<String, String> parameters);\n\n        /**\n         * Set profile parameters on the built TargetParameters\n         *\n         * @param profileParameters profile parameters map\n         * @return this builder\n         */\n        public Builder profileParameters(final Map<String, String> profileParameters);\n\n        /**\n         * Set product parameters on the built TargetParameters\n         *\n         * @param product product parameters\n         * @return this builder\n         */\n        public Builder product(final TargetProduct product);\n\n        /**\n         * Set order parameters on the built TargetParameters\n         *\n         * @param order order parameters\n         * @return this builder\n         */\n        public Builder order(final TargetOrder order);\n\n        /**\n         * Build the TargetParameters object\n         *\n         * @return the built TargetParameters object\n         */\n        public TargetParameters build();\n    }\n}\n")),(0,l.mdx)(s,{platform:"ios",api:"target-parameters",repeat:"4",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"swift-17"},"Swift"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},"/// Target parameter class, used for specifying custom parameters to be sent in Target requests,\n/// such as location (former mbox) parameters, profile parameters, order/product parameters.\n@objc(AEPTargetParameters)\npublic class TargetParameters: NSObject, Codable {\n    @objc public let parameters: [String: String]?\n    @objc public let profileParameters: [String: String]?\n    @objc public let order: TargetOrder?\n    @objc public let product: TargetProduct?\n\n    /// Initialize a `TargetParameters` with the mbox parameters, the profile parameters, the order parameters and the product parameters.\n    /// - Parameters:\n    ///   - parameters: the mbox parameters\n    ///   - profileParameters: the profile parameters\n    ///   - order: the order parameters\n    ///   - product: the product parameters\n    @objc public init(parameters: [String: String]? = nil, profileParameters: [String: String]? = nil, order: TargetOrder? = nil, product: TargetProduct? = nil) {\n        self.parameters = parameters\n        self.profileParameters = profileParameters\n        self.order = order\n        self.product = product\n    }\n}\n")),(0,l.mdx)("p",null,"Examples for creating instances of TargetParameters can be seen in the ",(0,l.mdx)("a",{parentName:"p",href:"./index.md#target-parameters"},"Target overview"),"."),(0,l.mdx)(s,{platform:"android",api:"target-order",repeat:"3",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"java-18"},"Java"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"public class TargetOrder {\n\n    /**\n     * Initialize a TargetOrder with an order id, order total and a list of purchasedProductIds\n     *\n     * @param id String order id\n     * @param total double order total amount\n     * @param purchasedProductIds a list of purchased product ids\n     */\n    public TargetOrder(final String id, final double total, final List<String> purchasedProductIds);\n    /**\n     * Get the order id\n     *\n     * @return order id\n     */\n    public String getId();\n\n    /**\n     * Get the order total\n     *\n     * @return order total\n     */\n    public double getTotal();\n\n    /**\n     * Get the order purchasedProductIds\n     *\n     * @return a list of this order's purchased product ids\n     */\n    public List<String> getPurchasedProductIds();\n}\n")),(0,l.mdx)(s,{platform:"ios",api:"target-order",repeat:"4",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"swift-18"},"Swift"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},"/// Class for specifying Target order parameters\n@objc(AEPTargetOrder)\npublic class TargetOrder: NSObject, Codable {\n    @objc public let orderId: String\n    @objc public let total: Double\n    @objc public let purchasedProductIds: [String]?\n\n    /// Initialize a `TargetOrder` with an order `id`, order `total`  and a list of `purchasedProductIds`\n    /// - Parameters:\n    ///   - id: `String` order id\n    ///   - total: `Double` order total amount\n    ///   - purchasedProductIds: a list of purchased product ids\n    @objc public init(id: String, total: Double = 0, purchasedProductIds: [String]? = nil) {\n        orderId = id\n        self.total = total\n        self.purchasedProductIds = purchasedProductIds\n    }\n}\n")),(0,l.mdx)("p",null,"Examples for creating instances of TargetOrder can be seen in the ",(0,l.mdx)("a",{parentName:"p",href:"./index.md#arget-order-class"},"Target overview"),"."),(0,l.mdx)(s,{platform:"android",api:"target-product",repeat:"3",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"java-19"},"Java"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"public class TargetProduct {\n\n    /**\n     * Initialize a TargetProduct with a product id and a productCategoryId categoryId\n     *\n     * @param id String product id\n     * @param categoryId String product category id\n     */\n    public TargetProduct(final String id, final String categoryId);\n\n    /**\n     * Get the product id\n     *\n     * @return product id\n     */\n    public String getId();\n\n    /**\n     * Get the product categoryId\n     *\n     * @return product category id\n     */\n    public String getCategoryId();\n}\n")),(0,l.mdx)(s,{platform:"ios",api:"target-product",repeat:"4",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"swift-19"},"Swift"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},"/// Class for specifying Target product parameters\n@objc(AEPTargetProduct)\npublic class TargetProduct: NSObject, Codable {\n    @objc public let productId: String\n    @objc public let categoryId: String?\n\n    /// Initialize a `TargetProduct` with a product  id and a productCategoryId.\n    /// - Parameters:\n    ///   - productId: product id\n    ///   - categoryId: product category id\n    @objc public init(productId: String, categoryId: String? = nil) {\n        self.productId = productId\n        self.categoryId = categoryId\n    }\n}\n")),(0,l.mdx)("p",null,"Examples for creating instances of TargetProduct can be seen in the ",(0,l.mdx)("a",{parentName:"p",href:"./index.md#target-product-class"},"Target overview")),(0,l.mdx)(s,{platform:"android",api:"target-callback",repeat:"4",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"java-20"},"Java"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"public interface AdobeTargetDetailedCallback {\n\n    /**\n     * Callback function to pass the mbox content and other mbox payload values.\n     *\n     * @param content {@code String} mox content\n     * @param data A {@code Map<String, Object>} of mbox payload values. It will be null if neither response tokens nor analytics payload is available.\n     */\n    void call(final String content, final Map<String, Object> data);\n\n    /**\n     * Callback function for notifying about the internal error in getting mbox details.\n     *\n     * @param error {@link AdobeError} represents the internal error occurred.\n     */\n    void fail(final AdobeError error);\n}\n")))}u.isMDXComponent=!0}}]);
//# sourceMappingURL=798b42a9a7057bf285bcbd4b7639aaf633aa8ad6-4c142379fa5533748b33.js.map