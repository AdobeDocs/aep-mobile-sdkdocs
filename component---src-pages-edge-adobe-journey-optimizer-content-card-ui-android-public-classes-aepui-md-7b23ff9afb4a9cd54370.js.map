{"version":3,"file":"component---src-pages-edge-adobe-journey-optimizer-content-card-ui-android-public-classes-aepui-md-7b23ff9afb4a9cd54370.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/pages/edge/adobe-journey-optimizer/content-card-ui/Android/public-classes/aepui.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/aep-mobile-sdkdocs/aep-mobile-sdkdocs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst CodeBlock = makeShortcode(\"CodeBlock\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"aepui\"\n    }}>{`AepUI`}</h1>\n    <p>{`The `}<inlineCode parentName=\"p\">{`AepUI`}</inlineCode>{` interface represents a UI component that can be rendered using the Adobe Experience Platform compose UI library. The Experience Platform compose UI library currently supports rendering the following UI template:`}</p>\n    <p><inlineCode parentName=\"p\">{`SmallImageUI`}</inlineCode>{` which renders `}<inlineCode parentName=\"p\">{`Small Image template`}</inlineCode></p>\n    <h2 {...{\n      \"id\": \"interface-definition\"\n    }}>{`Interface Definition`}</h2>\n    <CodeBlock slots=\"heading, code\" repeat=\"1\" languages=\"Kotlin\" mdxType=\"CodeBlock\" />\n    <h3 {...{\n      \"id\": \"kotlin\"\n    }}>{`Kotlin`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`sealed interface AepUI<T : AepUITemplate, S : AepCardUIState> {\n    fun getTemplate(): T\n    fun getState(): S\n    fun updateState(newState: S)\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"methods\"\n    }}>{`Methods`}</h2>\n    <h3 {...{\n      \"id\": \"gettemplate\"\n    }}>{`getTemplate`}</h3>\n    <p>{`Retrieves the template associated with this UI component.`}</p>\n    <h3 {...{\n      \"id\": \"returns\"\n    }}>{`Returns`}</h3>\n    <p>{`A template of type `}<inlineCode parentName=\"p\">{`T`}</inlineCode>{` which is an implementation of the  `}<inlineCode parentName=\"p\">{`AepUITemplate`}</inlineCode>{` interface.`}</p>\n    <h3 {...{\n      \"id\": \"syntax\"\n    }}>{`Syntax`}</h3>\n    <CodeBlock slots=\"heading, code\" repeat=\"1\" languages=\"Kotlin\" mdxType=\"CodeBlock\" />\n    <h3 {...{\n      \"id\": \"kotlin-1\"\n    }}>{`Kotlin`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`fun getTemplate(): T\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"getstate\"\n    }}>{`getState`}</h3>\n    <p>{`Retrieves the current state of the UI component.`}</p>\n    <h3 {...{\n      \"id\": \"returns-1\"\n    }}>{`Returns`}</h3>\n    <p>{`A state of type `}<inlineCode parentName=\"p\">{`S`}</inlineCode>{` which is a subclass of the  `}<inlineCode parentName=\"p\">{`AepCardUIState`}</inlineCode>{` class.`}</p>\n    <h3 {...{\n      \"id\": \"syntax-1\"\n    }}>{`Syntax`}</h3>\n    <CodeBlock slots=\"heading, code\" repeat=\"1\" languages=\"Kotlin\" mdxType=\"CodeBlock\" />\n    <h3 {...{\n      \"id\": \"kotlin-2\"\n    }}>{`Kotlin`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`fun getState(): S\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"updatestate\"\n    }}>{`updateState`}</h3>\n    <p>{`Updates the state of the UI component with a new state.`}</p>\n    <h3 {...{\n      \"id\": \"parameters\"\n    }}>{`Parameters`}</h3>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`newState`}</em>{` - The new state of type `}<inlineCode parentName=\"li\">{`S`}</inlineCode>{` to update within the UI component.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"syntax-2\"\n    }}>{`Syntax`}</h3>\n    <CodeBlock slots=\"heading, code\" repeat=\"1\" languages=\"Kotlin\" mdxType=\"CodeBlock\" />\n    <h3 {...{\n      \"id\": \"kotlin-3\"\n    }}>{`Kotlin`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`fun updateState(newState: S)\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"implementing-classes\"\n    }}>{`Implementing Classes`}</h2>\n    <h2 {...{\n      \"id\": \"smallimageui\"\n    }}>{`SmallImageUI`}</h2>\n    <p>{`Implementation of the `}<a parentName=\"p\" {...{\n        \"href\": \"#AepUI\"\n      }}>{`AepUI`}</a>{` interface used in rendering a UI for a `}<a parentName=\"p\" {...{\n        \"href\": \"./ui-models/smallimagetemplate.md\"\n      }}>{`SmallImageTemplate`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"class-definition\"\n    }}>{`Class Definition`}</h2>\n    <CodeBlock slots=\"heading, code\" repeat=\"1\" languages=\"Kotlin\" mdxType=\"CodeBlock\" />\n    <h3 {...{\n      \"id\": \"kotlin-4\"\n    }}>{`Kotlin`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`class SmallImageUI(\n    private val template: SmallImageTemplate,\n    state: SmallImageCardUIState\n) : AepUI<SmallImageTemplate, SmallImageCardUIState>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"methods-1\"\n    }}>{`Methods`}</h2>\n    <h3 {...{\n      \"id\": \"gettemplate-1\"\n    }}>{`getTemplate`}</h3>\n    <p>{`Retrieves the template associated with the small image UI.`}</p>\n    <h3 {...{\n      \"id\": \"returns-2\"\n    }}>{`Returns`}</h3>\n    <p>{`The small image template.`}</p>\n    <h3 {...{\n      \"id\": \"syntax-3\"\n    }}>{`Syntax`}</h3>\n    <CodeBlock slots=\"heading, code\" repeat=\"1\" languages=\"Kotlin\" mdxType=\"CodeBlock\" />\n    <h3 {...{\n      \"id\": \"kotlin-5\"\n    }}>{`Kotlin`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`override fun getTemplate(): SmallImageTemplate\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"getstate-1\"\n    }}>{`getState`}</h3>\n    <p>{`Retrieves the current state of the small image UI.`}</p>\n    <h3 {...{\n      \"id\": \"returns-3\"\n    }}>{`Returns`}</h3>\n    <p>{`The current `}<inlineCode parentName=\"p\">{`SmallImageCardUIState`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"syntax-4\"\n    }}>{`Syntax`}</h3>\n    <CodeBlock slots=\"heading, code\" repeat=\"1\" languages=\"Kotlin\" mdxType=\"CodeBlock\" />\n    <h3 {...{\n      \"id\": \"kotlin-6\"\n    }}>{`Kotlin`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`override fun getState(): SmallImageCardUIState\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"updatestate-1\"\n    }}>{`updateState`}</h3>\n    <p>{`Updates the current state of the `}<inlineCode parentName=\"p\">{`SmallImageUI`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"parameters-1\"\n    }}>{`Parameters`}</h3>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`newState`}</em>{` - The new state of type `}<inlineCode parentName=\"li\">{`SmallImageCardUIState`}</inlineCode>{` to update within the UI component.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"syntax-5\"\n    }}>{`Syntax`}</h3>\n    <CodeBlock slots=\"heading, code\" repeat=\"1\" languages=\"Kotlin\" mdxType=\"CodeBlock\" />\n    <h3 {...{\n      \"id\": \"kotlin-7\"\n    }}>{`Kotlin`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`override fun updateState(newState: SmallImageCardUIState)\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","CodeBlock","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","slots","repeat","languages","isMDXComponent"],"sourceRoot":""}