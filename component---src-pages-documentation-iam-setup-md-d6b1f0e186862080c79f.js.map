{"version":3,"file":"component---src-pages-documentation-iam-setup-md-d6b1f0e186862080c79f.js","mappings":"4OAWsBA,E,mFAFTC,EAAe,CAAC,EAOvBC,GALgBF,EAKU,YALF,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,4EAC5B,eAASG,EACjB,GAGKG,EAAc,CAClBL,aAAAA,GAEIM,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGP,GACF,YACD,OAAO,SAACI,GAAD,UAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,eAI5E,eACE,GAAM,2BADR,4BAGA,eACE,GAAM,qBADR,sBAGA,qIAAsH,uBAAYC,WAAW,KAAvB,WAAtH,qEACA,SAACV,EAAD,CAAWW,YAAY,aAAaC,MAAM,mBAAmBC,OAAO,IAAIJ,QAAQ,eAChF,uCACA,SAAC,UAAD,CAAMK,MAAM,gCAAgCL,QAAQ,UACpD,sCACA,SAAC,UAAD,CAAMK,MAAM,4BAA4BL,QAAQ,UAChD,eACE,GAAM,+CADR,gDAGA,wIACA,SAACT,EAAD,CAAWW,YAAY,aAAaC,MAAM,mBAAmBC,OAAO,IAAIJ,QAAQ,eAChF,8BACA,SAAC,UAAD,CAAMK,MAAM,iCAAiCL,QAAQ,UACrD,0BACA,SAAC,UAAD,CAAMK,MAAM,6BAA6BL,QAAQ,SAGpD,CAEDF,EAAWQ,gBAAiB,C","sources":["webpack://dev-site-documentation-template/./src/pages/documentation/iam/setup.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/aep-mobile-sdkdocs/aep-mobile-sdkdocs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nimport Tabs from './tabs/setup.md';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst TabsBlock = makeShortcode(\"TabsBlock\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"set-up-aepmessaging-sdk\"\n    }}>{`Set up AEPMessaging SDK`}</h1>\n    <h2 {...{\n      \"id\": \"beta-instructions\"\n    }}>{`Beta instructions`}</h2>\n    <p>{`While the in-app messaging feature is in beta, the developer will need to use the Messaging extension from the `}<inlineCode parentName=\"p\">{`staging`}</inlineCode>{` branch of the iOS repo, or the beta SNAPSHOT build for Android.`}</p>\n    <TabsBlock orientation=\"horizontal\" slots=\"heading, content\" repeat=\"2\" mdxType=\"TabsBlock\" />\n    <p>{`Android (Gradle)`}</p>\n    <Tabs query=\"platform=android&task=install\" mdxType=\"Tabs\" />\n    <p>{`iOS (Cocoapods)`}</p>\n    <Tabs query=\"platform=ios&task=install\" mdxType=\"Tabs\" />\n    <h2 {...{\n      \"id\": \"import-and-register-the-messaging-extension\"\n    }}>{`Import and register the Messaging extension`}</h2>\n    <p>{`Import the Messaging module/package and its dependencies, then register the Messaging extension and dependencies.`}</p>\n    <TabsBlock orientation=\"horizontal\" slots=\"heading, content\" repeat=\"2\" mdxType=\"TabsBlock\" />\n    <p>{`Android`}</p>\n    <Tabs query=\"platform=android&task=register\" mdxType=\"Tabs\" />\n    <p>{`iOS`}</p>\n    <Tabs query=\"platform=ios&task=register\" mdxType=\"Tabs\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","TabsBlock","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","orientation","slots","repeat","query","isMDXComponent"],"sourceRoot":""}