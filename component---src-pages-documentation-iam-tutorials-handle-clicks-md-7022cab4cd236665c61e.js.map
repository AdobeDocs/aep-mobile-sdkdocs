{"version":3,"file":"component---src-pages-documentation-iam-tutorials-handle-clicks-md-7022cab4cd236665c61e.js","mappings":"mTAQaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,4CADR,6CAGA,uEAAwD,uBAAYC,WAAW,KAAvB,6BAAxD,2CACA,qDAAsC,mBAAQA,WAAW,KAAnB,UAAtC,KAAqF,uBAAYA,WAAW,KAAvB,eAArF,uEACA,qDAAsC,mBAAQA,WAAW,KAAnB,MAAtC,KAAiF,uBAAYA,WAAW,KAAvB,eAAjF,wCACA,oBACE,eAAIA,WAAW,MAAf,oCACA,eAAIA,WAAW,MAAf,oDACA,eAAIA,WAAW,MAAf,wCACA,eAAIA,WAAW,MAAf,+DACE,eAAIA,WAAW,OACb,eAAIA,WAAW,MAAf,8DACA,eAAIA,WAAW,MAAf,6BAIN,eACE,GAAM,8BADR,+BAGA,6IAA8H,uBAAYA,WAAW,KAAvB,WAA9H,MACA,gGACA,qBAAK,iBAAMA,WAAW,OAAjB,0BAEL,eACE,GAAM,uDADR,wDAGA,kDAAmC,uBAAYA,WAAW,KAAvB,eAAnC,kFACA,4FAA6E,uBAAYA,WAAW,KAAvB,kBAA7E,qCAA4K,uBAAYA,WAAW,KAAvB,cAA5K,MACA,qBAAK,iBAAMA,WAAW,OAAjB,iDAEL,eACE,GAAM,0CADR,2CAGA,kDAAmC,uBAAYA,WAAW,KAAvB,WAAnC,2EACA,kKACA,qBAAK,iBAAMA,WAAW,OAAjB,wCAEL,0DAA2C,uBAAYA,WAAW,KAAvB,WAA3C,MACA,uBACE,kBAAOA,WAAW,UAChB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MADX,UAGA,eAAIA,WAAW,KACb,MAAS,MADX,kBAKJ,kBAAOA,WAAW,UAChB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MADX,SAGA,eAAIA,WAAW,KACb,MAAS,MADX,0CAIF,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MADX,SAGA,eAAIA,WAAW,KACb,MAAS,MADX,2CAE8C,mBAAQA,WAAW,MAAnB,QAF9C,qBAIF,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MADX,UAGA,eAAIA,WAAW,KACb,MAAS,MADX,2CAE8C,mBAAQA,WAAW,MAAnB,SAF9C,qBAIF,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MADX,QAGA,eAAIA,WAAW,KACb,MAAS,MADX,2CAE8C,mBAAQA,WAAW,MAAnB,OAF9C,qBAIF,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MADX,WAGA,eAAIA,WAAW,KACb,MAAS,MADX,2CAE8C,mBAAQA,WAAW,MAAnB,UAF9C,uBAMN,uCAAwB,uBAAYA,WAAW,KAAvB,WAAxB,qFAAgK,uBAAYA,WAAW,KAAvB,QAAhK,mBACA,eACE,GAAM,4BADR,6BAGA,4DAA6C,uBAAYA,WAAW,KAAvB,QAA7C,gFACA,eACE,GAAM,4CADR,6CAGA,0IACA,yFAA0E,uBAAYA,WAAW,KAAvB,kBAA1E,qCAAyK,uBAAYA,WAAW,KAAvB,SAAzK,sGACA,qBAAK,iBAAMA,WAAW,OAAjB,mEAEL,eACE,GAAM,mBADR,oBAGA,6HACA,yJAA0I,uBAAYA,WAAW,KAAvB,eAA1I,MACA,qBAAK,iBAAMA,WAAW,OAAjB,uDAIR,CAEDJ,EAAWK,gBAAiB,C","sources":["webpack://dev-site-documentation-template/./src/pages/documentation/iam/tutorials/handle-clicks.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/aep-mobile-sdkdocs/aep-mobile-sdkdocs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"handle-url-clicks-from-an-in-app-message\"\n    }}>{`Handle URL clicks from an in-app message`}</h1>\n    <p>{`When a link is clicked in an in-app message, the `}<inlineCode parentName=\"p\">{`FullscreenMessageDelegate`}</inlineCode>{` is responsible for handling behavior.`}</p>\n    <p>{`If the scheme used in the link `}<strong parentName=\"p\">{`is not`}</strong>{` `}<inlineCode parentName=\"p\">{`adbinapp://`}</inlineCode>{`, the link will open in the containing WebView (default behavior).`}</p>\n    <p>{`If the scheme used in the link `}<strong parentName=\"p\">{`is`}</strong>{` `}<inlineCode parentName=\"p\">{`adbinapp://`}</inlineCode>{`, the following behavior may occur:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`The in-app message is dismissed`}</li>\n      <li parentName=\"ul\">{`An interaction event is sent to Experience Edge`}</li>\n      <li parentName=\"ul\">{`The default animation is overridden`}</li>\n      <li parentName=\"ul\">{`The URL will be opened by the OS, potentially resulting in:`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`The link being opened by the device's default web browser`}</li>\n          <li parentName=\"ul\">{`Opening of a deeplink`}</li>\n        </ul>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"dismiss-the-in-app-message\"\n    }}>{`Dismiss the in-app message`}</h2>\n    <p>{`In order for the SDK to remove the view containing an in-app message from the UI, the clicked link must have a host of `}<inlineCode parentName=\"p\">{`dismiss`}</inlineCode>{`.`}</p>\n    <p>{`The example below is a link that will dismiss the current in-app message:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`adbinapp://dismiss\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"send-a-message-interaction-event-to-experience-edge\"\n    }}>{`Send a message interaction event to Experience Edge`}</h2>\n    <p>{`Adding a URL variable named `}<inlineCode parentName=\"p\">{`interaction`}</inlineCode>{` will cause the SDK to send an Experience Event to the Adobe Experience Edge.`}</p>\n    <p>{`The example below will dismiss the current in-app message and send an `}<inlineCode parentName=\"p\">{`inapp.interact`}</inlineCode>{` event to edge with an action of `}<inlineCode parentName=\"p\">{`imageLiked`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`adbinapp://dismiss?interaction=imageLiked\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"override-the-default-dismiss-animation\"\n    }}>{`Override the default dismiss animation`}</h2>\n    <p>{`Adding a URL variable named `}<inlineCode parentName=\"p\">{`animate`}</inlineCode>{` will cause the SDK to override the dismiss animation for the message.`}</p>\n    <p>{`The example below will dismiss the current in-app message, and override the animation so the message exits to the right side of the screen:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`adbinapp://dismiss?animate=right\n`}</code></pre>\n    <p>{`Below is a list of valid values for `}<inlineCode parentName=\"p\">{`animate`}</inlineCode>{`:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Value`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`none`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Message is removed with no animation`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`left`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Message animates off the screen to the `}<strong parentName=\"td\">{`left`}</strong>{` when dismissed`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`right`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Message animates off the screen to the `}<strong parentName=\"td\">{`right`}</strong>{` when dismissed`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`top`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Message animates off the screen to the `}<strong parentName=\"td\">{`top`}</strong>{` when dismissed`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`bottom`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Message animates off the screen to the `}<strong parentName=\"td\">{`bottom`}</strong>{` when dismissed`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`If the value for `}<inlineCode parentName=\"p\">{`animate`}</inlineCode>{` is empty, or if it doesn't match one of the above valid values, an animation of `}<inlineCode parentName=\"p\">{`none`}</inlineCode>{` will be used.`}</p>\n    <h2 {...{\n      \"id\": \"open-a-link-from-the-url\"\n    }}>{`Open a link from the URL`}</h2>\n    <p>{`If the value for a URL variable named `}<inlineCode parentName=\"p\">{`link`}</inlineCode>{` contains a valid URL, the SDK will open the link using the OS-defined API.`}</p>\n    <h3 {...{\n      \"id\": \"open-location-in-the-default-web-browser\"\n    }}>{`Open location in the default web browser`}</h3>\n    <p>{`If the provided URL does not contain a custom scheme, the URL will be loaded in the device's default web browser.  `}</p>\n    <p>{`The example below will dismiss the current in-app message, send an `}<inlineCode parentName=\"p\">{`inapp.interact`}</inlineCode>{` event to edge with an action of `}<inlineCode parentName=\"p\">{`adobe`}</inlineCode>{`, and open the adobe.com website in mobile Safari (the default browser on the user's iOS device):`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`adbinapp://dismiss?interaction=adobe&link=https://adobe.com\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"open-a-deeplink\"\n    }}>{`Open a deeplink`}</h3>\n    <p>{`If the provided URL contains a custom scheme, the app that handles the custom scheme will be launched.`}</p>\n    <p>{`The example below will dismiss the current in-app message, then launch an app owned by the same developer which handles the scheme `}<inlineCode parentName=\"p\">{`myAppScheme`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`adbinapp://dismiss?link=myAppScheme://deeplinked\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}