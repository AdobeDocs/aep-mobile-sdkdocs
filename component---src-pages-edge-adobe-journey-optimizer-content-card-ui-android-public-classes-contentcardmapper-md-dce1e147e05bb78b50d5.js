"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[7568],{73336:function(e,n,t){t.r(n),t.d(n,{_frontmatter:function(){return p},default:function(){return u}});var a,o=t(87462),d=t(63366),r=(t(15007),t(64983)),i=t(91515),m=["components"],p={},s=(a="CodeBlock",function(e){return console.warn("Component "+a+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.mdx)("div",e)}),l={_frontmatter:p},c=i.Z;function u(e){var n=e.components,t=(0,d.Z)(e,m);return(0,r.mdx)(c,(0,o.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,r.mdx)("h1",{id:"contentcardmapper"},"ContentCardMapper"),(0,r.mdx)("p",null,"Singleton class used to store a mapping between valid ",(0,r.mdx)("a",{parentName:"p",href:"../../../public-classes/content-card-schema-data.md#android-interface"},"ContentCardSchemaData")," and unique proposition IDs. The schema data is used when sending proposition track requests to Adobe Journey Optimizer."),(0,r.mdx)("h2",{id:"class-definition"},"Class Definition"),(0,r.mdx)(s,{slots:"heading, code",repeat:"1",languages:"Kotlin",mdxType:"CodeBlock"}),(0,r.mdx)("h3",{id:"kotlin"},"Kotlin"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-kotlin"},"class ContentCardMapper private constructor() {\n    private val contentCardSchemaDataMap: MutableMap<String, ContentCardSchemaData> = HashMap()\n\n    companion object {\n        @JvmStatic\n        val instance: ContentCardMapper by lazy { ContentCardMapper() }\n    }\n}\n")),(0,r.mdx)("h2",{id:"methods"},"Methods"),(0,r.mdx)("h3",{id:"getcontentcardschemadata"},"getContentCardSchemaData"),(0,r.mdx)("p",null,"Returns a ",(0,r.mdx)("inlineCode",{parentName:"p"},"ContentCardSchemaData")," object for the given proposition ID."),(0,r.mdx)("h3",{id:"parameters"},"Parameters"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("em",{parentName:"li"},"propositionId")," - the proposition ID to use as a key in the ",(0,r.mdx)("inlineCode",{parentName:"li"},"ContentCardSchemaData")," map.")),(0,r.mdx)("h3",{id:"returns"},"Returns"),(0,r.mdx)("p",null,"The ",(0,r.mdx)("inlineCode",{parentName:"p"},"ContentCardSchemaData")," for the given proposition ID, or null if not found."),(0,r.mdx)("h3",{id:"syntax"},"Syntax"),(0,r.mdx)(s,{slots:"heading, code",repeat:"1",languages:"Kotlin",mdxType:"CodeBlock"}),(0,r.mdx)("h3",{id:"kotlin-1"},"Kotlin"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-kotlin"},"fun getContentCardSchemaData(propositionId: String): ContentCardSchemaData?\n")))}u.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-edge-adobe-journey-optimizer-content-card-ui-android-public-classes-contentcardmapper-md-dce1e147e05bb78b50d5.js.map