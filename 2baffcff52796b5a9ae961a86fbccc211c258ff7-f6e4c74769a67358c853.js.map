{"version":3,"file":"2baffcff52796b5a9ae961a86fbccc211c258ff7-f6e4c74769a67358c853.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/pages/documentation/adobe-target/tabs/api-reference.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/aep-mobile-sdkdocs/aep-mobile-sdkdocs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst Variant = makeShortcode(\"Variant\");\nconst InlineNestedAlert = makeShortcode(\"InlineNestedAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <Variant platform=\"android\" api=\"clear-prefetch-cache\" repeat=\"5\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public static void clearPrefetchCache()\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`Target.clearPrefetchCache();\n`}</code></pre>\n    <Variant platform=\"ios\" api=\"clear-prefetch-cache\" repeat=\"7\" mdxType=\"Variant\" />\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`static func clearPrefetchCache()\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <p><strong parentName=\"p\">{`Swift`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`Target.clearPrefetchCache()\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Objective-C`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objc\"\n      }}>{`[AEPMobileTarget clearPrefetchCache];\n`}</code></pre>\n    {/*- <Variant platform=\"react-native\" api=\"clear-prefetch-cache\" repeat=\"5\"/>\n     #### React Native\n     **Syntax**\n     ```js\n     clearPrefetchCache();\n     ```\n     **Example**\n     ```js\n     ACPTarget.clearPrefetchCache();\n     ``` -*/}\n    <Variant platform=\"android\" api=\"clicked-location\" repeat=\"6\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-1\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public static void clickedLocation(final String mboxName, final TargetParameters parameters)\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`mboxName`}</em>{` is a String that contains the mbox location for which the click notification will be sent to Target.`}</li>\n      <li parentName=\"ul\"><em parentName=\"li\">{`parameters`}</em>{` is the configured `}<inlineCode parentName=\"li\">{`TargetParameters`}</inlineCode>{` for the request.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`// Mbox parameters\nMap<String, String> mboxParameters = new HashMap<>();\nmboxParameters.put(\"membership\", \"prime\");\n\n// Product parameters\nTargetProduct targetProduct = new TargetProduct(\"CEDFJC\", \"Electronics\");\n\n\n// Order parameters\nList<String> purchasedIds = new ArrayList<String>();\npurchasedIds.add(\"81\");\npurchasedIds.add(\"123\");\npurchasedIds.add(\"190\");\nTargetOrder targetOrder = new TargetOrder(\"NJJICK\", \"650\", purchasedIds);\n\n// Profile parameters\nMap<String, String> profileParameters = new HashMap<>();\nprofileParameters.put(\"ageGroup\", \"20-32\");\n\n// Create Target Parameters\nTargetParameters targetParameters = new TargetParameters.Builder(mboxParameters)\n                                .profileParameters(profileParameters)\n                                .order(targetOrder)\n                                .product(targetProduct)\n                                .build();\n\nTarget.clickedLocation(\"cartLocation\", targetParameters);\n`}</code></pre>\n    <Variant platform=\"ios\" api=\"clicked-location\" repeat=\"8\" mdxType=\"Variant\" />\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`static func clickedLocation(_ name: String, targetParameters: TargetParameters?)\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`name`}</em>{` : a `}<inlineCode parentName=\"li\">{`String`}</inlineCode>{` that contains the mbox location for which the click notification will be sent to Target.`}</li>\n      <li parentName=\"ul\"><em parentName=\"li\">{`targetParameters`}</em>{` : the configured `}<inlineCode parentName=\"li\">{`TargetParameters`}</inlineCode>{` for the request.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <p><strong parentName=\"p\">{`Swift`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`Target.clickedLocation(\"aep-loc-1\", targetParameters: TargetParameters(parameters: [\"mbox_parameter_key\": \"mbox_parameter_value\"], profileParameters: [\"name\": \"Smith\"], order: TargetOrder(id: \"id1\", total: 1.0, purchasedProductIds: [\"ppId1\"]), product: TargetProduct(productId: \"pId1\", categoryId: \"cId1\")))\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Objective-C`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objc\"\n      }}>{`AEPTargetOrder *order = [[AEPTargetOrder alloc] initWithId:@\"id1\" total:1.0 purchasedProductIds:@[@\"ppId1\"]];\nAEPTargetProduct *product =[[AEPTargetProduct alloc] initWithProductId:@\"pId1\" categoryId:@\"cId1\"];\nAEPTargetParameters * targetParams = [[AEPTargetParameters alloc] initWithParameters:@{@\"mbox_parameter_key\":@\"mbox_parameter_value\"} profileParameters:@{@\"name\":@\"Smith\"} order:order product:product];\n[AEPMobileTarget clickedLocation:@\"aep-loc-1\" withTargetParameters:targetParams];\n`}</code></pre>\n    {/*- <Variant platform=\"react-native\" api=\"clicked-location\" repeat=\"6\"/>\n     #### JavaScript\n     **Syntax**\n     ```javascript\n     locationClickedWithName(name: string, parameters?: ACPTargetParameters)\n     ```\n     * _name_ is a string that contains the mbox location for which the click notification will be sent to Target.\n     * _parameters_ is the configured `ACPTargetParameters` for the request.\n     **Example**\n     ```javascript\n     // Mbox parameters\n     var mboxParameters = {\"membership\": \"prime\"};\n     // Product parameters\n     var productParameters = new ACPTargetProduct(\"CEDFJC\", \"Electronics\");\n     // Order parameters\n     var orderParameters = new ACPTargetOrder(\"NJJICK\", 650, [\"81\",\"123\",\"190\"]);\n     // Profile parameters\n     var profileParameters = {\"ageGroup\": \"20-32\"};\n     // Create Target parameters\n     var product = new ACPTargetProduct(\"24D334\", \"Stationary\");\n     var order = new ACPTargetOrder(\"ADCKKBC\", 400.50, [\"34\",\"125\"]);\n     var targetParameters = new ACPTargetParameters(null, null, product, order);\n     ACPTarget.locationClickedWithName(\"cartLocation\", targetParameters);\n     ``` -*/}\n    <Variant platform=\"android\" api=\"displayed-locations\" repeat=\"6\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-2\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public static void displayedLocations(final List<String> mboxNames, final TargetParameters targetParameters)\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`mboxNames`}</em>{` is a list of the mbox locations for which the display notification will be sent to Target.`}</li>\n      <li parentName=\"ul\"><em parentName=\"li\">{`targetParameters`}</em>{` is the configured `}<inlineCode parentName=\"li\">{`TargetParameters`}</inlineCode>{` for the request.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`List<String> purchasedProductIds = new ArrayList<String>();\npurchasedProductIds.add(\"34\");\npurchasedProductIds.add(\"125\"); \nTargetOrder targetOrder = new TargetOrder(\"123\", 567.89, purchasedProductIds);\n\nTargetProduct targetProduct = new TargetProduct(\"123\", \"Books\");\n\nTargetParameters targetParameters = new TargetParameters.Builder()\n.parameters(new HashMap<String, String>())\n.profileParameters(new HashMap<String, String>())\n.product(targetProduct)\n.order(targetOrder)\n.build();\n\nList<String> mboxList = new ArrayList<>();\nmboxList.add(\"mboxName1\");\n\nTarget.displayedLocations(mboxList, targetParameters);\n`}</code></pre>\n    <Variant platform=\"ios\" api=\"displayed-locations\" repeat=\"8\" mdxType=\"Variant\" />\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`static func displayedLocations(_ names: [String], targetParameters: TargetParameters?)\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`names`}</em>{` : is an `}<inlineCode parentName=\"li\">{`array`}</inlineCode>{` of the mbox locations for which the display notification will be sent to Target.`}</li>\n      <li parentName=\"ul\"><em parentName=\"li\">{`targetParameters`}</em>{` : is the configured `}<inlineCode parentName=\"li\">{`TargetParameters`}</inlineCode>{` for the request.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <p><strong parentName=\"p\">{`Swift`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`Target.displayedLocations(\n              [\"mboxName1\", \"mboxName2\"], \n        targetParameters: TargetParameters(\n        parameters: nil,\n        profileParameters: nil,\n        order: TargetOrder(id: \"ADCKKBC\", total: 400.50, purchasedProductIds: [\"34\", \"125\"]),\n        product: TargetProduct(productId: \"24D334\", categoryId: \"Stationary\")\n        )\n)\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Objective-C`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objc\"\n      }}>{`AEPTargetOrder *order = [[AEPTargetOrder alloc] initWithId:@\"ADCKKBC\" total:400.50 purchasedProductIds:@[@\"34\", @\"125\"]];\nAEPTargetProduct *product =[[AEPTargetProduct alloc] initWithProductId:@\"24D334\" categoryId:@\"Stationary\"];\nAEPTargetParameters * targetParams = [[AEPTargetParameters alloc] initWithParameters:nil profileParameters:nil order:order product:product];\n[AEPMobileTarget displayedLocations:@[@\"mboxName1\", @\"mboxName2\"] withTargetParameters:targetParams];\n`}</code></pre>\n    {/*- <Variant platform=\"react-native\" api=\"displayed-locations\" repeat=\"6\"/>\n     #### JavaScript\n     **Syntax**\n     ```javascript\n     locationsDisplayed(mboxNames: Array<string>, parameters?: ACPTargetParameters)\n     ```\n     * _mboxNames_ is an Array of the mbox locations for which the display notification will be sent to Target.\n     * _targetParameters_ is the configured `ACPTargetParameters` for the request.\n     **Example**\n     ```javascript\n     var product = new ACPTargetProduct(\"24D334\", \"Stationary\");\n     var order = new ACPTargetOrder(\"ADCKKBC\", 400.50, [\"34\", \"125\"]);\n     var targetParameters = new ACPTargetParameters(null, null, product, order);\n     ACPTarget.locationsDisplayed([\"mboxName1\", \"mboxName2\"], targetParameters);\n     ``` -*/}\n    <Variant platform=\"android\" api=\"execute-raw-request\" repeat=\"6\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-3\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public static void executeRawRequest(final Map<String, Object> request, final AdobeCallback<Map<String, Object>> callback)\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`request`}</inlineCode>{`: A map containing prefetch or execute request data in the Target v1 delivery API request format.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`callback`}</inlineCode>{`: An AdobeCallback instance which will be called after the Target request is completed. The parameter in the callback will contain the response data if the request executed successfully, or it will contain null otherwise. `}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`final Map<String, Object> executeMbox1 = new HashMap<String, Object>() {\n    {\n        put(\"index\", 0);\n        put(\"name\", \"mbox1\");\n        put(\"parameters\", new HashMap<String, String>() {\n            {\n                put(\"mbox_parameter_key1\", \"mbox_parameter_value1\");\n            }\n        });\n        put(\"profileParameters\", new HashMap<String, String>() {\n            {\n                put(\"subscription\", \"premium\");\n            }\n        });\n        put(\"order\", new HashMap<String, Object>() {\n            {\n                put(\"id\", \"id1\");\n                put(\"total\", 100.34);\n                put(\"purchasedProductIds\", new ArrayList<String>() {\n                    {\n                        add(\"pId1\");\n                    }\n                });\n            }\n        });\n        put(\"product\", new HashMap<String, String>() {\n            {\n                put(\"id\", \"pId1\");\n                put(\"categoryId\", \"cId1\");\n            }\n        });\n    }\n};\n\nfinal Map<String, Object> executeMbox2 = new HashMap<String, Object>() {\n    {\n        put(\"index\", 1);\n        put(\"name\", \"mbox2\");\n        put(\"parameters\", new HashMap<String, String>() {\n            {\n                put(\"mbox_parameter_key2\", \"mbox_parameter_value2\");\n            }\n        });\n    }\n};\n\nfinal List<Map<String, Object>> executeMboxes = new ArrayList<>();\nexecuteMboxes.add(executeMbox1);\nexecuteMboxes.add(executeMbox2);\n\nfinal Map<String, Object> request = new HashMap<String, Object>() {\n    {\n        put(\"execute\", new HashMap<String, Object>() {\n            {\n                put(\"mboxes\", executeMboxes);\n            }\n        });\n    }\n};\n\nTarget.executeRawRequest(request, response -> {\n    System.out.println(\"Received Target raw response.\");\n\n    if (response == null) {\n        System.out.println(\"Null Target response!\");\n        return;\n    }\n\n    // handle response\n});\n`}</code></pre>\n    <Variant platform=\"android\" api=\"extension-version\" repeat=\"5\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-4\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public String extensionVersion()\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`Target.extensionVersion();\n`}</code></pre>\n    <Variant platform=\"ios\" api=\"extension-version\" repeat=\"7\" mdxType=\"Variant\" />\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`static var extensionVersion: String\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <p><strong parentName=\"p\">{`Swift`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`let targetVersion = Target.extensionVersion\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Objective-C`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objc\"\n      }}>{`NSString *targetVersion = [AEPMobileTarget extensionVersion];\n`}</code></pre>\n    {/*- <Variant platform=\"react-native\" api=\"extension-version\" repeat=\"5\"/>\n     #### JavaScript\n     **Syntax**\n     ```javascript\n     extensionVersion(): Promise<string>\n     ```\n     **Example**\n     ```javascript\n     ACPTarget.extensionVersion().then(version => {\n                // read Target extension version \n     });\n     ``` -*/}\n    <Variant platform=\"android\" api=\"get-session-id\" repeat=\"6\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-5\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public static void getSessionId(final AdobeCallback<String> callback)\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`callback`}</em>{` is invoked with the `}<inlineCode parentName=\"li\">{`sessionId`}</inlineCode>{` value, or `}<inlineCode parentName=\"li\">{`null`}</inlineCode>{` if there was an error retrieving it.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`Target.getSessionId(new AdobeCallback<String>() {                    \n    @Override\n    public void call(String sessionId) {\n                // read Target sessionId\n    }\n});\n`}</code></pre>\n    <Variant platform=\"ios\" api=\"get-session-id\" repeat=\"8\" mdxType=\"Variant\" />\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`static func getThirdPartyId(_ completion: @escaping (String?, Error?) -> Void)\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`completion`}</em>{` : invoked with the `}<inlineCode parentName=\"li\">{`sessionId`}</inlineCode>{` value, or `}<inlineCode parentName=\"li\">{`nil`}</inlineCode>{` if there was an error retrieving it.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <p><strong parentName=\"p\">{`Swift`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`Target.getSessionId { (id, err) in\n    // read Target sessionId\n}\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Objective-C`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objc\"\n      }}>{`[AEPMobileTarget getSessionId:^(NSString *sessionId, NSError *error){\n    // read Target sessionId\n}];\n`}</code></pre>\n    <Variant platform=\"android\" api=\"get-third-party-id\" repeat=\"6\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-6\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public static void getThirdPartyId(final AdobeCallback<String> callback)\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`callback`}</em>{` is invoked with the `}<inlineCode parentName=\"li\">{`thirdPartyId`}</inlineCode>{` value. If no third-party ID was set, this value will be `}<inlineCode parentName=\"li\">{`null`}</inlineCode>{`.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`Target.getThirdPartyId(new AdobeCallback<String>() {                    \n    @Override\n    public void call(String thirdPartyId) {\n                // read Target thirdPartyId\n    }\n});\n`}</code></pre>\n    <Variant platform=\"ios\" api=\"get-third-party-id\" repeat=\"8\" mdxType=\"Variant\" />\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`static func getThirdPartyId(_ completion: @escaping (String?, Error?) -> Void)\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`completion`}</em>{` : invoked with the `}<inlineCode parentName=\"li\">{`thirdPartyId`}</inlineCode>{` value. If no `}<inlineCode parentName=\"li\">{`third-party`}</inlineCode>{` ID was set, this value will be `}<inlineCode parentName=\"li\">{`nil`}</inlineCode>{`.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <p><strong parentName=\"p\">{`Swift`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`Target.getThirdPartyId { (id, err) in\n    // read Target thirdPartyId\n}\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Objective-C`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objc\"\n      }}>{`[AEPMobileTarget getThirdPartyId:^(NSString *thirdPartyID, NSError *error){\n    // read Target thirdPartyId\n}];\n`}</code></pre>\n    {/*- <Variant platform=\"react-native\" api=\"get-third-party-id\" repeat=\"6\"/>\n     #### JavaScript\n     **Syntax**\n     ```javascript\n     getThirdPartyId(): Promise<string>\n     ```\n     * A _Promise_ object is returned and is resolved with the `thirdPartyId` value.\n     **Example**\n     ```javascript\n     ACPTarget.getThirdPartyId().then(thirdPartyId => {\n                // read Target thirdPartyId \n     });\n     ``` -*/}\n    <Variant platform=\"android\" api=\"get-tnt-id\" repeat=\"6\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-7\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public static void getTntId(final AdobeCallback<String> callback)\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`callback`}</em>{` is invoked with the `}<inlineCode parentName=\"li\">{`tntId`}</inlineCode>{` value. If no Target ID was set, this value will be `}<inlineCode parentName=\"li\">{`null`}</inlineCode>{`. `}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`Target.getTntId(new AdobeCallback<String>() {\n    @Override\n    public void call(String tntId) {\n        // read target's tntid\n    }\n});\n`}</code></pre>\n    <Variant platform=\"ios\" api=\"get-tnt-id\" repeat=\"8\" mdxType=\"Variant\" />\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`static func getTntId(_ completion: @escaping (String?, Error?) -> Void)\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`completion`}</em>{` : invoked with the `}<inlineCode parentName=\"li\">{`tntId`}</inlineCode>{` value. If no Target ID was set, this value will be `}<inlineCode parentName=\"li\">{`nil`}</inlineCode>{`.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <p><strong parentName=\"p\">{`Swift`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`Target.getTntId({ (id, err) in\n    // read target's tntId        \n})\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Objective-C`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objc\"\n      }}>{`[AEPMobileTarget getTntId:^(NSString *tntID, NSError *error){\n    // read target's tntId \n}];\n`}</code></pre>\n    {/*- <Variant platform=\"react-native\" api=\"get-tnt-id\" repeat=\"6\"/>\n     #### JavaScript\n     **Syntax**\n     ```javascript\n     getTntId(): Promise<string>\n     ```\n     * A _Promise_ object is returned and is resolved with the `thirdPartyId` value.\n     **Example**\n     ```javascript\n     ACPTarget.getTntId().then(tntId => {\n                // read target's tntId                         \n     });\n     ``` -*/}\n    <Variant platform=\"android\" api=\"prefetch-content\" repeat=\"6\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-8\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public static void prefetchContent(final List<TargetPrefetch> mboxPrefetchList, final TargetParameters parameters, final AdobeCallback<String> callback)\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`mboxPrefetchList`}</em>{` is a list of `}<inlineCode parentName=\"li\">{`TargetPrefetch`}</inlineCode>{` objects for various mbox locations.`}</li>\n      <li parentName=\"ul\"><em parentName=\"li\">{`parameters`}</em>{` is the configured `}<inlineCode parentName=\"li\">{`TargetParameters`}</inlineCode>{` for the prefetch request.`}</li>\n      <li parentName=\"ul\">{`If the prefetch is successful, `}<em parentName=\"li\">{`callback`}</em>{` is invoked with a `}<inlineCode parentName=\"li\">{`null`}</inlineCode>{` value. If the prefetch is not successful, an error message is returned.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`// first prefetch request\nMap<String, String> mboxParameters1 = new HashMap<>();\nmboxParameters1.put(\"status\", \"platinum\");\n\nTargetParameters targetParameters1 = new TargetParameters.Builder()\n.parameters(mboxParameters1)\n.build();\n\nTargetPrefetch prefetchRequest1 = new TargetPrefetch(\"mboxName1\", targetParameters1);\n\n// second prefetch request\nMap<String, String> mboxParameters2 = new HashMap<>();\nmboxParameters2.put(\"userType\", \"paid\");\n\nList<String> purchasedIds = new ArrayList<String>();\npurchasedIds.add(\"34\");\npurchasedIds.add(\"125\");\nTargetOrder targetOrder = new TargetOrder(\"ADCKKIM\", 344.30, purchasedIds);\n\nTargetProduct targetProduct = new TargetProduct(\"24D3412\", \"Books\");\n\nTargetParameters targetParameters2 = new TargetParameters.Builder()\n.parameters(mboxParameters2)\n.product(targetProduct)\n.order(targetOrder)\n.build();\n\nTargetPrefetch prefetchRequest2 = new TargetPrefetch(\"mboxName2\", targetParameters2);\n\nList<TargetPrefetch> prefetchMboxesList = new ArrayList<>();\nprefetchMboxesList.add(prefetchRequest1);\nprefetchMboxesList.add(prefetchRequest2);\n\n// Call the prefetchContent API.\nTargetParamters targetParameters = null;\nTarget.prefetchContent(prefetchMboxesList, targetParameters, prefetchStatusCallback);\n`}</code></pre>\n    <Variant platform=\"ios\" api=\"prefetch-content\" repeat=\"8\" mdxType=\"Variant\" />\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`static func prefetchContent(_ prefetchArray: [TargetPrefetch], with targetParameters: TargetParameters? = nil, _ completion: ((Error?) -> Void)?)\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`prefetchArray`}</em>{` - is an array of `}<inlineCode parentName=\"li\">{`TargetPrefetch`}</inlineCode>{` objects for various mbox locations.`}</li>\n      <li parentName=\"ul\"><em parentName=\"li\">{`targetParameters`}</em>{` - is the configured `}<inlineCode parentName=\"li\">{`TargetParameters`}</inlineCode>{` for the prefetch request.`}</li>\n      <li parentName=\"ul\">{`If the prefetch is successful, `}<inlineCode parentName=\"li\">{`completion`}</inlineCode>{` is invoked with a nil value. If the prefetch is not successful, an error message is returned.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <p><strong parentName=\"p\">{`Swift`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`let TargetParameters1 = TargetParameters(\n    parameters: [\"status\": \"platinum\"],\n    profileParameters: [\"age\": \"20\"],\n    order: TargetOrder(id: \"ADCKKIM\", total: 344.30, purchasedProductIds: [\"34\", \"125\"]),\n    product: TargetProduct(productId: \"24D3412\", categoryId:\"Books\")\n    )\n\nlet TargetParameters2 = TargetParameters(\n    parameters: [\"userType\": \"Paid\"],\n    profileParameters: nil,\n    order: TargetOrder(id: \"ADCKKIM\", total: 344.30, purchasedProductIds: [\"id1\", \"id2\"]),\n    product: TargetProduct(productId: \"764334\", categoryId:\"Online\")\n    )\n\nlet globalTargetParameters = TargetParameters(\n    parameters: [\"status\": \"progressive\"],\n    profileParameters: [\"age\": \"20-32\"],\n    order: TargetOrder(id: \"ADCKKBC\", total: 400.50, purchasedProductIds: [\"34\", \"125\"]),\n    product: TargetProduct(productId: \"24D334\", categoryId:\"Stationary\")\n    )\n\nTarget.prefetchContent([\n    TargetPrefetch(name: \"mboxName1\", targetParameters: TargetParameters1),\n    TargetPrefetch(name: \"mboxName2\", targetParameters: TargetParameters2),\n    ],\n    with: globalTargetParameters\n    ){ error in\n        // do something with the callback response\n}\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Objective-C`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objc\"\n      }}>{`NSDictionary *mboxParameters1 = @{@\"status\":@\"platinum\"};\nNSDictionary *profileParameters1 = @{@\"age\":@\"20\"};\nAEPTargetProduct *product1 = [[AEPTargetProduct alloc] initWithProductId:@\"24D3412\" categoryId:@\"Books\"];\nAEPTargetOrder *order1 = [[AEPTargetOrder alloc] initWithId:@\"ADCKKIM\" total:[@(344.30) doubleValue] purchasedProductIds:@[@\"34\", @\"125\"]];\n\nAEPTargetParameters *targetParameters1 = [[AEPTargetParameters alloc] initWithParameters:mboxParameters1 profileParameters:profileParameters1 order:order1 product:product1 ];\n\nNSDictionary *mboxParameters2 = @{@\"userType\":@\"Paid\"};\nAEPTargetProduct *product2 = [[AEPTargetProduct alloc] initWithProductId:@\"764334\" categoryId:@\"Online\"];\nAEPTargetOrder *order2 = [[AEPTargetOrder alloc] initWithId:@\"ADCKKIM\" total:[@(344.30) doubleValue] purchasedProductIds:@[@\"id1\",@\"id2\"]];\nAEPTargetParameters *targetParameters2 = [[AEPTargetParameters alloc] initWithParameters:mboxParameters2 profileParameters:nil order:order2 product:product2 ];\n\n// Creating Prefetch Objects\nAEPTargetPrefetchObject *prefetch1 = [[AEPTargetPrefetchObject alloc] initWithName: @\"logo\" targetParameters:targetParameters1];\nAEPTargetPrefetchObject *prefetch2 = [[AEPTargetPrefetchObject alloc] initWithName: @\"buttonColor\" targetParameters:targetParameters2];\n\n// Creating prefetch Array\nNSArray *prefetchArray = @[prefetch1,prefetch2];\n\n// Creating Target parameters\nNSDictionary *mboxParameters = @{@\"status\":@\"progressive\"};\nNSDictionary *profileParameters = @{@\"age\":@\"20-32\"};\nAEPTargetProduct *product = [[AEPTargetProduct alloc] initWithProductId:@\"24D334\" categoryId:@\"Stationary\"];\nAEPTargetOrder *order = [[AEPTargetOrder alloc] initWithId:@\"ADCKKBC\" total:[@(400.50) doubleValue] purchasedProductIds:@[@\"34\", @\"125\"]];\n\nAEPTargetParameters *targetParameters = [[AEPTargetParameters alloc] initWithParameters:mboxParameters\nprofileParameters:profileParameters\norder:order\nproduct:product];\n\n// Target API Call\n[AEPMobileTarget prefetchContent:prefetchArray withParameters:targetParameters callback:^(NSError * _Nullable error){\n// do something with the callback response\n}];\n`}</code></pre>\n    {/*- <Variant platform=\"react-native\" api=\"prefetch-content\" repeat=\"6\"/>\n     #### JavaScript\n     **Syntax**\n     ```javascript\n     prefetchContent(prefetchObjectArray: Array<ACPTargetPrefetchObject>, parameters?: ACPTargetParameters): Promise<any>\n     ```\n     * _prefetchObjectArray_ is an Array of `ACPTargetPrefetchObject` objects for various mbox locations.\n     * _parameters_ is the configured `ACPTargetParameters` for the prefetch request.\n     * A Promise object is returned and is resolved with true value or is rejected with the reason for the error.\n     **Example**\n     ```javascript\n     var mboxParameters1 = {\"status\": \"platinum\"};\n     var profileParameters1 = {\"age\": \"20\"};\n     var product1 = new ACPTargetProduct(\"24D3412\", \"Books\");\n     var order1 = new ACPTargetOrder(\"ADCKKIM\", 344.30, [\"34\",\"125\"]);\n     var targetParameters1 = new ACPTargetParameters(mboxParameters1, profileParameters1, product1, order1);\n     var mboxParameters2 = {\"userType\": \"Paid\"};\n     var product2 = new ACPTargetProduct(\"764334\", \"Online\");\n     var order2 = new ACPTargetOrder(\"ADCKKIM\", 344.30, [\"id1\",\"id2\"]);\n     var targetParameters2 = new ACPTargetParameters(mboxParameters2, null, product2, order2);\n     // Creating Prefetch Objects\n     var prefetch1 = new ACPTargetPrefetchObject(\"logo\", targetParameters1);\n     var prefetch2 = new ACPTargetPrefetchObject(\"buttonColor\", targetParameters2);\n     // Creating prefetch Array\n     var prefetchList = [prefetch1, prefetch2];\n     // Creating Target parameters\n     var mboxParameters = {\"status\": \"progressive\"};\n     var profileParameters = {\"age\": \"20-32\"};\n     var product = new ACPTargetProduct(\"24D334\", \"Stationary\");\n     var order = new ACPTargetOrder(\"ADCKKBC\", 400.50, [\"34\",\"125\"]);\n     var targetParameters = new ACPTargetParameters(mboxParameters, profileParameters, product, order);\n     // Target API Call\n     ACPTarget.prefetchContent(prefetchList, targetParameters).then(success => console.log(success)).catch(err => console.log(err));\n     ``` -*/}\n    <Variant platform=\"android\" api=\"register-extension\" repeat=\"1\" mdxType=\"Variant\" />\n    <p>{`This API has been deprecated from version 2.0.0. Instead, the extension should be registered by calling the `}<inlineCode parentName=\"p\">{`registerExtensions`}</inlineCode>{` API in Mobile Core. For more information, please read the `}<a parentName=\"p\" {...{\n        \"href\": \"../../mobile-core/api-reference.md\"\n      }}>{`Mobile Core API guide`}</a>{`.`}</p>\n    <Variant platform=\"ios\" api=\"register-extension\" repeat=\"1\" mdxType=\"Variant\" />\n    <p>{`This API no longer exists in `}<inlineCode parentName=\"p\">{`Target`}</inlineCode>{`. Instead, the extension should be registered by calling the `}<inlineCode parentName=\"p\">{`registerExtensions`}</inlineCode>{` API in Mobile Core. Please see the updated SDK initialization steps at the `}<a parentName=\"p\" {...{\n        \"href\": \"../migrate-to-swift.md#update-sdk-initialization\"\n      }}>{`migrate to Swift tutorial`}</a>{`.`}</p>\n    {/*- <Variant platform=\"react-native\" api=\"register-extension\" repeat=\"1\"/>\n     When using React Native, register the Target extension with Mobile Core in native code as shown on the Android and iOS tabs. -*/}\n    <Variant platform=\"android\" api=\"reset-experience\" repeat=\"5\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-9\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public static void resetExperience()\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`Target.resetExperience();\n`}</code></pre>\n    <Variant platform=\"ios\" api=\"reset-experience\" repeat=\"7\" mdxType=\"Variant\" />\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`static func resetExperience()\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <p><strong parentName=\"p\">{`Swift`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`Target.resetExperience()\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Objective-C`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objc\"\n      }}>{`[AEPMobileTarget resetExperience];\n`}</code></pre>\n    {/*- <Variant platform=\"react-native\" api=\"reset-experience\" repeat=\"5\"/>\n     #### JavaScript\n     **Syntax**\n     ```javascript\n     resetExperience()\n     ```\n     **Example**\n     ```javascript\n     ACPTarget.resetExperience();\n     ``` -*/}\n    <Variant platform=\"android\" api=\"retrieve-location-content\" repeat=\"6\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-10\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public static void retrieveLocationContent(final List<TargetRequest> targetRequestList, final TargetParameters parameters)\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`targetRequestList`}</em>{` is a list of `}<inlineCode parentName=\"li\">{`TargetRequest`}</inlineCode>{` objects for various mbox locations.`}</li>\n      <li parentName=\"ul\"><em parentName=\"li\">{`parameters`}</em>{` is the configured `}<inlineCode parentName=\"li\">{`TargetParameters`}</inlineCode>{` for the retrieve location request.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`// define parameters for first request\nMap<String, String> mboxParameters1 = new HashMap<>();\nmboxParameters1.put(\"status\", \"platinum\");\n\nTargetParameters parameters1 = new TargetParameters.Builder().parameters(mboxParameters1).build();\n\nTargetRequest request1 = new TargetRequest(\"mboxName1\", parameters1, \"defaultContent1\",\n                                            new AdobeCallback<String>() {\n                                                @Override\n                                                public void call(String value) {\n                                                    // do something with target content.\n                                                }\n                                            });\n\n// define parameters for second request\nMap<String, String> mboxParameters2 = new HashMap<>();\nmboxParameters2.put(\"userType\", \"paid\");\n\nList<String> purchasedIds = new ArrayList<String>();\npurchasedIds.add(\"34\");\npurchasedIds.add(\"125\");\nTargetOrder targetOrder = new TargetOrder(\"ADCKKIM\", 344.30, purchasedIds);\n\nTargetProduct targetProduct = new TargetProduct(\"24D3412\", \"Books\");\n\nTargetParameters parameters2 = new TargetParameters.Builder()\n                               .parameters(mboxParameters2)\n                               .product(targetProduct)\n                               .order(targetOrder)\n                               .build();\n\nTargetRequest request2 = new TargetRequest(\"mboxName2\", parameters2, \"defaultContent2\",\n                                            new AdobeTargetDetailedCallback() {\n                                                @Override\n                                                public void call(final String content, final Map<String, Object> data) {\n                                                    if (content != null && !content.isEmpty()) {\n                                                        // do something with the target content.\n                                                    }\n\n                                                    // Read the data Map containing one or more of response tokens, analytics payload \n                                                    // and click metric analytics payload, if available\n                                                    if (data != null && !data.isEmpty()) {\n\n                                                        Map<String, String> responseTokens = data.containsKey(\"responseTokens\") ? \n                                                                                            (Map<String, String>) data.get(\"responseTokens\") : \n                                                                                            null;\n\n                                                        Map<String, String> analyticsPayload = data.containsKey(\"analytics.payload\") ? \n                                                                                              (Map<String, String>) data.get(\"analytics.payload\") : \n                                                                                              null;\n\n                                                        Map<String, String> clickMetricAnalyticsPayload = data.containsKey(\"clickmetric.analytics.payload\") ? \n                                                                                                          (Map<String, String>) data.get(\"clickmetric.analytics.payload\") : \n                                                                                                          null;\n\n                                                        ...\n                                                    }\n                                                }\n\n                                                @Overrides\n                                                void fail(final AdobeError error) {\n                                                    // take appropriate action upon error.\n                                                }\n                                            });\n\n// Creating Array of Request Objects\nList<TargetRequest> locationRequests = new ArrayList<>();\nlocationRequests.add(request1);\nlocationRequests.add(request2);\n\n // Define the profile parameters map.\nMap<String, String> profileParameters1 = new HashMap<>();\nprofileParameters1.put(\"ageGroup\", \"20-32\");\n\nTargetParameters parameters = new TargetParameters.Builder().profileParameters(profileParameters1).build();\n\n// Call the targetRetrieveLocationContent API.\nTarget.retrieveLocationContent(locationRequests, parameters);\n`}</code></pre>\n    <Variant platform=\"ios\" api=\"retrieve-location-content\" repeat=\"8\" mdxType=\"Variant\" />\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`static func retrieveLocationContent(_ requestArray: [TargetRequest], with targetParameters: TargetParameters? = nil)\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`requestArray`}</em>{` - an array of `}<inlineCode parentName=\"li\">{`TargetRequest`}</inlineCode>{` objects to retrieve content`}</li>\n      <li parentName=\"ul\"><em parentName=\"li\">{`targetParameters`}</em>{` - a `}<inlineCode parentName=\"li\">{`TargetParameters`}</inlineCode>{` object containing parameters for all locations in the requests array`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <p><strong parentName=\"p\">{`Swift`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`let TargetParameters1 = TargetParameters(\n    parameters: [\"status\": \"platinum\"],\n    profileParameters: [\"age\": \"20\"],\n    order: TargetOrder(id: \"ADCKKIM\", total: 344.30, purchasedProductIds: [\"34\", \"125\"]),\n    product: TargetProduct(productId: \"24D3412\", categoryId: \"Books\")\n)\n\nlet TargetParameters2 = TargetParameters(\n    parameters: [\"userType\": \"Paid\"],\n    profileParameters: nil,\n    order: TargetOrder(id: \"ADCKKIM\", total: 344.30, purchasedProductIds: [\"id1\", \"id2\"]),\n    product: TargetProduct(productId: \"764334\", categoryId: \"Online\")\n)\n\nlet globalTargetParameters = TargetParameters(\n    parameters: [\"status\": \"progressive\"],\n    profileParameters: [\"age\": \"20-32\"],\n    order: TargetOrder(id: \"ADCKKBC\", total: 400.50, purchasedProductIds: [\"34\", \"125\"]),\n    product: TargetProduct(productId: \"24D334\", categoryId: \"Stationary\")\n)\n\nlet request1 = TargetRequest(mboxName: \"logo\", defaultContent: \"BlueWhale\", targetParameters: TargetParameters1) { content in\n    if let content = content {\n        // do something with the target content.\n    }\n}\nlet request2 = TargetRequest(mboxName: \"logo\", defaultContent: \"red\", targetParameters: TargetParameters2) { content, data in\n        if let content = content {\n        // do something with the target content.\n    }\n\n    // Read the data dictionary containing one or more of response tokens, analytics payload and click-tracking analytics payload, if available.\n    if let data = data {\n        let responseTokens = data[\"responseTokens\"] as? [String: String] ?? [:]\n\n        let analyticsPayload = data[\"analytics.payload\"] as? [String: String] ?? [:]\n\n        let clickMetricAnalyticsPayload = data[\"clickmetric.analytics.payload\"] as? [String: String] ?? [:]\n        ...\n    }\n}\nTarget.retrieveLocationContent([request1, request2], with: globalTargetParameters)\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Objective-C`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objc\"\n      }}>{`NSDictionary *mboxParameters1 = @{@\"status\":@\"platinum\"};\nNSDictionary *profileParameters1 = @{@\"age\":@\"20\"};\nAEPTargetProduct *product1 = [[AEPTargetProduct alloc] initWithProductId:@\"24D3412\" categoryId:@\"Books\"];\nAEPTargetOrder *order1 = [[AEPTargetOrder alloc] initWithId:@\"ADCKKIM\" total:[@(344.30) doubleValue] purchasedProductIds:@[@\"34\", @\"125\"]];\n\nAEPTargetParameters *targetParameters1 = [[AEPTargetParameters alloc] initWithParameters:mboxParameters1 profileParameters:profileParameters1 order:order1 product:product1 ];\n\nNSDictionary *mboxParameters2 = @{@\"userType\":@\"Paid\"};\nAEPTargetProduct *product2 = [[AEPTargetProduct alloc] initWithProductId:@\"764334\" categoryId:@\"Online\"];\nAEPTargetOrder *order2 = [[AEPTargetOrder alloc] initWithId:@\"ADCKKIM\" total:[@(344.30) doubleValue] purchasedProductIds:@[@\"id1\",@\"id2\"]];\nAEPTargetParameters *targetParameters2 = [[AEPTargetParameters alloc] initWithParameters:mboxParameters2 profileParameters:nil order:order2 product:product2 ];\n\nAEPTargetRequestObject *request1 = [[AEPTargetRequestObject alloc] initWithMboxName: @\"logo\" defaultContent: @\"BlueWhale\" targetParameters: targetParameters1 contentCallback:^(NSString * _Nullable content) {\n    // do something with the received content\n    NSString *targetContent = content ?: @\"\";\n}];\nAEPTargetRequestObject *request2 = [[AEPTargetRequestObject alloc] initWithMboxName: @\"logo\" defaultContent: @\"red\" targetParameters: targetParameters2 contentWithDataCallback:^(NSString * _Nullable content, NSDictionary<NSString *,id> * _Nullable data) {\n    // do something with the target content.\n    NSString *targetContent = content ?: @\"\";\n\n    // Read the data dictionary containing one or more of response tokens, analytics payload and click-tracking analytics payload, if available.      \n    if ([data count] > 0) {\n        if ([data objectForKey:@\"responseTokens\"]) {\n            // read response tokens\n        }\n\n        if ([data objectForKey:@\"analytics.payload\"]) {\n          // read analytics payload\n        }\n\n        if ([data objectForKey:@\"clickmetric.analytics.payload\"]) {\n          // read click-tracking analytics payload\n        }\n    }   \n}];\n\n// Create request object array\nNSArray *requestArray = @[request1,request2];\n\n// Creating Target parameters\nNSDictionary *mboxParameters = @{@\"status\":@\"progressive\"};\nNSDictionary *profileParameters = @{@\"age\":@\"20-32\"};\nAEPTargetProduct *product = [[AEPTargetProduct alloc] initWithProductId:@\"24D334\" categoryId:@\"Stationary\"];\nAEPTargetOrder *order = [[AEPTargetOrder alloc] initWithId:@\"ADCKKBC\" total:[@(400.50) doubleValue] purchasedProductIds:@[@\"34\", @\"125\"]];\n\nAEPTargetParameters *targetParameters = [[AEPTargetParameters alloc] initWithParameters:mboxParameters\n                                                                      profileParameters:profileParameters\n                                                                                  order:order\n                                                                                product:product];\n[AEPMobileTarget retrieveLocationContent: requestArray withParameters: targetParameters];\n`}</code></pre>\n    {/*- <Variant platform=\"react-native\" api=\"retrieve-location-content\" repeat=\"6\"/>\n     #### JavaScript\n     **Syntax**\n     ```javascript\n     retrieveLocationContent(requests: Array<ACPTargetRequestObject>, parameters?: ACPTargetParameters)\n     ```\n     * _requests_ is an Array of `ACPTargetRequestObject` objects for various mbox locations.\n     * _parameters_ is the configured `ACPTargetParameters` for the load request.\n     **Example**\n     ```javascript\n     var mboxParameters1 = {\"status\": \"platinum\"};\n     var product1 = new ACPTargetProduct(\"24D3412\", \"Books\");\n     var order1 = new ACPTargetOrder(\"ADCKKIM\", 344.30, [\"a\",\"b\"]);\n     var mboxParameters2 = {\"userType\": \"Paid\"};\n     var product2 = new ACPTargetProduct(\"764334\", \"Online\");\n     var order2 = new ACPTargetOrder(\"4t4uxksa\", 54.90, [\"id1\",\"id2\"]);\n     var params1 = new ACPTargetParameters(mboxParameters1, null, product1, order1);\n     var request1 = new ACPTargetRequestObject(\"logo\", params1, \"BlueWhale\", (error, content) => {\n          if (error) {\n            console.error(error);\n          } else {\n            console.log(\"Target content:\" + content);\n          }\n     });\n     var params2 = new ACPTargetParameters(mboxParameters2, null, product2, order2);\n     var request2 = new ACPTargetRequestObject(\"logo\", params1, \"red\", (error, content) => {\n          if (error) {\n            console.error(error);\n          } else {\n            console.log(\"Target content:\" + content);\n          }\n     });\n     // Create request object array\n     let requestArray = [request1, request2]\n     // Creating Target parameters\n     var mboxParameters = {\"status\": \"progressive\"};\n     var profileParameters = {\"age\": \"20-32\"};\n     var product = new ACPTargetProduct(\"24D334\", \"Stationary\");\n     var order = new ACPTargetOrder(\"ADCKKBC\", 400.50, [\"34\",\"125\"]);\n     var targetParameters = new ACPTargetParameters(mboxParameters, profileParameters, product, order);\n     // Target API Call\n     ACPTarget.retrieveLocationContent(requestArray, targetParameters);\n     ``` -*/}\n    <Variant platform=\"android\" api=\"send-raw-notifications\" repeat=\"5\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-11\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public static void sendRawNotifications(final Map<String, Object> request)\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`request`}</inlineCode>{`: A map containing notifications data in the Target v1 delivery API request format.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`final List<Map<String, Object>> notifications = new ArrayList<>();\nfinal Map<String, Object> notification = new HashMap<String, Object>() {\n    {\n        put(\"id\", \"0\");\n        put(\"timestamp\", (long)(System.currentTimeMillis()));\n        put(\"type\", \"click\");\n        put(\"mbox\", new HashMap<String, Object>() {\n            {\n                put(\"name\", \"mbox1\");\n            }\n        });\n        put(\"tokens\", new ArrayList<String>() {\n            {\n                add(\"someClickToken\");\n            }\n        });\n        put(\"parameters\", new HashMap<String, Object>() {\n            {\n                put(\"mbox_parameter_key3\", \"mbox_parameter_value3\");\n            }\n        });\n    }\n};\nnotifications.add(notification);\nfinal Map<String, Object> request = new HashMap<>();\nrequest.put(\"notifications\", notifications);\nTarget.sendRawNotifications(request);\n`}</code></pre>\n    <Variant platform=\"android\" api=\"set-preview-restart-deep-link\" repeat=\"6\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-12\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public static void setPreviewRestartDeepLink(final Uri deepLink)\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`deeplink`}</em>{` is a URI that contains the preview restart deeplink.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`Target.setPreviewRestartDeepLink(\"myapp://HomePage\");\n`}</code></pre>\n    <Variant platform=\"ios\" api=\"set-preview-restart-deep-link\" repeat=\"8\" mdxType=\"Variant\" />\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`static func setPreviewRestartDeepLink(_ deeplink: URL)\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`deeplink`}</em>{` : a `}<inlineCode parentName=\"li\">{`URL`}</inlineCode>{` that contains the preview restart deeplink.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <p><strong parentName=\"p\">{`Swift`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`if let url = URL(string: \"myapp://HomePage\") {\n    Target.setPreviewRestartDeepLink(url)\n}\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Objective-C`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objc\"\n      }}>{`[AEPMobileTarget setPreviewRestartDeepLink:@\"myapp://HomePage\"];\n`}</code></pre>\n    {/*- <Variant platform=\"react-native\" api=\"set-preview-restart-deep-link\" repeat=\"6\"/>\n     #### JavaScript\n     **Syntax**\n     ```javascript\n     setPreviewRestartDeeplink(deepLink: string)\n     ```\n     * _deepLink_ is a string that contains the preview restart deeplink.\n     **Example**\n     ```javascript\n     ACPTarget.setPreviewRestartDeeplink(\"myapp://HomePage\");\n     ``` -*/}\n    <Variant platform=\"android\" api=\"set-session-id\" repeat=\"6\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-13\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public static void setSessionId(final String sessionId)\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`sessionId`}</em>{` is a String that contains the Target session identifier to be set in the SDK.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`Target.setSessionId(\"3f24b997-ea74-420c-81f8-96a8b92c3961\");\n`}</code></pre>\n    <Variant platform=\"ios\" api=\"set-session-id\" repeat=\"8\" mdxType=\"Variant\" />\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`static func setSessionId(_ id: String?)\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`id`}</em>{` : a `}<inlineCode parentName=\"li\">{`String`}</inlineCode>{` that contains the Target session identifier to be set in the SDK.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <p><strong parentName=\"p\">{`Swift`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`Target.setSessionId(\"3f24b997-ea74-420c-81f8-96a8b92c3961\")\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Objective-C`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objc\"\n      }}>{`[AEPMobileTarget setSessionId:@\"3f24b997-ea74-420c-81f8-96a8b92c3961\"]\n`}</code></pre>\n    <Variant platform=\"android\" api=\"set-third-party-id\" repeat=\"6\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-14\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public static void setThirdPartyId(final String thirdPartyId)\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`thirdPartyId`}</em>{` is a String that contains the custom visitor ID to be set in Target.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`Target.setThirdPartyId(\"third-party-id\");\n`}</code></pre>\n    <Variant platform=\"ios\" api=\"set-third-party-id\" repeat=\"8\" mdxType=\"Variant\" />\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`static func setThirdPartyId(_ id: String)\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`id`}</em>{` : a `}<inlineCode parentName=\"li\">{`String`}</inlineCode>{` that contains the custom visitor ID to be set in Target.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <p><strong parentName=\"p\">{`Swift`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`Target.setThirdPartyId(\"third-party-id\")\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Objective-C`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objc\"\n      }}>{`[AEPMobileTarget setThirdPartyId:@\"third-party-id\"]\n`}</code></pre>\n    {/*- <Variant platform=\"react-native\" api=\"set-third-party-id\" repeat=\"6\"/>\n     #### JavaScript\n     **Syntax**\n     ```javascript\n     setThirdPartyId(thirdPartyId: string)\n     ```\n     * _thirdPartyId_ is a string that contains the custom visitor ID to be set in Target.\n     **Example**\n     ```javascript\n     ACPTarget.setThirdPartyId(\"third-party-id\");\n     ``` -*/}\n    <Variant platform=\"android\" api=\"set-tnt-id\" repeat=\"6\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-15\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public static void setTntId(final String tntId)\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`tntId`}</em>{` is a String that contains the Target user identifier to be set in the SDK.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`Target.setTntId(\"f741a5d5-09c0-4931-bf53-b9e568c5f782.35_0\");\n`}</code></pre>\n    <Variant platform=\"ios\" api=\"set-tnt-id\" repeat=\"8\" mdxType=\"Variant\" />\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`static func setTntId(_ id: String?)\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`id`}</em>{` : a `}<inlineCode parentName=\"li\">{`String`}</inlineCode>{` that contains the Target user identifier to be set in the SDK.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <p><strong parentName=\"p\">{`Swift`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`Target.setTntId(\"f741a5d5-09c0-4931-bf53-b9e568c5f782.35_0\")\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Objective-C`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objc\"\n      }}>{`[AEPMobileTarget setTntId:@\"f741a5d5-09c0-4931-bf53-b9e568c5f782.35_0\"]\n`}</code></pre>\n    <Variant platform=\"android\" api=\"visual-preview\" repeat=\"2\" mdxType=\"Variant\" />\n    <p>{`On Android, when the application is launched as a result of a deep link, the `}<inlineCode parentName=\"p\">{`collectLaunchInfo`}</inlineCode>{` API is internally invoked, and the Target activity and deep link information is extracted from the Intent extras.`}</p>\n    <InlineNestedAlert variant=\"info\" header=\"false\" iconPosition=\"left\" mdxType=\"InlineNestedAlert\">\n      <p>{`The SDK can only collect information from the launching Activity if `}<a parentName=\"p\" {...{\n          \"href\": \"../mobile-core/api-reference.md#application-reference-android-only\"\n        }}><inlineCode parentName=\"a\">{`setApplication`}</inlineCode></a>{` has been called. Setting the Application is only necessary on an Activity that is also an entry point for your application. However, setting the Application on each Activity has no negative impact and ensures that the SDK always has the necessary reference to your Application. We recommend that you call `}<inlineCode parentName=\"p\">{`setApplication`}</inlineCode>{` in each of your Activities.`}</p>\n    </InlineNestedAlert>\n    <Variant platform=\"ios\" api=\"visual-preview\" repeat=\"11\" mdxType=\"Variant\" />\n    <p>{`To enter the visual preview mode, use the `}<inlineCode parentName=\"p\">{`collectLaunchInfo`}</inlineCode>{` API to enable the mode, and select the red floating button that appears on the app screen.`}</p>\n    <p><strong parentName=\"p\">{`Swift`}</strong></p>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`public static func collectLaunchInfo(_ userInfo: [String: Any])\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`    MobileCore.collectLaunchInfo([\"adb_deeplink\" : \"com.adobe.targetpreview://app.adobetarget.com?at_preview_token=tokenFromTarget\"])\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Objective-C`}</strong></p>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`+ (void)collectLaunchInfo:(nonnull NSDictionary<NSString*, id>*) userInfo;\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{` [AEPMobileCore collectLaunchInfo:@{@\"adb_deeplink\" : @\"com.adobe.targetpreview://app.adobetarget.com?at_preview_token=tokenFromTarget\"}];\n`}</code></pre>\n    <Variant platform=\"android\" api=\"target-request\" repeat=\"4\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"targetrequest\"\n    }}>{`TargetRequest`}</h4>\n    <h4 {...{\n      \"id\": \"java-16\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class TargetRequest extends TargetObject {\n\n    /**\n     * Instantiate a TargetRequest object\n     * @param mboxName String mbox name for this request\n     * @param targetParameters TargetParameters for this request\n     * @param defaultContent String default content for this request\n     * @param contentCallback AdobeCallback<String> which will get called with Target mbox content\n     */\n    public TargetRequest(final String mboxName,\n                         final TargetParameters targetParameters,\n                         final String defaultContent,\n                         final AdobeCallback<String> contentCallback);\n\n    /**\n    * Instantiate a TargetRequest object.\n    *\n    * @param mboxName String mbox name for this request.\n    * @param targetParameters TargetParameters for this request.\n    * @param defaultContent String default content for this request.\n    * @param contentWithDataCallback AdobeTargetDetailedCallback which will get called with Target mbox content and other optional data such as Target response tokens, analytics payload, click metric analytics payload if available.\n    */\n    public TargetRequest(final String mboxName, \n                         final TargetParameters targetParameters, \n                         final String defaultContent,\n                         final AdobeTargetDetailedCallback contentWithDataCallback);\n}\n`}</code></pre>\n    <Variant platform=\"ios\" api=\"target-request\" repeat=\"10\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"targetrequest-1\"\n    }}>{`TargetRequest`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`@objc(AEPTargetRequestObject)\npublic class TargetRequest: NSObject, Codable {\n    @objc public let name: String\n    @objc public let defaultContent: String\n    @objc public let targetParameters: TargetParameters?\n    @objc let responsePairId: String\n    @objc var contentCallback: ((String?) -> Void)?\n\n    /// Instantiate a \\`TargetRequest\\` object\n    /// - Parameters:\n    ///   - name: \\`String\\` mbox name for this request\n    ///   - defaultContent: \\`String\\` default content for this request\n    ///   - targetParameters: \\`TargetParameters\\` for this request\n    ///   - contentCallback: which will get called with target mbox content\n    @objc public init(mboxName: String, defaultContent: String, targetParameters: TargetParameters? = nil, contentCallback: ((String?) -> Void)? = nil) {\n        name = mboxName\n        self.defaultContent = defaultContent\n        self.targetParameters = targetParameters\n        self.contentCallback = contentCallback\n        contentWithDataCallback = nil\n        responsePairId = UUID().uuidString\n    }\n\n    /// Instantiate a \\`TargetRequest\\` object\n    /// - Parameters:\n    ///   - name: \\`String\\` mbox name for this request\n    ///   - defaultContent: \\`String\\` default content for this request\n    ///   - targetParameters: \\`TargetParameters\\` for this request\n    ///   - contentWithDataCallback: which will get called with target mbox content, and an optional dictionary containing one or more of response tokens, analytics payload, and click metric analytics payload, if available.\n    @objc public init(mboxName: String, defaultContent: String, targetParameters: TargetParameters? = nil, contentWithDataCallback: ((String?, [String: Any]?) -> Void)? = nil) {\n        name = mboxName\n        self.defaultContent = defaultContent\n        self.targetParameters = targetParameters\n        self.contentWithDataCallback = contentWithDataCallback\n        contentCallback = nil\n        responsePairId = UUID().uuidString\n    }\n}\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <p><strong parentName=\"p\">{`Swift`}</strong></p>\n    <p>{`The following example shows how to create an instance of a TargetRequest object that might be used to make a batch request to the configured Target server to fetch content for mbox locations.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`let request1 = TargetRequest(mboxName: \"mboxName\", defaultContent: \"default content\", targetParameters: nil, contentCallback: { content in\n    print(content ?? \"\")\n})\n\nlet request2 = TargetRequest(mboxName: \"mboxName\", defaultContent: \"default content\", targetParameters: nil, contentwithDataCallback: { content, data in\n    print(content ?? \"\")\n\n  if let data = data {\n      // read response tokens\n      let responseTokens = data[\"responseTokens\"] as? [String: String] ?? [:]\n\n      // read analytics payload\n      let analyticsPayload = data[\"analytics.payload\"] as? [String: String] ?? [:]\n\n      // read click-tracking analytics payload\n      let clickMetricAnalyticsPayload = data[\"clickmetric.analytics.payload\"] as? [String: String] ?? [:]\n  }\n})\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Objective-C`}</strong></p>\n    <p>{`The following example shows how to create an instance of a TargetRequest object that might be used to make a batch request to the configured Target server to fetch content for mbox locations.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objc\"\n      }}>{`AEPTargetRequestObject *request1 = [[AEPTargetRequestObject alloc] initWithMboxName:@\"mboxName\" defaultContent:@\"defaultContent\" targetParameters:nil contentCallback:^(NSString * _Nullable content) {\n      NSLog(@\"%@\", content ?: @\"\");\n}];\n\nAEPTargetRequestObject *request2 = [[AEPTargetRequestObject alloc] initWithMboxName: @\"logo\" defaultContent: @\"red\" targetParameters: targetParameters2 contentWithDataCallback:^(NSString * _Nullable content, NSDictionary<NSString *,id> * _Nullable data) {\n    NSLog(@\"%@\", content ?: @\"\");\n\n    if ([data count] > 0) {\n        if ([data objectForKey:@\"responseTokens\"]) {\n            // read response tokens\n        }\n\n        if ([data objectForKey:@\"analytics.payload\"]) {\n          // read analytics payload\n        }\n\n        if ([data objectForKey:@\"clickmetric.analytics.payload\"]) {\n          // read click-tracking analytics payload\n        }\n    }   \n}];\n`}</code></pre>\n    {/*- <Variant platform=\"react-native\" api=\"target-request\" repeat=\"5\"/>\n     #### ACPTargetRequestObject\n     This class extends `ACPTargetPrefetchObject` by adding default content and a callback block that is invoked to return mbox content from Target.\n     #### JavaScript\n     **Syntax**\n     ```javascript\n     class ACPTargetRequestObject extends ACPTargetPrefetchObject {\n      defaultContent:   string;\n       constructor(name: string, targetParameters: ACPTargetParameters, defaultContent: string) {\n        super(name, targetParameters);\n        this.defaultContent = defaultContent;\n      }\n     }\n     ``` -*/}\n    <Variant platform=\"android\" api=\"target-prefetch\" repeat=\"4\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"targetprefetch\"\n    }}>{`TargetPrefetch`}</h4>\n    <h4 {...{\n      \"id\": \"java-17\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class TargetPrefetch extends TargetObject {\n\n    /**\n     * Instantiate a TargetPrefetch object\n     * @param mboxName String mbox name for this prefetch request\n     * @param targetParameters TargetParameters for this prefetch request\n     */\n     public TargetPrefetch(final String mboxName, final TargetParameters targetParameters)\n}\n`}</code></pre>\n    <Variant platform=\"ios\" api=\"target-prefetch\" repeat=\"11\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"targetprefetch-1\"\n    }}>{`TargetPrefetch`}</h4>\n    <p>{`This class contains the name of the Target location/mbox and target parameters to be used in a prefetch request.`}</p>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`/// \\`TargetPrefetch\\` class, used for specifying a mbox location.\n@objc(AEPTargetPrefetchObject)\npublic class TargetPrefetch: NSObject, Codable {\n    @objc public let name: String\n    @objc public let targetParameters: TargetParameters?\n\n    /// Instantiate a \\`TargetPrefetch\\` object\n    /// - Parameters:\n    ///   - name: \\`String\\` mbox name for this prefetch\n    ///   - targetParameters: \\`TargetParameters\\` for this prefetch\n    @objc public init(name: String, targetParameters: TargetParameters? = nil) {\n        self.name = name\n        self.targetParameters = targetParameters\n    }\n}\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <p><strong parentName=\"p\">{`Swift`}</strong></p>\n    <p>{`The following example can be used to create an instance of a TargetPrefetch object that might be used to make a prefetch request to the configured Target server to prefetch content for mbox locations.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`let prefetch = TargetPrefetch(name: \"mboxName\", targetParameters: nil)\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Objective-C`}</strong></p>\n    <p>{`The following example can be used to create an instance of a TargetPrefetch object that might be used to make a prefetch request to the configured Target server to prefetch content for mbox locations.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objc\"\n      }}>{`AEPTargetPrefetchObject *prefetch = [[AEPTargetPrefetchObject alloc] initWithName:@\"mboxName\" targetParameters:nil];\n`}</code></pre>\n    {/*- <Variant platform=\"react-native\" api=\"target-prefetch\" repeat=\"5\"/>\n     #### ACPTargetPrefetchObject\n     This class contains the name of the Target location/mbox and Target parameters to be used in a prefetch request.\n     #### JavaScript\n     **Syntax**\n     ```javascript\n     class ACPTargetPrefetchObject {\n      name:   string;\n      targetParameters: ACPTargetParameters;\n       constructor(name?: string, targetParameters?: ACPTargetParameters) {\n          this.name = name;\n        this.targetParameters = targetParameters;\n      }\n     }\n     ``` -*/}\n    <Variant platform=\"android\" api=\"target-parameters\" repeat=\"4\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"targetparameters\"\n    }}>{`TargetParameters`}</h4>\n    <h4 {...{\n      \"id\": \"java-18\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class TargetParameters {\n\n    private TargetParameters() {}\n\n    /**\n    * Builder used to construct a TargetParameters object\n    */\n    public static class Builder {\n        private Map<String, String> parameters;\n        private Map<String, String> profileParameters;\n        private TargetProduct product;\n        private TargetOrder order;\n\n        /**\n         * Create a TargetParameters object Builder\n         */\n        public Builder() {}\n\n        /**\n         * Create a TargetParameters object Builder\n         *\n         * @param parameters mbox parameters for the built TargetParameters\n         */\n        public Builder(final Map<String, String> parameters);\n\n        /**\n         * Set mbox parameters on the built TargetParameters\n         *\n         * @param parameters mbox parameters map\n         * @return this builder\n         */\n        public Builder parameters(final Map<String, String> parameters);\n\n        /**\n         * Set profile parameters on the built TargetParameters\n         *\n         * @param profileParameters profile parameters map\n         * @return this builder\n         */\n        public Builder profileParameters(final Map<String, String> profileParameters);\n\n        /**\n         * Set product parameters on the built TargetParameters\n         *\n         * @param product product parameters\n         * @return this builder\n         */\n        public Builder product(final TargetProduct product);\n\n        /**\n         * Set order parameters on the built TargetParameters\n         *\n         * @param order order parameters\n         * @return this builder\n         */\n        public Builder order(final TargetOrder order);\n\n        /**\n         * Build the TargetParameters object\n         *\n         * @return the built TargetParameters object\n         */\n        public TargetParameters build();\n    }\n}\n`}</code></pre>\n    <Variant platform=\"ios\" api=\"target-parameters\" repeat=\"6\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"targetparameters-1\"\n    }}>{`TargetParameters`}</h4>\n    <p>{`This class may optionally contain the mbox parameters dictionary, the profile parameters dictionary, the TargetOrder object, as well as the TargetProduct object.`}</p>\n    <p><strong parentName=\"p\">{`Swift`}</strong></p>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`/// Target parameter class, used for specifying custom parameters to be sent in Target requests,\n/// such as location (former mbox) parameters, profile parameters, order/product parameters.\n@objc(AEPTargetParameters)\npublic class TargetParameters: NSObject, Codable {\n    @objc public let parameters: [String: String]?\n    @objc public let profileParameters: [String: String]?\n    @objc public let order: TargetOrder?\n    @objc public let product: TargetProduct?\n\n    /// Initialize a \\`TargetParameters\\` with the mbox parameters, the profile parameters, the order parameters and the product parameters.\n    /// - Parameters:\n    ///   - parameters: the mbox parameters\n    ///   - profileParameters: the profile parameters\n    ///   - order: the order parameters\n    ///   - product: the product parameters\n    @objc public init(parameters: [String: String]? = nil, profileParameters: [String: String]? = nil, order: TargetOrder? = nil, product: TargetProduct? = nil) {\n        self.parameters = parameters\n        self.profileParameters = profileParameters\n        self.order = order\n        self.product = product\n    }\n}\n`}</code></pre>\n    <p>{`Examples for creating instances of TargetParameters can be seen in the `}<a parentName=\"p\" {...{\n        \"href\": \"./index.md#target-parameters\"\n      }}>{`Target overview`}</a>{`.`}</p>\n    {/*- <Variant platform=\"react-native\" api=\"target-parameters\" repeat=\"5\"/>\n     #### ACPTargetParameters\n     This class contains an mbox parameters dictionary, a profile parameters dictionary, an `ACPTargetOrder` object, and an `ACPTargetProduct` object.\n     #### JavaScript\n     **Syntax**\n     ```javascript\n     class ACPTargetParameters {\n      parameters: {string: string};\n      profileParameters: {string: string};\n      order: ACPTargetOrder;\n      product: ACPTargetProduct;\n       constructor(parameters?: {string: string}, profileParameters?: {string: string}, product?: ACPTargetProduct, order?: ACPTargetOrder) {\n          this.parameters = parameters;\n        this.profileParameters = profileParameters;\n        this.product = product;\n        this.order = order;\n      }\n     }\n     ``` -*/}\n    <Variant platform=\"android\" api=\"target-order\" repeat=\"5\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"targetorder\"\n    }}>{`TargetOrder`}</h4>\n    <p>{`This class contains an orderId, an order total, and an array for purchasedProductIds.`}</p>\n    <h4 {...{\n      \"id\": \"java-19\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class TargetOrder {\n\n    /**\n     * Initialize a TargetOrder with an order id, order total and a list of purchasedProductIds\n     *\n     * @param id String order id\n     * @param total double order total amount\n     * @param purchasedProductIds a list of purchased product ids\n     */\n    public TargetOrder(final String id, final double total, final List<String> purchasedProductIds);\n    /**\n     * Get the order id\n     *\n     * @return order id\n     */\n    public String getId();\n\n    /**\n     * Get the order total\n     *\n     * @return order total\n     */\n    public double getTotal();\n\n    /**\n     * Get the order purchasedProductIds\n     *\n     * @return a list of this order's purchased product ids\n     */\n    public List<String> getPurchasedProductIds();\n}\n`}</code></pre>\n    <Variant platform=\"ios\" api=\"target-order\" repeat=\"6\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"targetorder-1\"\n    }}>{`TargetOrder`}</h4>\n    <p>{`This class contains the orderId, the total, and an array for purchasedProductIds.`}</p>\n    <p><strong parentName=\"p\">{`Swift`}</strong></p>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`/// Class for specifying Target order parameters\n@objc(AEPTargetOrder)\npublic class TargetOrder: NSObject, Codable {\n    @objc public let orderId: String\n    @objc public let total: Double\n    @objc public let purchasedProductIds: [String]?\n\n    /// Initialize a \\`TargetOrder\\` with an order \\`id\\`, order \\`total\\`  and a list of \\`purchasedProductIds\\`\n    /// - Parameters:\n    ///   - id: \\`String\\` order id\n    ///   - total: \\`Double\\` order total amount\n    ///   - purchasedProductIds: a list of purchased product ids\n    @objc public init(id: String, total: Double = 0, purchasedProductIds: [String]? = nil) {\n        orderId = id\n        self.total = total\n        self.purchasedProductIds = purchasedProductIds\n    }\n}\n`}</code></pre>\n    <p>{`Examples for creating instances of TargetOrder can be seen in the `}<a parentName=\"p\" {...{\n        \"href\": \"./index.md#arget-order-class\"\n      }}>{`Target overview`}</a>{`.`}</p>\n    {/*- <Variant platform=\"react-native\" api=\"target-order\" repeat=\"5\"/>\n     #### ACPTargetOrder\n     This class contains an `orderId`, the total, and an array, for `purchasedProductIds`.\n     #### JavaScript\n     **Syntax**\n     ```javascript\n     class ACPTargetOrder {\n      orderId:   string;\n      total:     number;\n      purchasedProductIds: Array<string>;\n       constructor(orderId: string, total?: number, purchasedProductIds: Array<string>) {\n          this.orderId = orderId;\n        this.total = total;\n        this.purchasedProductIds = purchasedProductIds;\n      }\n     }\n     ``` -*/}\n    <Variant platform=\"android\" api=\"target-product\" repeat=\"4\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"targetproduct\"\n    }}>{`TargetProduct`}</h4>\n    <h4 {...{\n      \"id\": \"java-20\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class TargetProduct {\n\n    /**\n     * Initialize a TargetProduct with a product id and a productCategoryId categoryId\n     *\n     * @param id String product id\n     * @param categoryId String product category id\n     */\n    public TargetProduct(final String id, final String categoryId);\n\n    /**\n     * Get the product id\n     *\n     * @return product id\n     */\n    public String getId();\n\n    /**\n     * Get the product categoryId\n     *\n     * @return product category id\n     */\n    public String getCategoryId();\n}\n`}</code></pre>\n    <Variant platform=\"ios\" api=\"target-product\" repeat=\"6\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"targetproduct-1\"\n    }}>{`TargetProduct`}</h4>\n    <p>{`This class contains the productId and categoryId.`}</p>\n    <p><strong parentName=\"p\">{`Swift`}</strong></p>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`/// Class for specifying Target product parameters\n@objc(AEPTargetProduct)\npublic class TargetProduct: NSObject, Codable {\n    @objc public let productId: String\n    @objc public let categoryId: String?\n\n    /// Initialize a \\`TargetProduct\\` with a product  id and a productCategoryId.\n    /// - Parameters:\n    ///   - productId: product id\n    ///   - categoryId: product category id\n    @objc public init(productId: String, categoryId: String? = nil) {\n        self.productId = productId\n        self.categoryId = categoryId\n    }\n}\n`}</code></pre>\n    <p>{`Examples for creating instances of TargetProduct can be seen in the `}<a parentName=\"p\" {...{\n        \"href\": \"./index.md#target-product-class\"\n      }}>{`Target overview`}</a></p>\n    {/*- <Variant platform=\"react-native\" api=\"target-product\" repeat=\"5\"/>\n     #### ACPTargetProduct\n     This class contains a productId and a categoryId.\n     #### JavaScript\n     **Syntax**\n     ```javascript\n     class ACPTargetProduct {\n      productId: string;\n      categoryId: string;\n       constructor(productId: string, categoryId: string) {\n          this.productId = productId;\n        this.categoryId = categoryId;\n      }\n     }\n     ``` -*/}\n    <Variant platform=\"android\" api=\"target-callback\" repeat=\"4\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"adobetargetdetailedcallback\"\n    }}>{`AdobeTargetDetailedCallback`}</h4>\n    <h4 {...{\n      \"id\": \"java-21\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public interface AdobeTargetDetailedCallback {\n\n    /**\n     * Callback function to pass the mbox content and other mbox payload values.\n     *\n     * @param content {@code String} mox content\n     * @param data A {@code Map<String, Object>} of mbox payload values. It will be null if neither response tokens nor analytics payload is available.\n     */\n    void call(final String content, final Map<String, Object> data);\n\n    /**\n     * Callback function for notifying about the internal error in getting mbox details.\n     *\n     * @param error {@link AdobeError} represents the internal error occurred.\n     */\n    void fail(final AdobeError error);\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","makeShortcode","name","props","console","warn","Variant","InlineNestedAlert","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","platform","api","repeat","parentName","variant","header","iconPosition","isMDXComponent"],"sourceRoot":""}