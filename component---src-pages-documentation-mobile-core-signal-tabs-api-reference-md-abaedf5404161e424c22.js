"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[8989],{16765:function(e,n,a){a.r(n),a.d(n,{_frontmatter:function(){return p},default:function(){return g}});var t,r=a(87462),i=a(63366),o=(a(15007),a(64983)),s=a(91515),m=["components"],p={},l=(t="Variant",function(e){return console.warn("Component "+t+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.mdx)("div",e)}),d={_frontmatter:p},x=s.Z;function g(e){var n=e.components,a=(0,i.Z)(e,m);return(0,o.mdx)(x,(0,r.Z)({},d,a,{components:n,mdxType:"MDXLayout"}),(0,o.mdx)(l,{platform:"android",api:"extension-version",repeat:"5",mdxType:"Variant"}),(0,o.mdx)("h4",{id:"java"},"Java"),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Syntax")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-java"},"public static String extensionVersion();\n")),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Example")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-java"},"String signalExtensionVersion = Signal.extensionVersion();\n")),(0,o.mdx)(l,{platform:"ios-aep",api:"extension-version",repeat:"7",mdxType:"Variant"}),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Syntax")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-swift"},"public static let extensionVersion\n")),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Examples")),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Swift")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-swift"},"let version = Signal.extensionVersion\n")),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Objective-C")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-objectivec"},"NSString *version = [AEPMobileSignal extensionVersion];\n")),(0,o.mdx)(l,{platform:"ios-acp",api:"extension-version",repeat:"7",mdxType:"Variant"}),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Syntax")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-objectivec"},"(nonnull NSString*) extensionVersion;\n")),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Examples")),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Swift")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-swift"},"var signalExtensionVersion  = ACPSignal.extensionVersion()\n")),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Objective-C")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-objectivec"},"NSString *signalExtensionVersion = [ACPSignal extensionVersion];\n")),(0,o.mdx)(l,{platform:"react-native",api:"extension-version",repeat:"2",mdxType:"Variant"}),(0,o.mdx)("h4",{id:"javascript"},"JavaScript"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-jsx"},'ACPSignal.extensionVersion().then(signalExtensionVersion => console.log("AdobeExperienceSDK: ACPSignal version: " + signalExtensionVersion));\n')),(0,o.mdx)(l,{platform:"flutter",api:"extension-version",repeat:"2",mdxType:"Variant"}),(0,o.mdx)("h4",{id:"dart"},"Dart"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-dart"},"String signalExtensionVersion = await FlutterACPSignal.extensionVersion;\n")),(0,o.mdx)(l,{platform:"cordova",api:"extension-version",repeat:"2",mdxType:"Variant"}),(0,o.mdx)("h4",{id:"cordova"},"Cordova"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-jsx"},'ACPSignal.extensionVersion(function(version) {  \n    console.log("ACPSignal version: " + version);\n}, function(error) {  \n    console.log(error);  \n});\n')),(0,o.mdx)(l,{platform:"unity",api:"extension-version",repeat:"2",mdxType:"Variant"}),(0,o.mdx)("h4",{id:"c"},"C#"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-csharp"},"string signalVersion = ACPSignal.ExtensionVersion();\n")),(0,o.mdx)(l,{platform:"xamarin",api:"extension-version",repeat:"2",mdxType:"Variant"}),(0,o.mdx)("h4",{id:"c-1"},"C#"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-csharp"},"string signalVersion = ACPSignal.ExtensionVersion();\n")),(0,o.mdx)(l,{platform:"android",api:"register-extension",repeat:"5",mdxType:"Variant"}),(0,o.mdx)("h4",{id:"java-1"},"Java"),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Syntax")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-java"},"public static void registerExtension()\n")),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Example")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-java"},"Signal.registerExtension();\n")),(0,o.mdx)(l,{platform:"ios-aep",api:"register-extension",repeat:"1",mdxType:"Variant"}),(0,o.mdx)("p",null,"This API no longer exists in ",(0,o.mdx)("inlineCode",{parentName:"p"},"Signal"),". Instead, the extension should be registered by calling the ",(0,o.mdx)("inlineCode",{parentName:"p"},"registerExtensions")," API in the MobileCore. Please see the updated SDK initialization steps at the ",(0,o.mdx)("a",{parentName:"p",href:"../../migrate-to-swift.md#update-sdk-initialization"},"migrate to Swift tutorial.")),(0,o.mdx)(l,{platform:"ios-acp",api:"register-extension",repeat:"7",mdxType:"Variant"}),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Syntax")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-swift"},"+ (void) registerExtension;\n")),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Example")),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Swift")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-swift"},"ACPSignal.registerExtension()\n")),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Objective-C")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-objc"},"[ACPSignal registerExtension];\n")),(0,o.mdx)(l,{platform:"react-native",api:"register-extension",repeat:"1",mdxType:"Variant"}),(0,o.mdx)("p",null,"When using React Native, register the Signal extension with Mobile Core in native code as shown on the Android and iOS tabs."))}g.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-documentation-mobile-core-signal-tabs-api-reference-md-abaedf5404161e424c22.js.map