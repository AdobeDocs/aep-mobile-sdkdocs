{"version":3,"file":"component---src-pages-documentation-iam-api-reference-md-f4820e388ae3ba78caaa.js","mappings":"iPAQsBA,E,mFADTC,EAAe,CAAC,EAKvBC,GAJgBF,EAIU,YAJF,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,4EAC5B,eAASG,EAClB,GAEMG,EAAc,CAClBL,aAAAA,GAEIM,EAAYC,EAAAA,EACH,SAASC,EAAW,GAGhC,IAFDC,EAAU,EAAVA,WACGP,GAAK,YAER,OAAO,SAACI,GAAS,UAAKD,EAAiBH,EAAK,CAAEO,WAAYA,EAAYC,QAAQ,eAI5E,eACE,GAAM,iBAAe,kBAEvB,yHACA,eACE,GAAM,yBAAuB,0BAE/B,eACE,GAAM,uEAAqE,wEAE7E,gNACA,yOACA,SAACT,EAAS,CAACU,YAAY,aAAaC,MAAM,mBAAmBC,OAAO,IAAIH,QAAQ,eAChF,8BACA,SAAC,UAAI,CAACI,MAAM,+BAA+BJ,QAAQ,UACnD,0BACA,SAAC,UAAI,CAACI,MAAM,2BAA2BJ,QAAQ,SAGnD,CAEAF,EAAWO,gBAAiB,C,2GCvCNhB,E,wEADTC,EAAe,CAAC,EAKvBgB,GAJgBjB,EAIQ,UAJA,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,4EAC5B,eAASG,EAClB,GAEMG,EAAc,CAClBL,aAAAA,GAEIM,EAAYC,EAAAA,EACH,SAASC,EAAW,GAGhC,IAFDC,EAAU,EAAVA,WACGP,GAAK,YAER,OAAO,SAACI,GAAS,UAAKD,EAAiBH,EAAK,CAAEO,WAAYA,EAAYC,QAAQ,eAG5E,SAACM,EAAO,CAACC,SAAS,UAAUC,IAAI,UAAUL,OAAO,IAAIH,QAAQ,aAC7D,eACE,GAAM,QAAM,SAEd,qBAAK,iBAAMS,WAAW,MAClB,UAAa,iBAAe,yCAGhC,SAACH,EAAO,CAACC,SAAS,MAAMC,IAAI,UAAUL,OAAO,IAAIH,QAAQ,aACzD,eACE,GAAM,SAAO,UAEf,qBAAK,iBAAMS,WAAW,MAClB,UAAa,kBAAgB,uCAKrC,CAEAX,EAAWO,gBAAiB,C","sources":["webpack://dev-site-documentation-template/./src/pages/documentation/iam/api-reference.md","webpack://dev-site-documentation-template/./src/pages/documentation/iam/tabs/api-reference.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/aep-mobile-sdkdocs/aep-mobile-sdkdocs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nimport Tabs from './tabs/api-reference.md';\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst TabsBlock = makeShortcode(\"TabsBlock\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"api-reference\"\n    }}>{`API reference`}</h1>\n    <p>{`This document details how to use the in-app messaging APIs provided by the AEPMessaging framework.`}</p>\n    <h2 {...{\n      \"id\": \"in-app-messaging-apis\"\n    }}>{`In-App Messaging APIs`}</h2>\n    <h4 {...{\n      \"id\": \"programmatically-refresh-in-app-message-definitions-from-the-remote\"\n    }}>{`Programmatically refresh in-app message definitions from the remote`}</h4>\n    <p>{`By default, the SDK will automatically fetch in-app message definitions from the remote at the time the Messaging extension is registered. This generally happens once per app lifecycle.`}</p>\n    <p>{`Some use cases may require the client to request an update from the remote more frequently. Calling the following API will force the Messaging extension to get an updated definition of messages from the remote:`}</p>\n    <TabsBlock orientation=\"horizontal\" slots=\"heading, content\" repeat=\"2\" mdxType=\"TabsBlock\" />\n    <p>{`Android`}</p>\n    <Tabs query=\"platform=android&api=refresh\" mdxType=\"Tabs\" />\n    <p>{`iOS`}</p>\n    <Tabs query=\"platform=ios&api=refresh\" mdxType=\"Tabs\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/aep-mobile-sdkdocs/aep-mobile-sdkdocs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst Variant = makeShortcode(\"Variant\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <Variant platform=\"android\" api=\"refresh\" repeat=\"2\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java\"\n    }}>{`Java`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`Messaging.refreshInAppMessages();\n`}</code></pre>\n    <Variant platform=\"ios\" api=\"refresh\" repeat=\"2\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift\"\n    }}>{`Swift`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`Messaging.refreshInAppMessages()\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","TabsBlock","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","orientation","slots","repeat","query","isMDXComponent","Variant","platform","api","parentName"],"sourceRoot":""}