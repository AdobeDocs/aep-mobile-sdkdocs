{"version":3,"file":"bd8eca6c3f5b5537088adab644096f7d0de32d9c-61eca2ac84b5569a690e.js","mappings":"mTAMaA,EAAe,CAAC,EACvBC,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,4EAC5B,eAASC,EAClB,CAAC,EACKG,EAAUL,EAAc,WACxBM,EAAoBN,EAAc,qBAClCO,EAAc,CAClBR,aAAAA,GAEIS,EAAYC,EAAAA,EACH,SAASC,EAAW,GAGhC,IAFDC,EAAU,EAAVA,WACGT,GAAK,YAER,OAAO,SAACM,GAAS,UAAKD,EAAiBL,EAAK,CAAES,WAAYA,EAAYC,QAAQ,eAG5E,SAACP,EAAO,CAACQ,SAAS,UAAUC,IAAI,sBAAsBC,OAAO,IAAIH,QAAQ,aACzE,iEAAkD,uBAAYI,WAAW,KAAG,0CAAwD,oBAAoB,uBAAYA,WAAW,KAAG,qBAAmC,oIACrN,oBACE,eAAIA,WAAW,MAAI,oCACnB,eAAIA,WAAW,MAAI,uCACnB,eAAIA,WAAW,MAAI,8CAErB,SAACX,EAAO,CAACQ,SAAS,MAAMC,IAAI,sBAAsBC,OAAO,KAAKH,QAAQ,aACtE,eACE,GAAM,SAAO,UAEf,uFACA,oBACE,eAAII,WAAW,MAAI,oCACjB,eAAIA,WAAW,OACb,eAAIA,WAAW,MAAI,SAAU,uBAAYA,WAAW,MAAI,mDACxD,eAAIA,WAAW,MAAI,YAAa,uBAAYA,WAAW,MAAI,YAA0B,UAAU,uBAAYA,WAAW,MAAI,2CAG9H,eAAIA,WAAW,MAAI,sCACjB,eAAIA,WAAW,OACb,eAAIA,WAAW,MAAI,SAAU,uBAAYA,WAAW,MAAI,4EAI9D,mBAAG,mBAAQA,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBAAgB,wEAGjC,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBAAgB,+CAGjC,eACE,GAAM,eAAa,gBAErB,uFACA,oBACE,eAAIA,WAAW,MAAI,oCACjB,eAAIA,WAAW,OACb,eAAIA,WAAW,MAAI,SAAU,uBAAYA,WAAW,MAAI,+CACxD,eAAIA,WAAW,MAAI,YAAa,uBAAYA,WAAW,MAAI,YAA0B,UAAU,uBAAYA,WAAW,MAAI,qCACxH,eAAIA,WAAW,OACb,eAAIA,WAAW,MAAI,yCAGvB,eAAIA,WAAW,MAAI,SAAU,uBAAYA,WAAW,MAAI,yEAI9D,mBAAG,mBAAQA,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,kGAIhC,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,yDAGhC,SAACX,EAAO,CAACQ,SAAS,UAAUC,IAAI,cAAcC,OAAO,IAAIH,QAAQ,aACjE,eACE,GAAM,QAAM,SAEd,mBAAG,mBAAQI,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,8EAGhC,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,+NAOhC,SAACX,EAAO,CAACQ,SAAS,MAAMC,IAAI,cAAcC,OAAO,KAAKH,QAAQ,aAC9D,eACE,GAAM,WAAS,UAEjB,mBAAG,mBAAQI,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBAAgB,4DAGjC,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBAAqB,qEAGtC,eACE,GAAM,iBAAe,gBAEvB,mBAAG,mBAAQA,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBAAgB,kFAIjC,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBAAqB,gJAwBtC,SAACX,EAAO,CAACQ,SAAS,UAAUC,IAAI,iBAAiBC,OAAO,IAAIH,QAAQ,aACpE,eACE,GAAM,UAAQ,SAEhB,mBAAG,mBAAQI,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,oEAGhC,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,uVAUhC,SAACX,EAAO,CAACQ,SAAS,MAAMC,IAAI,iBAAiBC,OAAO,KAAKH,QAAQ,aACjE,eACE,GAAM,WAAS,UAEjB,mBAAG,mBAAQI,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBAAgB,iDAGjC,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBAAgB,6KAIjC,eACE,GAAM,iBAAe,gBAEvB,mBAAG,mBAAQA,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBAAqB,mEAItC,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBAAqB,yMAItC,SAACX,EAAO,CAACQ,SAAS,UAAUC,IAAI,wCAAwCC,OAAO,IAAIH,QAAQ,aAC3F,eACE,GAAM,UAAQ,SAEhB,mBAAG,mBAAQI,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,6KAGhC,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,mbAYhC,SAACX,EAAO,CAACQ,SAAS,MAAMC,IAAI,wCAAwCC,OAAO,KAAKH,QAAQ,aACxF,eACE,GAAM,WAAS,UAEjB,mBAAG,mBAAQI,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBAAgB,0HAGjC,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBAAgB,yNAMjC,eACE,GAAM,iBAAe,gBAEvB,mBAAG,mBAAQA,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBAAqB,qKAItC,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBAAqB,yRAMtC,SAACX,EAAO,CAACQ,SAAS,UAAUC,IAAI,kBAAkBC,OAAO,IAAIH,QAAQ,aACrE,eACE,GAAM,UAAQ,SAEhB,mBAAG,uBAAYI,WAAW,KAAG,6BAA2C,iBAAiB,uBAAYA,WAAW,KAAG,QAAsB,YAAY,uBAAYA,WAAW,KAAG,eAA6B,gCAAgC,uBAAYA,WAAW,KAAG,6BAA2C,gCACjT,mBAAG,mBAAQA,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,6DAIhC,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,sFAMhC,SAACX,EAAO,CAACQ,SAAS,UAAUC,IAAI,gBAAgBC,OAAO,IAAIH,QAAQ,aACnE,eACE,GAAM,UAAQ,SAEhB,mBAAG,mBAAQI,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,yDAIhC,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,oDAGhC,SAACX,EAAO,CAACQ,SAAS,MAAMC,IAAI,gBAAgBC,OAAO,KAAKH,QAAQ,aAChE,0HAA2G,uBAAYI,WAAW,KAAG,iBAA+B,cACpK,eACE,GAAM,WAAS,UAEjB,mBAAG,mBAAQA,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBAAgB,6CAGjC,mDAAoC,uBAAYA,WAAW,KAAG,OAAqB,kBAAkB,uBAAYA,WAAW,KAAG,eAA6B,MAC5J,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBAAgB,oCAGjC,eACE,GAAM,iBAAe,gBAEvB,mBAAG,mBAAQA,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBAAqB,mDAGtC,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBAAqB,kDAStC,SAACX,EAAO,CAACQ,SAAS,UAAUC,IAAI,qBAAqBC,OAAO,IAAIH,QAAQ,aACxE,eACE,GAAM,UAAQ,SAEhB,mBAAG,mBAAQI,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,uEAGhC,oBACE,eAAIA,WAAW,OAAK,eAAIA,WAAW,MAAI,YAAkB,6EAA6E,uBAAYA,WAAW,MAAI,0BAAwC,sKAAsK,uBAAYA,WAAW,MAAI,QAAsB,2CAA2C,uBAAYA,WAAW,MAAI,cAA4B,OAEpgB,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,qKAQhC,SAACX,EAAO,CAACQ,SAAS,MAAMC,IAAI,qBAAqBC,OAAO,KAAKH,QAAQ,aACrE,eACE,GAAM,WAAS,UAEjB,mBAAG,mBAAQI,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBAAgB,qFAGjC,oBACE,eAAIA,WAAW,OAAK,eAAIA,WAAW,MAAI,YAAkB,0DACzD,eAAIA,WAAW,OAAK,eAAIA,WAAW,MAAI,qBAA2B,6DAA6D,eAAIA,WAAW,MAAI,SAAe,6FAEnK,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBAAgB,yFAKjC,eACE,GAAM,iBAAe,gBAEvB,mBAAG,mBAAQA,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBAAqB,iHAItC,oBACE,eAAIA,WAAW,OAAK,eAAIA,WAAW,MAAI,YAAkB,0DACzD,eAAIA,WAAW,OAAK,eAAIA,WAAW,MAAI,qBAA2B,6DAA6D,eAAIA,WAAW,MAAI,SAAe,6FAEnK,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBAAqB,6NAStC,SAACX,EAAO,CAACQ,SAAS,UAAUC,IAAI,MAAMC,OAAO,KAAKH,QAAQ,aAC1D,8FAA+E,uBAAYI,WAAW,KAAG,2CAAyD,cAClK,eACE,GAAM,UAAQ,SAEhB,0BAAW,uBAAYA,WAAW,KAAG,cAA4B,0BAA0B,uBAAYA,WAAW,KAAG,oBAAkC,mDAAmD,uBAAYA,WAAW,KAAG,eAA6B,uBAAuB,uBAAYA,WAAW,KAAG,oBAAkC,8CACpV,oBACE,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAI,uBAAqC,UAAU,uBAAYA,WAAW,MAAI,wBACzH,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAI,qBAAmC,UAAU,uBAAYA,WAAW,MAAI,wBACvH,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAI,uBAAqC,UAAU,uBAAYA,WAAW,MAAI,wBACzH,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAI,qBAAmC,UAAU,uBAAYA,WAAW,MAAI,yBAEzH,wGAAyF,uBAAYA,WAAW,KAAG,sBAAoC,wDAAwD,uBAAYA,WAAW,KAAG,oBAAkC,kBAAkB,uBAAYA,WAAW,KAAG,sBAAoC,gBAAgB,uBAAYA,WAAW,KAAG,sDAAoE,MACzc,mBAAG,mBAAQA,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,8FAGhC,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,mFAGhC,mBAAG,mBAAQA,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,kEAGhC,SAACX,EAAO,CAACQ,SAAS,MAAMC,IAAI,MAAMC,OAAO,KAAKH,QAAQ,aACtD,eACE,GAAM,WAAS,UAEjB,gKAAiJ,uBAAYI,WAAW,KAAG,WAAyB,qDAAqD,uBAAYA,WAAW,KAAG,gCAA8C,oCAAoC,uBAAYA,WAAW,KAAG,oCAAkD,MACjb,mBAAG,mBAAQA,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBAAgB,8PAMjC,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBAAgB,oMAMjC,eACE,GAAM,iBAAe,gBAEvB,gKAAiJ,uBAAYA,WAAW,KAAG,WAAyB,qDAAqD,uBAAYA,WAAW,KAAG,wCAAsD,oCAAoC,uBAAYA,WAAW,KAAG,oCAAkD,MACzb,mBAAG,mBAAQA,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBAAgB,gYAajC,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBAAqB,gQAoBtC,SAACX,EAAO,CAACQ,SAAS,UAAUC,IAAI,0BAA0BC,OAAO,IAAIH,QAAQ,aAC7E,eACE,GAAM,UAAQ,SAEhB,mBAAG,mBAAQI,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,kKAGhC,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,qNAQhC,SAACX,EAAO,CAACQ,SAAS,MAAMC,IAAI,0BAA0BC,OAAO,KAAKH,QAAQ,aAC1E,eACE,GAAM,WAAS,UAEjB,mBAAG,mBAAQI,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBAAgB,iHAGjC,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBAAgB,yJAKjC,eACE,GAAM,iBAAe,gBAEvB,mBAAG,mBAAQA,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,wKAIhC,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBAAqB,0IAKtC,SAACX,EAAO,CAACQ,SAAS,UAAUC,IAAI,qBAAqBC,OAAO,IAAIH,QAAQ,aACxE,SAACN,EAAiB,CAACW,QAAQ,UAAUC,OAAO,OAAOC,aAAa,OAAOP,QAAQ,sBAC7E,sHACA,0BAAW,cAAGI,WAAW,IACrB,KAAQ,uBAAqB,sBACF,sFAAsF,uBAAYA,WAAW,KAAG,sBAAoC,0CAA0C,uBAAYA,WAAW,KAAG,mCAAiD,OAE1S,eACE,GAAM,UAAQ,SAEhB,mBAAG,mBAAQA,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,+KAGhC,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,uHAKhC,SAACX,EAAO,CAACQ,SAAS,MAAMC,IAAI,qBAAqBC,OAAO,KAAKH,QAAQ,aACrE,eACE,GAAM,WAAS,UAEjB,mBAAG,mBAAQI,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBAAgB,wGAGjC,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBAAgB,mFAKjC,eACE,GAAM,iBAAe,gBAEvB,mBAAG,mBAAQA,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,8IAIhC,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBAAqB,6GAKtC,SAACX,EAAO,CAACQ,SAAS,UAAUC,IAAI,sBAAsBC,OAAO,IAAIH,QAAQ,aACzE,eACE,GAAM,UAAQ,SAEhB,mBAAG,mBAAQI,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,8JAGhC,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,8zCAsChC,SAACX,EAAO,CAACQ,SAAS,MAAMC,IAAI,sBAAsBC,OAAO,KAAKH,QAAQ,aACtE,eACE,GAAM,WAAS,UAEjB,mBAAG,mBAAQI,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBAAgB,+GAGjC,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBAAgB,iYASjC,eACE,GAAM,iBAAe,gBAEvB,mBAAG,mBAAQA,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,sJAIhC,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBAAqB,kaAkFtC,SAACX,EAAO,CAACQ,SAAS,UAAUC,IAAI,mBAAmBC,OAAO,IAAIH,QAAQ,aACtE,eACE,GAAM,WAAS,SAEjB,mBAAG,mBAAQI,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,+BAGhC,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,qCAGhC,SAACX,EAAO,CAACQ,SAAS,MAAMC,IAAI,mBAAmBC,OAAO,KAAKH,QAAQ,aACnE,eACE,GAAM,YAAU,UAElB,mBAAG,mBAAQI,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBAAgB,qCAGjC,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBAAgB,oCAGjC,eACE,GAAM,kBAAgB,gBAExB,mBAAG,mBAAQA,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBAAqB,6DAItC,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBAAqB,wCAGtC,SAACX,EAAO,CAACQ,SAAS,MAAMC,IAAI,gBAAgBC,OAAO,KAAKH,QAAQ,aAChE,eACE,GAAM,YAAU,UAElB,mBAAG,mBAAQI,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBAAgB,wDAGjC,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBAAgB,4CAGjC,eACE,GAAM,kBAAgB,gBAExB,mBAAG,mBAAQA,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBAAgB,6EAIjC,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBAAqB,oDAGtC,SAACX,EAAO,CAACQ,SAAS,UAAUC,IAAI,kBAAkBC,OAAO,IAAIH,QAAQ,aACrE,eACE,GAAM,WAAS,SAEjB,mBAAG,mBAAQI,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,yEAGhC,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,icAgBhC,SAACX,EAAO,CAACQ,SAAS,UAAUC,IAAI,gBAAgBC,OAAO,IAAIH,QAAQ,aACnE,eACE,GAAM,WAAS,SAEjB,mBAAG,mBAAQI,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,iEAGhC,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,qJAMhC,SAACX,EAAO,CAACQ,SAAS,MAAMC,IAAI,gBAAgBC,OAAO,KAAKH,QAAQ,aAChE,eACE,GAAM,YAAU,UAElB,mBAAG,mBAAQI,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBAAgB,0DAGjC,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBAAgB,8EAMjC,eACE,GAAM,kBAAgB,gBAExB,mBAAG,mBAAQA,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBAAgB,gFAIjC,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBAAqB,iGA4BtC,SAACX,EAAO,CAACQ,SAAS,UAAUC,IAAI,sBAAsBC,OAAO,IAAIH,QAAQ,aACzE,eACE,GAAM,WAAS,SAEjB,mBAAG,mBAAQI,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,oFAGhC,oBACE,eAAIA,WAAW,OAAK,eAAIA,WAAW,MAAI,kBAAwB,0EAEjE,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,iHAIhC,SAACX,EAAO,CAACQ,SAAS,MAAMC,IAAI,sBAAsBC,OAAO,KAAKH,QAAQ,aACtE,eACE,GAAM,YAAU,UAElB,mBAAG,mBAAQI,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBAAgB,kEAGjC,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBAAgB,iDAGjC,eACE,GAAM,kBAAgB,gBAExB,mBAAG,mBAAQA,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,+FAIhC,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBAAqB,uDAGtC,SAACX,EAAO,CAACQ,SAAS,UAAUC,IAAI,uBAAuBC,OAAO,KAAKH,QAAQ,aAC3E,eACE,GAAM,WAAS,SAEjB,eACE,GAAM,0BAAwB,2BAEhC,mBAAG,mBAAQI,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,iEAGhC,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,uEAGhC,eACE,GAAM,0BAAwB,2BAEhC,mBAAG,mBAAQA,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,iEAGhC,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,uEAGhC,SAACX,EAAO,CAACQ,SAAS,UAAUC,IAAI,mBAAmBC,OAAO,IAAIH,QAAQ,aACtE,gFAAiE,uBAAYI,WAAW,KAAG,QAAsB,MAAM,uBAAYA,WAAW,KAAG,gBAA8B,MAAM,uBAAYA,WAAW,KAAG,WAAyB,MAAM,uBAAYA,WAAW,KAAG,WAAyB,MAAM,uBAAYA,WAAW,KAAG,SAAuB,MAAM,uBAAYA,WAAW,KAAG,WAAyB,MACjZ,eACE,GAAM,WAAS,SAEjB,mBAAG,mBAAQA,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,iFAGhC,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,4DAGhC,SAACX,EAAO,CAACQ,SAAS,MAAMC,IAAI,mBAAmBC,OAAO,KAAKH,QAAQ,aACnE,gFAAiE,uBAAYI,WAAW,KAAG,QAAsB,MAAM,uBAAYA,WAAW,KAAG,eAA6B,MAAM,uBAAYA,WAAW,KAAG,WAAyB,MAAM,uBAAYA,WAAW,KAAG,WAAyB,MAAM,uBAAYA,WAAW,KAAG,SAAuB,MAAM,uBAAYA,WAAW,KAAG,WAAyB,MAChZ,eACE,GAAM,YAAU,UAElB,mBAAG,mBAAQA,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBAAgB,8DAGjC,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBAAgB,2CAGjC,eACE,GAAM,kBAAgB,gBAExB,mBAAG,mBAAQA,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,sFAIhC,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBAAqB,6DAGtC,SAACX,EAAO,CAACQ,SAAS,UAAUC,IAAI,QAAQC,OAAO,IAAIH,QAAQ,aAC3D,eACE,GAAM,WAAS,SAEjB,mBAAG,mBAAQI,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,qFAGhC,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,ovBA8BhC,SAACX,EAAO,CAACQ,SAAS,UAAUC,IAAI,eAAeC,OAAO,IAAIH,QAAQ,aAClE,eACE,GAAM,WAAS,SAEjB,mBAAG,mBAAQI,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,qHAGhC,oBACE,eAAIA,WAAW,OAAK,eAAIA,WAAW,MAAI,UAAgB,+CACvD,eAAIA,WAAW,OAAK,eAAIA,WAAW,MAAI,eAAqB,sDAE9D,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,oMAKhC,SAACX,EAAO,CAACQ,SAAS,MAAMC,IAAI,eAAeC,OAAO,KAAKH,QAAQ,aAC/D,eACE,GAAM,YAAU,UAElB,mBAAG,mBAAQI,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBAAgB,iEAGjC,oBACE,eAAIA,WAAW,OAAK,eAAIA,WAAW,MAAI,UAAgB,+CACvD,eAAIA,WAAW,OAAK,eAAIA,WAAW,MAAI,eAAqB,uDAE9D,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBAAgB,wEAGjC,eACE,GAAM,kBAAgB,gBAExB,mBAAG,mBAAQA,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,4FAIhC,oBACE,eAAIA,WAAW,OAAK,eAAIA,WAAW,MAAI,UAAgB,+CACvD,eAAIA,WAAW,OAAK,eAAIA,WAAW,MAAI,eAAqB,uDAE9D,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBAAqB,6EA2BtC,SAACX,EAAO,CAACQ,SAAS,UAAUC,IAAI,cAAcC,OAAO,IAAIH,QAAQ,aACjE,eACE,GAAM,WAAS,SAEjB,kCAAmB,uBAAYI,WAAW,KAAG,cAA4B,0CAA0C,uBAAYA,WAAW,KAAG,YAA0B,gBACvK,mBAAG,mBAAQA,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,mHAGhC,oBACE,eAAIA,WAAW,OAAK,eAAIA,WAAW,MAAI,SAAe,8CACtD,eAAIA,WAAW,OAAK,eAAIA,WAAW,MAAI,eAAqB,sDAE9D,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,uMAKhC,SAACX,EAAO,CAACQ,SAAS,MAAMC,IAAI,cAAcC,OAAO,KAAKH,QAAQ,aAC9D,eACE,GAAM,YAAU,UAElB,mBAAG,mBAAQI,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBAAgB,gEAGjC,oBACE,eAAIA,WAAW,OAAK,eAAIA,WAAW,MAAI,SAAe,8CACtD,eAAIA,WAAW,OAAK,eAAIA,WAAW,MAAI,eAAqB,uDAE9D,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBAAgB,sEAGjC,eACE,GAAM,kBAAgB,gBAExB,mBAAG,mBAAQA,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,0FAIhC,oBACE,eAAIA,WAAW,OAAK,eAAIA,WAAW,MAAI,SAAe,8CACtD,eAAIA,WAAW,OAAK,eAAIA,WAAW,MAAI,eAAqB,uDAE9D,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBAAqB,2EA2BtC,SAACX,EAAO,CAACQ,SAAS,UAAUC,IAAI,iBAAiBC,OAAO,KAAKH,QAAQ,aACrE,eACE,GAAM,WAAS,SAEjB,eACE,GAAM,iBAAe,kBAEvB,0BAAW,uBAAYI,WAAW,KAAG,iBAA+B,8GACpE,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,iFAKhC,eACE,GAAM,0BAAwB,2BAEhC,0BAAW,uBAAYA,WAAW,KAAG,0BAAwC,0HAC7E,sNAAuM,uBAAYA,WAAW,KAAG,cAA4B,MAC7P,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,wHAKhC,eACE,GAAM,cAAY,eAEpB,0BAAW,uBAAYA,WAAW,KAAG,cAA4B,qDAAqD,uBAAYA,WAAW,KAAG,0BAAwC,MACxL,oBACE,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAI,oBAAkC,qCACjF,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAI,oBAAkC,4BACjF,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAI,iBAA+B,+CAC9E,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAI,6BAA2C,0CAE5F,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,0oBAqBhC,SAACX,EAAO,CAACQ,SAAS,MAAMC,IAAI,iBAAiBC,OAAO,IAAIH,QAAQ,aAChE,eACE,GAAM,YAAU,aAElB,0BAAW,uBAAYI,WAAW,KAAG,YAA0B,4GAC/D,oBACE,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAI,mBAAiC,oCAChF,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAI,wBAAsC,4BACrF,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAI,oBAAkC,+CACjF,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAI,aAA2B,+FAC1E,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAI,oBAAkC,iCACjF,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAI,qBAAmC,kCAClF,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAI,uBAAqC,qCACpF,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAI,wBAAsC,sCACrF,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAI,qCAAmD,0CAEpG,mBAAG,mBAAQA,WAAW,KAAG,aACzB,mBAAG,mBAAQA,WAAW,KAAG,WACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBAAgB,w2BA6BjC,mBAAG,mBAAQA,WAAW,KAAG,iBACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBAAqB,shCA6B1C,CAEAN,EAAWU,gBAAiB,C","sources":["webpack://dev-site-documentation-template/./src/pages/home/base/mobile-core/tabs/api-reference.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/aep-mobile-sdkdocs/aep-mobile-sdkdocs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst Variant = makeShortcode(\"Variant\");\nconst InlineNestedAlert = makeShortcode(\"InlineNestedAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <Variant platform=\"android\" api=\"collect-launch-info\" repeat=\"2\" mdxType=\"Variant\" />\n    <p>{`The Android SDK automatically registers an `}<inlineCode parentName=\"p\">{`Application.ActivityLifecycleCallbacks`}</inlineCode>{`and listens for `}<inlineCode parentName=\"p\">{`onActivityResumed`}</inlineCode>{`. When an activity is resumed, SDK collects the data from the activity. Currently, it is being used in the following scenarios:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Tracking deep link clickthrough`}</li>\n      <li parentName=\"ul\">{`Tracking push message clickthrough`}</li>\n      <li parentName=\"ul\">{`Tracking Local Notification clickthrough`}</li>\n    </ul>\n    <Variant platform=\"ios\" api=\"collect-launch-info\" repeat=\"14\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift\"\n    }}>{`Swift`}</h4>\n    <p>{`This method should be called to support the following use cases:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Tracking deep link clickthroughs`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`From `}<inlineCode parentName=\"li\">{`application(_:didFinishLaunchingWithOptions:)`}</inlineCode></li>\n          <li parentName=\"ul\">{`Extract `}<inlineCode parentName=\"li\">{`userInfo`}</inlineCode>{` from `}<inlineCode parentName=\"li\">{`url: UIApplication.LaunchOptionsKey`}</inlineCode></li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`Tracking push message clickthrough`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`From `}<inlineCode parentName=\"li\">{`application(_:didReceiveRemoteNotification:fetchCompletionHandler:)`}</inlineCode></li>\n        </ul>\n      </li>\n    </ul>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{` public static func collectLaunchInfo(_ userInfo: [String: Any])\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{` MobileCore.collectLaunchInfo(userInfo)\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c\"\n    }}>{`Objective-C`}</h4>\n    <p>{`This method should be called to support the following use cases:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Tracking deep link clickthroughs`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`From `}<inlineCode parentName=\"li\">{`application:didFinishLaunchingWithOptions`}</inlineCode></li>\n          <li parentName=\"ul\">{`Extract `}<inlineCode parentName=\"li\">{`userInfo`}</inlineCode>{` from `}<inlineCode parentName=\"li\">{`UIApplicationLaunchOptionsURLKey`}</inlineCode>\n            <ul parentName=\"li\">\n              <li parentName=\"ul\">{`Tracking push message clickthrough`}</li>\n            </ul>\n          </li>\n          <li parentName=\"ul\">{`From `}<inlineCode parentName=\"li\">{`application:didReceiveRemoteNotification:fetchCompletionHandler:`}</inlineCode></li>\n        </ul>\n      </li>\n    </ul>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objc\"\n      }}>{`@objc(collectLaunchInfo:)\npublic static func collectLaunchInfo(_ userInfo: [String: Any])\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objc\"\n      }}>{` [AEPMobileCore collectLaunchInfo:launchOptions];\n`}</code></pre>\n    <Variant platform=\"android\" api=\"collect-pii\" repeat=\"5\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public static void collectPii(@NonNull final Map<String, String> data)\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`Map<String, String> data = new HashMap<String, String>();\ndata.put(\"firstname\", \"customer\");\n//The rule to trigger a PII needs to be setup for this call\n//to result in a network send\nMobileCore.collectPii(data);\n`}</code></pre>\n    <Variant platform=\"ios\" api=\"collect-pii\" repeat=\"10\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift-1\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`public static func collectPii(_ data: [String: Any])\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`MobileCore.collectPii([\"key1\" : \"value1\",\"key2\" : \"value2\"]);\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-1\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{` @objc(collectPii:)\n public static func collectPii(_ data: [String: Any])\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{` [AEPMobileCore collectPii:data:@{@\"key1\" : @\"value1\",\n                            @\"key2\" : @\"value2\"\n                            }];\n`}</code></pre>\n    {/*- <Variant platform=\"react-native\" api=\"collect-pii\" repeat=\"10\"/>\n     #### Javascript\n     **Syntax**\n     ```jsx\n     ACPCore.collectPii(data: [String : String])\n     ```\n     **Example**\n     ```jsx\n     ACPCore.collectPii({\"myPii\": \"data\"});\n     ```\n     #### Swift\n     **Syntax**\n     ```swift\n     ACPCore.collectPii(data: [String : String])\n     ```\n     **Example**\n     ```objectivec\n     MobileCore.collectPii([\"key1\" : \"value1\",\"key2\" : \"value2\"]);\n     ``` -*/}\n    <Variant platform=\"android\" api=\"dispatch-event\" repeat=\"5\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-1\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public static void dispatchEvent(@NonNull final Event event)\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`final Map<String, Object> eventData = new HashMap<>();\neventData.put(\"sampleKey\", \"sampleValue\");\n\nfinal Event sampleEvent = new Event.Builder(\"SampleEventName\", \"SampleEventType\", \"SampleEventSource\")\n                          .setEventData(eventData)\n                          .build();\n\nMobileCore.dispatchEvent(sampleEvent);\n`}</code></pre>\n    <Variant platform=\"ios\" api=\"dispatch-event\" repeat=\"10\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift-2\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`public static func dispatch(event: Event)\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`let event = Event(name: \"Sample Event Name\", type: EventType.custom, source: EventType.custom, data: [\"sampleKey\": \"sampleValue\"])\nMobileCore.dispatch(event: event)\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-2\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`@objc(dispatch:)\npublic static func dispatch(event: Event)\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`AEPEvent *event = [[AEPEvent alloc] initWithName:@\"Sample Event Name\" type:AEPEventType.custom source:AEPEventType.custom data:@{@\"sampleKey\": @\"sampleValue\"}];\n[AEPMobileCore dispatch:event];\n`}</code></pre>\n    <Variant platform=\"android\" api=\"dispatch-event-with-response-callback\" repeat=\"5\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-2\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public static void dispatchEventWithResponseCallback(@NonNull final Event event, final long timeoutMS, @NonNull final AdobeCallbackWithError<Event> responseCallback)\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`final Map<String, Object> eventData = new HashMap<>();\neventData.put(\"sampleKey\", \"sampleValue\");\n\nfinal Event sampleEvent = new Event.Builder(\"My Event\", \"SampleEventType\", \"SampleEventSource\")\n                          .setEventData(eventData)\n                          .build();\n\nMobileCore.dispatchEventWithResponseCallback(sampleEvent, 5000L, new AdobeCallbackWithError<Event>() {\n    // handle response event\n});\n`}</code></pre>\n    <Variant platform=\"ios\" api=\"dispatch-event-with-response-callback\" repeat=\"10\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift-3\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`public static func dispatch(event: Event, timeout: TimeInterval = 1, responseCallback: @escaping (Event?) -> Void)\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`let event = Event(name: \"My Event\", type: EventType.custom, source: EventType.custom, data: [\"sampleKey\": \"sampleValue\"])\nMobileCore.dispatch(event: event) { (responseEvent) in\n    // handle responseEvent\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-3\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`@objc(dispatch:timeout:responseCallback:)\npublic static func dispatch(event: Event, timeout: TimeInterval = 1, responseCallback: @escaping (Event?) -> Void)\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`AEPEvent *event = [[AEPEvent alloc] initWithName:@\"My Event\" type:AEPEventType.custom source:AEPEventType.custom data:@{@\"sampleKey\": @\"sampleValue\"}];\n[AEPMobileCore dispatch:event responseCallback:^(AEPEvent * _Nullable responseEvent) {\n    // handle responseEvent\n}];\n`}</code></pre>\n    <Variant platform=\"android\" api=\"get-application\" repeat=\"6\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-3\"\n    }}>{`Java`}</h4>\n    <p><inlineCode parentName=\"p\">{`MobileCore.getApplication`}</inlineCode>{` will return `}<inlineCode parentName=\"p\">{`null`}</inlineCode>{` if the `}<inlineCode parentName=\"p\">{`Application`}</inlineCode>{` object was destroyed or if `}<inlineCode parentName=\"p\">{`MobileCore.setApplication`}</inlineCode>{` was not previously called.`}</p>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`@Nullable\npublic static Application getApplication()\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`Application app = MobileCore.getApplication();\nif (app != null) {\n    ...\n}\n`}</code></pre>\n    <Variant platform=\"android\" api=\"get-log-level\" repeat=\"5\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-4\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`@NonNull\npublic static LoggingMode getLogLevel()\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`LoggingMode mode = MobileCore.getLogLevel();\n`}</code></pre>\n    <Variant platform=\"ios\" api=\"get-log-level\" repeat=\"12\" mdxType=\"Variant\" />\n    <p>{`The logLevel getter has been deprecated. To get the log level in the Swift AEP 3.x SDKs, please use `}<inlineCode parentName=\"p\">{`Log.logFilter`}</inlineCode>{` instead.`}</p>\n    <h4 {...{\n      \"id\": \"swift-4\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`public static var logFilter: LogLevel\n`}</code></pre>\n    <p>{`This variable is part of the `}<inlineCode parentName=\"p\">{`Log`}</inlineCode>{` class within `}<inlineCode parentName=\"p\">{`AEPServices`}</inlineCode>{`.`}</p>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`var logLevel = Log.logFilter\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-4\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`@objc public static var logFilter: LogLevel\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`AEPLogLevel logLevel = [AEPLog logFilter];\n`}</code></pre>\n    {/*- <Variant platform=\"react-native\" api=\"get-log-level\" repeat=\"3\"/>\n     #### Javascript\n     **Example**\n     ```jsx\n     ACPCore.getLogLevel().then(level => console.log(\"AdobeExperienceSDK: Log Level = \" + level));\n     ``` -*/}\n    <Variant platform=\"android\" api=\"get-sdk-identities\" repeat=\"6\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-5\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`void getSdkIdentities(@NonNull AdobeCallback<String> callback);\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`callback`}</em>{` is invoked with the SDK identities as a JSON string. If an instance of  `}<inlineCode parentName=\"li\">{`AdobeCallbackWithError`}</inlineCode>{` is provided, and you are fetching the attributes from the Mobile SDK, the timeout value is 5000ms. If the operation times out or an unexpected error occurs, the `}<inlineCode parentName=\"li\">{`fail`}</inlineCode>{` method is called with the appropriate `}<inlineCode parentName=\"li\">{`AdobeError`}</inlineCode>{`.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`MobileCore.getSdkIdentities(new AdobeCallback<String>() {\n    @Override\n    public void call(String value) {\n        // handle the json string\n    }\n});\n`}</code></pre>\n    <Variant platform=\"ios\" api=\"get-sdk-identities\" repeat=\"12\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift-5\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`static func getSdkIdentities(completion: @escaping (String?, Error?) -> Void)\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`callback`}</em>{` is invoked with the SDK identities as a JSON string.`}</li>\n      <li parentName=\"ul\"><em parentName=\"li\">{`completionHandler`}</em>{` is invoked with the SDK identities as a JSON string, or `}<em parentName=\"li\">{`error`}</em>{` if an unexpected error occurs or the request times out. The default timeout is 1000ms.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{` MobileCore.getSdkIdentities { (content, error) in\n     // handle completion\n }\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-5\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{` @objc(getSdkIdentities:)\n static func getSdkIdentities(completion: @escaping (String?, Error?) -> Void)\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`callback`}</em>{` is invoked with the SDK identities as a JSON string.`}</li>\n      <li parentName=\"ul\"><em parentName=\"li\">{`completionHandler`}</em>{` is invoked with the SDK identities as a JSON string, or `}<em parentName=\"li\">{`error`}</em>{` if an unexpected error occurs or the request times out. The default timeout is 1000ms.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{` [AEPMobileCore getSdkIdentities:^(NSString * _Nullable content, NSError * _Nullable error) {\n     if (error) {\n       // handle error here\n     } else {\n       // handle the retrieved identities\n     }\n }];\n`}</code></pre>\n    <Variant platform=\"android\" api=\"log\" repeat=\"11\" mdxType=\"Variant\" />\n    <p>{`This API was deprecated in v2.0.0 of the Mobile Core extension. Use the `}<inlineCode parentName=\"p\">{`com.adobe.marketing.mobile.services.Log`}</inlineCode>{` instead.`}</p>\n    <h4 {...{\n      \"id\": \"java-6\"\n    }}>{`Java`}</h4>\n    <p>{`The `}<inlineCode parentName=\"p\">{`MobileCore`}</inlineCode>{` logging APIs use the `}<inlineCode parentName=\"p\">{`android.util.Log`}</inlineCode>{` APIs to log messages to Android. Based on the `}<inlineCode parentName=\"p\">{`LoggingMode`}</inlineCode>{` that is passed to `}<inlineCode parentName=\"p\">{`MobileCore.log()`}</inlineCode>{`, the following Android method is called:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`LoggingMode.VERBOSE`}</inlineCode>{` uses `}<inlineCode parentName=\"li\">{`android.util.Log.v`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`LoggingMode.DEBUG`}</inlineCode>{` uses `}<inlineCode parentName=\"li\">{`android.util.Log.d`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`LoggingMode.WARNING`}</inlineCode>{` uses `}<inlineCode parentName=\"li\">{`android.util.Log.w`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`LoggingMode.ERROR`}</inlineCode>{` uses `}<inlineCode parentName=\"li\">{`android.util.Log.e`}</inlineCode></li>\n    </ul>\n    <p>{`All log messages from the Adobe Experience SDK to Android use the same log tag of `}<inlineCode parentName=\"p\">{`AdobeExperienceSDK`}</inlineCode>{`. For example, if logging an error message is using `}<inlineCode parentName=\"p\">{`MobileCore.log()`}</inlineCode>{`, the call to `}<inlineCode parentName=\"p\">{`android.util.Log.e`}</inlineCode>{` looks like `}<inlineCode parentName=\"p\">{`Log.e(\"AdobeExperienceSDK\", tag + \" - \" + message)`}</inlineCode>{`.`}</p>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public static void log(final LoggingMode mode, final String tag, final String message)\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`MobileCore.log(LoggingMode.DEBUG, \"MyClassName\", \"Provided data was null\");\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Output`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-text\"\n      }}>{`D/AdobeExperienceSDK: MyClassName - Provided data was null\n`}</code></pre>\n    <Variant platform=\"ios\" api=\"log\" repeat=\"12\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift-6\"\n    }}>{`Swift`}</h4>\n    <p>{`The log messages from the Adobe Experience SDK are printed to the Apple System Log facility and use a common format that contains the tag `}<inlineCode parentName=\"p\">{`AEP SDK`}</inlineCode>{`. For example, if logging an error message using `}<inlineCode parentName=\"p\">{`Log.error(label:_ message:_)`}</inlineCode>{`, the printed output looks like `}<inlineCode parentName=\"p\">{`[AEP SDK ERROR <label>]: message`}</inlineCode>{`.`}</p>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`public static func trace(label: String, _ message: String) {\npublic static func debug(label: String, _ message: String)\npublic static func warning(label: String, _ message: String) {\npublic static func error(label: String, _ message: String) {\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`Log.trace(label: \"testLabel\", \"Test message\")\nLog.debug(label: \"testLabel\", \"Test message\")\nLog.warning(label: \"testLabel\", \"Test message\")\nLog.error(label: \"testLabel\", \"Test message\")\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-6\"\n    }}>{`Objective-C`}</h4>\n    <p>{`The log messages from the Adobe Experience SDK are printed to the Apple System Log facility and use a common format that contains the tag `}<inlineCode parentName=\"p\">{`AEP SDK`}</inlineCode>{`. For example, if logging an error message using `}<inlineCode parentName=\"p\">{`[AEPLog errorWithLabel: _ message:_]`}</inlineCode>{`, the printed output looks like `}<inlineCode parentName=\"p\">{`[AEP SDK ERROR <label>]: message`}</inlineCode>{`.`}</p>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`@objc(traceWithLabel:message:)\npublic static func trace(label: String, _ message: String)\n\n@objc(debugWithLabel:message:)\npublic static func debug(label: String, _ message: String)\n\n@objc(warningWithLabel:message:)\npublic static func warning(label: String, _ message: String)\n\n@objc(errorWithLabel:message:)\npublic static func error(label: String, _ message: String)\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`[AEPLog traceWithLabel:@\"testLabel\" message:@\"testMessage\"];\n[AEPLog debugWithLabel:@\"testLabel\" message:@\"testMessage\"];\n[AEPLog warningWithLabel:@\"testLabel\" message:@\"testMessage\"];\n[AEPLog errorWithLabel:@\"testLabel\" message:@\"testMessage\"];\n`}</code></pre>\n    {/*- <Variant platform=\"react-native\" api=\"log\" repeat=\"6\"/>\n     #### JavaScript\n     The log messages from the Adobe Experience SDK are printed to the Log facility and use a common format that contains the tag `ACPMobileLogLevel`.\n     **Example**\n     ```jsx\n     ACPCore.log(ACPMobileLogLevel.ERROR, \"React Native Tag\", \"React Native Message\");\n     ```\n     Note: `ACPMobileLogLevel` contains the following getters:\n     ```jsx\n     const ERROR = \"ACP_LOG_LEVEL_ERROR\";\n     const WARNING = \"ACP_LOG_LEVEL_WARNING\";\n     const DEBUG = \"ACP_LOG_LEVEL_DEBUG\";\n     const VERBOSE = \"ACP_LOG_LEVEL_VERBOSE\";\n     ``` -*/}\n    <Variant platform=\"android\" api=\"register-event-listener\" repeat=\"5\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-7\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public static void registerEventListener(@NonNull final String eventType, @NonNull final String eventSource, @NonNull final AdobeCallback<Event> callback)\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`MobileCore.registerEventListener(EventType.CONFIGURATION, EventSource.RESPONSE_CONTENT, new AdobeCallback<Event>() {\n    @Override\n    public void call(Event value) {\n        // handle event\n    }\n});\n`}</code></pre>\n    <Variant platform=\"ios\" api=\"register-event-listener\" repeat=\"10\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift-7\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`public static func registerEventListener(type: String, source: String, listener: @escaping EventListener)\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`MobileCore.registerEventListener(type: EventType.configuration, source: EventSource.responseContent, listener: { event in\n   // handle event\n})\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-7\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objc\"\n      }}>{`@objc(registerEventListenerWithType:source:listener:)\npublic static func registerEventListener(type: String, source: String, listener: @escaping EventListener)\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`[AEPMobileCore registerEventListenerWithType: type source: source listener:^(AEPEvent * _Nonnull event) {\n   // handle event\n}];\n`}</code></pre>\n    <Variant platform=\"android\" api=\"register-extension\" repeat=\"6\" mdxType=\"Variant\" />\n    <InlineNestedAlert variant=\"warning\" header=\"true\" iconPosition=\"left\" mdxType=\"InlineNestedAlert\">\n      <p>{`This API has been deprecated starting in v2.0.0 and removed in v3.0.0 of Mobile Core extension.`}</p>\n      <p>{`Use `}<a parentName=\"p\" {...{\n          \"href\": \"#registerextensions\"\n        }}>{`registerExtensions`}</a>{` to register desired extensions and boot up the SDK for event processing. Calling `}<inlineCode parentName=\"p\">{`MobileCore.start()`}</inlineCode>{` API is no longer required when using `}<inlineCode parentName=\"p\">{`MobileCore.registerExtensions()`}</inlineCode>{`.`}</p>\n    </InlineNestedAlert>\n    <h4 {...{\n      \"id\": \"java-8\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public static boolean registerExtension(@NonNull final Class<? extends Extension> extensionClass, @Nullable final ExtensionErrorCallback<ExtensionError> errorCallback)\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`MobileCore.registerExtension(Signal.EXTENSION, errorCallback -> {\n  // handle callback                   \n});\n`}</code></pre>\n    <Variant platform=\"ios\" api=\"register-extension\" repeat=\"10\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift-8\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`public static func registerExtension(_ exten: Extension.Type, _ completion: (() -> Void)? = nil)\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`MobileCore.registerExtension(Lifecycle.self) {\n    // handle completion\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-8\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objc\"\n      }}>{`@objc(registerExtension:completion:)\npublic static func registerExtension(_ exten: Extension.Type, _ completion: (() -> Void)? = nil)\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`[AEPMobileCore registerExtension:AEPMobileLifecycle.class completion:^{\n   // handle completion\n}];\n`}</code></pre>\n    <Variant platform=\"android\" api=\"register-extensions\" repeat=\"5\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-9\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public static void registerExtensions(@NonNull final List<Class<? extends Extension>> extensions, @Nullable final AdobeCallback<?> completionCallback)\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import com.adobe.marketing.mobile.AdobeCallback;\nimport com.adobe.marketing.mobile.Edge;\nimport com.adobe.marketing.mobile.edge.consent.Consent;\nimport com.adobe.marketing.mobile.edge.identity.Identity;\nimport com.adobe.marketing.mobile.Lifecycle;\nimport com.adobe.marketing.mobile.LoggingMode;\nimport com.adobe.marketing.mobile.MobileCore;\nimport com.adobe.marketing.mobile.Signal;\nimport com.adobe.marketing.mobile.UserProfile;\n...\nimport android.app.Application;\n...\npublic class MainApp extends Application {\n\n    // Set up the preferred Environment File ID from your mobile property configured in Data Collection UI\n    private static final String ENVIRONMENT_FILE_ID = \"YOUR_ENVIRONMENT_FILE_ID\";\n\n    @Override\n    public void onCreate() {\n        super.onCreate();\n\n        MobileCore.setApplication(this);\n        MobileCore.configureWithAppID(ENVIRONMENT_FILE_ID);\n\n        List<Class<? extends Extension>> extensions = Arrays.asList(\n                Lifecycle.EXTENSION,\n                Signal.EXTENSION,\n                UserProfile.EXTENSION\n                Edge.EXTENSION,\n                Consent.EXTENSION,\n                EdgeIdentity.EXTENSION);\n        MobileCore.registerExtensions(extensions, o -> {\n            Log.d(LOG_TAG, \"AEP Mobile SDK is initialized\");\n        });\n    }\n}\n`}</code></pre>\n    <Variant platform=\"ios\" api=\"register-extensions\" repeat=\"10\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift-9\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`public static func registerExtensions(_ extensions: [NSObject.Type], _ completion: (() -> Void)? = nil)\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`// AppDelegate.swift\nfunc application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {\n    MobileCore.registerExtensions([Signal.self, Lifecycle.self, UserProfile.self, Edge.self, AEPEdgeIdentity.Identity.self, Consent.self], {\n        MobileCore.configureWith(appId: \"yourAppId\")\n    })\n  ...\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-9\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objc\"\n      }}>{`@objc(registerExtensions:completion:)\npublic static func registerExtensions(_ extensions: [NSObject.Type], _ completion: (() -> Void)? = nil)\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`// AppDelegate.m\n- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n    [AEPMobileCore registerExtensions:@[AEPMobileSignal.class, AEPMobileLifecycle.class, AEPMobileUserProfile.class, AEPMobileEdge.class, AEPMobileEdgeIdentity.class, AEPMobileEdgeConsent.class] completion:^{\n    [AEPMobileCore configureWithAppId: @\"yourAppId\"];\n  }];\n  ...\n}\n`}</code></pre>\n    {/*- <Variant platform=\"react-native\" api=\"register-extension\" repeat=\"5\"/>\n     For React Native apps, initialize the SDK using native code in your `AppDelegate` (iOS) and `MainApplication` (Android).\n     #### iOS\n     ```objectivec\n     #import \"ACPCore.h\"\n     #import \"ACPUserProfile.h\"\n     #import \"ACPIdentity.h\"\n     #import \"ACPLifecycle.h\"\n     #import \"ACPSignal.h\"\n     ...\n     @implementation AppDelegate\n     -(BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n        [ACPCore setLogLevel:ACPMobileLogLevelDebug];\n        [ACPCore configureWithAppId:@\"<your_environment_id_from_Launch>\"];\n        [ACPUserProfile registerExtension];\n        [ACPIdentity registerExtension];\n        [ACPLifecycle registerExtension];\n        [ACPSignal registerExtension];\n         const UIApplicationState appState = application.applicationState;\n        [ACPCore start:^{\n          // only start lifecycle if the application is not in the background\n          if (appState != UIApplicationStateBackground) {\n            [ACPCore lifecycleStart:nil];\n          }\n        }];\n        ...\n      return YES;\n     }\n     @end\n     ```\n     #### Android\n     ```java\n     import com.adobe.marketing.mobile.AdobeCallback;\n     import com.adobe.marketing.mobile.Identity;\n     import com.adobe.marketing.mobile.InvalidInitException;\n     import com.adobe.marketing.mobile.Lifecycle;\n     import com.adobe.marketing.mobile.LoggingMode;\n     import com.adobe.marketing.mobile.MobileCore;\n     import com.adobe.marketing.mobile.Signal;\n     import com.adobe.marketing.mobile.UserProfile;\n     ...\n     import android.app.Application;\n     ...\n     public class MainApplication extends Application implements ReactApplication {\n      ...\n      @Override\n      public void on Create(){\n        super.onCreate();\n        ...\n        MobileCore.setApplication(this);\n        MobileCore.setLogLevel(LoggingMode.DEBUG);\n        MobileCore.setWrapperType(WrapperType.REACT_NATIVE);\n         try {\n          UserProfile.registerExtension();\n          Identity.registerExtension();\n          Lifecycle.registerExtension();\n          Signal.registerExtension();\n          MobileCore.start(new AdobeCallback () {\n              @Override\n              public void call(Object o) {\n                MobileCore.configureWithAppID(\"<your_environment_id_from_Launch>\");\n             }\n          });\n        } catch (InvalidInitException e) {\n          ...\n        }\n      }\n     }\n     ```\n     <Variant platform=\"flutter\" api=\"register-extension\" repeat=\"3\"/>\n     #### Dart\n     For Flutter apps, initialize the SDK using native code in your `AppDelegate` and `MainApplication` in iOS and Android, respectively.\n     The initialization code is located in the [Flutter ACPCore Github README](https://github.com/adobe/flutter_acpcore). -*/}\n    <Variant platform=\"android\" api=\"reset-identities\" repeat=\"5\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-10\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`void resetIdentities();\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`MobileCore.resetIdentities();\n`}</code></pre>\n    <Variant platform=\"ios\" api=\"reset-identities\" repeat=\"10\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift-10\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`static func resetIdentities()\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`MobileCore.resetIdentities()\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-10\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`@objc(resetIdentities)\nstatic func resetIdentities()\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`[AEPMobileCore resetIdentities];\n`}</code></pre>\n    <Variant platform=\"ios\" api=\"set-app-group\" repeat=\"10\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift-11\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`public static func setAppGroup(_ group: String?)\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`MobileCore.setAppGroup(\"appGroupId\")\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-11\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`@objc(setAppGroup:)\npublic static func setAppGroup(_ group: String?)\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`[AEPMobileCore setAppGroup:@\"app-group-id\"];\n`}</code></pre>\n    <Variant platform=\"android\" api=\"set-application\" repeat=\"5\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-11\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public static void setApplication(@NonNull final Application app)\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class CoreApp extends Application {\n\n   @Override\n   public void onCreate() {\n      super.onCreate();\n      MobileCore.setApplication(this);\n\n      List<Class<? extends Extension>> extensions = Arrays.asList(\n                Lifecycle.EXTENSION, Signal.EXTENSION, UserProfile.EXTENSION...);\n      MobileCore.registerExtensions(extensions, o -> {\n          Log.d(LOG_TAG, \"AEP Mobile SDK is initialized\");\n      });\n   }\n}\n`}</code></pre>\n    <Variant platform=\"android\" api=\"set-log-level\" repeat=\"5\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-12\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public static void setLogLevel(@NonNull LoggingMode mode)\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import com.adobe.marketing.mobile.LoggingMode;\nimport com.adobe.marketing.mobile.MobileCore;\n\nMobileCore.setLogLevel(LoggingMode.VERBOSE);\n`}</code></pre>\n    <Variant platform=\"ios\" api=\"set-log-level\" repeat=\"10\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift-12\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{` public static func setLogLevel(_ level: LogLevel)\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`import AEPCore\nimport AEPServices\n\n  MobileCore.setLogLevel(.trace)\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-12\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{` @objc(setLogLevel:)\n public static func setLogLevel(_ level: LogLevel)\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`@import AEPCore;\n@import AEPServices;\n\n [AEPMobileCore setLogLevel: AEPLogLevelTrace];\n`}</code></pre>\n    {/*- <Variant platform=\"react-native\" api=\"set-log-level\" repeat=\"5\"/>\n     #### Javascript\n     **Syntax**\n     ```jsx\n     (void) setLogLevel: (ACPMobileLogLevel) logLevel;\n     ```\n     **Example**\n     ```jsx\n     import {ACPMobileLogLevel} from '@adobe/react-native-acpcore';\n     ACPCore.setLogLevel(ACPMobileLogLevel.VERBOSE);\n     ```\n     <Variant platform=\"flutter\" api=\"set-log-level\" repeat=\"5\"/>\n     #### Dart\n     **Syntax**\n     ```dart\n     (void) setLogLevel: (ACPMobileLogLevel) logLevel;\n     ```\n     **Example**\n     ```dart\n     import 'package:flutter_acpcore/src/acpmobile_logging_level.dart';\n     FlutterACPCore.setLogLevel(ACPLoggingLevel.VERBOSE);\n     ``` -*/}\n    <Variant platform=\"android\" api=\"set-push-identifier\" repeat=\"6\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-13\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public static void setPushIdentifier(@Nullable final String pushIdentifier);\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`pushIdentifier`}</em>{`  is a string that contains the device token for push notifications.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`//Retrieve the token from either GCM or FCM, and pass it to the SDK\nMobileCore.setPushIdentifier(token);\n`}</code></pre>\n    <Variant platform=\"ios\" api=\"set-push-identifier\" repeat=\"10\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift-13\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`public static func setPushIdentifier(_ deviceToken: Data?)\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`MobileCore.setPushIdentifier(deviceToken)\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-13\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objc\"\n      }}>{` @objc(setPushIdentifier:)\n public static func setPushIdentifier(_ deviceToken: Data?)\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{` [AEPMobileCore setPushIdentifier:deviceToken];\n`}</code></pre>\n    <Variant platform=\"android\" api=\"set-icon-resource-id\" repeat=\"11\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-14\"\n    }}>{`Java`}</h4>\n    <h4 {...{\n      \"id\": \"setsmalliconresourceid\"\n    }}>{`setSmallIconResourceID`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public static void setSmallIconResourceID(int resourceID)\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{` MobileCore.setSmallIconResourceID(R.mipmap.ic_launcher_round);\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"setlargeiconresourceid\"\n    }}>{`setLargeIconResourceID`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public static void setLargeIconResourceID(int resourceID)\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{` MobileCore.setLargeIconResourceID(R.mipmap.ic_launcher_round);\n`}</code></pre>\n    <Variant platform=\"android\" api=\"set-wrapper-type\" repeat=\"6\" mdxType=\"Variant\" />\n    <p>{`The wrapper type can be set to one of the follwing types: `}<inlineCode parentName=\"p\">{`NONE`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`REACT_NATIVE`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`FLUTTER`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`CORDOVA`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`UNITY`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`XAMARIN`}</inlineCode>{`.`}</p>\n    <h4 {...{\n      \"id\": \"java-15\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public static void setWrapperType(@NonNull final WrapperType wrapperType)\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`MobileCore.setWrapperType(WrapperType.REACT_NATIVE);\n`}</code></pre>\n    <Variant platform=\"ios\" api=\"set-wrapper-type\" repeat=\"11\" mdxType=\"Variant\" />\n    <p>{`The wrapper type can be set to one of the follwing types: `}<inlineCode parentName=\"p\">{`none`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`reactNative`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`flutter`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`cordova`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`unity`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`xamarin`}</inlineCode>{`.`}</p>\n    <h4 {...{\n      \"id\": \"swift-14\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`public static func setWrapperType(_ type: WrapperType)\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`MobileCore.setWrapperType(.flutter)\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-14\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objc\"\n      }}>{`@objc(setWrapperType:)\npublic static func setWrapperType(_ type: WrapperType)\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`[AEPMobileCore setWrapperType:AEPWrapperTypeFlutter];\n`}</code></pre>\n    <Variant platform=\"android\" api=\"start\" repeat=\"5\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-16\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public static void start(@Nullable final AdobeCallback<?> completionCallback)\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import com.adobe.marketing.mobile.AdobeCallback;\nimport com.adobe.marketing.mobile.Lifecycle;\nimport com.adobe.marketing.mobile.LoggingMode;\nimport com.adobe.marketing.mobile.MobileCore;\nimport com.adobe.marketing.mobile.Signal;\nimport com.adobe.marketing.mobile.UserProfile;\n...\nimport android.app.Application;\n...\npublic class MyApp extends Application {\n  ...\n  @Override\n  public void on Create(){\n    super.onCreate();\n\n    MobileCore.setApplication(this);\n\n    UserProfile.registerExtension();\n    Lifecycle.registerExtension();\n    Signal.registerExtension();\n    MobileCore.start(new AdobeCallback () {\n        @Override\n        public void call(Object o) {\n          // implement callback\n        }\n    });\n  }\n}\n`}</code></pre>\n    <Variant platform=\"android\" api=\"track-action\" repeat=\"6\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-17\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public static void trackAction(@NonNull final String action, @Nullable final Map<String, String> contextData)\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`action`}</em>{` contains the name of the action to track.`}</li>\n      <li parentName=\"ul\"><em parentName=\"li\">{`contextData`}</em>{` contains the context data to attach on the hit.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`Map<String, String> additionalContextData = new HashMap<String, String>();\nadditionalContextData.put(\"customKey\", \"value\");\nMobileCore.trackAction(\"loginClicked\", additionalContextData);\n`}</code></pre>\n    <Variant platform=\"ios\" api=\"track-action\" repeat=\"12\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift-15\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{` static func track(action: String?, data: [String: Any]?)\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`action`}</em>{` contains the name of the action to track.`}</li>\n      <li parentName=\"ul\"><em parentName=\"li\">{`contextData`}</em>{` contains the context data to attach on this hit.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{` MobileCore.track(action: \"action name\", data: [\"key\": \"value\"])\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-15\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objc\"\n      }}>{` @objc(trackAction:data:)\n static func track(action: String?, data: [String: Any]?)\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`action`}</em>{` contains the name of the action to track.`}</li>\n      <li parentName=\"ul\"><em parentName=\"li\">{`contextData`}</em>{` contains the context data to attach on this hit.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`  [AEPMobileCore trackAction:@\"action name\" data:@{@\"key\":@\"value\"}];\n`}</code></pre>\n    {/*- <Variant platform=\"react-native\" api=\"track-action\" repeat=\"6\"/>\n     #### Javascript\n     **Syntax**\n     ```jsx\n     trackAction(action?: String, contextData?: { string: string });\n     ```\n     * _action_ contains the name of the action to track.\n     * _contextData_ contains the context data to attach on the hit.\n     **Example**\n     ```jsx\n     ACPCore.trackAction(\"action name\", {\"key\": \"value\"});\n     ```\n     <Variant platform=\"flutter\" api=\"track-action\" repeat=\"6\"/>\n     #### Dart\n     **Syntax**\n     ```dart\n     Future<void> trackAction (String action, {Map<String, String> contextData});\n     ```\n     * _action_ contains the name of the action to track.\n     * _contextData_ contains the context data to attach on the hit.\n     **Example**\n     ```dart\n     FlutterACPCore.trackAction(\"action name\",  data: {\"key\": \"value\"});\n     ``` -*/}\n    <Variant platform=\"android\" api=\"track-state\" repeat=\"7\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-18\"\n    }}>{`Java`}</h4>\n    <p>{`In Android, `}<inlineCode parentName=\"p\">{`trackState`}</inlineCode>{` is typically called every time a new `}<inlineCode parentName=\"p\">{`Activity`}</inlineCode>{` is loaded.`}</p>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public static void trackState(@NonNull final String state, @Nullable final Map<String, String> contextData)\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`state`}</em>{` contains the name of the state to track.`}</li>\n      <li parentName=\"ul\"><em parentName=\"li\">{`contextData`}</em>{` contains the context data to attach on the hit.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`Map<String, String> additionalContextData = new HashMap<String, String>();        \nadditionalContextData.put(\"customKey\", \"value\");\nMobileCore.trackState(\"homePage\", additionalContextData);\n`}</code></pre>\n    <Variant platform=\"ios\" api=\"track-state\" repeat=\"12\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift-16\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{` static func track(state: String?, data: [String: Any]?)\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`state`}</em>{` contains the name of the state to track.`}</li>\n      <li parentName=\"ul\"><em parentName=\"li\">{`contextData`}</em>{` contains the context data to attach on this hit.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{` MobileCore.track(state: \"state name\", data: [\"key\": \"value\"])\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-16\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objc\"\n      }}>{` @objc(trackState:data:)\n static func track(state: String?, data: [String: Any]?)\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`state`}</em>{` contains the name of the state to track.`}</li>\n      <li parentName=\"ul\"><em parentName=\"li\">{`contextData`}</em>{` contains the context data to attach on this hit.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`  [AEPMobileCore trackState:@\"state name\" data:@{@\"key\":@\"value\"}];\n`}</code></pre>\n    {/*- <Variant platform=\"react-native\" api=\"track-state\" repeat=\"6\"/>\n     #### Javascript\n     **Syntax**\n     ```jsx\n     trackState(state?: String, contextData?: { string: string });\n     ```\n     * _state_ contains the name of the state to track.\n     * _contextData_ contains the context data to attach on the hit.\n     **Example**\n     ```jsx\n     ACPCore.trackState(\"state name\", {\"key\": \"value\"});\n     ```\n     <Variant platform=\"flutter\" api=\"track-state\" repeat=\"6\"/>\n     #### Dart\n     **Syntax**\n     ```dart\n     Future<void> trackState (String state, {Map<String, String> contextData});\n     ```\n     * _state_ contains the name of the state to track.\n     * _contextData_ contains the context data to attach on the hit.\n     **Example**\n     ```dart\n     FlutterACPCore.trackState(\"state name\",  data: {\"key1: \"value\"})\n     ``` -*/}\n    <Variant platform=\"android\" api=\"public-classes\" repeat=\"13\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-19\"\n    }}>{`Java`}</h4>\n    <h4 {...{\n      \"id\": \"adobecallback\"\n    }}>{`AdobeCallback`}</h4>\n    <p>{`The `}<inlineCode parentName=\"p\">{`AdobeCallback`}</inlineCode>{` class provides the interface to receive results when the asynchronous APIs perform the requested action.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public interface AdobeCallback<T> {    \n    void call(final T value);\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"adobecallbackwitherror\"\n    }}>{`AdobeCallbackWithError`}</h4>\n    <p>{`The `}<inlineCode parentName=\"p\">{`AdobeCallbackWithError`}</inlineCode>{` class provides the interface to receive results or an error when the asynchronous APIs perform the requested action.`}</p>\n    <p>{`When using this class, if the request cannot be completed within the default timeout or an unexpected error occurs, the request is stopped and the fail method is called with the corresponding `}<inlineCode parentName=\"p\">{`AdobeError`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public interface AdobeCallbackWithError<T> extends AdobeCallback<T> {\n    void fail(final AdobeError error);\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"adobeerror\"\n    }}>{`AdobeError`}</h4>\n    <p>{`The `}<inlineCode parentName=\"p\">{`AdobeError`}</inlineCode>{` class shows the errors that can be passed to an `}<inlineCode parentName=\"p\">{`AdobeCallbackWithError`}</inlineCode>{`:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`UNEXPECTED_ERROR`}</inlineCode>{` - An unexpected error occurred.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`CALLBACK_TIMEOUT`}</inlineCode>{` - The timeout was met.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`CALLBACK_NULL`}</inlineCode>{` - The provided callback function is null.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`EXTENSION_NOT_INITIALIZED`}</inlineCode>{` - The extension is not initialized.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`MobileCore.getPrivacyStatus(new AdobeCallbackWithError<MobilePrivacyStatus>() {\n  @Override\n  public void fail(final AdobeError error) {\n    if (error == AdobeError.UNEXPECTED_ERROR) {\n      // handle unexpected error\n    } else if (error == AdobeError.CALLBACK_TIMEOUT) {\n      // handle timeout error\n    } else if (error == AdobeError.CALLBACK_NULL) {\n      // handle null callback error\n    } else if (error == AdobeError.EXTENSION_NOT_INITIALIZED) {\n      // handle extension not initialized error\n    }\n  }\n\n  @Override\n  public void call(final MobilePrivacyStatus value) {\n    // use MobilePrivacyStatus value\n  }\n});\n`}</code></pre>\n    <Variant platform=\"ios\" api=\"public-classes\" repeat=\"8\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"aeperror\"\n    }}>{`AEPError`}</h4>\n    <p>{`The `}<inlineCode parentName=\"p\">{`AEPError`}</inlineCode>{` enum shows the errors that can be passed to a completion handler callback from any API which uses one:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`case unexpected`}</inlineCode>{` - An unexpected error occured.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`case callbackTimeout`}</inlineCode>{` - The timeout was met.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`case callbackNil`}</inlineCode>{` -  The provided callback function is nil.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`case none`}</inlineCode>{` -  There was no error, used when an error return type is required but there was no error.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`case serverError`}</inlineCode>{` - There was a server error.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`case networkError`}</inlineCode>{` - There was a network error.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`case invalidRequest`}</inlineCode>{` - There was an invalid request.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`case invalidResponse`}</inlineCode>{` - There was an invalid response.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`case errorExtensionNotInitialized`}</inlineCode>{` - The extension is not initialized.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <p><strong parentName=\"p\">{`Swift`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`MobileCore.getSdkIdentities { (content, error) in\n    if let error = error, let aepError = error as? AEPError {\n        switch aepError {\n        case .unexpected:\n          // Handle unexpected error\n        case .callbackTimeout:\n          // Handle callback timeout error\n        case .callbackNil:\n          // Handle callback being nil error\n        case .none:\n          // no error\n        case .serverError:\n          // handle server error\n        case .networkError:\n          // handle network error\n        case .invalidRequest:\n          // handle invalid request error\n        case .invalidResponse:\n          // handle invalid response error\n        case .errorExtensionNotInitialized:\n          // handle extension not initialized error\n        @unknown default:\n          // handle unknown error\n        }\n    }\n    ...\n}\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Objective-C`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`[AEPMobileCore getSdkIdentities:^(NSString * _Nullable content, NSError * _Nullable error) {\n    if (error) {\n        if (error.code == AEPErrorUnexpected) {\n          // Handle unexpected error\n        } else if (error.code == AEPErrorCallbackTimeout) {\n          // Handle callback timeout error\n        } else if (error.code == AEPErrorCallbackNil) {\n          // Handle callback being nil error\n        } else if (error.code == AEPErrorNone) {\n          // no error     \n        } else if (error.code == AEPErrorServerError) {\n          // handle server error\n        } else if (error.code == AEPErrorNetworkError) {\n          // handle network error\n        } else if (error.code == AEPErrorInvalidRequest) {\n          // handle invalid request error\n        } else if (error.code == AEPErrorInvalidResponse) {\n          // handle invalid response error  \n        } else if (error.code == AEPErrorErrorExtensionNotInitialized) {\n          // handle extension not intialized error  \n        }\n    }\n\n    ...\n}];\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","makeShortcode","name","props","console","warn","Variant","InlineNestedAlert","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","platform","api","repeat","parentName","variant","header","iconPosition","isMDXComponent"],"sourceRoot":""}