{"version":3,"file":"component---src-pages-solution-adobe-analytics-tabs-index-md-8d64e1a4217ae8139ee9.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/pages/solution/adobe-analytics/tabs/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/aep-mobile-sdkdocs/aep-mobile-sdkdocs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nimport Alerts from '/src/pages/resources/alerts.md';\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst Variant = makeShortcode(\"Variant\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <Variant platform=\"android\" task=\"add\" repeat=\"11\" mdxType=\"Variant\" />\n    <ol>\n      <li parentName=\"ol\">{`Add the `}<a parentName=\"li\" {...{\n          \"href\": \"../../home/base/mobile-core/index.md\"\n        }}>{`Mobile Core`}</a>{` and Analytics extensions to your project using the app's Gradle file.`}</li>\n    </ol>\n    <h4 {...{\n      \"id\": \"kotlin\"\n    }}>{`Kotlin`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`implementation(platform(\"com.adobe.marketing.mobile:sdk-bom:3.+\"))\nimplementation(\"com.adobe.marketing.mobile:core\")\nimplementation(\"com.adobe.marketing.mobile:identity\")\nimplementation(\"com.adobe.marketing.mobile:analytics\")\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"groovy\"\n    }}>{`Groovy`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`implementation platform('com.adobe.marketing.mobile:sdk-bom:3.+')\nimplementation 'com.adobe.marketing.mobile:core'\nimplementation 'com.adobe.marketing.mobile:identity'\nimplementation 'com.adobe.marketing.mobile:analytics'\n`}</code></pre>\n    <Alerts query=\"platform=android-gradle&componentClass=InlineNestedAlert\" mdxType=\"Alerts\" />now works\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`Import the Analytics extension in your application's main activity.`}</li>\n    </ol>\n    <h4 {...{\n      \"id\": \"java\"\n    }}>{`Java`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import com.adobe.marketing.mobile.MobileCore;\nimport com.adobe.marketing.mobile.Identity;\nimport com.adobe.marketing.mobile.Analytics;\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"kotlin-1\"\n    }}>{`Kotlin`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`import com.adobe.marketing.mobile.MobileCore\nimport com.adobe.marketing.mobile.Identity\nimport com.adobe.marketing.mobile.Analytics\n`}</code></pre>\n    <Variant platform=\"ios\" task=\"add\" repeat=\"7\" mdxType=\"Variant\" />\n    <ol>\n      <li parentName=\"ol\">{`Add the `}<a parentName=\"li\" {...{\n          \"href\": \"../../home/base/mobile-core/index.md\"\n        }}>{`Mobile Core`}</a>{` and Analytics extensions to your project using Cocoapods.`}</li>\n      <li parentName=\"ol\">{`Add the following pods in your `}<inlineCode parentName=\"li\">{`Podfile`}</inlineCode>{`:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`pod 'AEPCore', '~> 5.0'\npod 'AEPAnalytics', '~> 5.0'\npod 'AEPIdentity', '~> 5.0'\n`}</code></pre>\n    <ol {...{\n      \"start\": 3\n    }}>\n      <li parentName=\"ol\">{`Import the Analytics and Identity libraries:`}</li>\n    </ol>\n    <p><strong parentName=\"p\">{`Swift`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`import AEPCore\nimport AEPAnalytics\nimport AEPIdentity\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Objective-C`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`@import AEPCore;\n@import AEPAnalytics;\n@import AEPIdentity;\n`}</code></pre>\n    <Variant platform=\"android\" task=\"register\" repeat=\"4\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-1\"\n    }}>{`Java`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class MainApp extends Application {\n     private final String ENVIRONMENT_FILE_ID = \"YOUR_APP_ENVIRONMENT_ID\";\n\n     @Override\n     public void onCreate() {\n         super.onCreate();\n\n         MobileCore.setApplication(this);\n         MobileCore.configureWithAppID(ENVIRONMENT_FILE_ID);\n\n         List<Class<? extends Extension>> extensions = Arrays.asList(\n                 Analytics.EXTENSION, Identity.EXTENSION);\n         MobileCore.registerExtensions(extensions, o -> {\n             Log.d(LOG_TAG, \"AEP Mobile SDK is initialized\");\n         });\n     }\n }\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"kotlin-2\"\n    }}>{`Kotlin`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`class MyApp : Application() {\n    val ENVIRONMENT_FILE_ID = \"YOUR_APP_ENVIRONMENT_ID\"\n\n    override fun onCreate() {\n        super.onCreate()\n        MobileCore.setApplication(this)\n        MobileCore.configureWithAppID(ENVIRONMENT_FILE_ID)\n\n        val extensions = listOf(Analytics.EXTENSION, Identity.EXTENSION)\n        MobileCore.registerExtensions(extensions) {\n            Log.d(LOG_TAG, \"AEP Mobile SDK is initialized\")\n        }\n    }\n}\n`}</code></pre>\n    <Variant platform=\"ios\" task=\"register\" repeat=\"6\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift\"\n    }}>{`Swift`}</h4>\n    <p>{`In your app's `}<inlineCode parentName=\"p\">{`_:didFinishLaunchingWithOptions`}</inlineCode>{` function, register the Audience Manager extension with the Mobile Core:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {\n   MobileCore.registerExtensions([Analytics.self, Identity.self], {\n   MobileCore.configureWith(appId: \"yourAppId\")\n })  \n ...\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c\"\n    }}>{`Objective-C`}</h4>\n    <p>{`In your app's `}<inlineCode parentName=\"p\">{`application:didFinishLaunchingWithOptions`}</inlineCode>{`, register Media with Mobile Core:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n    [AEPMobileCore registerExtensions:@[AEPMobileAnalytics.class, AEPMobileIdentity.class] completion:^{\n    [AEPMobileCore configureWithAppId: @\"yourAppId\"];\n  }];\n  ...\n}\n`}</code></pre>\n    <Variant platform=\"android\" task=\"serialize\" repeat=\"8\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-2\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`cdata.put(\"&&events\", \"event1:12341234\");\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`//create a context data dictionary\nHashMap cdata = new HashMap<String, Object>();\n\n// add events\ncdata.put(\"&&events\", \"event1:12341234\");\n\n// send a tracking call - use either a trackAction or TrackState call.\n// trackAction example:\nMobileCore.trackAction(\"Action Name\", cdata);\n// trackState example:\nMobileCore.trackState(\"State Name\", cdata);\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"kotlin-3\"\n    }}>{`Kotlin`}</h4>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`//create a context data dictionary\nval cdata: Map<String, Any?> = mapOf(\n    \"&&events\" to \"event1:12341234\"\n)\n\n// send a tracking call - use either a trackAction or TrackState call.\n// trackAction example:\nMobileCore.trackAction(\"Action Name\", cdata);\n// trackState example:\nMobileCore.trackState(\"State Name\", cdata);\n`}</code></pre>\n    <Variant platform=\"ios\" task=\"serialize\" repeat=\"10\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift-1\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`contextdata[\"&&events\"] = \"event1:12341234\"\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`//create a context data dictionary\nvar contextData = [String: Any]()\n\n// add events\ncontextData[\"&&events\"] = \"event1:12341234\"\n\n// send the tracking call - use either a trackAction or trackState call.\n// trackAction example:\nMobileCore.track(action: \"Action Name\" as String, data: contextData)\n\n// trackState example:\nMobileCore.track(state: \"State Name\" as String, data: contextData)\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-1\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`[contextData setObject:@\"eventN:serial number\" forKey:@\"&&events\"];\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`//create a context data dictionary\nNSMutableDictionary *contextData = [NSMutableDictionary dictionary];\n\n// add events\n[contextData setObject:@\"event1:12341234\" forKey:@\"&&events\"];\n\n// send the tracking call - use either a trackAction or trackState call.\n// trackAction example:\n[AEPMobileCore trackAction:@\"Action Name\" data:contextData];\n// trackState example:\n[AEPMobileCore trackState:@\"State Name\" data:contextData];\n`}</code></pre>\n    <Variant platform=\"android\" task=\"update\" repeat=\"6\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-3\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`HashMap<String, Object> data = new HashMap<String, Object>();\ndata.put(\"analytics.server\", \"sample.analytics.tracking.server\");\ndata.put(\"analytics.rsids\", \"rsid1,rsid2\");\ndata.put(\"analytics.batchLimit\", 10);\ndata.put(\"analytics.offlineEnabled\", true);\n\nMobileCore.updateConfiguration(data);\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"kotlin-4\"\n    }}>{`Kotlin`}</h4>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`val data: Map<String, Any?> = mapOf(\n    \"analytics.server\" to \"sample.analytics.tracking.server\",\n    \"analytics.rsids\" to \"rsid1,rsid2\",\n    \"analytics.batchLimit\" to 10,\n    \"analytics.offlineEnabled\" to true\n)\n\nMobileCore.updateConfiguration(data)\n`}</code></pre>\n    <Variant platform=\"ios\" task=\"update\" repeat=\"6\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift-2\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`let updatedConfig = [\"analytics.server\":\"sample.analytics.tracking.server\",\n                     \"analytics.rsids\":\"rsid1,rsid2\",\n                     \"analytics.batchLimit\":10,\n                     \"analytics.offlineEnabled\":true] as [String: Any]\nMobileCore.updateConfigurationWith(configDict: updatedConfig)\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-2\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`NSDictionary *updatedConfig = @{@\"analytics.server\":@\"sample.analytics.tracking.server\",\n                                @\"analytics.rsids\":@\"rsid1,rsid2\",\n                                @\"analytics.batchLimit\":@(10),\n                                @\"analytics.offlineEnabled\":@YES};\n[AEPMobileCore updateConfiguration:updatedConfig];\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","Variant","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","platform","task","repeat","parentName","query","isMDXComponent"],"sourceRoot":""}