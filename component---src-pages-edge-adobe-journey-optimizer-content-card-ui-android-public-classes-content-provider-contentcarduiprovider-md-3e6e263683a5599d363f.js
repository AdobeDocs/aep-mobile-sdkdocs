"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[6810],{12716:function(e,t,n){n.r(t),n.d(t,{_frontmatter:function(){return l},default:function(){return h}});var o,a=n(87462),d=n(63366),r=(n(15007),n(64983)),s=n(91515),i=["components"],l={},p=(o="CodeBlock",function(e){return console.warn("Component "+o+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.mdx)("div",e)}),m={_frontmatter:l},u=s.Z;function h(e){var t=e.components,n=(0,d.Z)(e,i);return(0,r.mdx)(u,(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.mdx)("h1",{id:"contentcarduiprovider"},"ContentCardUIProvider"),(0,r.mdx)("p",null,"Messaging extension implementation of ",(0,r.mdx)("a",{parentName:"p",href:"./aepuicontentprovider.md"},"AepUIContentProvider"),". ",(0,r.mdx)("inlineCode",{parentName:"p"},"ContentCardUIProvider")," is responsible for fetching and managing the content for a given surface. It uses Adobe Messaging APIs to retrieve propositions and transform them into UI templates for display."),(0,r.mdx)("h2",{id:"methods"},"Methods"),(0,r.mdx)("h3",{id:"getcontent"},"getContent"),(0,r.mdx)("p",null,"Retrieves a flow of AepUITemplate lists for the given surface. The flow emits updates whenever new content is fetched."),(0,r.mdx)("h4",{id:"returns"},"Returns"),(0,r.mdx)("p",null,"A ",(0,r.mdx)("a",{parentName:"p",href:"https://developer.android.com/kotlin/flow"},"Flow")," of ",(0,r.mdx)("a",{parentName:"p",href:"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-result/"},"Result")," containing lists of ",(0,r.mdx)("a",{parentName:"p",href:"../ui-models/aepuitemplate.md"},"AepUITemplate"),"s."),(0,r.mdx)("h4",{id:"syntax"},"Syntax"),(0,r.mdx)(p,{slots:"heading, code",repeat:"1",languages:"Kotlin",mdxType:"CodeBlock"}),(0,r.mdx)("h4",{id:"kotlin"},"Kotlin"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-kotlin"},"override suspend fun getContent(): Flow<Result<List<AepUITemplate>>>\n")),(0,r.mdx)("h3",{id:"getcontentcardui"},"getContentCardUI"),(0,r.mdx)("p",null,"Retrieves a ",(0,r.mdx)("a",{parentName:"p",href:"https://developer.android.com/kotlin/flow"},"Flow")," of ",(0,r.mdx)("a",{parentName:"p",href:"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-result/"},"Result")," which contains a list of AepUI instances for the given surface. This function initiates the content fetch using ",(0,r.mdx)("a",{parentName:"p",href:"#getcontent"},"getContent")," and then returns a flow of AepUI instances that represent the UI templates. The flow emits updates whenever new content is fetched or any changes occur."),(0,r.mdx)("h4",{id:"returns-1"},"Returns"),(0,r.mdx)("p",null,"A ",(0,r.mdx)("a",{parentName:"p",href:"https://developer.android.com/kotlin/flow"},"Flow")," of ",(0,r.mdx)("a",{parentName:"p",href:"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-result/"},"Result")," that emits a list of AepUI instances."),(0,r.mdx)("h4",{id:"syntax-1"},"Syntax"),(0,r.mdx)(p,{slots:"heading, code",repeat:"1",languages:"Kotlin",mdxType:"CodeBlock"}),(0,r.mdx)("h4",{id:"kotlin-1"},"Kotlin"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-kotlin"},"suspend fun getContentCardUI(): Flow<Result<List<AepUI<*, *>>>>\n")),(0,r.mdx)("h3",{id:"refreshcontent"},"refreshContent"),(0,r.mdx)("p",null,"Updates the flow returned by ",(0,r.mdx)("a",{parentName:"p",href:"#getContent"},"getContent")," with the latest cached content cards for the given surface."),(0,r.mdx)("h4",{id:"syntax-2"},"Syntax"),(0,r.mdx)(p,{slots:"heading, code",repeat:"1",languages:"Kotlin",mdxType:"CodeBlock"}),(0,r.mdx)("h4",{id:"kotlin-2"},"Kotlin"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-kotlin"},"override suspend fun refreshContent()\n")))}h.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-edge-adobe-journey-optimizer-content-card-ui-android-public-classes-content-provider-contentcarduiprovider-md-3e6e263683a5599d363f.js.map