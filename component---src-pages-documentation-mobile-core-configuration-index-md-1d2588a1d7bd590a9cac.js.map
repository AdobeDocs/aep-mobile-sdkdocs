{"version":3,"file":"component---src-pages-documentation-mobile-core-configuration-index-md-1d2588a1d7bd590a9cac.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/pages/documentation/mobile-core/configuration/index.md","webpack://dev-site-documentation-template/./src/pages/documentation/mobile-core/configuration/tabs/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/aep-mobile-sdkdocs/aep-mobile-sdkdocs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nimport Tabs from './tabs/index.md';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst TabsBlock = makeShortcode(\"TabsBlock\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"configuration\"\n    }}>{`Configuration`}</h1>\n    <p>{`The Configuration extension is built into the Mobile Core extension. It provides several different APIs for you to setup the configuration either remotely in the Data Collection UI or locally.`}</p>\n    <h2 {...{\n      \"id\": \"configure-with-app-id-per-environment\"\n    }}>{`Configure with App ID per environment`}</h2>\n    <p>{`When you configure a mobile property, a unique environment ID is generated that the SDK uses to retrieve your configuration. This ID is generated when an app configuration is created and published to a given environment. The app is first launched and then the SDK retrieves and uses this Adobe-hosted configuration.`}</p>\n    <InlineAlert variant=\"success\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`As best practice, you should configure a mobile property in the Data Collection UI and use environment IDs to configure your application. Follow the steps in the tutorial on `}<a parentName=\"p\" {...{\n        \"href\": \"../../getting-started/create-a-mobile-property.md\"\n      }}>{`setting up a mobile property`}</a>{` if you need to create a new Experience Platform App.`}</p>\n    <p>{`After the configuration is retrieved when the app is initially launched, the configuration is stored in local cache. The SDK tries to refresh the configuration every cold launch or when a new session is detected. If there is no change or a network request error occurs while downloading the configuration file, the cached configuration will be used.`}</p>\n    <p>{`The unique environment ID from the Data Collection UI can be configured with the SDK using the following:`}</p>\n    <TabsBlock orientation=\"horizontal\" slots=\"heading, content\" repeat=\"6\" mdxType=\"TabsBlock\" />\n    <p>{`Android`}</p>\n    <Tabs query=\"platform=android&task=configure\" mdxType=\"Tabs\" />\n    <p>{`iOS (AEP 3.x)`}</p>\n    <Tabs query=\"platform=ios-aep&task=configure\" mdxType=\"Tabs\" />\n    <p>{`iOS (ACP 2.x)`}</p>\n    <Tabs query=\"platform=ios-acp&task=configure\" mdxType=\"Tabs\" />\n    <p>{`Cordova`}</p>\n    <Tabs query=\"platform=cordova&task=configure\" mdxType=\"Tabs\" />\n    <p>{`Unity`}</p>\n    <Tabs query=\"platform=unity&task=configure\" mdxType=\"Tabs\" />\n    <p>{`Xamarin`}</p>\n    <Tabs query=\"platform=xamarin&task=configure\" mdxType=\"Tabs\" />\n    <h2 {...{\n      \"id\": \"programmatic-updates-to-configuration\"\n    }}>{`Programmatic updates to configuration`}</h2>\n    <p>{`You can also update the configuration programmatically by passing configuration keys and values to override the existing configuration.`}</p>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`Keys that are not found on the current configuration are added when this method is followed. Null values are allowed and replace existing configuration values.`}</p>\n    <InlineAlert variant=\"warning\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`Do not use this API to update the build.environment or any key with an environment prefix, because it can lead to unexpected behavior. For more information, read `}<a parentName=\"p\" {...{\n        \"href\": \"./index.md#environment-aware-configuration-properties\"\n      }}>{`Environment-aware configuration properties`}</a>{`.`}</p>\n    <TabsBlock orientation=\"horizontal\" slots=\"heading, content\" repeat=\"8\" mdxType=\"TabsBlock\" />\n    <p>{`Android`}</p>\n    <Tabs query=\"platform=android&task=update\" mdxType=\"Tabs\" />\n    <p>{`iOS (AEP 3.x)`}</p>\n    <Tabs query=\"platform=ios-aep&task=update\" mdxType=\"Tabs\" />\n    <p>{`iOS (ACP 2.x)`}</p>\n    <Tabs query=\"platform=ios-acp&task=update\" mdxType=\"Tabs\" />\n    <p>{`React Native`}</p>\n    <Tabs query=\"platform=react-native&task=update\" mdxType=\"Tabs\" />\n    <p>{`Flutter`}</p>\n    <Tabs query=\"platform=flutter&task=update\" mdxType=\"Tabs\" />\n    <p>{`Cordova`}</p>\n    <Tabs query=\"platform=cordova&task=update\" mdxType=\"Tabs\" />\n    <p>{`Unity`}</p>\n    <Tabs query=\"platform=unity&task=update\" mdxType=\"Tabs\" />\n    <p>{`Xamarin`}</p>\n    <Tabs query=\"platform=xamarin&task=update\" mdxType=\"Tabs\" />\n    <h2 {...{\n      \"id\": \"clearing-programmatic-updates-to-the-configuration\"\n    }}>{`Clearing programmatic updates to the configuration`}</h2>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`This API is only available in Android and iOS (AEP 3.x).`}</p>\n    <p>{`You can clear any programmatic updates made to the configuration via the `}<inlineCode parentName=\"p\">{`clearUpdatedConfiguration`}</inlineCode>{` API. This will clear programmatic updates to configuration made via the `}<inlineCode parentName=\"p\">{`updateConfiguration(configMap)`}</inlineCode>{`(Android)/ `}<inlineCode parentName=\"p\">{`updateConfigurationWith(configDict:)`}</inlineCode>{`(iOS) API. It will also clear any updates to the `}<inlineCode parentName=\"p\">{`MobilePrivacyStatus`}</inlineCode>{`(Android)/ `}<inlineCode parentName=\"p\">{`PrivacyStatus`}</inlineCode>{`(iOS)  made via `}<inlineCode parentName=\"p\">{`setPrivacyStatus(privacyStatus)`}</inlineCode>{`(Android)/ `}<inlineCode parentName=\"p\">{`setPrivacyStatus(_ status:)`}</inlineCode>{`(iOS).`}</p>\n    <p>{`For implementation details, please refer to `}<a parentName=\"p\" {...{\n        \"href\": \"./api-reference.md#clearUpdatedConfiguration\"\n      }}>{`Configuration API reference`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"using-a-bundled-file-configuration\"\n    }}>{`Using a bundled file configuration`}</h2>\n    <p>{`You can include a bundled JSON configuration file in your app package to replace or complement the configuration that was downloaded by using the `}<a parentName=\"p\" {...{\n        \"href\": \"./index.md#configure-with-app-id-per-environment\"\n      }}>{`Configure with App ID per environment`}</a>{` approach.`}</p>\n    <p>{`To download the JSON configuration file, use the following URL:`}</p>\n    <p><inlineCode parentName=\"p\">{`https://assets.adobedtm.com/PASTE-ENVIRONMENT-ID.json`}</inlineCode></p>\n    <ul>\n      <li parentName=\"ul\">{`In iOS, the `}<inlineCode parentName=\"li\">{`ADBMobileConfig.json`}</inlineCode>{` file can be placed anywhere that it is accessible in your bundle.`}</li>\n      <li parentName=\"ul\">{`In Android, the `}<inlineCode parentName=\"li\">{`ADBMobileConfig.json`}</inlineCode>{` file must be placed in the assets folder.`}</li>\n    </ul>\n    <p>{`You can also load a different `}<inlineCode parentName=\"p\">{`ADBMobileConfig.json`}</inlineCode>{` file by using the `}<inlineCode parentName=\"p\">{`ConfigureWithFileInPath`}</inlineCode>{` method. The Adobe Experience Platform SDKs will attempt to load the file from the given path and parse its JSON contents. Previous programmatic configuration changes that were set by using the `}<inlineCode parentName=\"p\">{`UpdateConfiguration`}</inlineCode>{` method are applied on the bundled file's configuration before setting the new configuration to the Adobe Experience Platform SDKs. If a file-read error or JSON parsing error occurs, no configuration changes are made.`}</p>\n    <p>{`To pass in a bundled path and file name:`}</p>\n    <TabsBlock orientation=\"horizontal\" slots=\"heading, content\" repeat=\"4\" mdxType=\"TabsBlock\" />\n    <p>{`Android`}</p>\n    <Tabs query=\"platform=android&task=bundle\" mdxType=\"Tabs\" />\n    <p>{`iOS (AEP 3.x)`}</p>\n    <Tabs query=\"platform=ios-aep&task=bundle\" mdxType=\"Tabs\" />\n    <p>{`iOS (ACP 2.x)`}</p>\n    <Tabs query=\"platform=ios-acp&task=bundle\" mdxType=\"Tabs\" />\n    <p>{`Xamarin`}</p>\n    <Tabs query=\"platform=xamarin&task=bundle\" mdxType=\"Tabs\" />\n    <h2 {...{\n      \"id\": \"environment-aware-configuration-properties\"\n    }}>{`Environment-aware configuration properties`}</h2>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`This feature is only available in iOS ACPCore version 2.0.3 or later, and iOS AEPCore version 3.0.0 and above.`}</p>\n    <p>{`Some extension developers might use different configuration values based on their environment, and the generated configuration might have several entries for the same property. For example, the Adobe Campaign Standard extension has different endpoints for development, staging, and production servers. Here is an example of a raw configuration that supports multiple build environments:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`{\n  \"myExtension.server\": \"mydomain.com\",\n  \"__dev__myExtension.server\": \"mydomain.dev.com\",\n  \"__stage__myExtension.server\": \"mydomain.stage.com\"\n}\n`}</code></pre>\n    <InlineAlert variant=\"success\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`Each time a remote configuration is generated in the Data Collection UI, a `}<inlineCode parentName=\"p\">{`build.environment`}</inlineCode>{` value is set. This value is based on the environment that you are publishing. When the remote configuration is downloaded, the Configuration extension considers the value in `}<inlineCode parentName=\"p\">{`build.environment`}</inlineCode>{` and provides `}<strong parentName=\"p\">{`only`}</strong>{` the non-prefixed version for the current environment in the shared state.`}</p>\n    <p>{`Here is a modification of the previous example, which now includes `}<inlineCode parentName=\"p\">{`build.environment`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`{\n  \"build.environment\": \"dev\",\n  \"myExtension.server\": \"mydomain.com\",\n  \"__dev__myExtension.server\": \"mydomain.dev.com\",\n  \"__stage__myExtension.server\": \"mydomain.stage.com\"\n}\n`}</code></pre>\n    <p>{`Here is the resulting shared state from the Configuration extension:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`{\n  \"build.environment\": \"dev\",\n  \"myExtension.server\": \"mydomain.dev.com\"  \n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"sample-configuration\"\n    }}>{`Sample configuration`}</h3>\n    <p>{`Here's a sample JSON file for the SDK:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`{\n    \"experienceCloud.org\": \"3CE342C75100435B0A490D4C@AdobeOrg\",  \n    \"target.clientCode\": \"yourclientcode\",  \n    \"target.timeout\": 5,  \n    \"audience.server\": \"omniture.demdex.net\",  \n    \"audience.timeout\": 5,  \n    \"analytics.rsids\": \"mobilersidsample\",  \n    \"analytics.server\": \"obumobile1.sc.omtrdc.net\",  \n    \"analytics.aamForwardingEnabled\": false,  \n    \"analytics.offlineEnabled\": true,  \n    \"analytics.batchLimit\": 0,  \n    \"analytics.backdatePreviousSessionInfo\": false,\n    \"global.privacy\": \"optedin\",  \n    \"lifecycle.sessionTimeout\": 300,  \n    \"rules.url\": \"https://link.to.rules/test.zip\"\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/aep-mobile-sdkdocs/aep-mobile-sdkdocs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Variant = makeShortcode(\"Variant\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <Variant platform=\"android\" task=\"configure\" repeat=\"5\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public static void configureWithAppID(final String appId);\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`MobileCore.configureWithAppId(\"1423ae38-8385-8963-8693-28375403491d\");\n`}</code></pre>\n    <Variant platform=\"ios-aep\" task=\"configure\" repeat=\"11\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`static func configureWith(appId: String)\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`MobileCore.configureWith(appId: \"1423ae38-8385-8963-8693-28375403491d\")\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`+ (void) configureWithAppId: (NSString* appId);\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`[AEPMobileCore configureWithAppId: @\"1423ae38-8385-8963-8693-28375403491d\"];\n`}</code></pre>\n    <p>{`Alternatively, you can also place the environment ID in your iOS project's `}<em parentName=\"p\">{`Info.plist`}</em>{` with the `}<inlineCode parentName=\"p\">{`ADBMobileAppID`}</inlineCode>{` key. When the SDK is initialized, the environment ID is automatically read from the `}<em parentName=\"p\">{`Info.plist`}</em>{` file and the associated configuration.`}</p>\n    <Variant platform=\"ios-acp\" task=\"configure\" repeat=\"11\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift-1\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`static func configure(withAppId: String)\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`ACPCore.configure(withAppId: \"1423ae38-8385-8963-8693-28375403491d\")\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-1\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`+ (void) configureWithAppId: (NSString* __nullable) appid;\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`[ACPCore configureWithAppId:@\"1423ae38-8385-8963-8693-28375403491d\"];\n`}</code></pre>\n    <p>{`Alternatively, you can also place the environment ID in your iOS project's `}<em parentName=\"p\">{`Info.plist`}</em>{` with the `}<inlineCode parentName=\"p\">{`ADBMobileAppID`}</inlineCode>{` key. When the SDK is initialized, the environment ID is automatically read from the `}<em parentName=\"p\">{`Info.plist`}</em>{` file and the associated configuration.`}</p>\n    <Variant platform=\"cordova\" task=\"configure\" repeat=\"2\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"cordova\"\n    }}>{`Cordova`}</h4>\n    <p>{`When using Cordova, the `}<inlineCode parentName=\"p\">{`configureWithAppId`}</inlineCode>{` method call must be done in native code which is shown under the Android and iOS tabs.`}</p>\n    <Variant platform=\"unity\" task=\"configure\" repeat=\"5\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"c\"\n    }}>{`C#`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`void ConfigureWithAppID([NullAllowed] string appid);\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`ACPCore.ConfigureWithAppID(\"1423ae38-8385-8963-8693-28375403491d\");\n`}</code></pre>\n    <Variant platform=\"xamarin\" task=\"configure\" repeat=\"5\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"c-1\"\n    }}>{`C#`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`public static void ConfigureWithAppID(string appId);\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`ACPCore.ConfigureWithAppID(\"1423ae38-8385-8963-8693-28375403491d\");\n`}</code></pre>\n    <Variant platform=\"android\" task=\"update\" repeat=\"5\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-1\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public static void updateConfiguration(final Map<String, Object> configMap);\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`HashMap<String, Object> data = new HashMap<String, Object>();\ndata.put(\"global.privacy\", \"optedout\");\nMobileCore.updateConfiguration(data);\n`}</code></pre>\n    <Variant platform=\"ios-aep\" task=\"update\" repeat=\"10\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift-2\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`@objc(updateConfiguration:)\nstatic func updateConfigurationWith(configDict: [String: Any])\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`let updatedConfig = [\"global.privacy\":\"optedout\"]\nMobileCore.updateConfigurationWith(configDict: updatedConfig)\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-2\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`+ (void) updateConfiguration: (NSDictionary* __nullable) config;\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`NSDictionary *updatedConfig = @{@\"global.privacy\":@\"optedout\"};\n[AEPMobileCore updateConfiguration:updatedConfig];\n`}</code></pre>\n    <Variant platform=\"ios-acp\" task=\"update\" repeat=\"10\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift-3\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`static func updateConfiguration(_: [String: Any])\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`let updatedConfig = [\"global.privacy\":\"optedout\"]\nACPCore.updateConfiguration(updatedConfig)\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-3\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`+ (void) updateConfiguration: (NSDictionary* __nullable) config;\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`NSDictionary *updatedConfig = @{@\"global.privacy\":@\"optedout\"};\n[ACPCore updateConfiguration:updatedConfig];\n`}</code></pre>\n    <Variant platform=\"react-native\" task=\"update\" repeat=\"5\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"javascript\"\n    }}>{`JavaScript`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`updateConfiguration(configMap?: { string: any })\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`ACPCore.updateConfiguration({\"global.privacy\":\"optedout\"});\n`}</code></pre>\n    <Variant platform=\"flutter\" task=\"update\" repeat=\"5\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"dart\"\n    }}>{`Dart`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-dart\"\n      }}>{`static Future<void> updateConfiguration(Map<String, Object> configMap);\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-dart\"\n      }}>{`FlutterACPCore.updateConfiguration({\"global.privacy\":\"optedout\"});\n`}</code></pre>\n    <Variant platform=\"cordova\" task=\"update\" repeat=\"3\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"cordova-1\"\n    }}>{`Cordova`}</h4>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`ACPCore.updateConfiguration({\"global.privacy\":\"optedout\"}, function(handleCallback) {\n  console.log(\"AdobeExperenceSDK: Update configuration successful: \" + handleCallback);\n}, function(handleError) {\n  console.log(\"AdobeExperenceSDK: Failed to update configuration : \" + handleError);\n});\n`}</code></pre>\n    <Variant platform=\"unity\" task=\"update\" repeat=\"5\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"c-2\"\n    }}>{`C#`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`public static void UpdateConfiguration(Dictionary<string, object> config);\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`var dict = new Dictionary<string, object>();\ndict.Add(\"global.privacy\", \"optedout\");\nACPCore.UpdateConfiguration(dict);\n`}</code></pre>\n    <Variant platform=\"xamarin\" task=\"update\" repeat=\"7\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"c-3\"\n    }}>{`C#`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`void UpdateConfiguration([NullAllowed] NSDictionary config);\n`}</code></pre>\n    <p><strong parentName=\"p\">{`iOS example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{` var config = new NSMutableDictionary<NSString, NSObject>\n {\n   [\"global.privacy\"] = new NSString(\"optedout\")\n };\nACPCore.UpdateConfiguration(config);\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Android example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`var config = new Dictionary<string, Java.Lang.Object>();\nconfig.Add(\"global.privacy\", \"optedout\");\nACPCore.UpdateConfiguration(config);\n`}</code></pre>\n    <Variant platform=\"android\" task=\"bundle\" repeat=\"2\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-2\"\n    }}>{`Java`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`// Case 1: to use ADBMobileConfig.json in the assets folder\n// No code is needed\n\n// Case 2: to use a config json from a absolute path:\nMobileCore.configureWithFileInPath(\"absolute/path/to/exampleJSONfile.json\");\n\n// Case 3: to use a config json in Assets folder\nMobileCore.configureWithFileInAssets(\"exampleJSONfile.json\");\n`}</code></pre>\n    <Variant platform=\"ios-aep\" task=\"bundle\" repeat=\"10\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift-4\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`static func configureWith(filePath: String)\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`let filePath = Bundle.main.path(forResource: \"ExampleJSONFile\", ofType: \"json\")\nif let filePath = filePath {\n    MobileCore.configureWith(filePath: filePath)\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-4\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`+ (void) configureWithFilePath: (NSString* __nullable) filepath;\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`NSString *filePath = [[NSBundle mainBundle] pathForResource:@\"ExampleJSONFile\" ofType:@\"json\"];\n[AEPMobileCore configureWithFilePath: filePath];\n`}</code></pre>\n    <Variant platform=\"ios-acp\" task=\"bundle\" repeat=\"10\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift-5\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`static func configureWithFile(inPath: String)\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`let filePath = Bundle.main.path(forResource: \"ExampleJSONFile\", ofType: \"json\")\nACPCore.configureWithFile(inPath: filePath)\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-5\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`+ (void) configureWithFileInPath: (NSString* __nullable) filepath;\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`NSString *filePath = [[NSBundle mainBundle] pathForResource:@\"ExampleJSONFile\"ofType:@\"json\"];\n[ACPCore configureWithFileInPath:filePath];\n`}</code></pre>\n    <Variant platform=\"xamarin\" task=\"bundle\" repeat=\"5\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"c-4\"\n    }}>{`C#`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`void ConfigureWithFileInPath([NullAllowed] string filepath);\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`ACPCore.ConfigureWithFileInPath(\"absolute/path/to/exampleJSONfile.json\");\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","makeShortcode","name","props","console","warn","InlineAlert","TabsBlock","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","variant","slots","parentName","orientation","repeat","query","isMDXComponent","Variant","platform","task"],"sourceRoot":""}