"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[4285],{13522:function(e,n,t){t.r(n),t.d(n,{_frontmatter:function(){return l},default:function(){return x}});var a,d=t(87462),i=t(63366),r=(t(15007),t(64983)),o=t(91515),m=["components"],l={},p=(a="InlineAlert",function(e){return console.warn("Component "+a+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.mdx)("div",e)}),c={_frontmatter:l},s=o.Z;function x(e){var n=e.components,t=(0,i.Z)(e,m);return(0,r.mdx)(s,(0,d.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.mdx)("h1",{id:"contentcardschemadata"},"ContentCardSchemaData"),(0,r.mdx)("p",null,"Represents the proposition response object containing a ",(0,r.mdx)("inlineCode",{parentName:"p"},"content-card")," schema."),(0,r.mdx)("h2",{id:"ios-interface"},"iOS Interface"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-swift"},"@objc(AEPContentCardSchemaData)\n@objcMembers\npublic class ContentCardSchemaData: NSObject, Codable {\n    /// Represents the content of the ContentCardSchemaData object.  Its value's type is determined by `contentType`.\n    public let content: Any\n    \n    /// Determines the value type of `content`.\n    public let contentType: ContentType\n    \n    /// Date and time this content card was published represented as epoch seconds\n    public let publishedDate: Int?\n    \n    /// Date and time this content card will expire represented as epoch seconds\n    public let expiryDate: Int?\n    \n    /// Dictionary containing any additional meta data for this content card\n    public let meta: [String: Any]?\n\n    ...\n}\n")),(0,r.mdx)("h3",{id:"public-functions"},"Public functions"),(0,r.mdx)("hr",null),(0,r.mdx)("h3",{id:"getcontentcard---deprecated"},"getContentCard - DEPRECATED"),(0,r.mdx)(p,{variant:"warning",slots:"header, text",mdxType:"InlineAlert"}),(0,r.mdx)("p",null,"Notice of deprecation"),(0,r.mdx)("p",null,(0,r.mdx)("inlineCode",{parentName:"p"},"ContentCard")," class is deprecated as of ",(0,r.mdx)("inlineCode",{parentName:"p"},"v5.2.0")," (iOS) and will be removed in the next major release of the Messaging extension."),(0,r.mdx)("p",null,"Tries to convert the ",(0,r.mdx)("inlineCode",{parentName:"p"},"content")," of this ",(0,r.mdx)("inlineCode",{parentName:"p"},"ContentCardSchemaData")," into a ",(0,r.mdx)("a",{parentName:"p",href:"./content-card.md"},(0,r.mdx)("inlineCode",{parentName:"a"},"ContentCard"))," object."),(0,r.mdx)("p",null,"Returns ",(0,r.mdx)("inlineCode",{parentName:"p"},"nil")," if the ",(0,r.mdx)("inlineCode",{parentName:"p"},"contentType")," is not equal to ",(0,r.mdx)("inlineCode",{parentName:"p"},".applicationJson")," or the data in ",(0,r.mdx)("inlineCode",{parentName:"p"},"content")," is not decodable into a ",(0,r.mdx)("inlineCode",{parentName:"p"},"ContentCard"),"."),(0,r.mdx)("h4",{id:"syntax"},"Syntax"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-swift"},"func getContentCard() -> ContentCard?\n")),(0,r.mdx)("h4",{id:"example"},"Example"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-swift"},"var propositionItem: PropositionItem\nif let contentCardSchemaData = propositionItem.contentCardSchemaData,\n   let contentCard = contentCardSchemaData.getContentCard() {\n    // do something with the ContentCard object\n}\n")),(0,r.mdx)("h3",{id:"track_withedgeeventtype"},"track(_:withEdgeEventType:)"),(0,r.mdx)("p",null,"Tracks an interaction with the given ",(0,r.mdx)("inlineCode",{parentName:"p"},"ContentCardSchemaData"),"."),(0,r.mdx)("h4",{id:"syntax-1"},"Syntax"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-swift"},"public func track(_ interaction: String? = nil, withEdgeEventType eventType: MessagingEdgeEventType)\n")),(0,r.mdx)("h4",{id:"parameters"},"Parameters"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("em",{parentName:"li"},"interaction")," - a custom ",(0,r.mdx)("inlineCode",{parentName:"li"},"String")," value to be recorded in the interaction"),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("em",{parentName:"li"},"eventType")," - the ",(0,r.mdx)("a",{parentName:"li",href:"./messaging-edge-event-type.md"},(0,r.mdx)("inlineCode",{parentName:"a"},"MessagingEdgeEventType"))," to be used for the ensuing Edge Event")),(0,r.mdx)("h4",{id:"example-1"},"Example"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-swift"},'var contentCardSchemaData: ContentCardSchemaData\n\n// tracking a display\ncontentCardSchemaData.track(withEdgeEventType: .display)\n\n// tracking a user interaction\ncontentCardSchemaData.track("itemSelected", withEdgeEventType: .interact)\n')),(0,r.mdx)("h2",{id:"android-interface"},"Android Interface"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-java"},"public class ContentCardSchemaData implements SchemaData {\n    private Object content;\n    private ContentType contentType;\n    private int publishedDate;\n    private int expiryDate;\n    private Map<String, Object> meta;\n\n    @Override\n    public Object getContent() {\n        return content;\n    }\n\n    public ContentType getContentType() {\n        return contentType;\n    }\n\n    public int getPublishedDate() {\n        return publishedDate;\n    }\n\n    public int getExpiryDate() {\n        return expiryDate;\n    }\n\n    @Nullable public Map<String, Object> getMeta() {\n        return meta;\n    }\n\n    ...\n}\n")),(0,r.mdx)("h3",{id:"public-functions-1"},"Public functions"),(0,r.mdx)("hr",null),(0,r.mdx)("h3",{id:"getcontentcard---deprecated-1"},"getContentCard - DEPRECATED"),(0,r.mdx)(p,{variant:"warning",slots:"header, text",mdxType:"InlineAlert"}),(0,r.mdx)("p",null,"Notice of deprecation"),(0,r.mdx)("p",null,(0,r.mdx)("inlineCode",{parentName:"p"},"ContentCard")," class is deprecated as of ",(0,r.mdx)("inlineCode",{parentName:"p"},"v3.2.0")," (Android) and will be removed in the next major release of the Messaging extension."),(0,r.mdx)("p",null,"Tries to convert the ",(0,r.mdx)("inlineCode",{parentName:"p"},"content")," of this ",(0,r.mdx)("inlineCode",{parentName:"p"},"ContentCardSchemaData")," into a ",(0,r.mdx)("a",{parentName:"p",href:"./content-card.md"},(0,r.mdx)("inlineCode",{parentName:"a"},"ContentCard"))," object."),(0,r.mdx)("p",null,"Returns ",(0,r.mdx)("inlineCode",{parentName:"p"},"null")," if the ",(0,r.mdx)("inlineCode",{parentName:"p"},"contentType")," is not equal to ",(0,r.mdx)("inlineCode",{parentName:"p"},"ContentType.APPLICATION_JSON")," or the data in ",(0,r.mdx)("inlineCode",{parentName:"p"},"content")," is not decodable into a ",(0,r.mdx)("inlineCode",{parentName:"p"},"ContentCard"),"."),(0,r.mdx)("h4",{id:"syntax-2"},"Syntax"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-java"},"@Nullable public ContentCard getContentCard();\n")),(0,r.mdx)("h4",{id:"example-2"},"Example"),(0,r.mdx)("h4",{id:"kotlin"},"Kotlin"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-kotlin"},"val propisitionItem: PropositionItem\nval contentCardData = item?.contentCardSchemaData\nval contentCard = contentCardData?.contentCard\ncontentCard?.let {\n  // do something with the ContentCard object\n}\n")),(0,r.mdx)("h4",{id:"java"},"Java"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-java"},"PropositionItem propositionItem;\nContentCardSchemaData contentCardSchemaData = propositionItem.getContentCardSchemaData();\nContentCard contentCard = contentCardSchemaData.getContentCard();\nif (contentCard != null) {\n  // do something with the ContentCard object\n}\n")),(0,r.mdx)("h3",{id:"track"},"track"),(0,r.mdx)("p",null,"Tracks an interaction with the given ",(0,r.mdx)("inlineCode",{parentName:"p"},"ContentCardSchemaData"),"."),(0,r.mdx)("h4",{id:"syntax-3"},"Syntax"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-java"},"public void track(final String interaction, final MessagingEdgeEventType eventType);\n")),(0,r.mdx)("h4",{id:"parameters-1"},"Parameters"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("em",{parentName:"li"},"interaction")," - a custom ",(0,r.mdx)("inlineCode",{parentName:"li"},"String")," value to be recorded in the interaction"),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("em",{parentName:"li"},"eventType")," - the ",(0,r.mdx)("a",{parentName:"li",href:"./messaging-edge-event-type.md"},(0,r.mdx)("inlineCode",{parentName:"a"},"MessagingEdgeEventType"))," to be used for the ensuing Edge Event")),(0,r.mdx)("h4",{id:"example-3"},"Example"),(0,r.mdx)("h4",{id:"kotlin-1"},"Kotlin"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-kotlin"},'val contentCardSchemaData = item?.contentCardSchemaData\n\n// tracking a display\ncontentCardSchemaData?.track(null, MessagingEdgeEventType.DISPLAY)\n\n// tracking a user interaction\ncontentCardSchemaData?.track("itemSelected", MessagingEdgeEventType.INTERACT)\n')),(0,r.mdx)("h4",{id:"java-1"},"Java"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-java"},'ContentCardSchemaData contentCardSchemaData;\n\n// tracking a display\ncontentCardSchemaData.track(null, MessagingEdgeEventType.DISPLAY);\n\n// tracking a user interaction\ncontentCardSchemaData.track("itemSelected", MessagingEdgeEventType.INTERACT);\n')))}x.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-edge-adobe-journey-optimizer-public-classes-content-card-schema-data-md-5fe261abcdffb03ddd44.js.map