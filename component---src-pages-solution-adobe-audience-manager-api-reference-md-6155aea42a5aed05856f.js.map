{"version":3,"file":"component---src-pages-solution-adobe-audience-manager-api-reference-md-6155aea42a5aed05856f.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/pages/solution/adobe-audience-manager/api-reference.md","webpack://dev-site-documentation-template/./src/pages/solution/adobe-audience-manager/tabs/api-reference.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/aep-mobile-sdkdocs/aep-mobile-sdkdocs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nimport Alerts from '/src/pages/resources/alerts.md';\nimport Tabs from './tabs/api-reference.md';\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst TabsBlock = makeShortcode(\"TabsBlock\");\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"adobe-audience-manager-api-reference\"\n    }}>{`Adobe Audience Manager API reference`}</h1>\n    <h2 {...{\n      \"id\": \"extensionversion\"\n    }}>{`extensionVersion`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`extensionVersion()`}</inlineCode>{` API returns the version of the Audience extension that is registered with the Mobile Core extension.`}</p>\n    <p>{`To get the version of the Audience extension, use the following code sample:`}</p>\n    <TabsBlock orientation=\"horizontal\" slots=\"heading, content\" repeat=\"2\" mdxType=\"TabsBlock\" />\n    <p>{`Android`}</p>\n    <Tabs query=\"platform=android&api=extension-version\" mdxType=\"Tabs\" />\n    <p>{`iOS`}</p>\n    <Tabs query=\"platform=ios&api=extension-version\" mdxType=\"Tabs\" />\n    <h2 {...{\n      \"id\": \"getvisitorprofile\"\n    }}>{`getVisitorProfile`}</h2>\n    <p>{`This API returns the most recently obtained visitor profile. The visitor profile is saved in the SDK's local storage for access across multiple launches of your app. If no audience signal has been sent before, when this API is called, a null value is returned.`}</p>\n    <TabsBlock orientation=\"horizontal\" slots=\"heading, content\" repeat=\"2\" mdxType=\"TabsBlock\" />\n    <p>{`Android`}</p>\n    <Tabs query=\"platform=android&api=get-visitor-profile\" mdxType=\"Tabs\" />\n    <p>{`iOS`}</p>\n    <Tabs query=\"platform=ios&api=get-visitor-profile\" mdxType=\"Tabs\" />\n    <h2 {...{\n      \"id\": \"registerextension\"\n    }}>{`registerExtension`}</h2>\n    <Alerts query=\"platform=android-register-extension&componentClass=InlineNestedAlert\" mdxType=\"Alerts\" />\n    <p>{`Registers the Audience Manager extension with the Mobile Core SDK.`}</p>\n    <TabsBlock orientation=\"horizontal\" slots=\"heading, content\" repeat=\"1\" mdxType=\"TabsBlock\" />\n    <p>{`Android`}</p>\n    <Tabs query=\"platform=android&api=register-extension\" mdxType=\"Tabs\" />\n    <h2 {...{\n      \"id\": \"reset\"\n    }}>{`reset`}</h2>\n    <p>{`This API helps you reset the Audience Manager UUID and purges the current visitor profile.`}</p>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`For more information about the UUID, the DPID, the DPUUID and other Audience Manager identifiers, see `}<a parentName=\"p\" {...{\n        \"href\": \"https://experienceleague.adobe.com/docs/audience-manager/user-guide/reference/ids-in-aam.html\"\n      }}>{`Index of IDs in Audience Manager`}</a>{`.`}</p>\n    <TabsBlock orientation=\"horizontal\" slots=\"heading, content\" repeat=\"2\" mdxType=\"TabsBlock\" />\n    <p>{`Android`}</p>\n    <Tabs query=\"platform=android&api=reset\" mdxType=\"Tabs\" />\n    <p>{`iOS`}</p>\n    <Tabs query=\"platform=ios&api=reset\" mdxType=\"Tabs\" />\n    <h2 {...{\n      \"id\": \"signalwithdata\"\n    }}>{`signalWithData`}</h2>\n    <p>{`This method is used to send a signal with traits to Audience Manager and get the matching segments returned in a block callback. Audience Manager sends the UUID in response to an initial signal call. The UUID is persisted on local SDK storage and is sent by the SDK to Audience Manager in all subsequent signal requests.`}</p>\n    <p>{`If you are using the Experience Cloud ID (ECID) Service (formerly MCID), the ECID and other custom identifiers for the same visitor are sent with each signal request. The visitor profile that is returned by Audience Manager is saved in SDK local storage and is updated with subsequent signal calls.`}</p>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`For more information about the UUID and other Audience Manager identifiers, see the `}<a parentName=\"p\" {...{\n        \"href\": \"https://experienceleague.adobe.com/docs/audience-manager/user-guide/reference/ids-in-aam.html\"\n      }}>{`index of IDs in Audience Manager`}</a>{`.`}</p>\n    <TabsBlock orientation=\"horizontal\" slots=\"heading, content\" repeat=\"2\" mdxType=\"TabsBlock\" />\n    <p>{`Android`}</p>\n    <Tabs query=\"platform=android&api=signal-with-data\" mdxType=\"Tabs\" />\n    <p>{`iOS`}</p>\n    <Tabs query=\"platform=ios&api=signal-with-data\" mdxType=\"Tabs\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/aep-mobile-sdkdocs/aep-mobile-sdkdocs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst Variant = makeShortcode(\"Variant\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <Variant platform=\"android\" api=\"extension-version\" repeat=\"8\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public static String extensionVersion()\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`String audienceExtensionVersion = Audience.extensionVersion();\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"kotlin\"\n    }}>{`Kotlin`}</h4>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`val extensionVersion = Audience.extensionVersion();\n`}</code></pre>\n    <Variant platform=\"ios\" api=\"extension-version\" repeat=\"10\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`static var extensionVersion: String\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`let audienceExtensionVersion  = Audience.extensionVersion()\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`+ (nonnull NSString*) extensionVersion;\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`NSString *audienceExtensionVersion = [AEPMobileAudience extensionVersion];\n`}</code></pre>\n    <Variant platform=\"android\" api=\"get-visitor-profile\" repeat=\"10\" mdxType=\"Variant\" />\n    <p>{`This API returns the most recently obtained visitor profile. For easy access across multiple launches of your app, the visitor profile is saved in `}<inlineCode parentName=\"p\">{`SharedPreferences`}</inlineCode>{`. If no signal has been submitted, null is returned.`}</p>\n    <p>{`When an AdobeCallbackWithError is provided, an AdobeError can be returned in the eventuality of an unexpected error or if the default timeout (5000ms) is met before the callback is returned with the visitor profile.`}</p>\n    <h4 {...{\n      \"id\": \"java-1\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public static void getVisitorProfile(final AdobeCallback<Map<String, String>> adobeCallback)\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`AdobeCallback<Map<String, String>> visitorProfileCallback = new AdobeCallback<Map<String, String>>() {\n    @Override\n    public void call(final Map<String, String> visitorProfile) {\n        // your own customized code\n    }\n};\n\nAudience.getVisitorProfile(visitorProfileCallback);\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"kotlin-1\"\n    }}>{`Kotlin`}</h4>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`Audience.getVisitorProfile { visitorProfile ->\n    // provide code to process the visitorProfile\n}\n`}</code></pre>\n    <Variant platform=\"ios\" api=\"get-visitor-profile\" repeat=\"11\" mdxType=\"Variant\" />\n    <p>{`This API returns the most recently obtained visitor profile.`}</p>\n    <h4 {...{\n      \"id\": \"swift-1\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`static func getVisitorProfile(completion: @escaping ([String: String]?, Error?) -> Void)\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`Audience.getVisitorProfile { (visitorProfile, error) in\n   if error != nil {\n    // handle the error here\n   } else {\n    // handle the retrieved visitorProfile here\n   }\n  }\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-1\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`+  (void) getVisitorProfile:^(NSDictionary<NSString *,NSString *> * _Nullable, NSError * _Nullable)completion\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objc\"\n      }}>{`[AEPMobileAudience getVisitorProfile:^(NSDictionary<NSString *,NSString *> * _Nullable visitorProfile, NSError * _Nullable error) {\n   if (error) {\n    // handle the error here\n   } else {\n    // handle the returned visitorProfile dictionary here\n   }\n}];\n`}</code></pre>\n    <Variant platform=\"android\" api=\"register-extension\" repeat=\"8\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-2\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public  static void registerExtension()\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`Audience.registerExtension();\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"kotlin-2\"\n    }}>{`Kotlin`}</h4>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`Audience.registerExtension()\n`}</code></pre>\n    <Variant platform=\"android\" api=\"reset\" repeat=\"9\" mdxType=\"Variant\" />\n    <p>{`This API resets the Audience Manager UUID and purges the current visitor profile from `}<inlineCode parentName=\"p\">{`android.content.SharedPreferences`}</inlineCode>{`. The Audience reset also clears the current in-memory DPID and DPUUID variables.`}</p>\n    <h4 {...{\n      \"id\": \"java-3\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public static void reset()\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`Audience.reset();\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"kotlin-3\"\n    }}>{`Kotlin`}</h4>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`Audience.reset()\n`}</code></pre>\n    <Variant platform=\"ios\" api=\"reset\" repeat=\"11\" mdxType=\"Variant\" />\n    <p>{`This API resets the Audience Manager UUID and purges the current visitor profile from `}<inlineCode parentName=\"p\">{`UserDefaults`}</inlineCode>{`. The Audience reset also clears the current in-memory DPID and DPUUID variables.`}</p>\n    <h4 {...{\n      \"id\": \"swift-2\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`static func reset()\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`Audience.reset()\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-2\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`+ (void) reset\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`[AEPMobileAudience reset];\n`}</code></pre>\n    <Variant platform=\"android\" api=\"signal-with-data\" repeat=\"12\" mdxType=\"Variant\" />\n    <p>{`The `}<inlineCode parentName=\"p\">{`signalWithData`}</inlineCode>{` API sends Audience Manager a signal with traits and returns the matching segments for the visitor in a callback.`}</p>\n    <p>{`Audience Manager sends the AAM UUID in response in initial signal call. The AAM UUID is persisted in `}<inlineCode parentName=\"p\">{`SharedPreferences`}</inlineCode>{` and is sent by the SDK in all subsequent signal requests. If available, the ECID is also sent in each signal request with the DPID and the DPUUID. The visitor profile that Audience Manager returns is saved in `}<inlineCode parentName=\"p\">{`SharedPreferences`}</inlineCode>{` and is updated with every signal call.`}</p>\n    <p>{`When an `}<inlineCode parentName=\"p\">{`AdobeCallbackWithError`}</inlineCode>{` is provided, an `}<inlineCode parentName=\"p\">{`AdobeError`}</inlineCode>{` can be returned in the eventuality of an unexpected error or if the default timeout (5000ms) is met before the callback is returned with the visitor profile.`}</p>\n    <h4 {...{\n      \"id\": \"java-4\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public static void signalWithData(final Map<String, String> data, final AdobeCallback<Map<String, String>> callback)\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`data`}</inlineCode>{` is the traits data for the current visitor.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`callback`}</inlineCode>{` is the void method that is invoked with the visitor's profile as a parameter.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`AdobeCallback<Map<String, String>> visitorProfileCallback = new AdobeCallback<Map<String, String>>() {\n    @Override\n    public void call(final Map<String, String> visitorProfile) {\n        // handle the returned visitorProfile here\n    }\n};\n​\nMap<String, String> traits = new HashMap<String, String>();\ntraits.put(\"trait\", \"xyz\");\nAudience.signalWithData(traits, visitorProfileCallback);\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"kotlin-4\"\n    }}>{`Kotlin`}</h4>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`val traits: Map<String, String?> = mapOf(\n    \"trait1\" to \"value1\",\n    \"trait2\" to \"value2\"\n)\n\nAudience.signalWithData(traits) { visitorProfile ->\n    // handle the returned visitorProfile\n}\n`}</code></pre>\n    <Variant platform=\"ios\" api=\"signal-with-data\" repeat=\"13\" mdxType=\"Variant\" />\n    <p>{`The `}<inlineCode parentName=\"p\">{`signalWithData`}</inlineCode>{` API sends Audience Manager a signal with traits and returns the matching segments for the visitor in a closure.`}</p>\n    <p>{`Audience Manager sends the AAM UUID in response in initial signal call. The AAM UUID is persisted in `}<inlineCode parentName=\"p\">{`NSUserDefaults`}</inlineCode>{` and is sent by the SDK in all subsequent signal requests. If available, the Experience Cloud ID (MID) is also sent in each signal request with the DPID and the DPUUID. The visitor profile that Audience Manager returns is saved in `}<inlineCode parentName=\"p\">{`NSUserDefaults`}</inlineCode>{` and is updated with every signal call.`}</p>\n    <h4 {...{\n      \"id\": \"swift-3\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`static func signalWithData(data: [String: String], completion: @escaping ([String: String]?, Error?) -> Void)\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`data`}</inlineCode>{` is the traits data for the current visitor.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`callback`}</inlineCode>{` is the void method that is invoked with the visitor's profile as a parameter.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`Audience.signalWithData(data: [\"trait\": \"trait value\"]) { (traits, error) in\n  if error != nil {\n     // handle the error here\n     } else {\n     // handle the returned visitorProfile here\n     }\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-3\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`+ (void) signalWithData:(NSDictionary<NSString *,NSString *> * _Nonnull) completion:^(NSDictionary<NSString *,NSString *> * _Nullable, NSError * _Nullable)completion\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`NSDictionary *traits = @{@\"key1\":@\"value1\",@\"key2\":@\"value2\"};\n[AEPMobileAudience signalWithData:traits completion:^(NSDictionary<NSString *,NSString *> * _Nullable visitorProfile, NSError* _Nullable error) {\n  if (error) {\n     // handle the error here\n     } else {\n     // handle the returned visitorProfile dictionary here\n     }\n}];\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","makeShortcode","name","props","console","warn","TabsBlock","InlineAlert","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","orientation","slots","repeat","query","variant","isMDXComponent","Variant","platform","api"],"sourceRoot":""}