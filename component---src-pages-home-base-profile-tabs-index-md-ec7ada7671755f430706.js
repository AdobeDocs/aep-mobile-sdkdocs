"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[9943],{92422:function(e,n,i){i.r(n),i.d(n,{_frontmatter:function(){return m},default:function(){return u}});var o=i(87462),a=i(63366),r=(i(15007),i(64983)),t=i(91515),l=["components"],m={},d=function(e){return function(n){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.mdx)("div",n)}},p=d("Variant"),s=d("InlineNestedAlert"),c={_frontmatter:m},x=t.Z;function u(e){var n=e.components,i=(0,a.Z)(e,l);return(0,r.mdx)(x,(0,o.Z)({},c,i,{components:n,mdxType:"MDXLayout"}),(0,r.mdx)(p,{platform:"android",task:"add",repeat:"8",mdxType:"Variant"}),(0,r.mdx)("ol",null,(0,r.mdx)("li",{parentName:"ol"},"Add the ",(0,r.mdx)("inlineCode",{parentName:"li"},"UserProfile")," library to your project using the app's gradle file.")),(0,r.mdx)("h4",{id:"kotlin"},"Kotlin"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-kotlin"},'implementation(platform("com.adobe.marketing.mobile:sdk-bom:3.+"))\nimplementation("com.adobe.marketing.mobile:core")\nimplementation("com.adobe.marketing.mobile:userprofile")\n')),(0,r.mdx)("h4",{id:"groovy"},"Groovy"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-java"},"implementation platform('com.adobe.marketing.mobile:sdk-bom:3.+')\nimplementation 'com.adobe.marketing.mobile:core'\nimplementation 'com.adobe.marketing.mobile:userprofile'\n")),(0,r.mdx)(s,{variant:"warning",header:"false",iconPosition:"left",mdxType:"InlineNestedAlert"},(0,r.mdx)("p",null,"Using dynamic dependency versions is ",(0,r.mdx)("strong",{parentName:"p"},"not")," recommended for production apps. Please read the ",(0,r.mdx)("a",{parentName:"p",href:"../../resources/manage-gradle-dependencies.md"},"managing Gradle dependencies guide")," for more information.")),(0,r.mdx)("ol",{start:2},(0,r.mdx)("li",{parentName:"ol"},"Import the ",(0,r.mdx)("inlineCode",{parentName:"li"},"UserProfile")," library and any other SDK library in your application's main activity.")),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-java"},"import com.adobe.marketing.mobile.MobileCore;\nimport com.adobe.marketing.mobile.UserProfile;\n")),(0,r.mdx)(p,{platform:"ios",task:"add",repeat:"7",mdxType:"Variant"}),(0,r.mdx)("ol",null,(0,r.mdx)("li",{parentName:"ol"},"Add the Mobile Core and Profile extensions to your project using Cocoapods. Add following pods in your ",(0,r.mdx)("inlineCode",{parentName:"li"},"Podfile"),":")),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-ruby"},"use_frameworks!\ntarget 'YourTargetApp' do\n    pod 'AEPCore', '~> 5.0'\n    pod 'AEPUserProfile', '~> 5.0'\nend\n")),(0,r.mdx)("ol",{start:2},(0,r.mdx)("li",{parentName:"ol"},"Import the UserProfile library.")),(0,r.mdx)("h4",{id:"swift"},"Swift"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-swift"},"   import AEPCore\n   import AEPUserProfile\n")),(0,r.mdx)("h4",{id:"objective-c"},"Objective-C"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-objectivec"},"   @import AEPCore;\n   @import AEPUserProfile;\n")),(0,r.mdx)(p,{platform:"android",task:"register",repeat:"6",mdxType:"Variant"}),(0,r.mdx)("p",null,"After calling the ",(0,r.mdx)("inlineCode",{parentName:"p"},"setApplication()")," method in the ",(0,r.mdx)("inlineCode",{parentName:"p"},"onCreate()")," method, register the UserProfile extension."),(0,r.mdx)("ol",null,(0,r.mdx)("li",{parentName:"ol"},"The ",(0,r.mdx)("inlineCode",{parentName:"li"},"UserProfile")," extension must be registered with Mobile Core before calling an ",(0,r.mdx)("inlineCode",{parentName:"li"},"UserProfile")," API.")),(0,r.mdx)("h4",{id:"java"},"Java"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-java"},"   public class MobileApp extends Application {\n\n       @Override\n       public void onCreate() {\n            super.onCreate();\n            MobileCore.setApplication(this);\n            List<Class<? extends Extension>> extensions = Arrays.asList(UserProfile.EXTENSION, ...);\n            MobileCore.registerExtensions(extensions, o -> {\n                // Any other post registration processing\n            });\n       }\n   }\n")),(0,r.mdx)("h4",{id:"kotlin-1"},"Kotlin"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-java"},'class MyApp : Application() {\n\n    override fun onCreate() {\n        super.onCreate()\n        MobileCore.setApplication(this)\n        MobileCore.setLogLevel(LoggingMode.VERBOSE)\n        MobileCore.configureWithAppID("YOUR_APP_ID")\n\n        val extensions = listOf(UserProfile.EXTENSION, ...)\n        MobileCore.registerExtensions(extensions) {\n            Log.d(LOG_TAG, "AEP Mobile SDK is initialized")\n        }\n    }\n}\n')),(0,r.mdx)(p,{platform:"ios",task:"register",repeat:"4",mdxType:"Variant"}),(0,r.mdx)("h4",{id:"swift-1"},"Swift"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-swift"},"// AppDelegate.swift\nfunc application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {\n    MobileCore.registerExtensions([UserProfile.self], {\n  })\n  ...\n}\n")),(0,r.mdx)("h4",{id:"objective-c-1"},"Objective-C"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-objectivec"},"- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n    [AEPMobileCore registerExtensions:@AEPMobileUserProfile.class] completion:^{\n    ...\n  }];\n  ...\n  // Override point for customization after application launch.\n  return YES;\n}\n")))}u.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-home-base-profile-tabs-index-md-ec7ada7671755f430706.js.map