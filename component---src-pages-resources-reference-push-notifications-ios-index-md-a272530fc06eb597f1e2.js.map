{"version":3,"file":"component---src-pages-resources-reference-push-notifications-ios-index-md-a272530fc06eb597f1e2.js","mappings":"4OAOsBA,E,wEADTC,EAAe,CAAC,EAKvBC,GAJgBF,EAIY,cAJJ,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,4EAC5B,eAASG,EAClB,GAEMG,EAAc,CAClBL,aAAAA,GAEIM,EAAYC,EAAAA,EACH,SAASC,EAAW,GAGhC,IAFDC,EAAU,EAAVA,WACGP,GAAK,YAER,OAAO,SAACI,GAAS,UAAKD,EAAiBH,EAAK,CAAEO,WAAYA,EAAYC,QAAQ,eAG5E,eACE,GAAM,8BAA4B,+BAEpC,mHACA,eACE,GAAM,iBAAe,kBAEvB,yCAA0B,cAAGC,WAAW,IACpC,KAAQ,yBAAuB,oCACU,gCAAgC,cAAGA,WAAW,IACvF,KAAQ,kDAAgD,8BACrB,MACvC,eACE,GAAM,2BAAyB,kBACZ,cAAGA,WAAW,KAC/B,KAAQ,2DAAyD,eAErE,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,0LAShC,8BAAe,uBAAYA,WAAW,KAAG,4CAA0D,sBAAsB,uBAAYA,WAAW,KAAG,WAAyB,qBAC5K,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,qBAGhC,eACE,GAAM,uCAAqC,kBACxB,cAAGA,WAAW,KAC/B,KAAQ,kDAAgD,2BAE5D,iHACA,mBAAG,uBAAYA,WAAW,KAAG,4BAC7B,SAACV,EAAW,CAACW,QAAQ,OAAOC,MAAM,OAAOH,QAAQ,iBACjD,8FACA,+DAAgD,uBAAYC,WAAW,KAAG,8CAA4D,MACtI,0BAAW,uBAAYA,WAAW,KAAG,mBAAiC,aAAa,uBAAYA,WAAW,KAAG,4BAA0C,MACvJ,2DAA4C,uBAAYA,WAAW,KAAG,iBAA+B,2FACrG,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBAAgB,qXAajC,eACE,GAAM,0BAAwB,2BAEhC,kCAAmB,uBAAYA,WAAW,KAAG,sCAAoD,yDACjG,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,oBAGhC,kEAAmD,uBAAYA,WAAW,KAAG,SAAuB,2BAA2B,uBAAYA,WAAW,KAAG,sCAAoD,0DAC7M,eACE,GAAM,iDAA+C,kDAEvD,+BAAgB,uBAAYA,WAAW,KAAG,0BAAwC,4DAA4D,cAAGA,WAAW,IACxJ,KAAQ,4BAA0B,iDACoB,eAG9D,CAEAH,EAAWM,gBAAiB,C","sources":["webpack://dev-site-documentation-template/./src/pages/resources/reference/push-notifications/ios/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/aep-mobile-sdkdocs/aep-mobile-sdkdocs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"push-templates-setup---ios\"\n    }}>{`Push templates setup - iOS`}</h1>\n    <p>{`Learn how to install the AEPNotificationContent package by following the instructions below.`}</p>\n    <h2 {...{\n      \"id\": \"prerequisites\"\n    }}>{`Prerequisites`}</h2>\n    <p>{`Make sure you have `}<a parentName=\"p\" {...{\n        \"href\": \"./create-extension.md\"\n      }}>{`created a notification extension`}</a>{` and configured your app to `}<a parentName=\"p\" {...{\n        \"href\": \"./../../../../solution/adobe-campaign-classic/\"\n      }}>{`use Adobe Campaign Classic`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"install-using-cocoapods\"\n    }}>{`Install using `}<a parentName=\"h2\" {...{\n        \"href\": \"https://guides.cocoapods.org/using/using-cocoapods.html\"\n      }}>{`CocoaPods`}</a></h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`# Podfile\nuse_frameworks!\n\n# for app development, include all the following pods\ntarget 'YOUR_NOTIFICATION_CONTENT_EXTENSION_NAME' do\n      pod 'AEPNotificationContent'\nend\n`}</code></pre>\n    <p>{`Replace `}<inlineCode parentName=\"p\">{`YOUR_NOTIFICATION_CONTENT_EXTENSION_NAME`}</inlineCode>{` and then, in the `}<inlineCode parentName=\"p\">{`Podfile`}</inlineCode>{` directory, run:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`$ pod install\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"install-using-swift-package-manager\"\n    }}>{`Install using `}<a parentName=\"h3\" {...{\n        \"href\": \"https://github.com/apple/swift-package-manager\"\n      }}>{`Swift Package Manager`}</a></h3>\n    <p>{`To add the AEPNotificationContent Package to your application, from the Xcode menu select:`}</p>\n    <p><inlineCode parentName=\"p\">{`File > Add Packages...`}</inlineCode></p>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`The menu options may vary depending on the version of Xcode being used.`}</p>\n    <p>{`Enter the URL for the AEP UI repository: `}<inlineCode parentName=\"p\">{`https://github.com/adobe/aepsdk-ui-ios.git`}</inlineCode>{`.`}</p>\n    <p>{`For `}<inlineCode parentName=\"p\">{`Dependency Rule`}</inlineCode>{`, select `}<inlineCode parentName=\"p\">{`Up to Next Major Version`}</inlineCode>{`.`}</p>\n    <p>{`Alternatively, if your project has a `}<inlineCode parentName=\"p\">{`Package.swift`}</inlineCode>{` file, you can add the AEPNotificationContent extension directly to your dependencies:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`dependencies: [\n    .package(name: \"AEPNotificationContent\", url: \"https://github.com/adobe/aepsdk-ui-ios.git\", .upToNextMajor(from: \"5.0.0\"))\n],\ntargets: [\n    .target(\n        name: \"YourNotificationContentExtensionTarget\",\n        dependencies: [\n            .product(name: \"AEPNotificationContent\", package: \"AEPNotificationContent\")\n        ]\n    )\n]\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"install-using-binaries\"\n    }}>{`Install using binaries`}</h3>\n    <p>{`To generate `}<inlineCode parentName=\"p\">{`AEPNotificationContent.xcframework`}</inlineCode>{`, run the following command from the root directory:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`make archive\n`}</code></pre>\n    <p>{`This will generate an XCFramework under the `}<inlineCode parentName=\"p\">{`build`}</inlineCode>{` folder. Drag and drop `}<inlineCode parentName=\"p\">{`AEPNotificationContent.xcframework`}</inlineCode>{` to your app's Notification Content extension target.`}</p>\n    <h3 {...{\n      \"id\": \"configure-your-notification-content-extension\"\n    }}>{`Configure your Notification Content extension`}</h3>\n    <p>{`With the `}<inlineCode parentName=\"p\">{`AEPNotificationContent`}</inlineCode>{` package now available in your application, you need to `}<a parentName=\"p\" {...{\n        \"href\": \"./configure-extension.md\"\n      }}>{`configure your notification content extension`}</a>{` to use it.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","InlineAlert","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","variant","slots","isMDXComponent"],"sourceRoot":""}