{"version":3,"file":"component---src-pages-documentation-mobile-core-configuration-api-reference-md-e60db8afec658bc62913.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/pages/documentation/mobile-core/configuration/api-reference.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/aep-mobile-sdkdocs/aep-mobile-sdkdocs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nimport Tabs from './tabs/api-reference.md';\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst TabsBlock = makeShortcode(\"TabsBlock\");\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"configuration-api-reference\"\n    }}>{`Configuration API reference`}</h1>\n    <h2 {...{\n      \"id\": \"clearupdatedconfiguration\"\n    }}>{`clearUpdatedConfiguration`}</h2>\n    <p>{`You can clear any programmatic updates made to the configuration via the `}<inlineCode parentName=\"p\">{`clearUpdatedConfiguration`}</inlineCode>{` API. This will clear programmatic updates to configuration made via the `}<inlineCode parentName=\"p\">{`updateConfiguration(configMap)`}</inlineCode>{`(Android)/ `}<inlineCode parentName=\"p\">{`updateConfigurationWith(configDict:)`}</inlineCode>{`(iOS) API. It will also clear any updates to the `}<inlineCode parentName=\"p\">{`MobilePrivacyStatus`}</inlineCode>{`(Android)/ `}<inlineCode parentName=\"p\">{`PrivacyStatus`}</inlineCode>{`(iOS)  made via `}<inlineCode parentName=\"p\">{`setPrivacyStatus(privacyStatus)`}</inlineCode>{`(Android)/ `}<inlineCode parentName=\"p\">{`setPrivacyStatus(_ status:)`}</inlineCode>{`(iOS).`}</p>\n    <p>{` Here are some examples of scenarios:`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`configureWithAppId(appId)`}</inlineCode>{`(Android)/`}<inlineCode parentName=\"p\">{`configureWith(appId:)`}</inlineCode>{`(iOS) -> `}<inlineCode parentName=\"p\">{`updateConfiguration(configMap)`}</inlineCode>{`(Android)/ `}<inlineCode parentName=\"p\">{`updateConfigurationWith(configDict:)`}</inlineCode>{`(iOS) -> `}<inlineCode parentName=\"p\">{`clearUpdatedConfiguration()`}</inlineCode>{`: In this example, you end up with the initial configuration set via `}<inlineCode parentName=\"p\">{`configureWithAppId(appId)`}</inlineCode>{`(Android)/ `}<inlineCode parentName=\"p\">{`configureWith(appId:)`}</inlineCode>{`(iOS)`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`configureWithFileInPath(filePath)`}</inlineCode>{`(Android)/ `}<inlineCode parentName=\"p\">{`configureWith(filePath:)`}</inlineCode>{`(iOS) -> `}<inlineCode parentName=\"p\">{`updateConfiguration(configMap)`}</inlineCode>{`(Android)/ `}<inlineCode parentName=\"p\">{`updateConfigurationWith(configDict)`}</inlineCode>{`(iOS) -> `}<inlineCode parentName=\"p\">{`clearUpdatedConfiguration()`}</inlineCode>{`: In this example, you end up with the initial configuration set via `}<inlineCode parentName=\"p\">{`configureWithFileInPath(filePath)`}</inlineCode>{`(Android)/ `}<inlineCode parentName=\"p\">{`configureWith(filePath:)`}</inlineCode>{`(iOS)`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`configureWithFileInAssets(fileName)`}</inlineCode>{`(Android) -> `}<inlineCode parentName=\"p\">{`updateConfiguration(configMap)`}</inlineCode>{`(Android) -> `}<inlineCode parentName=\"p\">{`clearUpdatedConfiguration()`}</inlineCode>{`: In this example, you end up with the initial configuration set via `}<inlineCode parentName=\"p\">{`configureWithFileInAssets(fileName)`}</inlineCode>{`(Android)`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`configureWithAppId(appId)`}</inlineCode>{`(Android)/`}<inlineCode parentName=\"p\">{`configureWith(appId:)`}</inlineCode>{`(iOS) or `}<inlineCode parentName=\"p\">{`configureWithFileInPath(filePath)`}</inlineCode>{`(Android)/ `}<inlineCode parentName=\"p\">{`configureWith(filePath:)`}</inlineCode>{`(iOS) or `}<inlineCode parentName=\"p\">{`configureWithFileInAssets(fileName)`}</inlineCode>{`(Android) -> `}<inlineCode parentName=\"p\">{`updateConfiguration(configMap)`}</inlineCode>{`(Android)/ `}<inlineCode parentName=\"p\">{`updateConfigurationWith(configDict)`}</inlineCode>{`(iOS) -> `}<inlineCode parentName=\"p\">{`clearUpdatedConfiguration()`}</inlineCode>{` -> `}<inlineCode parentName=\"p\">{`updateConfiguration(configMap)`}</inlineCode>{`(Android)/ `}<inlineCode parentName=\"p\">{`updateConfigurationWith(configDict)`}</inlineCode>{`(iOS): In this example, the configuration will be the most recently updated configuration and will not have any keys from the first update unless they are included in the most recent update.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`configureWithAppId(appId)`}</inlineCode>{`(Android)/`}<inlineCode parentName=\"p\">{`configureWith(appId:)`}</inlineCode>{`(iOS) or `}<inlineCode parentName=\"p\">{`configureWithFileInPath(filePath)`}</inlineCode>{`(Android)/ `}<inlineCode parentName=\"p\">{`configureWith(filePath:)`}</inlineCode>{`(iOS) or `}<inlineCode parentName=\"p\">{`configureWithFileInAssets(fileName)`}</inlineCode>{`(Android) -> `}<inlineCode parentName=\"p\">{`setPrivacyStatus(privacyStatus)`}</inlineCode>{`(Android)/ `}<inlineCode parentName=\"p\">{`setPrivacyStatus(_ status:)`}</inlineCode>{`(iOS) -> `}<inlineCode parentName=\"p\">{`clearUpdatedConfiguration()`}</inlineCode>{`: In this example, the configuration will have the initial `}<inlineCode parentName=\"p\">{`MobilePrivacyStatus`}</inlineCode>{`(Android)/ `}<inlineCode parentName=\"p\">{`PrivacyStatus`}</inlineCode>{`(iOS) set via `}<inlineCode parentName=\"p\">{`configureWithAppId(appId)`}</inlineCode>{`(Android)/`}<inlineCode parentName=\"p\">{`configureWith(appId:)`}</inlineCode>{`(iOS) or `}<inlineCode parentName=\"p\">{`configureWithFileInPath(filePath)`}</inlineCode>{`(Android)/ `}<inlineCode parentName=\"p\">{`configureWith(filePath:)`}</inlineCode>{`(iOS) or `}<inlineCode parentName=\"p\">{`configureWithFileInAssets(fileName)`}</inlineCode>{`(Android).`}</p>\n      </li>\n    </ul>\n    <TabsBlock orientation=\"horizontal\" slots=\"heading, content\" repeat=\"2\" mdxType=\"TabsBlock\" />\n    <p>{`Android`}</p>\n    <Tabs query=\"platform=android&api=clear-updated-configuration\" mdxType=\"Tabs\" />\n    <p>{`iOS`}</p>\n    <Tabs query=\"platform=ios&api=clear-updated-configuration\" mdxType=\"Tabs\" />\n    <h2 {...{\n      \"id\": \"configurewithappid\"\n    }}>{`configureWithAppID`}</h2>\n    <p>{`This API causes the SDK to download the configuration for the provided app ID and apply the configuration to the current session.`}</p>\n    <TabsBlock orientation=\"horizontal\" slots=\"heading, content\" repeat=\"2\" mdxType=\"TabsBlock\" />\n    <p>{`Android`}</p>\n    <Tabs query=\"platform=android&api=configure-with-app-id\" mdxType=\"Tabs\" />\n    <p>{`iOS`}</p>\n    <Tabs query=\"platform=ios&api=configure-with-app-id\" mdxType=\"Tabs\" />\n    <h2 {...{\n      \"id\": \"configurewithfileinassets\"\n    }}>{`configureWithFileInAssets`}</h2>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`This API is only available in Android.`}</p>\n    <p>{`You can bundle a JSON configuration file in the app's Assets folder to replace or complement the configuration that was downloaded by using the `}<a parentName=\"p\" {...{\n        \"href\": \"../#configure-with-app-id-per-environment\"\n      }}>{`Configure with App ID per environment`}</a>{` approach.`}</p>\n    <TabsBlock orientation=\"horizontal\" slots=\"heading, content\" repeat=\"1\" mdxType=\"TabsBlock\" />\n    <p>{`Android`}</p>\n    <Tabs query=\"platform=android&api=configure-with-file-in-assets\" mdxType=\"Tabs\" />\n    <h2 {...{\n      \"id\": \"configurewithfileinpath\"\n    }}>{`configureWithFileInPath`}</h2>\n    <p>{`You can include a bundled JSON configuration file in your app package to replace or complement the configuration that was downloaded by using the `}<a parentName=\"p\" {...{\n        \"href\": \"../#configure-with-app-id-per-environment\"\n      }}>{`Configure with App ID per environment`}</a>{` approach.`}</p>\n    <p>{`To pass in a bundled path and file name:`}</p>\n    <TabsBlock orientation=\"horizontal\" slots=\"heading, content\" repeat=\"2\" mdxType=\"TabsBlock\" />\n    <p>{`Android`}</p>\n    <Tabs query=\"platform=android&api=configure-with-file-in-path\" mdxType=\"Tabs\" />\n    <p>{`iOS`}</p>\n    <Tabs query=\"platform=ios&api=configure-with-file-in-path\" mdxType=\"Tabs\" />\n    <h2 {...{\n      \"id\": \"extensionversion\"\n    }}>{`extensionVersion`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`extensionVersion()`}</inlineCode>{` API returns the version of the Configuration extension.`}</p>\n    <p>{`To get the version of the Configuration extension, use the following code sample:`}</p>\n    <TabsBlock orientation=\"horizontal\" slots=\"heading, content\" repeat=\"2\" mdxType=\"TabsBlock\" />\n    <p>{`Android`}</p>\n    <Tabs query=\"platform=android&api=extension-version\" mdxType=\"Tabs\" />\n    <p>{`iOS`}</p>\n    <Tabs query=\"platform=ios&api=extension-version\" mdxType=\"Tabs\" />\n    {/*- React Native\n     <Tabs query=\"platform=react-native&api=extension-version\"/>\n     Flutter\n     <Tabs query=\"platform=flutter&api=extension-version\"/> -*/}\n    <h2 {...{\n      \"id\": \"updateconfiguration\"\n    }}>{`updateConfiguration`}</h2>\n    <p>{`You can also update the configuration programmatically by passing configuration keys and values to override the existing configuration.`}</p>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`Keys that are not found on the current configuration are added when this method is followed. Null values are allowed and replace existing configuration values.`}</p>\n    <InlineAlert variant=\"warning\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`Do not use this API to update the `}<inlineCode parentName=\"p\">{`build.environment`}</inlineCode>{` key or any key with an environment prefix, because it can lead to unexpected behaviors. For more information, read `}<a parentName=\"p\" {...{\n        \"href\": \"./index.md#environment-aware-configuration-properties\"\n      }}>{`Environment-aware configuration properties`}</a>{`.`}</p>\n    <TabsBlock orientation=\"horizontal\" slots=\"heading, content\" repeat=\"2\" mdxType=\"TabsBlock\" />\n    <p>{`Android`}</p>\n    <Tabs query=\"platform=android&api=update-configuration\" mdxType=\"Tabs\" />\n    <p>{`iOS`}</p>\n    <Tabs query=\"platform=ios&api=update-configuration\" mdxType=\"Tabs\" />\n    {/*- React Native\n     <Tabs query=\"platform=react-native&api=update-configuration\"/>\n     Flutter\n     <Tabs query=\"platform=flutter&api=update-configuration\"/> -*/}\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","makeShortcode","name","props","console","warn","TabsBlock","InlineAlert","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","orientation","slots","repeat","query","variant","isMDXComponent"],"sourceRoot":""}