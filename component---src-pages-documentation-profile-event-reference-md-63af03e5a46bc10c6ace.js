"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[4919],{5654:function(e,t,a){a.r(t),a.d(t,{_frontmatter:function(){return l},default:function(){return s}});var n=a(87462),r=a(63366),d=(a(15007),a(64983)),i=a(91515),m=["components"],l={},o={_frontmatter:l},p=i.Z;function s(e){var t=e.components,a=(0,r.Z)(e,m);return(0,d.mdx)(p,(0,n.Z)({},o,a,{components:t,mdxType:"MDXLayout"}),(0,d.mdx)("h1",{id:"profiles-event-reference"},"Profiles event reference"),(0,d.mdx)("h2",{id:"events-handled"},"Events handled"),(0,d.mdx)("p",null,"The following events are handled by the Profile extension:"),(0,d.mdx)("h3",{id:"user_profile--request_profile"},"USER_PROFILE : REQUEST_PROFILE"),(0,d.mdx)("p",null,"The event is used to put a user profile attribute update action on the Event Hub and is consumed by the Profile extension. This event is generated when an ",(0,d.mdx)("inlineCode",{parentName:"p"},"updateUserAttribute")," call is made by the SDK client."),(0,d.mdx)("h4",{id:"event-details"},"Event details"),(0,d.mdx)("table",null,(0,d.mdx)("thead",{parentName:"table"},(0,d.mdx)("tr",{parentName:"thead"},(0,d.mdx)("th",{parentName:"tr",align:"left"},(0,d.mdx)("strong",{parentName:"th"},"Event Type")),(0,d.mdx)("th",{parentName:"tr",align:"left"},(0,d.mdx)("strong",{parentName:"th"},"Event Source")),(0,d.mdx)("th",{parentName:"tr",align:"left"},(0,d.mdx)("strong",{parentName:"th"},"Paired")),(0,d.mdx)("th",{parentName:"tr",align:"left"},(0,d.mdx)("strong",{parentName:"th"},"Paired Event")))),(0,d.mdx)("tbody",{parentName:"table"},(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:"left"},(0,d.mdx)("inlineCode",{parentName:"td"},"com.adobe.eventType.userProfile")),(0,d.mdx)("td",{parentName:"tr",align:"left"},(0,d.mdx)("inlineCode",{parentName:"td"},"com.adobe.eventSource.requestProfile")),(0,d.mdx)("td",{parentName:"tr",align:"left"},"No"),(0,d.mdx)("td",{parentName:"tr",align:"left"},"N/A")))),(0,d.mdx)("h4",{id:"data-payload-definition"},"Data payload definition"),(0,d.mdx)("p",null,"Here are the key-value pairs in this event:"),(0,d.mdx)("table",null,(0,d.mdx)("thead",{parentName:"table"},(0,d.mdx)("tr",{parentName:"thead"},(0,d.mdx)("th",{parentName:"tr",align:"left"},(0,d.mdx)("strong",{parentName:"th"},"Key")),(0,d.mdx)("th",{parentName:"tr",align:"left"},(0,d.mdx)("strong",{parentName:"th"},"Value Type")),(0,d.mdx)("th",{parentName:"tr",align:"left"},(0,d.mdx)("strong",{parentName:"th"},"Required")),(0,d.mdx)("th",{parentName:"tr",align:"left"},(0,d.mdx)("strong",{parentName:"th"},"Description")))),(0,d.mdx)("tbody",{parentName:"table"},(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:"left"},(0,d.mdx)("inlineCode",{parentName:"td"},"userprofileupdatekey")),(0,d.mdx)("td",{parentName:"tr",align:"left"},"Map","<","String, Object",">"),(0,d.mdx)("td",{parentName:"tr",align:"left"},"Yes"),(0,d.mdx)("td",{parentName:"tr",align:"left"},"A map of the attributes and the attribute values that the client wants to update or add to the User Profile that is managed by the Adobe Experience Platform SDK. An existing attribute name updates the attribute in the SDK, and a new attribute name adds a new attribute to the profile. When the value of an attribute is null, the attribute is deleted from the profile. Currently supported object types are String, Integer, Double, Boolean, Map and Vector. All the other types are ignored during processing.")))),(0,d.mdx)("h4",{id:"event-data-example"},"Event data example"),(0,d.mdx)("p",null,"Here is a code sample of the ",(0,d.mdx)("inlineCode",{parentName:"p"},"USER_PROFILE : REQUEST_PROFILE")," event:"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-text"},'{\n    EventName : "UserProfileUpdate"\n    EventType : "com.adobe.eventType.userProfile",\n    EventSource : "com.adobe.eventSource.requestProfile",\n    EventData: {\n            "userProfileupdatekey":\n                     {\n                        "userName": "JohnDoe",\n                        "creditPoints": 255,\n                        "isPaidUser": true\n                     }\n                }\n}\n')),(0,d.mdx)("h3",{id:"userprofile--request_reset"},"USERPROFILE : REQUEST_RESET"),(0,d.mdx)("p",null,"This event clears the specified key from the Profile extension and is generated when the ",(0,d.mdx)("inlineCode",{parentName:"p"},"removeUserAttributes")," API is called."),(0,d.mdx)("h4",{id:"data-payload-definition-1"},"Data payload definition"),(0,d.mdx)("table",null,(0,d.mdx)("thead",{parentName:"table"},(0,d.mdx)("tr",{parentName:"thead"},(0,d.mdx)("th",{parentName:"tr",align:"left"},"Key/Key Type"),(0,d.mdx)("th",{parentName:"tr",align:"left"},"Value Type"),(0,d.mdx)("th",{parentName:"tr",align:"left"},"Optional"),(0,d.mdx)("th",{parentName:"tr",align:"left"},"Description"))),(0,d.mdx)("tbody",{parentName:"table"},(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:"left"},(0,d.mdx)("inlineCode",{parentName:"td"},"userprofileremovekey")),(0,d.mdx)("td",{parentName:"tr",align:"left"},"String"),(0,d.mdx)("td",{parentName:"tr",align:"left"},"No"),(0,d.mdx)("td",{parentName:"tr",align:"left"},"The attribute key which has to be deleted")))),(0,d.mdx)("h4",{id:"example"},"Example"),(0,d.mdx)("p",null,"Here is a code sample of the ",(0,d.mdx)("inlineCode",{parentName:"p"},"USERPROFILE : REQUEST_RESET")," event:"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-text"},'{\n    EventName : "RemoveUserProfile"\n    EventType : "com.adobe.eventType.userProfile",\n    EventSource : "com.adobe.eventSource.requestReset",\n    EventData: {\n                "userprofileremovekey": "userName"\n               }\n}\n')),(0,d.mdx)("h2",{id:"events-dispatched"},"Events dispatched"),(0,d.mdx)("p",null,"The following events are dispatched by the Profile extension:"),(0,d.mdx)("h3",{id:"user_profile--response_profile"},"USER_PROFILE : RESPONSE_PROFILE"),(0,d.mdx)("p",null,"The event is used to share the user profile with the other extension. This event will be generated by the Profile extension when the user profile is updated and persistently stored."),(0,d.mdx)("h4",{id:"data-payload-definition-2"},"Data payload definition"),(0,d.mdx)("table",null,(0,d.mdx)("thead",{parentName:"table"},(0,d.mdx)("tr",{parentName:"thead"},(0,d.mdx)("th",{parentName:"tr",align:"left"},(0,d.mdx)("strong",{parentName:"th"},"Key")),(0,d.mdx)("th",{parentName:"tr",align:"left"},(0,d.mdx)("strong",{parentName:"th"},"Value Type")),(0,d.mdx)("th",{parentName:"tr",align:"left"},(0,d.mdx)("strong",{parentName:"th"},"Required")),(0,d.mdx)("th",{parentName:"tr",align:"left"},(0,d.mdx)("strong",{parentName:"th"},"Description")))),(0,d.mdx)("tbody",{parentName:"table"},(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:"left"},(0,d.mdx)("inlineCode",{parentName:"td"},"userprofiledata")),(0,d.mdx)("td",{parentName:"tr",align:"left"},"Map","<","String, Object",">"),(0,d.mdx)("td",{parentName:"tr",align:"left"},"Yes"),(0,d.mdx)("td",{parentName:"tr",align:"left"},"A map of all the user profile attributes and the attribute values. This map contains the most updated copies of all of the user profile attributes. The consumers of this data might replace the existing user profile copy that they might have with this copy.")))),(0,d.mdx)("p",null,"Here is a code sample for the ",(0,d.mdx)("inlineCode",{parentName:"p"},"USER_PROFILE : RESPONSE_PROFILE")," event:"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-text"},'{\n    EventName : "UserProfile Response Event"\n    EventType : "com.adobe.eventType.userProfile",\n    EventSource : "com.adobe.eventSource.responseProfile",\n    EventData: {\n          "userprofiledata":\n               {\n                "userName": "John Doe"\n                 "creditPoints": 255,\n                 "isPaidUser": true\n               }\n          }\n}\n')),(0,d.mdx)("h2",{id:"shared-state"},"Shared state"),(0,d.mdx)("p",null,(0,d.mdx)("strong",{parentName:"p"},"EXTENSION_NAME"),": ",(0,d.mdx)("inlineCode",{parentName:"p"},"com.adobe.module.userProfile")),(0,d.mdx)("p",null,"The shared state for the Profile extension is created in the following situations:"),(0,d.mdx)("ul",null,(0,d.mdx)("li",{parentName:"ul"},"At initialization After the extension is initialized, the extension updates the shared state by reading the previously set value from persistence."),(0,d.mdx)("li",{parentName:"ul"},"Each time a UserProfile attribute is created or updated The shared state is updated when there is a change in the user attribute data from the API or by other triggers (Rules Engine).")),(0,d.mdx)("table",null,(0,d.mdx)("thead",{parentName:"table"},(0,d.mdx)("tr",{parentName:"thead"},(0,d.mdx)("th",{parentName:"tr",align:"left"},(0,d.mdx)("strong",{parentName:"th"},"Key")),(0,d.mdx)("th",{parentName:"tr",align:"left"},(0,d.mdx)("strong",{parentName:"th"},"Value Type")),(0,d.mdx)("th",{parentName:"tr",align:"left"},(0,d.mdx)("strong",{parentName:"th"},"Required")),(0,d.mdx)("th",{parentName:"tr",align:"left"},(0,d.mdx)("strong",{parentName:"th"},"Description")))),(0,d.mdx)("tbody",{parentName:"table"},(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:"left"},(0,d.mdx)("inlineCode",{parentName:"td"},"userprofiledata")),(0,d.mdx)("td",{parentName:"tr",align:"left"},"Map","<","String, Object",">"),(0,d.mdx)("td",{parentName:"tr",align:"left"},"Yes"),(0,d.mdx)("td",{parentName:"tr",align:"left"},"Map that contains all the key-value pairs of the user profile attributes.")))))}s.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-documentation-profile-event-reference-md-63af03e5a46bc10c6ace.js.map