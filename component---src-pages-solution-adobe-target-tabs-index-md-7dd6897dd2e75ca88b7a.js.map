{"version":3,"file":"component---src-pages-solution-adobe-target-tabs-index-md-7dd6897dd2e75ca88b7a.js","mappings":"4OAQsBA,E,mFADTC,EAAe,CAAC,EAKvBC,GAJgBF,EAIQ,UAJA,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,4EAC5B,eAASG,EAClB,GAEMG,EAAc,CAClBL,aAAAA,GAEIM,EAAYC,EAAAA,EACH,SAASC,EAAW,GAGhC,IAFDC,EAAU,EAAVA,WACGP,GAAK,YAER,OAAO,SAACI,GAAS,UAAKD,EAAiBH,EAAK,CAAEO,WAAYA,EAAYC,QAAQ,eAI5E,SAACT,EAAO,CAACU,SAAS,UAAUC,KAAK,MAAMC,OAAO,IAAIH,QAAQ,aAC1D,oBACE,eAAII,WAAW,MAAI,sGAErB,eACE,GAAM,UAAQ,WAEhB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,mBAAiB,yOAMlC,eACE,GAAM,UAAQ,WAEhB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,qOAMhC,SAAC,UAAM,CAACC,MAAM,2DAA2DL,QAAQ,YACjF,SAACT,EAAO,CAACU,SAAS,MAAMC,KAAK,MAAMC,OAAO,IAAIH,QAAQ,aACtD,oBACE,eAAII,WAAW,MAAI,mFAAoF,uBAAYA,WAAW,MAAI,WAAyB,OAE7J,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,qFAKhC,eACE,MAAS,IAET,eAAIA,WAAW,MAAI,+CAErB,mBAAG,mBAAQA,WAAW,KAAG,WACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBAAgB,wEAKjC,mBAAG,mBAAQA,WAAW,KAAG,iBACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBAAqB,2EAoBtC,SAACb,EAAO,CAACU,SAAS,UAAUC,KAAK,WAAWC,OAAO,IAAIH,QAAQ,aAC/D,eACE,GAAM,QAAM,SAEd,4CAA6B,uBAAYI,WAAW,KAAG,cAA4B,+BAA+B,uBAAYA,WAAW,KAAG,oBAAkC,+CAC9K,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,4rBAwBhC,eACE,GAAM,YAAU,WAElB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,spBAyBhC,SAACb,EAAO,CAACU,SAAS,MAAMC,KAAK,WAAWC,OAAO,IAAIH,QAAQ,aAC3D,eACE,GAAM,SAAO,UAEf,qBAAK,iBAAMI,WAAW,MAClB,UAAa,kBAAgB,wZAUjC,eACE,GAAM,eAAa,gBAErB,oCAAqB,uBAAYA,WAAW,KAAG,iCAA+C,+DAC9F,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBAAqB,saAiBtC,SAACb,EAAO,CAACU,SAAS,UAAUC,KAAK,eAAeC,OAAO,IAAIH,QAAQ,aACnE,eACE,GAAM,UAAQ,SAEhB,mBAAG,mBAAQI,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,uGAGhC,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,oNAMhC,SAACb,EAAO,CAACU,SAAS,MAAMC,KAAK,eAAeC,OAAO,KAAKH,QAAQ,aAChE,eACE,GAAM,WAAS,UAEjB,mBAAG,mBAAQI,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBAAgB,wFAGjC,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBAAgB,sFAGjC,eACE,GAAM,iBAAe,gBAEvB,mBAAG,mBAAQA,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBAAqB,kKAGtC,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBAAqB,qHAQtC,SAACb,EAAO,CAACU,SAAS,UAAUC,KAAK,iBAAiBC,OAAO,IAAIH,QAAQ,aACrE,eACE,GAAM,UAAQ,SAEhB,mBAAG,mBAAQI,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,sEAGhC,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,wEAGhC,SAACb,EAAO,CAACU,SAAS,MAAMC,KAAK,iBAAiBC,OAAO,KAAKH,QAAQ,aAClE,eACE,GAAM,WAAS,UAEjB,mBAAG,mBAAQI,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBAAgB,iEAGjC,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBAAgB,0EAGjC,eACE,GAAM,iBAAe,gBAEvB,mBAAG,mBAAQA,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBAAqB,4HAGtC,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBAAqB,2GAQtC,SAACb,EAAO,CAACU,SAAS,UAAUC,KAAK,oBAAoBC,OAAO,IAAIH,QAAQ,aACxE,eACE,GAAM,UAAQ,SAEhB,mBAAG,mBAAQI,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,qTAQhC,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,msBAqBhC,SAACb,EAAO,CAACU,SAAS,MAAMC,KAAK,oBAAoBC,OAAO,KAAKH,QAAQ,aACrE,eACE,GAAM,WAAS,UAEjB,mBAAG,mBAAQI,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBAAgB,8JAGjC,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBAAgB,+YAcjC,eACE,GAAM,iBAAe,gBAEvB,mBAAG,mBAAQA,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBAAqB,qRAGtC,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBAAqB,4fAoBtC,SAACb,EAAO,CAACU,SAAS,UAAUC,KAAK,iBAAiBC,OAAO,IAAIH,QAAQ,aACrE,iHAAkG,cAAGI,WAAW,IAC5G,KAAQ,kEAAgE,qBAC9C,uHAC9B,0FAA2E,cAAGA,WAAW,IACrF,KAAQ,+DAA6D,kBAC9C,sTAAsT,uBAAYA,WAAW,KAAG,kBAAgC,qCAC3Y,SAACb,EAAO,CAACU,SAAS,MAAMC,KAAK,iBAAiBC,OAAO,IAAIH,QAAQ,aACjE,gDAAiC,cAAGI,WAAW,IAC3C,KAAQ,kEAAgE,qBAC9C,0EAC9B,eACE,GAAM,WAAS,UAEjB,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBAAgB,6IAGjC,eACE,GAAM,iBAAe,gBAEvB,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBAAqB,iJAK1C,CAEAN,EAAWQ,gBAAiB,C","sources":["webpack://dev-site-documentation-template/./src/pages/solution/adobe-target/tabs/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/aep-mobile-sdkdocs/aep-mobile-sdkdocs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nimport Alerts from '/src/pages/resources/alerts.md';\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst Variant = makeShortcode(\"Variant\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <Variant platform=\"android\" task=\"add\" repeat=\"6\" mdxType=\"Variant\" />\n    <ol>\n      <li parentName=\"ol\">{`Add the Mobile Core, Identity and Target extensions to your project using the app's Gradle file.`}</li>\n    </ol>\n    <h4 {...{\n      \"id\": \"kotlin\"\n    }}>{`Kotlin`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`implementation(platform(\"com.adobe.marketing.mobile:sdk-bom:3.+\"))\nimplementation(\"com.adobe.marketing.mobile:core\")\nimplementation(\"com.adobe.marketing.mobile:identity\")\nimplementation(\"com.adobe.marketing.mobile:target\")\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"groovy\"\n    }}>{`Groovy`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`implementation platform('com.adobe.marketing.mobile:sdk-bom:3.+')\nimplementation 'com.adobe.marketing.mobile:core'\nimplementation 'com.adobe.marketing.mobile:identity'\nimplementation 'com.adobe.marketing.mobile:target'\n`}</code></pre>\n    <Alerts query=\"platform=android-gradle&componentClass=InlineNestedAlert\" mdxType=\"Alerts\" />\n    <Variant platform=\"ios\" task=\"add\" repeat=\"7\" mdxType=\"Variant\" />\n    <ol>\n      <li parentName=\"ol\">{`Add the AEPCore, AEPIdentity, and AEPTarget CocoaPods to your project via your `}<inlineCode parentName=\"li\">{`Podfile`}</inlineCode>{`.`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`pod 'AEPCore','~>5.0'    \npod 'AEPIdentity','~>5.0'\npod 'AEPTarget','~>5.0'\n`}</code></pre>\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`Import the Target and Identity libraries.`}</li>\n    </ol>\n    <p><strong parentName=\"p\">{`Swift`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`    import AEPCore\n    import AEPTarget\n    import AEPIdentity\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Objective-C`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`    @import AEPCore\n    @import AEPTarget\n    @import AEPIdentity\n`}</code></pre>\n    {/*- <Variant platform=\"react-native\" task=\"add\" repeat=\"7\"/>\n     #### JavaScript\n     1. Install Target.\n     ```javascript\n     npm install @adobe/react-native-acptarget\n     react-native link @adobe/react-native-acptarget\n     ```\n     2. Import the extension and related libraries.\n     ```javascript\n     import {ACPTarget, ACPTargetPrefetchObject, ACPTargetRequestObject, ACPTargetOrder, ACPTargetProduct, ACPTargetParameters} from '@adobe/react-native-acptarget';\n     ```\n     3. Get the extension version.\n     ```javascript\n     ACPTarget.extensionVersion().then(version => console.log(\"AdobeExperienceSDK: ACPTarget version: \" + version));\n     ``` -*/}\n    <Variant platform=\"android\" task=\"register\" repeat=\"5\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java\"\n    }}>{`Java`}</h4>\n    <p>{`In your Application's `}<inlineCode parentName=\"p\">{`onCreate()`}</inlineCode>{` method, after calling the `}<inlineCode parentName=\"p\">{`setApplication()`}</inlineCode>{` method, register Target with Mobile Core.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import com.adobe.marketing.mobile.MobileCore;\nimport com.adobe.marketing.mobile.Target;\nimport com.adobe.marketing.mobile.Identity;\nimport com.adobe.marketing.mobile.AdobeCallback;\n\npublic class MainApp extends Application {\n\n  private final String ENVIRONMENT_FILE_ID = \"YOUR_APP_ENVIRONMENT_ID\";\n\n    @Override\n    public void onCreate() {\n        super.onCreate();\n\n        MobileCore.setApplication(this);\n        MobileCore.configureWithAppID(ENVIRONMENT_FILE_ID);\n\n        MobileCore.registerExtensions(\n            Arrays.asList(Target.EXTENSION, Identity.EXTENSION),\n            o -> Log.d(\"MainApp\", \"Adobe Target Mobile SDK was initialized.\")\n        );\n    }\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"kotlin-1\"\n    }}>{`Kotlin`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import com.adobe.marketing.mobile.MobileCore\nimport com.adobe.marketing.mobile.Target\nimport com.adobe.marketing.mobile.Identity\nimport com.adobe.marketing.mobile.AdobeCallback\n\nclass MainApp : Application() {\n\n  private var ENVIRONMENT_FILE_ID: String = \"YOUR_APP_ENVIRONMENT_ID\"\n\n    override fun onCreate() {\n        super.onCreate()\n\n        MobileCore.setApplication(this)\n        MobileCore.configureWithAppID(ENVIRONMENT_FILE_ID)\n\n        MobileCore.registerExtensions(\n          listOf(Target.EXTENSION, Identity.EXTENSION)\n        ) {\n          Log.d(\"MainApp\", \"Adobe Target Mobile SDK was initialized\")\n        }\n    }\n\n}\n`}</code></pre>\n    <Variant platform=\"ios\" task=\"register\" repeat=\"5\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift\"\n    }}>{`Swift`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {    \n  MobileCore.registerExtensions([Target.self, Identity.self]) {\n       //Completion callback\n       // Use the App id assigned to this application via Adobe Data Collection UI\n       MobileCore.configureWith(appId: \"yourAppId\")\n  }\n  return true\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c\"\n    }}>{`Objective-C`}</h4>\n    <p>{`In your app's `}<inlineCode parentName=\"p\">{`didFinishLaunchingWithOptions`}</inlineCode>{` function, register the Target extension with Mobile Core:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n    [AEPMobileCore registerExtensions: @[AEPMobileTarget.class, AEPMobileIdentity.class] completion:^{\n        //Completion callback\n        // Use the app ID assigned to this application via Data Collection UI\n        [AEPMobileCore configureWithAppId: @\"yourAppId\"];\n    }];\n\n    return YES;\n}\n`}</code></pre>\n    {/*- <Variant platform=\"react-native\" task=\"register\" repeat=\"3\"/>\n     To register the Target extension with the Mobile Core extension, use the following API:\n     #### JavaScript\n     ```javascript\n     ACPTarget.registerExtension();\n     ``` -*/}\n    <Variant platform=\"android\" task=\"target-order\" repeat=\"5\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-1\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public TargetOrder(final String id, final double total, final List<String> purchasedProductIds)\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`List<String> purchasedProductIds = new ArrayList<String>();\npurchasedProductIds.add(\"34\");\npurchasedProductIds.add(\"125\");\nTargetOrder targetOrder = new TargetOrder(\"123\", 567.89, purchasedProductIds);\n`}</code></pre>\n    <Variant platform=\"ios\" task=\"target-order\" repeat=\"10\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift-1\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`public init(id: String, total: Double = 0, purchasedProductIds: [String]? = nil)\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`let order = TargetOrder(id: \"id1\", total: 1.0, purchasedProductIds: [\"ppId1\"])\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-1\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`- (nonnull instancetype) initWithId: (nonnull NSString*) id total: (double) total purchasedProductIds: (nullable NSArray<NSString*>*) purchasedProductIds;\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`AEPTargetOrder *order = [[AEPTargetOrder alloc] initWithId:@\"id1\" total:1.0 purchasedProductIds:@[@\"ppId1\"]];\n`}</code></pre>\n    {/*- <Variant platform=\"react-native\" task=\"target-order\" repeat=\"2\"/>\n     **JavaScript**\n     ```javascript\n     var targetOrder = new ACPTargetOrder(\"ADCKKBC\", 400.50, [\"34\",\"125\"]);\n     ``` -*/}\n    <Variant platform=\"android\" task=\"target-product\" repeat=\"5\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-2\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public TargetProduct(final String id, final String categoryId)\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`TargetProduct targetProduct = new TargetProduct(\"123\", \"Books\");\n`}</code></pre>\n    <Variant platform=\"ios\" task=\"target-product\" repeat=\"10\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift-2\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`public init(productId: String, categoryId: String? = nil)\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`let product = TargetProduct(productId: \"pId1\", categoryId: \"cId1\")\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-2\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`- (nonnull instancetype) initWithProductId:(nonnull NSString*) productId categoryId:(nullable NSString*) categoryId;\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`AEPTargetProduct *product =[[AEPTargetProduct alloc] initWithProductId:@\"pId1\" categoryId:@\"cId1\"];\n`}</code></pre>\n    {/*- <Variant platform=\"react-native\" task=\"target-product\" repeat=\"2\"/>\n     **JavaScript**\n     ```javascript\n     var targetProduct = new ACPTargetProduct(\"24D334\", \"Stationary\");\n     ``` -*/}\n    <Variant platform=\"android\" task=\"target-parameters\" repeat=\"5\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-3\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`TargetParameters targetParameters = new TargetParameters.Builder()\n.parameters(new HashMap<String, String>())\n.profileParameters(new HashMap<String, String>())\n.product(new TargetProduct(\"productId\", \"productCategoryId\"))\n.order(new TargetOrder(\"orderId\", 0.0, new ArrayList<String>()))\n.build();\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`List<String> purchasedProductIds = new ArrayList<String>();\npurchasedProductIds.add(\"34\");\npurchasedProductIds.add(\"125\");\nTargetOrder targetOrder = new TargetOrder(\"123\", 567.89, purchasedProductIds);\n\nTargetProduct targetProduct = new TargetProduct(\"123\", \"Books\");\n\nMap<String, String> mboxParameters = new HashMap<String, String>();\nmboxParameters1.put(\"status\", \"platinum\");\n\nMap<String, String> profileParameters = new HashMap<String, String>();\nprofileParameters1.put(\"gender\", \"male\");\n\nTargetParameters targetParameters = new TargetParameters.Builder()\n.parameters(mboxParameters)\n.profileParameters(profileParameters)\n.product(targetProduct)\n.order(targetOrder)\n.build();\n`}</code></pre>\n    <Variant platform=\"ios\" task=\"target-parameters\" repeat=\"10\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift-3\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`public init(parameters: [String: String]? = nil, profileParameters: [String: String]? = nil, order: TargetOrder? = nil, product: TargetProduct? = nil)\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`let mboxParameters = [\n\"status\": \"Platinum\"\n]\nlet profileParameters = [\n\"gender\": \"female\"\n]\n\nlet order = TargetOrder(id: \"id1\", total: 1.0, purchasedProductIds: [\"ppId1\"])\n\nlet product = TargetProduct(productId: \"pId1\", categoryId: \"cId1\")\n\nlet targetParameters = TargetParameters(parameters: mboxParameters, profileParameters: profileParameters, order: order, product: product))\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-3\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`- (nonnull instancetype) initWithParameters:(nullable NSDictionary<NSString*, NSString*>*) parameters profileParameters:(nullable NSDictionary<NSString*, NSString*>*) profileParameters order:(nullable AEPTargetOrder*) order product:(nullable AEPTargetProduct*) product;\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`NSDictionary *mboxParameters = @{@\"status\":@\"Platinum\"};\nNSDictionary *profileParameters = @{@\"gender\":@\"female\"};\n\nAEPTargetProduct *product =[[AEPTargetProduct alloc] initWithProductId:@\"pId1\" categoryId:@\"cId1\"];\n\nAEPTargetOrder *order = [[AEPTargetOrder alloc] initWithId:@\"id1\" total:1.0 purchasedProductIds:@[@\"ppId1\"]];\n\nAEPTargetParameters * targetParams = [[AEPTargetParameters alloc] initWithParameters:mboxParameters profileParameters:profileParameters order:order product:product];\n`}</code></pre>\n    {/*- <Variant platform=\"react-native\" task=\"target-parameters\" repeat=\"2\"/>\n     **JavaScript**\n     ```javascript\n     var mboxParameters = {\"status\": \"platinum\"};\n     var profileParameters = {\"gender\": \"female\"};\n     var targetProduct = new ACPTargetProduct(\"24D334\", \"Stationary\");\n     var purchaseIDs = [\"34\",\"125\"];\n     var targetOrder = new ACPTargetOrder(\"ADCKKBC\", 400.50, purchaseIDs);\n     var targetParameters = new ACPTargetParameters(mboxParameters, profileParameters, targetProduct, targetOrder);\n     ``` -*/}\n    <Variant platform=\"android\" task=\"visual-preview\" repeat=\"2\" mdxType=\"Variant\" />\n    <p>{`On Android, when the application is launched as a result of a deep link, the Mobile Core's `}<a parentName=\"p\" {...{\n        \"href\": \"../../home/base/mobile-core/api-reference.md#collectlaunchinfo\"\n      }}>{`collectLaunchInfo`}</a>{` API is internally invoked, and the Target activity and deep link information is extracted from the Intent extras.`}</p>\n    <p>{`The SDK can only collect information from the launching Activity if `}<a parentName=\"p\" {...{\n        \"href\": \"../../home/base/mobile-core/api-reference.md#setapplication\"\n      }}>{`setApplication`}</a>{` has been called. Setting the Application is only necessary on an Activity that is also an entry point for your application. However, setting the Application on each Activity has no negative impact and ensures that the SDK always has the necessary reference to your Application. We recommend that you call `}<inlineCode parentName=\"p\">{`setApplication`}</inlineCode>{` API in each of your Activities.`}</p>\n    <Variant platform=\"ios\" task=\"visual-preview\" repeat=\"7\" mdxType=\"Variant\" />\n    <p>{`On iOS, the Mobile Core's `}<a parentName=\"p\" {...{\n        \"href\": \"../../home/base/mobile-core/api-reference.md#collectlaunchinfo\"\n      }}>{`collectLaunchInfo`}</a>{` API can be invoked with the Target preview deep link as shown below:`}</p>\n    <h4 {...{\n      \"id\": \"swift-4\"\n    }}>{`Swift`}</h4>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`    MobileCore.collectLaunchInfo([\"adb_deeplink\" : \"com.adobe.targetpreview://app.adobetarget.com?at_preview_token=tokenFromTarget\"])\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-4\"\n    }}>{`Objective-C`}</h4>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{` [AEPMobileCore collectLaunchInfo:@{@\"adb_deeplink\" : @\"com.adobe.targetpreview://app.adobetarget.com?at_preview_token=tokenFromTarget\"}];\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","Variant","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","platform","task","repeat","parentName","query","isMDXComponent"],"sourceRoot":""}