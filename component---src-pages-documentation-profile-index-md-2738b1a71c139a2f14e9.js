"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[7228,3606],{87128:function(e,a,t){t.r(a),t.d(a,{_frontmatter:function(){return p},default:function(){return f}});var n=t(87462),i=t(63366),o=(t(15007),t(64983)),r=t(91515),d=t(99778),l=["components"],p={},s=function(e){return function(a){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.mdx)("div",a)}},m=s("InlineAlert"),c=s("TabsBlock"),u={_frontmatter:p},x=r.Z;function f(e){var a=e.components,t=(0,i.Z)(e,l);return(0,o.mdx)(x,(0,n.Z)({},u,t,{components:a,mdxType:"MDXLayout"}),(0,o.mdx)("h1",{id:"profile"},"Profile"),(0,o.mdx)("p",null,"You can use the Profile extension to store attributes about your user on the client. This information can be used later to target and personalize messages during online or offline scenarios, without having to connect to a server for optimal performance. The Profile extension manages the Client-Side Operation Profile (CSOP) and provides a way to react to APIs, updates user profile attributes, and shares the user profile attributes with the rest of the system as a generated event."),(0,o.mdx)("p",null,"The Profile data is used by other extensions to perform profile-related actions. An example is the Rules Engine extension that consumes the profile data and runs rules based on the profile data."),(0,o.mdx)(m,{variant:"info",slots:"text",mdxType:"InlineAlert"}),(0,o.mdx)("p",null,"The Profile extension does not require any configuration."),(0,o.mdx)("p",null,"To get started with the Profile extension:"),(0,o.mdx)("ol",null,(0,o.mdx)("li",{parentName:"ol"},"Configure the Profile Extension in the Data Collection UI."),(0,o.mdx)("li",{parentName:"ol"},"Add the Profile extension to your app."),(0,o.mdx)("li",{parentName:"ol"},"Implement Profile APIs to:",(0,o.mdx)("ul",{parentName:"li"},(0,o.mdx)("li",{parentName:"ul"},"Update user attributes."),(0,o.mdx)("li",{parentName:"ul"},"Remove user attributes.")))),(0,o.mdx)("h2",{id:"install-the-profile-extension-in-the-data-collection-ui"},"Install the Profile extension in the Data Collection UI"),(0,o.mdx)("ol",null,(0,o.mdx)("li",{parentName:"ol"},"In the Data Collection UI, in your mobile property, select the ",(0,o.mdx)("strong",{parentName:"li"},"Extensions")," tab."),(0,o.mdx)("li",{parentName:"ol"},"On the ",(0,o.mdx)("strong",{parentName:"li"},"Catalog")," tab, locate or search for the ",(0,o.mdx)("strong",{parentName:"li"},"Profile")," extension, and select ",(0,o.mdx)("strong",{parentName:"li"},"Install"),"."),(0,o.mdx)("li",{parentName:"ol"},"There are no configuration settings for ",(0,o.mdx)("strong",{parentName:"li"},"Profile"),"."),(0,o.mdx)("li",{parentName:"ol"},"Select ",(0,o.mdx)("strong",{parentName:"li"},"Save"),"."),(0,o.mdx)("li",{parentName:"ol"},"Follow the publishing process to update SDK configuration.")),(0,o.mdx)("p",null,(0,o.mdx)("span",{parentName:"p",className:"gatsby-resp-image-wrapper",style:{position:"relative",display:"block",marginLeft:"auto",marginRight:"auto",maxWidth:"1280px"}},"\n      ",(0,o.mdx)("span",{parentName:"span",className:"gatsby-resp-image-background-image",style:{paddingBottom:"45.62500000000001%",position:"relative",bottom:"0",left:"0",display:"block",transition:"opacity 0.5s 0.5s",pointerEvents:"none"}}),"\n  ",(0,o.mdx)("picture",{parentName:"span"},"\n          ",(0,o.mdx)("source",{parentName:"picture",srcSet:["/aep-mobile-sdkdocs/static/49b0637eaf534688564dcae0ae808f4b/5530d/configuration.webp 320w","/aep-mobile-sdkdocs/static/49b0637eaf534688564dcae0ae808f4b/0c8fb/configuration.webp 640w","/aep-mobile-sdkdocs/static/49b0637eaf534688564dcae0ae808f4b/94b1e/configuration.webp 1280w","/aep-mobile-sdkdocs/static/49b0637eaf534688564dcae0ae808f4b/ff8b5/configuration.webp 1494w"],sizes:"(max-width: 1280px) 100vw, 1280px",type:"image/webp"}),"\n          ",(0,o.mdx)("source",{parentName:"picture",srcSet:["/aep-mobile-sdkdocs/static/49b0637eaf534688564dcae0ae808f4b/dd4a7/configuration.png 320w","/aep-mobile-sdkdocs/static/49b0637eaf534688564dcae0ae808f4b/0f09e/configuration.png 640w","/aep-mobile-sdkdocs/static/49b0637eaf534688564dcae0ae808f4b/bbbf7/configuration.png 1280w","/aep-mobile-sdkdocs/static/49b0637eaf534688564dcae0ae808f4b/60b6f/configuration.png 1494w"],sizes:"(max-width: 1280px) 100vw, 1280px",type:"image/png"}),"\n          ",(0,o.mdx)("img",{parentName:"picture",className:"gatsby-resp-image-image",src:"/aep-mobile-sdkdocs/static/49b0637eaf534688564dcae0ae808f4b/bbbf7/configuration.png",alt:"AEP Profile extension configuration",title:"AEP Profile extension configuration",loading:"lazy",style:{width:"100%",height:"100%",margin:"0",verticalAlign:"middle",position:"absolute",opacity:"0",transition:"opacity 0.5s",color:"inherit",boxShadow:"inset 0px 0px 0px 400px none",top:"0",left:"0"}}),"\n        "),"\n    ")),(0,o.mdx)("h2",{id:"add-the-profile-extension-to-your-app"},"Add the Profile extension to your app"),(0,o.mdx)("p",null,"To add the Profile extension to your app:"),(0,o.mdx)(c,{orientation:"horizontal",slots:"heading, content",repeat:"6",mdxType:"TabsBlock"}),(0,o.mdx)("p",null,"Android"),(0,o.mdx)(d.default,{query:"platform=android&task=add",mdxType:"Tabs"}),(0,o.mdx)("p",null,"iOS (AEP 3.x)"),(0,o.mdx)(d.default,{query:"platform=ios-aep&task=add",mdxType:"Tabs"}),(0,o.mdx)("p",null,"iOS (ACP 2.x)"),(0,o.mdx)(d.default,{query:"platform=ios-acp&task=add",mdxType:"Tabs"}),(0,o.mdx)("p",null,"Cordova"),(0,o.mdx)(d.default,{query:"platform=cordova&task=add",mdxType:"Tabs"}),(0,o.mdx)("p",null,"Unity"),(0,o.mdx)(d.default,{query:"platform=unity&task=add",mdxType:"Tabs"}),(0,o.mdx)("p",null,"Xamarin"),(0,o.mdx)(d.default,{query:"platform=xamarin&task=add",mdxType:"Tabs"}),(0,o.mdx)("h2",{id:"register-the-extension"},"Register the extension"),(0,o.mdx)(c,{orientation:"horizontal",slots:"heading, content",repeat:"8",mdxType:"TabsBlock"}),(0,o.mdx)("p",null,"Android"),(0,o.mdx)(d.default,{query:"platform=android&task=register",mdxType:"Tabs"}),(0,o.mdx)("p",null,"iOS (AEP 3.x)"),(0,o.mdx)(d.default,{query:"platform=ios-aep&task=register",mdxType:"Tabs"}),(0,o.mdx)("p",null,"iOS (ACP 2.x)"),(0,o.mdx)(d.default,{query:"platform=ios-acp&task=register",mdxType:"Tabs"}),(0,o.mdx)("p",null,"React Native"),(0,o.mdx)(d.default,{query:"platform=react-native&task=register",mdxType:"Tabs"}),(0,o.mdx)("p",null,"Flutter"),(0,o.mdx)(d.default,{query:"platform=flutter&task=register",mdxType:"Tabs"}),(0,o.mdx)("p",null,"Cordova"),(0,o.mdx)(d.default,{query:"platform=cordova&task=register",mdxType:"Tabs"}),(0,o.mdx)("p",null,"Unity"),(0,o.mdx)(d.default,{query:"platform=unity&task=register",mdxType:"Tabs"}),(0,o.mdx)("p",null,"Xamarin"),(0,o.mdx)(d.default,{query:"platform=xamarin&task=register",mdxType:"Tabs"}))}f.isMDXComponent=!0},99778:function(e,a,t){t.r(a),t.d(a,{_frontmatter:function(){return p},default:function(){return u}});var n,i=t(87462),o=t(63366),r=(t(15007),t(64983)),d=t(91515),l=["components"],p={},s=(n="Variant",function(e){return console.warn("Component "+n+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.mdx)("div",e)}),m={_frontmatter:p},c=d.Z;function u(e){var a=e.components,t=(0,o.Z)(e,l);return(0,r.mdx)(c,(0,i.Z)({},m,t,{components:a,mdxType:"MDXLayout"}),(0,r.mdx)(s,{platform:"android",task:"add",repeat:"3",mdxType:"Variant"}),(0,r.mdx)("h4",{id:"java"},"Java"),(0,r.mdx)("ol",null,(0,r.mdx)("li",{parentName:"ol"},(0,r.mdx)("p",{parentName:"li"},"Add the ",(0,r.mdx)("inlineCode",{parentName:"p"},"UserProfile")," library to your project using the app's gradle file.")),(0,r.mdx)("li",{parentName:"ol"},(0,r.mdx)("p",{parentName:"li"},"Import the ",(0,r.mdx)("inlineCode",{parentName:"p"},"UserProfile")," library and any other SDK library in your application's main activity."))),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-java"},"import com.adobe.marketing.mobile.*;\n")),(0,r.mdx)(s,{platform:"ios-aep",task:"add",repeat:"7",mdxType:"Variant"}),(0,r.mdx)("ol",null,(0,r.mdx)("li",{parentName:"ol"},"Add the Mobile Core and Profile extensions to your project using Cocoapods. Add following pods in your ",(0,r.mdx)("inlineCode",{parentName:"li"},"Podfile"),":")),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-ruby"},"use_frameworks!\ntarget 'YourTargetApp' do\n    pod 'AEPCore', '~> 3.0'\n    pod 'AEPUserProfile', '~> 3.0'\nend\n")),(0,r.mdx)("ol",{start:2},(0,r.mdx)("li",{parentName:"ol"},"Import the UserProfile library.  ")),(0,r.mdx)("h4",{id:"swift"},"Swift"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-swift"},"   import AEPCore\n   import AEPUserProfile\n")),(0,r.mdx)("h4",{id:"objective-c"},"Objective-C"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-objectivec"},"   @import AEPCore;\n   @import AEPUserProfile;\n")),(0,r.mdx)(s,{platform:"ios-acp",task:"add",repeat:"7",mdxType:"Variant"}),(0,r.mdx)("ol",null,(0,r.mdx)("li",{parentName:"ol"},"Add the Mobile Core and Profile extensions to your project using Cocoapods. Add following pods in your ",(0,r.mdx)("inlineCode",{parentName:"li"},"Podfile"),":")),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-pod"},"use_frameworks!\ntarget 'YourTargetApp' do\n    pod 'ACPCore'\n    pod 'ACPUserProfile'\nend\n")),(0,r.mdx)("ol",{start:2},(0,r.mdx)("li",{parentName:"ol"},"Import the UserProfile library.   ")),(0,r.mdx)("h4",{id:"objective-c-1"},"Objective-C"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-objectivec"},'   #import "ACPCore.h"\n   #import "ACPUserProfile.h"\n')),(0,r.mdx)("h4",{id:"swift-1"},"Swift"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-swift"},"   import ACPCore\n   import ACPUserProfile\n")),(0,r.mdx)(s,{platform:"cordova",task:"add",repeat:"3",mdxType:"Variant"}),(0,r.mdx)("h4",{id:"cordova"},"Cordova"),(0,r.mdx)("p",null,"After creating your Cordova app and adding the Android and iOS platforms, the UserProfile extension for Cordova can be added with this command:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-bash"},"cordova plugin add https://github.com/adobe/cordova-acpuserprofile.git\n")),(0,r.mdx)(s,{platform:"unity",task:"add",repeat:"3",mdxType:"Variant"}),(0,r.mdx)("h4",{id:"c"},"C#"),(0,r.mdx)("p",null,"After importing the ",(0,r.mdx)("a",{parentName:"p",href:"https://github.com/adobe/unity-acpuserprofile/blob/master/bin/ACPUserProfile-0.0.1-Unity.zip"},"ACPUserProfile.unitypackage"),", the UserProfile extension for Unity can be added with following code in the MainScript"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-csharp"},"using com.adobe.marketing.mobile;\n")),(0,r.mdx)(s,{platform:"xamarin",task:"add",repeat:"3",mdxType:"Variant"}),(0,r.mdx)("h4",{id:"c-1"},"C#"),(0,r.mdx)("p",null,"After adding the iOS ACPUserProfile NuGet package or the Android ACPUserProfile NuGet package, the UserProfile extension can be added by this import statement"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-csharp"},"using Com.Adobe.Marketing.Mobile;\n")),(0,r.mdx)(s,{platform:"android",task:"register",repeat:"5",mdxType:"Variant"}),(0,r.mdx)("h4",{id:"java-1"},"Java"),(0,r.mdx)("p",null,(0,r.mdx)("strong",{parentName:"p"},"Required:")," The ",(0,r.mdx)("inlineCode",{parentName:"p"},"setApplication()")," method must be called once in the ",(0,r.mdx)("inlineCode",{parentName:"p"},"onCreate()")," method of your main activity."),(0,r.mdx)("ol",null,(0,r.mdx)("li",{parentName:"ol"},"The ",(0,r.mdx)("inlineCode",{parentName:"li"},"UserProfile")," extension must be registered with Mobile Core before calling an ",(0,r.mdx)("inlineCode",{parentName:"li"},"UserProfile")," API.")),(0,r.mdx)("p",null,"This can be done after calling ",(0,r.mdx)("inlineCode",{parentName:"p"},"setApplication()")," in the ",(0,r.mdx)("inlineCode",{parentName:"p"},"onCreate()")," method. Here is a code sample, which calls these set up methods:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-java"},'   public class MobileApp extends Application {\n\n       @Override\n       public void onCreate() {\n           super.onCreate();\n           MobileCore.setApplication(this);\n           try {\n               // register other extensions\n               UserProfile.registerExtension();\n               MobileCore.start(new AdobeCallback () {\n                   @Override\n                   public void call(Object o) {\n                       MobileCore.configureWithAppID("yourAppId");\n                   }\n               });    \n           } catch (Exception e) {\n               //Log the exception\n            }\n       }\n   }\n')),(0,r.mdx)(s,{platform:"ios-aep",task:"register",repeat:"4",mdxType:"Variant"}),(0,r.mdx)("h4",{id:"swift-2"},"Swift"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-swift"},"// AppDelegate.swift\nfunc application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {\n    MobileCore.registerExtensions([UserProfile.self], {\n  })\n  ...\n}\n")),(0,r.mdx)("h4",{id:"objective-c-2"},"Objective-C"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-objectivec"},"- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n    [AEPMobileCore registerExtensions:@AEPMobileUserProfile.class] completion:^{\n    ...\n  }];\n  ...\n  // Override point for customization after application launch.\n  return YES;\n}\n")),(0,r.mdx)(s,{platform:"ios-acp",task:"register",repeat:"4",mdxType:"Variant"}),(0,r.mdx)("h4",{id:"swift-3"},"Swift"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-swift"},'func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {\n     ACPCore.configure(withAppId: "yourAppId")   \n     ACPUserProfile.registerExtension() \n     ACPCore.start(nil)\n     // Override point for customization after application launch. \n     return true;\n}\n')),(0,r.mdx)("h4",{id:"objective-c-3"},"Objective-C"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-objectivec"},"- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n  [ACPUserProfile registerExtension];\n  // Override point for customization after application launch.\n  return YES;\n}\n")),(0,r.mdx)(s,{platform:"react-native",task:"register",repeat:"2",mdxType:"Variant"}),(0,r.mdx)("h4",{id:"javascript"},"JavaScript"),(0,r.mdx)("p",null,"When using React Native, register Profile with Mobile Core in native code as shown on the Android and iOS tabs."),(0,r.mdx)(s,{platform:"flutter",task:"register",repeat:"2",mdxType:"Variant"}),(0,r.mdx)("h4",{id:"flutter"},"Flutter"),(0,r.mdx)("p",null,"When using Flutter, register Profile with Mobile Core in native code as shown on the Android and iOS tabs."),(0,r.mdx)(s,{platform:"cordova",task:"register",repeat:"2",mdxType:"Variant"}),(0,r.mdx)("h4",{id:"cordova-1"},"Cordova"),(0,r.mdx)("p",null,"When using Cordova, register Profile with Mobile Core in native code as shown on the Android and iOS tabs."),(0,r.mdx)(s,{platform:"unity",task:"register",repeat:"3",mdxType:"Variant"}),(0,r.mdx)("h4",{id:"c-2"},"C#"),(0,r.mdx)("p",null,"Register the extension in the ",(0,r.mdx)("inlineCode",{parentName:"p"},"start()")," function:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-csharp"},'using com.adobe.marketing.mobile;\nusing using AOT;\n\npublic class MainScript : MonoBehaviour\n{\n    [MonoPInvokeCallback(typeof(AdobeStartCallback))]\n    public static void HandleStartAdobeCallback()\n    {   \n        ACPCore.ConfigureWithAppID("yourAppId"); \n    }\n\n    // Start is called before the first frame update\n    void Start()\n    {   \n        ACPUserProfile.registerExtension();\n        ACPCore.Start(HandleStartAdobeCallback);\n    }\n}\n')),(0,r.mdx)(s,{platform:"xamarin",task:"register",repeat:"7",mdxType:"Variant"}),(0,r.mdx)("h4",{id:"c-3"},"C#"),(0,r.mdx)("p",null,(0,r.mdx)("strong",{parentName:"p"},"iOS")),(0,r.mdx)("p",null,"Register the User Profile extension in your app's ",(0,r.mdx)("inlineCode",{parentName:"p"},"FinishedLaunching()")," function:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-csharp"},'public override bool FinishedLaunching(UIApplication app, NSDictionary options)\n{\n  global::Xamarin.Forms.Forms.Init();\n  LoadApplication(new App());\n  ACPUserProfile.RegisterExtension();\n  // start core\n  ACPCore.Start(startCallback);\n  return base.FinishedLaunching(app, options);\n}\n\nprivate void startCallback()\n{\n  // set launch config\n  ACPCore.ConfigureWithAppID("yourAppId");\n}\n')),(0,r.mdx)("p",null,(0,r.mdx)("strong",{parentName:"p"},"Android")),(0,r.mdx)("p",null,"Register the User Profile extension in your app's ",(0,r.mdx)("inlineCode",{parentName:"p"},"OnCreate()")," function:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-csharp"},'protected override void OnCreate(Bundle savedInstanceState)\n{\n  base.OnCreate(savedInstanceState);\n  global::Xamarin.Forms.Forms.Init(this, savedInstanceState);\n  LoadApplication(new App());\n  ACPUserProfile.RegisterExtension();\n\n  // start core\n  ACPCore.Start(new CoreStartCompletionCallback());\n}\n\nclass CoreStartCompletionCallback : Java.Lang.Object, IAdobeCallback\n{\n  public void Call(Java.Lang.Object callback)\n  {\n    // set launch config\n    ACPCore.ConfigureWithAppID("yourAppId");\n  }\n}\n')))}u.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-documentation-profile-index-md-2738b1a71c139a2f14e9.js.map