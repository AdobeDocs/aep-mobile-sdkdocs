{"version":3,"file":"component---src-pages-resources-user-guides-attach-data-md-88a903139bb03c65cab1.js","mappings":"yUAQaA,EAAe,CAAC,EACvBC,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,4EAC5B,eAASC,EAClB,CAAC,EACKG,EAAcL,EAAc,eAC5BM,EAAYN,EAAc,aAC1BO,EAAc,CAClBR,aAAAA,GAEIS,EAAYC,EAAAA,EACH,SAASC,EAAW,GAGhC,IAFDC,EAAU,EAAVA,WACGT,GAAK,YAER,OAAO,SAACM,GAAS,UAAKD,EAAiBL,EAAK,CAAES,WAAYA,EAAYC,QAAQ,eAI5E,eACE,GAAM,6BAA2B,8BAEnC,kEAAmD,cAAGC,WAAW,IAC7D,KAAQ,wCAAsC,eAC1B,+IACxB,uJAAwI,cAAGA,WAAW,IAClJ,KAAQ,qDAAmD,gBACtC,MACzB,eACE,GAAM,WAAS,YAEjB,eACE,GAAM,uBAAqB,yBAE7B,oMACA,uBACE,kBAAOA,WAAW,UAChB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,QAAM,aAEjB,eAAIA,WAAW,KACb,MAAS,QAAM,kBAIrB,kBAAOA,WAAW,UAChB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,QAAM,SAEjB,eAAIA,WAAW,KACb,MAAS,QAAM,+FAGnB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,QAAM,WAEjB,eAAIA,WAAW,KACb,MAAS,QAAM,mGAGnB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,QAAM,eAEjB,eAAIA,WAAW,KACb,MAAS,QAAM,+FAKvB,oDAAqC,cAAGA,WAAW,IAC/C,KAAQ,wCAAsC,eAC1B,oNACxB,eACE,GAAM,qCAAmC,uCAE3C,uTACA,SAACR,EAAW,CAACS,QAAQ,OAAOC,MAAM,OAAOH,QAAQ,iBACjD,mKACA,eACE,GAAM,4BAA0B,8BAElC,8OACA,uBACE,kBAAOC,WAAW,UAChB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,QAAM,aAEjB,eAAIA,WAAW,KACb,MAAS,QAAM,kBAIrB,kBAAOA,WAAW,UAChB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,QAAM,UAEjB,eAAIA,WAAW,KACb,MAAS,QAAM,2BAGnB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,QAAM,cAEjB,eAAIA,WAAW,KACb,MAAS,QAAM,yEAGnB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,QAAM,WAEjB,eAAIA,WAAW,KACb,MAAS,QAAM,uEAKvB,SAACR,EAAW,CAACS,QAAQ,OAAOC,MAAM,OAAOH,QAAQ,iBACjD,gFAAiE,mBAAQC,WAAW,KAAG,SAAmB,gBAAgB,mBAAQA,WAAW,KAAG,gBAA0B,+BAA+B,mBAAQA,WAAW,KAAG,aAAuB,MACtP,eACE,GAAM,gCAA8B,iCAEtC,mBAAG,mBAAQA,WAAW,KAAG,eAAyB,mLAClD,SAACR,EAAW,CAACS,QAAQ,OAAOC,MAAM,OAAOH,QAAQ,iBACjD,2HAA4G,qBAAM,oBAAM,kJACxH,eACE,GAAM,iDAA+C,kDAEvD,mTACA,qQACA,eACE,GAAM,wCAAsC,yCAE9C,SAACN,EAAS,CAACU,YAAY,aAAaD,MAAM,mBAAmBE,OAAO,IAAIL,QAAQ,eAChF,gCACA,SAAC,UAAsB,CAACA,QAAQ,4BAChC,6BACA,SAAC,UAAmB,CAACA,QAAQ,wBAGjC,CAEAF,EAAWQ,gBAAiB,C","sources":["webpack://dev-site-documentation-template/./src/pages/resources/user-guides/attach-data.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/aep-mobile-sdkdocs/aep-mobile-sdkdocs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nimport AttachingDataAnalytics from './tabs/attach-data/attaching-data/analytics.md';\nimport AttachingDataTarget from './tabs/attach-data/attaching-data/target.md';\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst TabsBlock = makeShortcode(\"TabsBlock\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"attach-data-to-sdk-events\"\n    }}>{`Attach data to SDK events`}</h1>\n    <p>{`The attach data_rule action is supported in `}<a parentName=\"p\" {...{\n        \"href\": \"../../home/base/mobile-core/index.md\"\n      }}>{`Mobile Core`}</a>{` starting from version 2.1.8 (Launch), 2.3.5 (iOS), and 1.4.5 (Android). This action is powerful, complex, and enables advanced use cases.`}</p>\n    <p>{`To use this action, you need to learn how events flow in the Adobe Experience Platform Mobile SDK and how they interact with the `}<a parentName=\"p\" {...{\n        \"href\": \"../../home/base/mobile-core/rules-engine/index.md\"\n      }}>{`rules engine`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"context\"\n    }}>{`Context`}</h2>\n    <h3 {...{\n      \"id\": \"what-are-sdk-events\"\n    }}>{`What are SDK events?`}</h3>\n    <p>{`In the Experience Platform Mobile SDK, events hold all the data that is required by other extensions to complete the necessary actions. Events have the following properties:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Property`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Type`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Describes the event. Examples include Adobe Analytics, Adobe Target, and Adobe Lifecycle.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Source`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Indicates the cause or the directionality of the event. For example, a request or a response.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Event data`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`The data required to define the event. For example, context data on an Analytics event.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`Extensions that register with `}<a parentName=\"p\" {...{\n        \"href\": \"../../home/base/mobile-core/index.md\"\n      }}>{`Mobile Core`}</a>{` will also register event listeners. A listener is defined by a combination of event type and source. When the SDK event hub processes an event, it notifies all listeners that match the provided combination.`}</p>\n    <h3 {...{\n      \"id\": \"how-are-events-created-in-the-sdk\"\n    }}>{`How are events created in the SDK?`}</h3>\n    <p>{`Events are created by an extension and are dispatched to the SDK Event Hub. Each published rule that is created in the Data Collection UI is evaluated against the current event. Finally, the event is passed to each of the listeners for events with the submitted type / source combination.`}</p>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`Events are created and dispatched when an SDK public API is invoked. Attach data action use cases are meant to act on these types of events.`}</p>\n    <h3 {...{\n      \"id\": \"what-is-the-rules-engine\"\n    }}>{`What is the Rules Engine?`}</h3>\n    <p>{`The Rules Engine lives in the SDK Event Hub. Before listeners are notified, the Rules Engine evaluates each tag rule for mobile properties against the triggering event. A rule is defined by the following properties:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Property`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Event`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Trigger for the rule.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Condition`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Definition of the criteria to compare against the triggering event.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Action`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`The resulting action if the evaluation of the rule is positive.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`A rule might be read out in the following way: If the SDK `}<strong parentName=\"p\">{`Event`}</strong>{` occurs and `}<strong parentName=\"p\">{`Condition(s)`}</strong>{` are met, then perform the `}<strong parentName=\"p\">{`Action(s)`}</strong>{`.`}</p>\n    <h2 {...{\n      \"id\": \"using-the-attach-data-action\"\n    }}>{`Using the attach data action`}</h2>\n    <p><strong parentName=\"p\">{`Attach Data`}</strong>{` is a type of rule action that lets you add event data to an SDK event. The modification of data happens in the Rules Engine before event listeners are notified of the event.`}</p>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`Attach data rule actions will only add data to the event. These actions never modify or remove data. `}<br /><br />{` If there is a conflict between the data that is defined in your rule and the data in the event, the data in the event always has preference.`}</p>\n    <h3 {...{\n      \"id\": \"defining-a-payload-for-the-attach-data-action\"\n    }}>{`Defining a payload for the attach data action`}</h3>\n    <p>{`When defining a payload for the attach data action, the payload must match the format of the triggering event. For example, if you want to add context data to an Adobe Analytics event, you need to know where the context data is defined on that event and match the format in your rule.`}</p>\n    <p>{`As a result, it is highly recommended to enable verbose logging in the SDK and carefully study the format of the event to which you will attach the data. If the format does not match, most likely the expected results will not be received.`}</p>\n    <h2 {...{\n      \"id\": \"example---attaching-data-to-an-event\"\n    }}>{`Example - attaching data to an event`}</h2>\n    <TabsBlock orientation=\"horizontal\" slots=\"heading, content\" repeat=\"2\" mdxType=\"TabsBlock\" />\n    <p>{`Analytics`}</p>\n    <AttachingDataAnalytics mdxType=\"AttachingDataAnalytics\" />\n    <p>{`Target`}</p>\n    <AttachingDataTarget mdxType=\"AttachingDataTarget\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","makeShortcode","name","props","console","warn","InlineAlert","TabsBlock","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","variant","slots","orientation","repeat","isMDXComponent"],"sourceRoot":""}