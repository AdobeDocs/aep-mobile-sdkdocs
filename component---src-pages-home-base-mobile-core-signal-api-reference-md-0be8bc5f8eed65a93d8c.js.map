{"version":3,"file":"component---src-pages-home-base-mobile-core-signal-api-reference-md-0be8bc5f8eed65a93d8c.js","mappings":"mUAOaA,EAAe,CAAC,EACvBC,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,4EAC5B,eAASC,EAClB,CAAC,EACKG,EAAYL,EAAc,aAC1BM,EAAcN,EAAc,eAC5BO,EAAc,CAClBR,aAAAA,GAEIS,EAAYC,EAAAA,EACH,SAASC,EAAW,GAGhC,IAFDC,EAAU,EAAVA,WACGT,GAAK,YAER,OAAO,SAACM,GAAS,UAAKD,EAAiBL,EAAK,CAAES,WAAYA,EAAYC,QAAQ,eAI5E,eACE,GAAM,wBAAsB,yBAE9B,eACE,GAAM,oBAAkB,qBAE1B,0BAAW,uBAAYC,WAAW,KAAG,sBAAoC,wGACzE,iGACA,SAACR,EAAS,CAACS,YAAY,aAAaC,MAAM,mBAAmBC,OAAO,IAAIJ,QAAQ,eAChF,8BACA,SAAC,UAAI,CAACK,MAAM,yCAAyCL,QAAQ,UAC7D,0BACA,SAAC,UAAI,CAACK,MAAM,qCAAqCL,QAAQ,UAKzD,eACE,GAAM,qBAAmB,sBAE3B,SAACN,EAAW,CAACY,QAAQ,UAAUH,MAAM,gBAAgBH,QAAQ,iBAC7D,6HACA,0BAAW,cAAGC,WAAW,IACrB,KAAQ,uDACP,uBAAYA,WAAW,KAAG,oCAAqD,kBACpF,2EACA,SAACR,EAAS,CAACS,YAAY,aAAaC,MAAM,mBAAmBC,OAAO,IAAIJ,QAAQ,eAChF,8BACA,SAAC,UAAI,CAACK,MAAM,0CAA0CL,QAAQ,UAG9D,eACE,GAAM,cAAY,eAEpB,iEAAkD,uBAAYC,WAAW,KAAG,cAA4B,0CAA0C,cAAGA,WAAW,IAC5J,KAAQ,kCAAgC,cACrB,SAG3B,CAEAH,EAAWS,gBAAiB,C,0GC5DNlB,E,wEADTF,EAAe,CAAC,EAKvBqB,GAJgBnB,EAIQ,UAJA,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,4EAC5B,eAASC,EAClB,GAEMK,EAAc,CAClBR,aAAAA,GAEIS,EAAYC,EAAAA,EACH,SAASC,EAAW,GAGhC,IAFDC,EAAU,EAAVA,WACGT,GAAK,YAER,OAAO,SAACM,GAAS,UAAKD,EAAiBL,EAAK,CAAES,WAAYA,EAAYC,QAAQ,eAG5E,SAACQ,EAAO,CAACC,SAAS,UAAUC,IAAI,oBAAoBN,OAAO,IAAIJ,QAAQ,aACvE,eACE,GAAM,QAAM,SAEd,mBAAG,mBAAQC,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,0DAIhC,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,kEAGhC,SAACO,EAAO,CAACC,SAAS,MAAMC,IAAI,oBAAoBN,OAAO,IAAIJ,QAAQ,aACnE,mBAAG,mBAAQC,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBAAgB,0CAGjC,mBAAG,mBAAQA,WAAW,KAAG,cACzB,mBAAG,mBAAQA,WAAW,KAAG,WACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBAAgB,6CAGjC,mBAAG,mBAAQA,WAAW,KAAG,iBACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBAAqB,+DAatC,SAACO,EAAO,CAACC,SAAS,UAAUC,IAAI,qBAAqBN,OAAO,IAAIJ,QAAQ,aACxE,eACE,GAAM,UAAQ,SAEhB,mBAAG,mBAAQC,WAAW,KAAG,YACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,8CAGhC,mBAAG,mBAAQA,WAAW,KAAG,aACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,kCAOpC,CAEAH,EAAWS,gBAAiB,C","sources":["webpack://dev-site-documentation-template/./src/pages/home/base/mobile-core/signal/api-reference.md","webpack://dev-site-documentation-template/./src/pages/home/base/mobile-core/signal/tabs/api-reference.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/aep-mobile-sdkdocs/aep-mobile-sdkdocs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nimport Tabs from './tabs/api-reference.md';\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst TabsBlock = makeShortcode(\"TabsBlock\");\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"signal-api-reference\"\n    }}>{`Signal API reference`}</h1>\n    <h2 {...{\n      \"id\": \"extensionversion\"\n    }}>{`extensionVersion`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`extensionVersion()`}</inlineCode>{` API returns the version of the Signal extension that is registered with the Mobile Core extension.`}</p>\n    <p>{`To get the version of the Signal extension, use the following code sample:`}</p>\n    <TabsBlock orientation=\"horizontal\" slots=\"heading, content\" repeat=\"2\" mdxType=\"TabsBlock\" />\n    <p>{`Android`}</p>\n    <Tabs query=\"platform=android&api=extension-version\" mdxType=\"Tabs\" />\n    <p>{`iOS`}</p>\n    <Tabs query=\"platform=ios&api=extension-version\" mdxType=\"Tabs\" />\n    {/*- React Native\n     <Tabs query=\"platform=react-native&api=extension-version\"/>\n     Flutter\n     <Tabs query=\"platform=flutter&api=extension-version\"/> -*/}\n    <h2 {...{\n      \"id\": \"registerextension\"\n    }}>{`registerExtension`}</h2>\n    <InlineAlert variant=\"warning\" slots=\"header, text1\" mdxType=\"InlineAlert\" />\n    <p>{`This API has been deprecated starting in v2.0.0 and removed in v3.0.0 of the Android mobile extension.`}</p>\n    <p>{`Use `}<a parentName=\"p\" {...{\n        \"href\": \"../mobile-core/api-reference.md#registerextensions\"\n      }}><inlineCode parentName=\"a\">{`MobileCore.registerExtensions()`}</inlineCode></a>{` API instead.`}</p>\n    <p>{`Registers the Signal extension with the Mobile Core.`}</p>\n    <TabsBlock orientation=\"horizontal\" slots=\"heading, content\" repeat=\"1\" mdxType=\"TabsBlock\" />\n    <p>{`Android`}</p>\n    <Tabs query=\"platform=android&api=register-extension\" mdxType=\"Tabs\" />\n    {/*- React Native\n     <Tabs query=\"platform=react-native&api=register-extension\"/> -*/}\n    <h2 {...{\n      \"id\": \"collectpii\"\n    }}>{`collectPii`}</h2>\n    <p>{`The Signal extension can be used to handle `}<inlineCode parentName=\"p\">{`collectPii`}</inlineCode>{` rules. For more information, see the `}<a parentName=\"p\" {...{\n        \"href\": \"../api-reference.md#collectpii\"\n      }}>{`collectPii`}</a>{` API.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/aep-mobile-sdkdocs/aep-mobile-sdkdocs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst Variant = makeShortcode(\"Variant\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <Variant platform=\"android\" api=\"extension-version\" repeat=\"5\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`@NonNull\npublic static String extensionVersion();\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`String signalExtensionVersion = Signal.extensionVersion();\n`}</code></pre>\n    <Variant platform=\"ios\" api=\"extension-version\" repeat=\"7\" mdxType=\"Variant\" />\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`public static let extensionVersion\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Examples`}</strong></p>\n    <p><strong parentName=\"p\">{`Swift`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`let version = Signal.extensionVersion\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Objective-C`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`NSString *version = [AEPMobileSignal extensionVersion];\n`}</code></pre>\n    {/*- <Variant platform=\"react-native\" api=\"extension-version\" repeat=\"2\"/>\n     #### JavaScript\n     ```jsx\n     ACPSignal.extensionVersion().then(signalExtensionVersion => console.log(\"AdobeExperienceSDK: ACPSignal version: \" + signalExtensionVersion));\n     ```\n     <Variant platform=\"flutter\" api=\"extension-version\" repeat=\"2\"/>\n     #### Dart\n     ```dart\n     String signalExtensionVersion = await FlutterACPSignal.extensionVersion;\n     ``` -*/}\n    <Variant platform=\"android\" api=\"register-extension\" repeat=\"5\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-1\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public static void registerExtension()\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`Signal.registerExtension();\n`}</code></pre>\n    {/*- <Variant platform=\"react-native\" api=\"register-extension\" repeat=\"1\"/>\n     When using React Native, register the Signal extension with Mobile Core in native code as shown on the Android and iOS tabs. -*/}\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","makeShortcode","name","props","console","warn","TabsBlock","InlineAlert","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","orientation","slots","repeat","query","variant","isMDXComponent","Variant","platform","api"],"sourceRoot":""}