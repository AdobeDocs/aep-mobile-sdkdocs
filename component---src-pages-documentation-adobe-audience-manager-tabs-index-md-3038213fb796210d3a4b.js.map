{"version":3,"file":"component---src-pages-documentation-adobe-audience-manager-tabs-index-md-3038213fb796210d3a4b.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/pages/documentation/adobe-audience-manager/tabs/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/aep-mobile-sdkdocs/aep-mobile-sdkdocs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst Variant = makeShortcode(\"Variant\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <Variant platform=\"android\" task=\"add\" repeat=\"4\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java\"\n    }}>{`Java`}</h4>\n    <ol>\n      <li parentName=\"ol\">{`Add the library to your project.`}</li>\n      <li parentName=\"ol\">{`Import the library.`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import com.adobe.marketing.mobile.*;\n`}</code></pre>\n    <p>{`Audience Manager depends on the Identity extension and is automatically included in the Core pod. When manually installing the Audience Manager extension, ensure that you add the `}<inlineCode parentName=\"p\">{`identity-1.x.x.aar`}</inlineCode>{` library to your project.`}</p>\n    <Variant platform=\"ios-aep\" task=\"add\" repeat=\"6\" mdxType=\"Variant\" />\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Add the `}<a parentName=\"p\" {...{\n            \"href\": \"../mobile-core/index.md\"\n          }}>{`Mobile Core`}</a>{` and Audience extensions to your project using Cocoapods.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Add the following pods in your `}<inlineCode parentName=\"p\">{`Podfile`}</inlineCode>{`:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-ruby\"\n          }}>{` pod 'AEPCore'\n pod 'AEPAudience'\n pod 'AEPIdentity'\n`}</code></pre>\n      </li>\n    </ol>\n    <p>{`Please note that the Audience Manager extension depends on the Identity extension.`}</p>\n    <h4 {...{\n      \"id\": \"swift\"\n    }}>{`Swift`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`   import AEPCore\n   import AEPAudience\n   import AEPIdentity\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c\"\n    }}>{`Objective-C`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`   @import AEPCore;\n   @import AEPAudience;\n   @import AEPIdentity;\n`}</code></pre>\n    <Variant platform=\"ios-acp\" task=\"add\" repeat=\"6\" mdxType=\"Variant\" />\n    <ol>\n      <li parentName=\"ol\">{`Add the library to your project via your `}<inlineCode parentName=\"li\">{`Podfile`}</inlineCode>{` by adding `}<inlineCode parentName=\"li\">{`pod 'ACPAudience'`}</inlineCode></li>\n      <li parentName=\"ol\">{`Import the Audience and Identity library, using the respective language.`}</li>\n    </ol>\n    <p>{`Please note that the Audience Manager extension depends on the Identity extension, which is automatically included in the Core pod. If you are installing the Audience Manager extension manually, ensure you add the  `}<inlineCode parentName=\"p\">{`libACPIdentity_iOS.a`}</inlineCode>{` library to your project.`}</p>\n    <h4 {...{\n      \"id\": \"swift-1\"\n    }}>{`Swift`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`   import ACPCore\n   import ACPAudience\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-1\"\n    }}>{`Objective-C`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`  #import \"ACPCore.h\"\n  #import \"ACPAudience.h\"\n  #import \"ACPIdentity.h\"\n`}</code></pre>\n    <Variant platform=\"react-native\" task=\"add\" repeat=\"7\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"javascript\"\n    }}>{`JavaScript`}</h4>\n    <ol>\n      <li parentName=\"ol\">{`Install Audience Manager in your project.`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`npm install @adobe/react-native-acpaudience\nreact-native link @adobe/react-native-acpaudience\n`}</code></pre>\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`Import the extension.`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import {ACPAudience} from '@adobe/react-native-acpaudience';\n`}</code></pre>\n    <ol {...{\n      \"start\": 3\n    }}>\n      <li parentName=\"ol\">{`Ensure the extension version is correct.`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`ACPAudience.extensionVersion().then(version => console.log(\"AdobeExperienceSDK: ACPAudience version: \" + version));\n`}</code></pre>\n    <Variant platform=\"android\" task=\"register\" repeat=\"4\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-1\"\n    }}>{`Java`}</h4>\n    <p>{`Call the `}<inlineCode parentName=\"p\">{`setApplication()`}</inlineCode>{` method once in the `}<inlineCode parentName=\"p\">{`onCreate()`}</inlineCode>{` method of your main activity.`}</p>\n    <p>{`For example, your code might look like the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class AudiencetApp extends Application {\n\n@Override\npublic void onCreate() {\n     super.onCreate();\n     MobileCore.setApplication(this);\n\n     try {\n         Audience.registerExtension(); //Register Audience Manager with Mobile Core\n         Identity.registerExtension();\n         MobileCore.start(null);\n     } catch (Exception e) {\n     //Log the exception\n     }\n  }\n}\n`}</code></pre>\n    <Variant platform=\"ios-aep\" task=\"register\" repeat=\"6\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift-2\"\n    }}>{`Swift`}</h4>\n    <p>{`In your app's `}<inlineCode parentName=\"p\">{`_:didFinishLaunchingWithOptions`}</inlineCode>{` function, register the Audience Manager extension with the Mobile Core:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {  \n  MobileCore.registerExtensions([Audience.self, Identity.self], {\n  MobileCore.configureWith(appId: \"yourAppId\") \n })  \n ...\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-2\"\n    }}>{`Objective-C`}</h4>\n    <p>{`In your app's `}<inlineCode parentName=\"p\">{`application:didFinishLaunchingWithOptions`}</inlineCode>{` function, register the Audience Manager extension with the Mobile Core:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n   [AEPMobileCore registerExtensions:@[AEPMobileAudience.class, AEPMobileIdentity.class] completion:^{\n   [AEPMobileCore configureWithAppId: @\"yourAppId\"];\n  }];\n  ...\n}\n`}</code></pre>\n    <Variant platform=\"ios-acp\" task=\"register\" repeat=\"6\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift-3\"\n    }}>{`Swift`}</h4>\n    <p>{`In your app's `}<inlineCode parentName=\"p\">{`_:didFinishLaunchingWithOptions`}</inlineCode>{` function, register the Audience Manager extension with the Mobile Core:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {  \n ACPIdentity.registerExtension()\n ACPAudience.registerExtension()\n ACPCore.start(nil)\n\n // Override point for customization after application launch.\n return true;\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-3\"\n    }}>{`Objective-C`}</h4>\n    <p>{`In your app's `}<inlineCode parentName=\"p\">{`application:didFinishLaunchingWithOptions`}</inlineCode>{` function, register the Audience Manager extension with the Mobile Core:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n   [ACPIdentity registerExtension];\n   [ACPAudience registerExtension];\n   [ACPCore start:nil]\n\n   // Override point for customization after application launch.\n   return YES;\n}\n`}</code></pre>\n    <Variant platform=\"react-native\" task=\"register\" repeat=\"3\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"javascript-1\"\n    }}>{`JavaScript`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import {ACPAudience} from '@adobe/react-native-acpcore';\n\ninitSDK() {\n    ACPAudience.registerExtension();\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","Variant","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","platform","task","repeat","parentName","isMDXComponent"],"sourceRoot":""}