"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[9429],{7970:function(e,n,a){a.r(n),a.d(n,{_frontmatter:function(){return l},default:function(){return u}});var t,i=a(87462),o=a(63366),r=(a(15007),a(64983)),d=a(91515),p=["components"],l={},m=(t="Variant",function(e){return console.warn("Component "+t+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.mdx)("div",e)}),s={_frontmatter:l},c=d.Z;function u(e){var n=e.components,a=(0,o.Z)(e,p);return(0,r.mdx)(c,(0,i.Z)({},s,a,{components:n,mdxType:"MDXLayout"}),(0,r.mdx)(m,{platform:"android",task:"add",repeat:"5",mdxType:"Variant"}),(0,r.mdx)("h4",{id:"java"},"Java"),(0,r.mdx)("p",null,"Add the ",(0,r.mdx)("a",{parentName:"p",href:"../index.md"},"Mobile Core")," extension to your project using the app's Gradle file."),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-java"},"implementation 'com.adobe.marketing.mobile:sdk-core:1.+'\n")),(0,r.mdx)("p",null,"Import the Signal extension in your application's main activity."),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-java"},"import com.adobe.marketing.mobile.*;\n")),(0,r.mdx)(m,{platform:"ios-aep",task:"add",repeat:"8",mdxType:"Variant"}),(0,r.mdx)("p",null,"​Add the AEPSignal extension and it's dependency, the ",(0,r.mdx)("a",{parentName:"p",href:"../index.md"},"Mobile Core")," extension to your project using Cocoapods."),(0,r.mdx)("p",null,"Add following pods in your ",(0,r.mdx)("inlineCode",{parentName:"p"},"Podfile"),":"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-pod"},"pod 'AEPCore','~> 3.0'\npod 'AEPSignal','~> 3.0'\n")),(0,r.mdx)("p",null,"Import the Signal libraries:"),(0,r.mdx)("h4",{id:"swift"},"Swift"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-swift"},"import AEPCore\nimport AEPSignal\n")),(0,r.mdx)("h4",{id:"objective-c"},"Objective-C"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-objectivec"},"@import AEPCore;\n@import AEPSignal;\n")),(0,r.mdx)(m,{platform:"ios-acp",task:"add",repeat:"9",mdxType:"Variant"}),(0,r.mdx)("p",null,"​The Signal extension is included in the Mobile Core extension. Add the ",(0,r.mdx)("a",{parentName:"p",href:"../index.md"},"Mobile Core")," extension to your project using Cocoapods."),(0,r.mdx)("p",null,"Add following pods in your ",(0,r.mdx)("inlineCode",{parentName:"p"},"Podfile"),":"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-pod"},"pod 'ACPCore', '~> 2.0'\n")),(0,r.mdx)("p",null,"Import the Signal libraries:"),(0,r.mdx)("h4",{id:"objective-c-1"},"Objective-C"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-objectivec"},'#import "ACPCore.h"\n#import "ACPSignal.h"\n')),(0,r.mdx)("h4",{id:"swift-1"},"Swift"),(0,r.mdx)("p",null,"In Swift, the ACPCore includes ACPSignal:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-swift"},"import ACPCore\n")),(0,r.mdx)(m,{platform:"react-native",task:"add",repeat:"3",mdxType:"Variant"}),(0,r.mdx)("h4",{id:"javascript"},"JavaScript"),(0,r.mdx)("p",null,"Importing the Signal extension:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-jsx"},"import {ACPSignal} from '@adobe/react-native-acpcore';\n")),(0,r.mdx)(m,{platform:"flutter",task:"add",repeat:"3",mdxType:"Variant"}),(0,r.mdx)("h4",{id:"dart"},"Dart"),(0,r.mdx)("p",null,"Importing the Signal extension:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-dart"},"import 'package:flutter_acpcore/flutter_acpsignal.dart';\n")),(0,r.mdx)(m,{platform:"cordova",task:"add",repeat:"3",mdxType:"Variant"}),(0,r.mdx)("h4",{id:"cordova"},"Cordova"),(0,r.mdx)("p",null,"After creating your Cordova app and adding the Android and iOS platforms, the Signal extension for Cordova can be added with this command:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-text"},"cordova plugin add https://github.com/adobe/cordova-acpcore.git\n")),(0,r.mdx)(m,{platform:"unity",task:"add",repeat:"3",mdxType:"Variant"}),(0,r.mdx)("h4",{id:"c"},"C#"),(0,r.mdx)("p",null,"After importing the ",(0,r.mdx)("a",{parentName:"p",href:"https://github.com/adobe/unity-acpcore/blob/master/bin/ACPCore-0.0.1-Unity.zip"},"ACPCore.unitypackage"),", the Signal extension for Unity can be added with following code in the MainScript"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-csharp"},"using com.adobe.marketing.mobile;\n")),(0,r.mdx)(m,{platform:"xamarin",task:"add",repeat:"3",mdxType:"Variant"}),(0,r.mdx)("h4",{id:"c-1"},"C#"),(0,r.mdx)("p",null,"After adding the iOS ACPCore NuGet package or the Android ACPSignal NuGet package, the Signal extension can be added by this import statement"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-csharp"},"using Com.Adobe.Marketing.Mobile;\n")),(0,r.mdx)(m,{platform:"android",task:"register",repeat:"4",mdxType:"Variant"}),(0,r.mdx)("h4",{id:"java-1"},"Java"),(0,r.mdx)("p",null,"After calling the ",(0,r.mdx)("inlineCode",{parentName:"p"},"setApplication()")," method in the ",(0,r.mdx)("inlineCode",{parentName:"p"},"onCreate()")," method, register the Signal extension. If the registration was not successful, an ",(0,r.mdx)("inlineCode",{parentName:"p"},"InvalidInitException")," is thrown."),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-java"},'public class MobileApp extends Application {\n\n    @Override\n    public void onCreate() {\n        super.onCreate();\n        MobileCore.setApplication(this);\n        try {\n            Signal.registerExtension();\n            // register other extensions\n            MobileCore.start(new AdobeCallback () {\n                @Override\n                public void call(Object o) {\n                    MobileCore.configureWithAppID("yourAppId");\n                }\n            });    \n        } catch (Exception e) {\n            //Log the exception\n         }\n    }\n}\n')),(0,r.mdx)("p",null,"Please note that the Signal extension is automatically included in the Mobile Core extension by Maven. When you manually install the Signal extension, ensure that you add the ",(0,r.mdx)("inlineCode",{parentName:"p"},"signal-1.x.x.aar")," library to your project."),(0,r.mdx)(m,{platform:"ios-aep",task:"register",repeat:"5",mdxType:"Variant"}),(0,r.mdx)("p",null,"In your app's ",(0,r.mdx)("inlineCode",{parentName:"p"},"application:didFinishLaunchingWithOptions"),", register the Signal extension with Mobile Core:"),(0,r.mdx)("h4",{id:"swift-2"},"Swift"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-swift"},'func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {\n     MobileCore.registerExtensions([Signal.self, ...]) {\n       MobileCore.configureWith(appId: "yourAppId")\n       // Any other post registration processing\n     }\n     return true;\n}\n')),(0,r.mdx)("h4",{id:"objective-c-2"},"Objective-C"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-objectivec"},'- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n    [AEPMobileCore registerExtensions:@[AEPMobileSignal.class, ...] completion:^{\n        [AEPMobileCore configureWithAppId: @"yourAppId"];\n        // Any other post registration processing\n    }];\n    return YES;\n }\n')),(0,r.mdx)(m,{platform:"ios-acp",task:"register",repeat:"6",mdxType:"Variant"}),(0,r.mdx)("p",null,"In your app's",(0,r.mdx)("inlineCode",{parentName:"p"},"application:didFinishLaunchingWithOptions"),", register the Signal extension with Mobile Core:"),(0,r.mdx)("h4",{id:"objective-c-3"},"Objective-C"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-objectivec"},'- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n    [ACPCore configureWithAppId:@"yourAppId"];\n    [ACPSignal registerExtension];\n    [ACPCore start:nil];\n    // Override point for customization after application launch.\n    return YES;\n }\n')),(0,r.mdx)("h4",{id:"swift-3"},"Swift"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-swift"},'func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {\n     ACPCore.configure(withAppId: "yourAppId")   \n     ACPSignal.registerExtension()\n     ACPCore.start(nil)\n     // Override point for customization after application launch.\n     return true;\n}\n')),(0,r.mdx)("p",null,"Please note that the Signal extension is automatically included in the Mobile Core pod. When you manually install the Signal extension, ensure that you add the ",(0,r.mdx)("inlineCode",{parentName:"p"},"libACPSignal_iOS.a")," library to your project."),(0,r.mdx)(m,{platform:"react-native",task:"register",repeat:"2",mdxType:"Variant"}),(0,r.mdx)("h4",{id:"javascript-1"},"JavaScript"),(0,r.mdx)("p",null,"When using React Native, registering Signal with Mobile Core should be done in native code which is shown under the Android and iOS tabs."),(0,r.mdx)(m,{platform:"flutter",task:"register",repeat:"2",mdxType:"Variant"}),(0,r.mdx)("h4",{id:"dart-1"},"Dart"),(0,r.mdx)("p",null,"When using Flutter, registering Signal with Mobile Core should be done in native code which is shown under the Android and iOS tabs."),(0,r.mdx)(m,{platform:"cordova",task:"register",repeat:"2",mdxType:"Variant"}),(0,r.mdx)("h4",{id:"cordova-1"},"Cordova"),(0,r.mdx)("p",null,"When using Cordova, registering Signal with Mobile Core must be done in native code which is shown under the Android and iOS tabs."),(0,r.mdx)(m,{platform:"unity",task:"register",repeat:"3",mdxType:"Variant"}),(0,r.mdx)("h4",{id:"c-2"},"C#"),(0,r.mdx)("p",null,"Register the extension in the ",(0,r.mdx)("inlineCode",{parentName:"p"},"start()")," function:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-csharp"},"void Start()\n{   \n  ACPSignal.RegisterExtension();\n}\n")),(0,r.mdx)(m,{platform:"xamarin",task:"register",repeat:"7",mdxType:"Variant"}),(0,r.mdx)("h4",{id:"c-3"},"C#"),(0,r.mdx)("p",null,(0,r.mdx)("strong",{parentName:"p"},"iOS")),(0,r.mdx)("p",null,"Register the Signal extension with the Mobile Core by adding the following to your app's ",(0,r.mdx)("inlineCode",{parentName:"p"},"FinishedLaunching:")," delegate method:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-csharp"},'public override bool FinishedLaunching(UIApplication app, NSDictionary options)\n{\n  ACPSignal.RegisterExtension();\n  // start Mobile Core\n  ACPCore.Start(startCallback);\n\n  return base.FinishedLaunching(app, options);\n}\n\nprivate void startCallback()\n{\n  // set app id from the Data Collection UI\n  ACPCore.ConfigureWithAppID("yourAppId");\n}\n')),(0,r.mdx)("p",null,(0,r.mdx)("strong",{parentName:"p"},"Android")),(0,r.mdx)("p",null,"Register the Signal extension with the Mobile Core by adding the following to your app's ",(0,r.mdx)("inlineCode",{parentName:"p"},"OnCreate:")," method:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-csharp"},'protected override void OnCreate(Bundle savedInstanceState)\n{\n  base.OnCreate(savedInstanceState);\n    LoadApplication(new App());\n  ACPCore.Application = this.Application;\n  ACPSignal.RegisterExtension();\n  // start Mobile Core\n  ACPCore.Start(new CoreStartCompletionCallback());\n}\n\nclass CoreStartCompletionCallback : Java.Lang.Object, IAdobeCallback\n{\n  public void Call(Java.Lang.Object callback)\n  {\n  // set app id from the Data Collection UI\n    ACPCore.ConfigureWithAppID("yourAppId");\n  }\n}\n')))}u.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-documentation-mobile-core-signal-tabs-index-md-a16fb9106f125cec66a9.js.map