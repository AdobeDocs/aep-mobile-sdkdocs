"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[7e3],{52258:function(e,n,i){i.r(n),i.d(n,{_frontmatter:function(){return l},default:function(){return u}});var t,a=i(87462),o=i(63366),r=(i(15007),i(64983)),d=i(91515),p=["components"],l={},m=(t="Variant",function(e){return console.warn("Component "+t+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.mdx)("div",e)}),c={_frontmatter:l},s=d.Z;function u(e){var n=e.components,i=(0,o.Z)(e,p);return(0,r.mdx)(s,(0,a.Z)({},c,i,{components:n,mdxType:"MDXLayout"}),(0,r.mdx)(m,{platform:"android",task:"add",repeat:"4",mdxType:"Variant"}),(0,r.mdx)("h4",{id:"java"},"Java"),(0,r.mdx)("ol",null,(0,r.mdx)("li",{parentName:"ol"},"Add the library to your project."),(0,r.mdx)("li",{parentName:"ol"},"Import the library.")),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-java"},"import com.adobe.marketing.mobile.*;\n")),(0,r.mdx)("p",null,"Audience Manager depends on the Identity extension and is automatically included in the Core pod. When manually installing the Audience Manager extension, ensure that you add the ",(0,r.mdx)("inlineCode",{parentName:"p"},"identity-1.x.x.aar")," library to your project."),(0,r.mdx)(m,{platform:"ios-aep",task:"add",repeat:"6",mdxType:"Variant"}),(0,r.mdx)("ol",null,(0,r.mdx)("li",{parentName:"ol"},(0,r.mdx)("p",{parentName:"li"},"Add the ",(0,r.mdx)("a",{parentName:"p",href:"../mobile-core/index.md"},"Mobile Core")," and Audience extensions to your project using Cocoapods.")),(0,r.mdx)("li",{parentName:"ol"},(0,r.mdx)("p",{parentName:"li"},"Add the following pods in your ",(0,r.mdx)("inlineCode",{parentName:"p"},"Podfile"),":"),(0,r.mdx)("pre",{parentName:"li"},(0,r.mdx)("code",{parentName:"pre",className:"language-ruby"}," pod 'AEPCore'\n pod 'AEPAudience'\n pod 'AEPIdentity'\n")))),(0,r.mdx)("p",null,"Please note that the Audience Manager extension depends on the Identity extension."),(0,r.mdx)("h4",{id:"swift"},"Swift"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-swift"},"   import AEPCore\n   import AEPAudience\n   import AEPIdentity\n")),(0,r.mdx)("h4",{id:"objective-c"},"Objective-C"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-objectivec"},"   @import AEPCore;\n   @import AEPAudience;\n   @import AEPIdentity;\n")),(0,r.mdx)(m,{platform:"ios-acp",task:"add",repeat:"6",mdxType:"Variant"}),(0,r.mdx)("ol",null,(0,r.mdx)("li",{parentName:"ol"},"Add the library to your project via your ",(0,r.mdx)("inlineCode",{parentName:"li"},"Podfile")," by adding ",(0,r.mdx)("inlineCode",{parentName:"li"},"pod 'ACPAudience'")),(0,r.mdx)("li",{parentName:"ol"},"Import the Audience and Identity library, using the respective language.")),(0,r.mdx)("p",null,"Please note that the Audience Manager extension depends on the Identity extension, which is automatically included in the Core pod. If you are installing the Audience Manager extension manually, ensure you add the  ",(0,r.mdx)("inlineCode",{parentName:"p"},"libACPIdentity_iOS.a")," library to your project."),(0,r.mdx)("h4",{id:"swift-1"},"Swift"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-swift"},"   import ACPCore\n   import ACPAudience\n")),(0,r.mdx)("h4",{id:"objective-c-1"},"Objective-C"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-objectivec"},'  #import "ACPCore.h"\n  #import "ACPAudience.h"\n  #import "ACPIdentity.h"\n')),(0,r.mdx)(m,{platform:"react-native",task:"add",repeat:"7",mdxType:"Variant"}),(0,r.mdx)("h4",{id:"javascript"},"JavaScript"),(0,r.mdx)("ol",null,(0,r.mdx)("li",{parentName:"ol"},"Install Audience Manager in your project.")),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-jsx"},"npm install @adobe/react-native-acpaudience\nreact-native link @adobe/react-native-acpaudience\n")),(0,r.mdx)("ol",{start:2},(0,r.mdx)("li",{parentName:"ol"},"Import the extension.")),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-jsx"},"import {ACPAudience} from '@adobe/react-native-acpaudience';\n")),(0,r.mdx)("ol",{start:3},(0,r.mdx)("li",{parentName:"ol"},"Ensure the extension version is correct.")),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-jsx"},'ACPAudience.extensionVersion().then(version => console.log("AdobeExperienceSDK: ACPAudience version: " + version));\n')),(0,r.mdx)(m,{platform:"android",task:"register",repeat:"4",mdxType:"Variant"}),(0,r.mdx)("h4",{id:"java-1"},"Java"),(0,r.mdx)("p",null,"Call the ",(0,r.mdx)("inlineCode",{parentName:"p"},"setApplication()")," method once in the ",(0,r.mdx)("inlineCode",{parentName:"p"},"onCreate()")," method of your main activity."),(0,r.mdx)("p",null,"For example, your code might look like the following:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-java"},"public class AudiencetApp extends Application {\n\n@Override\npublic void onCreate() {\n     super.onCreate();\n     MobileCore.setApplication(this);\n\n     try {\n         Audience.registerExtension(); //Register Audience Manager with Mobile Core\n         Identity.registerExtension();\n         MobileCore.start(null);\n     } catch (Exception e) {\n     //Log the exception\n     }\n  }\n}\n")),(0,r.mdx)(m,{platform:"ios-aep",task:"register",repeat:"6",mdxType:"Variant"}),(0,r.mdx)("h4",{id:"swift-2"},"Swift"),(0,r.mdx)("p",null,"In your app's ",(0,r.mdx)("inlineCode",{parentName:"p"},"_:didFinishLaunchingWithOptions")," function, register the Audience Manager extension with the Mobile Core:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-swift"},'func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {  \n  MobileCore.registerExtensions([Audience.self, Identity.self], {\n  MobileCore.configureWith(appId: "yourAppId") \n })  \n ...\n}\n')),(0,r.mdx)("h4",{id:"objective-c-2"},"Objective-C"),(0,r.mdx)("p",null,"In your app's ",(0,r.mdx)("inlineCode",{parentName:"p"},"application:didFinishLaunchingWithOptions")," function, register the Audience Manager extension with the Mobile Core:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-objectivec"},'- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n   [AEPMobileCore registerExtensions:@[AEPMobileAudience.class, AEPMobileIdentity.class] completion:^{\n   [AEPMobileCore configureWithAppId: @"yourAppId"];\n  }];\n  ...\n}\n')),(0,r.mdx)(m,{platform:"ios-acp",task:"register",repeat:"6",mdxType:"Variant"}),(0,r.mdx)("h4",{id:"swift-3"},"Swift"),(0,r.mdx)("p",null,"In your app's ",(0,r.mdx)("inlineCode",{parentName:"p"},"_:didFinishLaunchingWithOptions")," function, register the Audience Manager extension with the Mobile Core:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-swift"},"func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {  \n ACPIdentity.registerExtension()\n ACPAudience.registerExtension()\n ACPCore.start(nil)\n\n // Override point for customization after application launch.\n return true;\n}\n")),(0,r.mdx)("h4",{id:"objective-c-3"},"Objective-C"),(0,r.mdx)("p",null,"In your app's ",(0,r.mdx)("inlineCode",{parentName:"p"},"application:didFinishLaunchingWithOptions")," function, register the Audience Manager extension with the Mobile Core:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-objectivec"},"- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n   [ACPIdentity registerExtension];\n   [ACPAudience registerExtension];\n   [ACPCore start:nil]\n\n   // Override point for customization after application launch.\n   return YES;\n}\n")),(0,r.mdx)(m,{platform:"react-native",task:"register",repeat:"3",mdxType:"Variant"}),(0,r.mdx)("h4",{id:"javascript-1"},"JavaScript"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-jsx"},"import {ACPAudience} from '@adobe/react-native-acpcore';\n\ninitSDK() {\n    ACPAudience.registerExtension();\n}\n")))}u.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-documentation-adobe-audience-manager-tabs-index-md-3038213fb796210d3a4b.js.map