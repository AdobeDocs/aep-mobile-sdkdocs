"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[6624],{97745:function(e,a,n){n.r(a),n.d(a,{_frontmatter:function(){return p},default:function(){return u}});var r,t=n(87462),i=n(63366),l=(n(15007),n(64983)),d=n(91515),m=["components"],p={},o=(r="Variant",function(e){return console.warn("Component "+r+" was not imported, exported, or provided by MDXProvider as global scope"),(0,l.mdx)("div",e)}),s={_frontmatter:p},x=d.Z;function u(e){var a=e.components,n=(0,i.Z)(e,m);return(0,l.mdx)(x,(0,t.Z)({},s,n,{components:a,mdxType:"MDXLayout"}),(0,l.mdx)(o,{platform:"android",api:"clear-queue",repeat:"8",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"java"},"Java"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"public static void clearQueue()\n")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"Analytics.clearQueue();\n")),(0,l.mdx)("h4",{id:"kotlin"},"Kotlin"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"Analytics.clearQueue();\n")),(0,l.mdx)(o,{platform:"ios",api:"clear-queue",repeat:"10",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"swift"},"Swift"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},"static func clearQueue()\n")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},"Analytics.clearQueue()\n")),(0,l.mdx)("h4",{id:"objective-c"},"Objective-C"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objc"},"+ (void) clearQueue;\n")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objc"},"[AEPMobileAnalytics clearQueue];\n")),(0,l.mdx)(o,{platform:"android",api:"extension-version",repeat:"8",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"java-1"},"Java"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"public static String extensionVersion()\n")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"String analyticsExtensionVersion = Analytics.extensionVersion();\n")),(0,l.mdx)("h4",{id:"kotlin-1"},"Kotlin"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"val extensionVersion = Analytics.extensionVersion();\n")),(0,l.mdx)(o,{platform:"ios",api:"extension-version",repeat:"10",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"swift-1"},"Swift"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},"static var extensionVersion: String\n")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},"let version = Analytics.extensionVersion\n")),(0,l.mdx)("h4",{id:"objective-c-1"},"Objective-C"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objectivec"},"+ (nonnull NSString*) extensionVersion;\n")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objectivec"},"NSString *version = [AEPMobileAnalytics extensionVersion];\n")),(0,l.mdx)(o,{platform:"android",api:"get-queue-size",repeat:"8",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"java-2"},"Java"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"public static void getQueueSize(@NonNull final AdobeCallback<Long> callback)\n")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"Analytics.getQueueSize(new AdobeCallbackWithError<Long>() {\n    @Override\n    public void fail(AdobeError adobeError) {\n        // Handle the error\n    }\n\n    @Override\n    public void call(Long size) {\n        // Handle the queue size\n    }\n});\n")),(0,l.mdx)("h4",{id:"kotlin-2"},"Kotlin"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"Analytics.getQueueSize(object: AdobeCallbackWithError<Long> {\n    override fun call(size: Long?) {\n        // Handle the queue size\n    }\n\n    override fun fail(error: AdobeError?) {\n        // Handle the error\n    }\n})\n")),(0,l.mdx)(o,{platform:"ios",api:"get-queue-size",repeat:"1",mdxType:"Variant"}),(0,l.mdx)("p",null,"Please use the ",(0,l.mdx)("a",{parentName:"p",href:"#getqueuesizewithcompletionhandler"},"getQueueSizeWithCompletionHandler")," API instead."),(0,l.mdx)(o,{platform:"ios",api:"get-queue-size-with-completion-handler",repeat:"10",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"swift-2"},"Swift"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},"static func getQueueSize(completion: @escaping (Int, Error?) -> Void)\n")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},"Analytics.getQueueSize { (queueSize, error) in\n    // Handle error (if non-nil) or use queueSize.\n}\n")),(0,l.mdx)("h4",{id:"objective-c-2"},"Objective-C"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objectivec"},"+ (void)getQueueSize:^(NSInteger, NSError * _Nullable)completion\n")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objectivec"},"[AEPMobileAnalytics getQueueSize:^(NSInteger queueSize, NSError * _Nullable error) {\n    // Handle error (if non-nil) or use queueSize.\n }];\n")),(0,l.mdx)(o,{platform:"android",api:"get-tracking-identifier",repeat:"9",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"java-3"},"Java"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"public static void getTrackingIdentifier(@NonNull final AdobeCallback<String> callback)\n")),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("em",{parentName:"li"},"callback")," is invoked with the tracking Identifier string value. When an AdobeCallbackWithError is provided, an AdobeError can be returned in the eventuality of an unexpected error or if the default timeout (5000ms) is met before the callback is returned with analytics tracking identifier.")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"Analytics.getTrackingIdentifier(new AdobeCallbackWithError<String>() {\n    @Override\n    public void fail(AdobeError adobeError) {\n        // Handle the error\n    }\n\n    @Override\n    public void call(String s) {\n        // Handle the Experience Cloud ID\n    }\n});\n")),(0,l.mdx)("h4",{id:"kotlin-3"},"Kotlin"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"Analytics.getTrackingIdentifier(object: AdobeCallbackWithError<String> {\n    override fun call(id: String?) {\n        // Handle the Experience Cloud ID\n    }\n\n    override fun fail(error: AdobeError?) {\n        // Handle the error\n    }\n})\n")),(0,l.mdx)(o,{platform:"ios",api:"get-tracking-identifier",repeat:"1",mdxType:"Variant"}),(0,l.mdx)("p",null,"Please see the ",(0,l.mdx)("a",{parentName:"p",href:"#gettrackingidentifierwithcompletionhandler"},"getTrackingIdentifierWithCompletionHandler")," section for using this API call."),(0,l.mdx)(o,{platform:"ios",api:"get-tracking-identifier-with-completion-handler",repeat:"10",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"swift-3"},"Swift"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},"static func getTrackingIdentifier(completion: @escaping (String?, Error?) -> Void)\n")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},"Analytics.getTrackingIdentifier { (trackingId, error) in\n   // Handle the error (if non-nil) or use the trackingIdentifier value\n}\n")),(0,l.mdx)("h4",{id:"objective-c-3"},"Objective-C"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objectivec"},"+ (void) getTrackingIdentifier:^(NSString * _Nullable, NSError * _Nullable)completion\n")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objectivec"},"AEPMobileAnalytics getTrackingIdentifier:^(NSString * _Nullable trackingIdentifier, NSError * _Nullable error) {\n   // Handle the error (if non-nil) or use the trackingIdentifier value\n}];\n")),(0,l.mdx)(o,{platform:"android",api:"get-visitor-identifier",repeat:"9",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"java-4"},"Java"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"public static void getVisitorIdentifier(@NonNull final AdobeCallback<String> callback)\n")),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("em",{parentName:"li"},"callback")," is invoked with the visitor identifier value. When an AdobeCallbackWithError is provided, an AdobeError can be returned in the eventuality of an unexpected error or if the default timeout (5000ms) is met before the callback is returned with visitor identifier.")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"Analytics.getVisitorIdentifier(new AdobeCallbackWithError<String>() {\n    @Override\n    public void fail(AdobeError adobeError) {\n        // Handle the error\n    }\n\n    @Override\n    public void call(String s) {\n        // Handle the Visitor ID\n    }\n});\n")),(0,l.mdx)("h4",{id:"kotlin-4"},"Kotlin"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"Analytics.getVisitorIdentifier(object: AdobeCallbackWithError<String> {\n    override fun call(id: String?) {\n        // Handle the Visitor ID\n    }\n\n    override fun fail(error: AdobeError?) {\n        // Handle the error\n    }\n})\n")),(0,l.mdx)(o,{platform:"ios",api:"get-visitor-identifier",repeat:"1",mdxType:"Variant"}),(0,l.mdx)("p",null,"For more information on using this API call, please read ",(0,l.mdx)("a",{parentName:"p",href:"#getvisitoridentifierwithcompletionHandler"},"getVisitorIdentifierWithCompletionHandler"),"."),(0,l.mdx)(o,{platform:"ios",api:"get-visitor-identifier-with-completion-handler",repeat:"10",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"swift-4"},"Swift"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},"static func getVisitorIdentifier(completion: @escaping (String?, Error?) -> Void)\n")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},"Analytics.getVisitorIdentifier { (visitorIdentifier, error) in\n   // Handle the error (if non-nil) or use the visitorIdentifier value\n}\n")),(0,l.mdx)("h4",{id:"objective-c-4"},"Objective-C"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objectivec"},"+ (void) getVisitorIdentifier:^(NSString * _Nullable, NSError * _Nullable)completion\n")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objectivec"},"[AEPMobileAnalytics getVisitorIdentifier:^(NSString * _Nullable visitorIdentifier, NSError * _Nullable error) {\n   // Handle the error (if non-nil) or use the visitorIdentifier value\n}];\n")),(0,l.mdx)(o,{platform:"android",api:"register-extension",repeat:"8",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"java-5"},"Java"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"public static void registerExtension()\n")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"Analytics.registerExtension();\n")),(0,l.mdx)("h4",{id:"kotlin-5"},"Kotlin"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-kotlin"},"Analytics.registerExtension()\n")),(0,l.mdx)(o,{platform:"android",api:"send-queued-hits",repeat:"8",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"java-6"},"Java"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"public static void sendQueuedHits()\n")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"Analytics.sendQueuedHits();\n")),(0,l.mdx)("h4",{id:"kotlin-6"},"Kotlin"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"Analytics.sendQueuedHits();\n")),(0,l.mdx)(o,{platform:"ios",api:"send-queued-hits",repeat:"10",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"swift-5"},"Swift"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},"static func sendQueuedHits()\n")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},"[AEPMobileAnalytics sendQueueHits];\n")),(0,l.mdx)("h4",{id:"objective-c-5"},"Objective-C"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objectivec"},"+ (void) sendQueueHits\n")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objectivec"},"Analytics.sendQueuedHits()\n")),(0,l.mdx)(o,{platform:"android",api:"set-visitor-identifier",repeat:"9",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"java-7"},"Java"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"public static void setVisitorIdentifier(@NonNull final String visitorID)\n")),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("em",{parentName:"li"},"visitorIdentifier")," is the new value for the visitor identifier.")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},'Analytics.setVisitorIdentifier("custom_identifier");\n')),(0,l.mdx)("h4",{id:"kotlin-7"},"Kotlin"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},'Analytics.setVisitorIdentifier("custom_identifier");\n')),(0,l.mdx)(o,{platform:"ios",api:"set-visitor-identifier",repeat:"11",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"swift-6"},"Swift"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},"static func setVisitorIdentifier(visitorIdentifier: String)\n")),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("em",{parentName:"li"},"visitorIdentifier")," is the new value for the visitor identifier.")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},'Analytics.setVisitorIdentifier(visitorIdentifier:"custom_identifier")\n')),(0,l.mdx)("h4",{id:"objective-c-6"},"Objective-C"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objectivec"},"+ (void) setVisitorIdentifier:(NSString * _Nonnull)\n")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objectivec"},'[AEPMobileAnalytics setVisitorIdentifier:@"custom_identifier"];\n')))}u.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-solution-adobe-analytics-tabs-api-reference-md-d0119b1c79090eb06eb0.js.map