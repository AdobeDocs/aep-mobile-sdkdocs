{"version":3,"file":"component---src-pages-edge-media-for-edge-network-tabs-index-md-6aa421ce8e3e4cce7314.js","mappings":"2OAQsBA,E,mFADTC,EAAe,CAAC,EAKvBC,GAJgBF,EAIQ,UAJA,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,4EAC5B,eAASG,EAClB,GAEMG,EAAc,CAClBL,aAAAA,GAEIM,EAAYC,EAAAA,EACH,SAASC,EAAW,GAGhC,IAFDC,EAAU,EAAVA,WACGP,GAAK,YAER,OAAO,SAACI,GAAS,UAAKD,EAAiBH,EAAK,CAAEO,WAAYA,EAAYC,QAAQ,eAI5E,SAACT,EAAO,CAACU,SAAS,UAAUC,KAAK,MAAMC,OAAO,KAAKH,QAAQ,aAC3D,oBACE,eAAII,WAAW,MAAI,gHAErB,eACE,GAAM,UAAQ,WAEhB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,mBAAiB,mSAOlC,eACE,GAAM,UAAQ,WAEhB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,8RAOhC,SAAC,UAAM,CAACC,MAAM,2DAA2DL,QAAQ,YACjF,eACE,MAAS,IAET,eAAII,WAAW,MAAI,+DAErB,eACE,GAAM,QAAM,SAEd,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,8MAMhC,eACE,GAAM,YAAU,WAElB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,mBAAiB,0MAMlC,SAACb,EAAO,CAACU,SAAS,MAAMC,KAAK,MAAMC,OAAO,IAAIH,QAAQ,aACtD,oBACE,eAAII,WAAW,MAAI,qHAAsH,uBAAYA,WAAW,MAAI,WAAyB,OAE/L,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,uHAMhC,eACE,MAAS,IAET,eAAIA,WAAW,MAAI,mDAErB,mBAAG,mBAAQA,WAAW,KAAG,WACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBAAgB,mFAMjC,mBAAG,mBAAQA,WAAW,KAAG,iBACzB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBAAqB,2FAMtC,SAACb,EAAO,CAACU,SAAS,UAAUC,KAAK,WAAWC,OAAO,IAAIH,QAAQ,aAC/D,oGACA,eACE,GAAM,UAAQ,SAEhB,qBAAK,iBAAMI,WAAW,MAClB,UAAa,iBAAe,slBAmBhC,eACE,GAAM,YAAU,WAElB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,mBAAiB,6dAgBlC,SAACb,EAAO,CAACU,SAAS,MAAMC,KAAK,WAAWC,OAAO,IAAIH,QAAQ,aAC3D,eACE,GAAM,SAAO,UAEf,oCAAqB,uBAAYI,WAAW,KAAG,mCAAiD,6EAChG,qBAAK,iBAAMA,WAAW,MAClB,UAAa,kBAAgB,wSAQjC,eACE,GAAM,eAAa,gBAErB,oCAAqB,uBAAYA,WAAW,KAAG,6CAA2D,uCAC1G,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBAAqB,wUAU1C,CAEAN,EAAWQ,gBAAiB,C","sources":["webpack://dev-site-documentation-template/./src/pages/edge/media-for-edge-network/tabs/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/aep-mobile-sdkdocs/aep-mobile-sdkdocs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nimport Alerts from '/src/pages/resources/alerts.md';\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst Variant = makeShortcode(\"Variant\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <Variant platform=\"android\" task=\"add\" repeat=\"11\" mdxType=\"Variant\" />\n    <ol>\n      <li parentName=\"ol\">{`Add the Media for Edge Network extension and its dependencies to your project using the app's Gradle file.`}</li>\n    </ol>\n    <h4 {...{\n      \"id\": \"kotlin\"\n    }}>{`Kotlin`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`implementation(platform(\"com.adobe.marketing.mobile:sdk-bom:3.+\"))\nimplementation(\"com.adobe.marketing.mobile:core\")\nimplementation(\"com.adobe.marketing.mobile:edge\")\nimplementation(\"com.adobe.marketing.mobile:edgeidentity\")\nimplementation(\"com.adobe.marketing.mobile:edgemedia\")\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"groovy\"\n    }}>{`Groovy`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`implementation platform('com.adobe.marketing.mobile:sdk-bom:3.+')\nimplementation 'com.adobe.marketing.mobile:core'\nimplementation 'com.adobe.marketing.mobile:edge'\nimplementation 'com.adobe.marketing.mobile:edgeidentity'\nimplementation 'com.adobe.marketing.mobile:edgemedia'\n`}</code></pre>\n    <Alerts query=\"platform=android-gradle&componentClass=InlineNestedAlert\" mdxType=\"Alerts\" />\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`Import the libraries in your application's main activity.`}</li>\n    </ol>\n    <h4 {...{\n      \"id\": \"java\"\n    }}>{`Java`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import com.adobe.marketing.mobile.MobileCore;\nimport com.adobe.marketing.mobile.Edge;\nimport com.adobe.marketing.mobile.edge.identity.Identity;\nimport com.adobe.marketing.mobile.edge.media.Media;\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"kotlin-1\"\n    }}>{`Kotlin`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`import com.adobe.marketing.mobile.MobileCore\nimport com.adobe.marketing.mobile.Edge\nimport com.adobe.marketing.mobile.edge.identity.Identity\nimport com.adobe.marketing.mobile.edge.media.Media\n`}</code></pre>\n    <Variant platform=\"ios\" task=\"add\" repeat=\"7\" mdxType=\"Variant\" />\n    <ol>\n      <li parentName=\"ol\">{`To add the Media for Edge Network extension and its dependencies to your project, add the following pods to your `}<inlineCode parentName=\"li\">{`Podfile`}</inlineCode>{`:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`pod 'AEPCore', '~> 5.0'\npod 'AEPEdge', '~> 5.0'\npod 'AEPEdgeIdentity', '~> 5.0'\npod 'AEPEdgeMedia', '~> 5.0'\n`}</code></pre>\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`In Xcode project, import the Media extension:`}</li>\n    </ol>\n    <p><strong parentName=\"p\">{`Swift`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`import AEPCore\nimport AEPEdge\nimport AEPEdgeIdentity\nimport AEPEdgeMedia\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Objective-C`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`@import AEPCore;\n@import AEPEdge;\n@import AEPEdgeIdentity;\n@import AEPEdgeMedia;\n`}</code></pre>\n    <Variant platform=\"android\" task=\"register\" repeat=\"5\" mdxType=\"Variant\" />\n    <p>{`To register Media with Mobile Core, import the Media library and register it:`}</p>\n    <h4 {...{\n      \"id\": \"java-1\"\n    }}>{`Java`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class MainApp extends Application {\n     private final String ENVIRONMENT_FILE_ID = \"YOUR_APP_ENVIRONMENT_ID\";\n\n     @Override\n     public void onCreate() {\n         super.onCreate();\n\n         MobileCore.setApplication(this);\n         MobileCore.configureWithAppID(ENVIRONMENT_FILE_ID);\n\n         List<Class<? extends Extension>> extensions = Arrays.asList(\n            Edge.EXTENSION, Identity.EXTENSION, Media.EXTENSION);\n         MobileCore.registerExtensions(extensions, o -> {\n             Log.d(LOG_TAG, \"AEP Mobile SDK is initialized\");\n         });\n     }\n }\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"kotlin-2\"\n    }}>{`Kotlin`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`class MyApp : Application() {\n    val ENVIRONMENT_FILE_ID = \"YOUR_APP_ENVIRONMENT_ID\"\n\n    override fun onCreate() {\n        super.onCreate()\n        MobileCore.setApplication(this)\n        MobileCore.configureWithAppID(ENVIRONMENT_FILE_ID)\n\n        val extensions = listOf(Edge.EXTENSION, Identity.EXTENSION, Media.EXTENSION)\n        MobileCore.registerExtensions(extensions) {\n            Log.d(LOG_TAG, \"AEP Mobile SDK is initialized\")\n        }\n    }\n}\n`}</code></pre>\n    <Variant platform=\"ios\" task=\"register\" repeat=\"6\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift\"\n    }}>{`Swift`}</h4>\n    <p>{`In your app's `}<inlineCode parentName=\"p\">{`_:didFinishLaunchingWithOptions`}</inlineCode>{` function, register the Audience Manager extension with the Mobile Core:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {\n   MobileCore.registerExtensions([Edge.self, Identity.self, Media.self], {\n   MobileCore.configureWith(appId: \"yourEnvironmentId\")\n })\n ...\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c\"\n    }}>{`Objective-C`}</h4>\n    <p>{`In your app's `}<inlineCode parentName=\"p\">{`application:didFinishLaunchingWithOptions`}</inlineCode>{`, register Media with Mobile Core:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n    [AEPMobileCore registerExtensions:@[AEPMobileEdgeMedia.class, AEPMobileEdge.class, AEPMobileEdgeIdentity.class] completion:^{\n    [AEPMobileCore configureWithAppId: @\"yourEnvironmentId\"];\n  }];\n  ...\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","Variant","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","platform","task","repeat","parentName","query","isMDXComponent"],"sourceRoot":""}