{"version":3,"file":"component---src-pages-edge-edge-network-tutorials-send-overrides-sendevent-md-347ef0d4969c7a8ce652.js","mappings":"4OAOsBA,E,wEADTC,EAAe,CAAC,EAKvBC,GAJgBF,EAIU,YAJF,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,4EAC5B,eAASG,EAClB,GAEMG,EAAc,CAClBL,aAAAA,GAEIM,EAAYC,EAAAA,EACH,SAASC,EAAW,GAGhC,IAFDC,EAAU,EAAVA,WACGP,GAAK,YAER,OAAO,SAACI,GAAS,UAAKD,EAAiBH,EAAK,CAAEO,WAAYA,EAAYC,QAAQ,eAG5E,eACE,GAAM,mDAAiD,oDAEzD,+LACA,eACE,GAAM,iBAAe,kBAEvB,0IACA,oBACE,eAAIC,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,kBAAgB,QACX,0BAA0B,mBAAQA,WAAW,MAAI,SAAmB,sBAAsB,mBAAQA,WAAW,MAAI,SAAmB,aAEvJ,6EACA,oBACE,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,0DAAwD,2BAEpE,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,kGAAgG,wDAG9G,eACE,GAAM,0BAAwB,2BAEhC,2KAA4J,uBAAYA,WAAW,KAAG,aAA2B,iFACjN,+HACA,SAACV,EAAS,CAACW,MAAM,gBAAgBC,OAAO,IAAIC,UAAU,gCAAgCJ,QAAQ,eAC9F,kCACA,qBAAK,iBAAMC,WAAW,MAClB,UAAa,kBAAgB,6WAYjC,uCACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,mBAAiB,iYAelC,eACE,GAAM,qCAAmC,sCAE3C,+IACA,SAACV,EAAS,CAACW,MAAM,gBAAgBC,OAAO,IAAIC,UAAU,gCAAgCJ,QAAQ,eAC9F,kCACA,qBAAK,iBAAMC,WAAW,MAClB,UAAa,kBAAgB,04BAoCjC,uCACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,mBAAiB,okCA8ClC,eACE,GAAM,mBAAiB,oBAEzB,mHACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBAAe,spBAgCpC,CAEAH,EAAWO,gBAAiB,C","sources":["webpack://dev-site-documentation-template/./src/pages/edge/edge-network/tutorials/send-overrides-sendevent.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/aep-mobile-sdkdocs/aep-mobile-sdkdocs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst CodeBlock = makeShortcode(\"CodeBlock\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"sending-configuration-overrides-using-sendevent\"\n    }}>{`Sending configuration overrides using sendEvent`}</h1>\n    <p>{`Datastream overrides let you define additional configuration settings for your datastreams, allowing you to trigger different datastream behaviors on a per event basis.`}</p>\n    <h2 {...{\n      \"id\": \"prerequisites\"\n    }}>{`Prerequisites`}</h2>\n    <p>{`Before continuing with this tutorial, please ensure that the Edge extension version meets the minimum requirements:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"../../index.md\"\n        }}>{`Edge`}</a>{` extension version >= `}<strong parentName=\"li\">{`2.4.0`}</strong>{` (Android) and >= `}<strong parentName=\"li\">{`4.3.0`}</strong>{` (iOS).`}</li>\n    </ul>\n    <p>{`Additionally, please complete the following tutorials:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"../../../home/getting-started/configure-datastreams.md\"\n        }}>{`Configure datastreams`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://experienceleague.adobe.com/docs/experience-platform/datastreams/configure.html?lang=en\"\n        }}>{`Define overrides in your datastream configuration`}</a></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"datastream-id-override\"\n    }}>{`Datastream ID override`}</h2>\n    <p>{`After configuring the datastream overrides, you can now send these overrides to the Edge Network through Mobile SDK. Sending the overrides using the `}<inlineCode parentName=\"p\">{`sendEvent`}</inlineCode>{` API is the final step of activating the datastream configuration overrides.`}</p>\n    <p>{`The following examples demonstrate what a datastream ID override looks like in a Mobile SDK integration:`}</p>\n    <CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"iOS (Swift), Android (Kotlin)\" mdxType=\"CodeBlock\" />\n    <p>{`iOS (Swift)`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`// Create Experience event from dictionary\nvar xdmData: [String: Any] = [\n  \"eventType\": \"SampleXDMEvent\",\n  \"sample\": \"data\",\n]\nlet experienceEvent = ExperienceEvent(xdm: xdmData, datastreamIdOverride: \"SampleDatastreamId\")\n\nEdge.sendEvent(experienceEvent: experienceEvent) { (handles: [EdgeEventHandle]) in\n  // Handle the Edge Network response\n}\n`}</code></pre>\n    <p>{`Android (Kotlin)`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`// Create experience event from Map\nval xdmData = mutableMapOf < String, Any > ()\nxdmData[\"eventType\"] = \"SampleXDMEvent\"\nxdmData[\"sample\"] = \"data\"\n\nval experienceEvent = ExperienceEvent.Builder()\n    .setXdmSchema(xdmData)\n    .setDatastreamIdOverride(\"SampleDatastreamId\")\n    .build()\n\nEdge.sendEvent(experienceEvent) {\n    // Handle the Edge Network response\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"datastream-configuration-override\"\n    }}>{`Datastream configuration override`}</h2>\n    <p>{`The following examples demonstrate what a datastream configuration override could look like in a Mobile SDK integration:`}</p>\n    <CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"iOS (Swift), Android (Kotlin)\" mdxType=\"CodeBlock\" />\n    <p>{`iOS (Swift)`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`// Create Experience event from dictionary\nvar xdmData: [String: Any] = [\n  \"eventType\": \"SampleXDMEvent\",\n  \"sample\": \"data\",\n]\n\nlet configOverrides: [String: Any] = [\n  \"com_adobe_experience_platform\": [\n    \"datasets\": [\n      \"event\": [\n        \"datasetId\": \"SampleEventDatasetIdOverride\"\n      ]\n    ]\n  ],\n  \"com_adobe_analytics\": [\n  \"reportSuites\": [\n        \"MyFirstOverrideReportSuite\",\n          \"MySecondOverrideReportSuite\",\n          \"MyThirdOverrideReportSuite\"\n      ]\n  ],\n  \"com_adobe_identity\": [\n    \"idSyncContainerId\": \"1234567\"\n  ],\n  \"com_adobe_target\": [\n    \"propertyToken\": \"63a46bbc-26cb-7cc3-def0-9ae1b51b6c62\"\n ],\n]\n\nlet experienceEvent = ExperienceEvent(xdm: xdmData, datastreamConfigOverride: configOverrides)\n\nEdge.sendEvent(experienceEvent: experienceEvent) { (handles: [EdgeEventHandle]) in\n  // Handle the Edge Network response\n}\n`}</code></pre>\n    <p>{`Android (Kotlin)`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`// Create experience event from Map\nval xdmData = mutableMapOf < String, Any > ()\nxdmData[\"eventType\"] = \"SampleXDMEvent\"\nxdmData[\"sample\"] = \"data\"\n\nval configOverrides = mapOf(\n    \"com_adobe_experience_platform\"\n    to mapOf(\n        \"datasets\"\n        to mapOf(\n            \"event\"\n            to mapOf(\"datasetId\"\n                to \"SampleEventDatasetIdOverride\")\n        )\n    ),\n    \"com_adobe_analytics\"\n    to mapOf(\n        \"reportSuites\"\n        to listOf(\n            \"MyFirstOverrideReportSuite\",\n            \"MySecondOverrideReportSuite\",\n            \"MyThirdOverrideReportSuite\"\n        )\n    ),\n    \"com_adobe_identity\"\n    to mapOf(\n        \"idSyncContainerId\"\n        to \"1234567\"\n    ),\n    \"com_adobe_target\"\n    to mapOf(\n        \"propertyToken\"\n        to \"63a46bbc-26cb-7cc3-def0-9ae1b51b6c62\"\n    )\n)\n\nval experienceEvent = ExperienceEvent.Builder()\n    .setXdmSchema(xdmData)\n    .setDatastreamConfigOverride(configOverrides)\n    .build()\n\nEdge.sendEvent(experienceEvent) {\n    // Handle the Edge Network response\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"payload-example\"\n    }}>{`Payload example`}</h2>\n    <p>{`The following example shows a sample payload after overriding the datastream configurations:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"meta\": {\n    \"configOverrides\": {\n      \"com_adobe_experience_platform\": {\n        \"datasets\": {\n          \"event\": {\n            \"datasetId\": \"SampleProfileDatasetIdOverride\"\n          }\n        }\n      },\n      \"com_adobe_analytics\": {\n        \"reportSuites\": [\n        \"MyFirstOverrideReportSuite\",\n        \"MySecondOverrideReportSuite\",\n        \"MyThirdOverrideReportSuite\"\n        ]\n      },\n      \"com_adobe_identity\": {\n        \"idSyncContainerId\": \"1234567\"\n      },\n      \"com_adobe_target\": {\n        \"propertyToken\": \"63a46bbc-26cb-7cc3-def0-9ae1b51b6c62\"\n      }\n    },\n    \"state\": {  }\n  },\n  \"events\": [  ]\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","CodeBlock","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","slots","repeat","languages","isMDXComponent"],"sourceRoot":""}