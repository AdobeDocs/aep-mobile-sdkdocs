{"version":3,"file":"component---src-pages-edge-adobe-journey-optimizer-content-card-ui-android-public-classes-content-provider-contentcarduiprovider-md-2d34a90a74a4e24cf9fc.js","mappings":"4OAOsBA,E,wEADTC,EAAe,CAAC,EAKvBC,GAJgBF,EAIU,YAJF,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,4EAC5B,eAASG,EAClB,GAEMG,EAAc,CAClBL,aAAAA,GAEIM,EAAYC,EAAAA,EACH,SAASC,EAAW,GAGhC,IAFDC,EAAU,EAAVA,WACGP,GAAK,YAER,OAAO,SAACI,GAAS,UAAKD,EAAiBH,EAAK,CAAEO,WAAYA,EAAYC,QAAQ,eAG5E,eACE,GAAM,yBAAuB,0BAE/B,4DAA6C,cAAGC,WAAW,IACvD,KAAQ,6BAA2B,wBACN,MAAM,uBAAYA,WAAW,KAAG,yBAAuC,uLACxG,eACE,GAAM,WAAS,YAEjB,eACE,GAAM,cAAY,eAEpB,6IACA,eACE,GAAM,WAAS,YAEjB,iDAAkC,cAAGA,WAAW,IAC5C,KAAQ,iCAA+B,iBACjB,OAC1B,eACE,GAAM,UAAQ,WAEhB,SAACV,EAAS,CAACW,MAAM,gBAAgBC,OAAO,IAAIC,UAAU,SAASJ,QAAQ,eACvE,eACE,GAAM,UAAQ,WAEhB,qBAAK,iBAAMC,WAAW,MAClB,UAAa,mBAAiB,oEAGlC,eACE,GAAM,oBAAkB,qBAE1B,iIAAkH,cAAGA,WAAW,IAC5H,KAAQ,eAAa,cACF,8JACvB,eACE,GAAM,aAAW,YAEnB,wBAAS,cAAGA,WAAW,IACnB,KAAQ,6CAA2C,QACtC,2CACjB,eACE,GAAM,YAAU,WAElB,SAACV,EAAS,CAACW,MAAM,gBAAgBC,OAAO,IAAIC,UAAU,SAASJ,QAAQ,eACvE,eACE,GAAM,YAAU,WAElB,qBAAK,iBAAMC,WAAW,MAClB,UAAa,mBAAiB,+DAGlC,eACE,GAAM,kBAAgB,mBAExB,mDAAoC,cAAGA,WAAW,IAC9C,KAAQ,eAAa,cACF,iEACvB,eACE,GAAM,YAAU,WAElB,SAACV,EAAS,CAACW,MAAM,gBAAgBC,OAAO,IAAIC,UAAU,SAASJ,QAAQ,eACvE,eACE,GAAM,YAAU,WAElB,qBAAK,iBAAMC,WAAW,MAClB,UAAa,mBAAiB,4CAKtC,CAEAH,EAAWO,gBAAiB,C","sources":["webpack://dev-site-documentation-template/./src/pages/edge/adobe-journey-optimizer/content-card-ui/Android/public-classes/content-provider/contentcarduiprovider.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/aep-mobile-sdkdocs/aep-mobile-sdkdocs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst CodeBlock = makeShortcode(\"CodeBlock\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"contentcarduiprovider\"\n    }}>{`ContentCardUIProvider`}</h1>\n    <p>{`Messaging extension implementation of `}<a parentName=\"p\" {...{\n        \"href\": \"./aepuicontentprovider.md\"\n      }}>{`AepUIContentProvider`}</a>{`. `}<inlineCode parentName=\"p\">{`ContentCardUIProvider`}</inlineCode>{` is responsible for fetching and managing the content for a given surface. It uses Adobe Messaging APIs to retrieve propositions and transform them into UI templates for display.`}</p>\n    <h2 {...{\n      \"id\": \"methods\"\n    }}>{`Methods`}</h2>\n    <h3 {...{\n      \"id\": \"getcontent\"\n    }}>{`getContent`}</h3>\n    <p>{`Retrieves a flow of AepUITemplate lists for the given surface. The flow emits updates whenever new content is fetched.`}</p>\n    <h3 {...{\n      \"id\": \"returns\"\n    }}>{`Returns`}</h3>\n    <p>{`A flow that emits lists of `}<a parentName=\"p\" {...{\n        \"href\": \"../ui-models/aepuitemplate.md\"\n      }}>{`AepUITemplate`}</a>{`s.`}</p>\n    <h3 {...{\n      \"id\": \"syntax\"\n    }}>{`Syntax`}</h3>\n    <CodeBlock slots=\"heading, code\" repeat=\"1\" languages=\"Kotlin\" mdxType=\"CodeBlock\" />\n    <h3 {...{\n      \"id\": \"kotlin\"\n    }}>{`Kotlin`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`override suspend fun getContent(): Flow<List<AepUITemplate>>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"getcontentcardui\"\n    }}>{`getContentCardUI`}</h3>\n    <p>{`Retrieves a flow of AepUI instances for the given surface. This function initiates the content fetch using `}<a parentName=\"p\" {...{\n        \"href\": \"#getcontent\"\n      }}>{`getContent`}</a>{` and then returns a flow of AepUI instances that represent the UI templates. The flow emits updates whenever new content is fetched or any changes occur.`}</p>\n    <h3 {...{\n      \"id\": \"returns-1\"\n    }}>{`Returns`}</h3>\n    <p>{`A `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.android.com/kotlin/flow\"\n      }}>{`Flow`}</a>{` that emits a list of AepUI instances.`}</p>\n    <h3 {...{\n      \"id\": \"syntax-1\"\n    }}>{`Syntax`}</h3>\n    <CodeBlock slots=\"heading, code\" repeat=\"1\" languages=\"Kotlin\" mdxType=\"CodeBlock\" />\n    <h3 {...{\n      \"id\": \"kotlin-1\"\n    }}>{`Kotlin`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`suspend fun getContentCardUI(): Flow<List<AepUI<*, *>>>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"refreshcontent\"\n    }}>{`refreshContent`}</h3>\n    <p>{`Updates the flow returned by `}<a parentName=\"p\" {...{\n        \"href\": \"#getContent\"\n      }}>{`getContent`}</a>{` with the latest cached content cards for the given surface.`}</p>\n    <h3 {...{\n      \"id\": \"syntax-2\"\n    }}>{`Syntax`}</h3>\n    <CodeBlock slots=\"heading, code\" repeat=\"1\" languages=\"Kotlin\" mdxType=\"CodeBlock\" />\n    <h3 {...{\n      \"id\": \"kotlin-2\"\n    }}>{`Kotlin`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`override suspend fun refreshContent()\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","CodeBlock","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","slots","repeat","languages","isMDXComponent"],"sourceRoot":""}