{"version":3,"file":"06be9c7c4d5578484afd29a814daac62ab927e0e-1f882e29ae04d9f4a5ee.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/pages/edge/adobe-journey-optimizer-decisioning/tabs/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/aep-mobile-sdkdocs/aep-mobile-sdkdocs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nimport Alerts from '/src/pages/resources/alerts.md';\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst Variant = makeShortcode(\"Variant\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <Variant platform=\"android\" task=\"install\" repeat=\"8\" mdxType=\"Variant\" />\n    <ol>\n      <li parentName=\"ol\">{`Add the Mobile Core, Edge, Identity for Edge Network and Optimize dependencies in your app's gradle file.`}</li>\n    </ol>\n    <h4 {...{\n      \"id\": \"kotlin\"\n    }}>{`Kotlin`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`implementation(platform(\"com.adobe.marketing.mobile:sdk-bom:3.+\"))\nimplementation(\"com.adobe.marketing.mobile:core\")\nimplementation(\"com.adobe.marketing.mobile:edgeidentity\")\nimplementation(\"com.adobe.marketing.mobile:edge\")\nimplementation(\"com.adobe.marketing.mobile:optimize\")\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"groovy\"\n    }}>{`Groovy`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`implementation platform('com.adobe.marketing.mobile:sdk-bom:3.+')\nimplementation 'com.adobe.marketing.mobile:core'\nimplementation 'com.adobe.marketing.mobile:edgeidentity'\nimplementation 'com.adobe.marketing.mobile:edge'\nimplementation 'com.adobe.marketing.mobile:optimize'\n`}</code></pre>\n    <Alerts query=\"platform=android-gradle&componentClass=InlineNestedAlert\" mdxType=\"Alerts\" />\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`Import the Mobile Core, Edge, Edge Identity, and Optimize extensions in your application class.`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import com.adobe.marketing.mobile.MobileCore;\nimport com.adobe.marketing.mobile.Edge;\nimport com.adobe.marketing.mobile.edge.identity.Identity;\nimport com.adobe.marketing.mobile.Optimize;\n`}</code></pre>\n    <Variant platform=\"ios\" task=\"install\" repeat=\"7\" mdxType=\"Variant\" />\n    <ol>\n      <li parentName=\"ol\">{`Configure your app target to fetch Mobile Core, Edge, Identity for Edge Network and Optimize from Cocoapods by specifying the following pod dependencies in your `}<inlineCode parentName=\"li\">{`Podfile`}</inlineCode>{`.`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`use_frameworks!\ntarget 'YourAppTarget' do\n    pod 'AEPCore', '~> 5.0'\n    pod 'AEPEdge', '~> 5.0'\n    pod 'AEPEdgeIdentity', '~> 5.0'\n    pod 'AEPOptimize', '~> 5.0'\nend\n`}</code></pre>\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`Import the Mobile Core, Edge, Edge Identity, and Optimize libraries.`}</li>\n    </ol>\n    <h4 {...{\n      \"id\": \"swift\"\n    }}>{`Swift`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`// AppDelegate.swift\nimport AEPCore\nimport AEPEdge\nimport AEPEdgeIdentity\nimport AEPOptimize\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c\"\n    }}>{`Objective-C`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objc\"\n      }}>{`// AppDelegate.h\n@import AEPCore;\n@import AEPEdge;\n@import AEPEdgeIdentity;\n@import AEPOptimize;\n`}</code></pre>\n    <Variant platform=\"android\" task=\"register\" repeat=\"4\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java\"\n    }}>{`Java`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import com.adobe.marketing.mobile.MobileCore;\nimport com.adobe.marketing.mobile.Edge;\nimport com.adobe.marketing.mobile.edge.identity.Identity;\nimport com.adobe.marketing.mobile.optimize.Optimize;\nimport com.adobe.marketing.mobile.AdobeCallback;\n\npublic class MainApp extends Application {\n\n  private final String ENVIRONMENT_FILE_ID = \"YOUR_APP_ENVIRONMENT_ID\";\n\n    @Override\n    public void onCreate() {\n        super.onCreate();\n\n        MobileCore.setApplication(this);\n        MobileCore.configureWithAppID(ENVIRONMENT_FILE_ID);\n\n        MobileCore.registerExtensions(\n            Arrays.asList(Edge.EXTENSION, Identity.EXTENSION, Optimize.EXTENSION),\n            o -> Log.d(\"MainApp\", \"Adobe Journey Optimizer - Decisioning Mobile SDK was initialized.\")\n        );\n    }\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"kotlin-1\"\n    }}>{`Kotlin`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import com.adobe.marketing.mobile.MobileCore\nimport com.adobe.marketing.mobile.Edge\nimport com.adobe.marketing.mobile.edge.identity.Identity\nimport com.adobe.marketing.mobile.optimize.Optimize\nimport com.adobe.marketing.mobile.AdobeCallback\n\nclass MainApp : Application() {\n\n  private var ENVIRONMENT_FILE_ID: String = \"YOUR_APP_ENVIRONMENT_ID\"\n\n    override fun onCreate() {\n        super.onCreate()\n\n        MobileCore.setApplication(this)\n        MobileCore.configureWithAppID(ENVIRONMENT_FILE_ID)\n\n        MobileCore.registerExtensions(\n          listOf(Edge.EXTENSION, Identity.EXTENSION, Optimize.EXTENSION)\n        ) {\n          Log.d(\"MainApp\", \"Adobe Experience Platform Mobile SDK was initialized\")\n        }\n    }\n\n}\n`}</code></pre>\n    <Variant platform=\"ios\" task=\"register\" repeat=\"4\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift-1\"\n    }}>{`Swift`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`// AppDelegate.swift\n\nimport AEPCore\nimport AEPEdge\nimport AEPEdgeIdentity\nimport AEPOptimize\n\n@UIApplicationMain\nfinal class AppDelegate: UIResponder, UIApplicationDelegate {\n  var window: UIWindow?\n\n  func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]? = nil) -> Bool {\n\n      // register the extensions\n      MobileCore.registerExtensions([Edge.self, AEPEdgeIdentity.Identity.self, Optimize.self]) {\n        MobileCore.configureWith(appId: <YOUR_ENVIRONMENT_FILE_ID>) // Replace <YOUR_ENVIRONMENT_FILE_ID> with a String containing your own ID.\n      }\n\n      return true\n  }\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-1\"\n    }}>{`Objective-C`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objc\"\n      }}>{`// AppDelegate.m\n\n@import AEPCore;\n@import AEPEdge;\n@import AEPEdgeIdentity;\n@import AEPOptimize;\n\n- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n\n    // register the extensions\n    [AEPMobileCore registerExtensions:@[AEPMobileEdge.class, AEPMobileEdgeIdentity.class, , AEPMobileOptimize.class] completion:^{\n      [AEPMobileCore configureWithAppId: <YOUR_ENVIRONMENT_FILE_ID>]; // Replace <YOUR_ENVIRONMENT_FILE_ID> with a String containing your own ID.\n  }];\n  ...\n}\n`}</code></pre>\n    <Variant platform=\"android\" task=\"decisionscope\" repeat=\"2\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-1\"\n    }}>{`Java`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`final DecisionScope decisionScope = DecisionScope(\"xcore:offer-activity:1111111111111111\", \"xcore:offer-placement:1111111111111111\", 3);\n`}</code></pre>\n    <Variant platform=\"ios\" task=\"decisionscope\" repeat=\"4\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift-2\"\n    }}>{`Swift`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`let decisionScope = DecisionScope(activityId: \"xcore:offer-activity:1111111111111111\", \n                                  placementId: \"xcore:offer-placement:1111111111111111\",\n                                  itemCount: 3)\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-2\"\n    }}>{`Objective-C`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objc\"\n      }}>{`AEPDecisionScope* decisionScope = [[AEPDecisionScope alloc] initWithActivityId:@\"xcore:offer-activity:1111111111111111\"         \n                                                                   placementId:@\"xcore:offer-placement:1111111111111111\" \n                                                                     itemCount:3];\n`}</code></pre>\n    <Variant platform=\"android\" task=\"encodedscope\" repeat=\"2\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-2\"\n    }}>{`Java`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`final DecisionScope decisionScope = DecisionScope(\"eyJ4ZG06YWN0aXZpdHlJZCI6Inhjb3JlOm9mZmVyLWFjdGl2aXR5OjEyYmEyZjM4MWJjYTY3NWUiLCJ4ZG06cGxhY2VtZW50SWQiOiJ4Y29yZTpvZmZlci1wbGFjZW1lbnQ6MTJiOWEwMDA1NTUwNzM1NyIsICJ4ZG06aXRlbUNvdW50IjozfQ==\");\n`}</code></pre>\n    <Variant platform=\"ios\" task=\"encodedscope\" repeat=\"4\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift-3\"\n    }}>{`Swift`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`let decisionScope = DecisionScope(name: \"eyJ4ZG06YWN0aXZpdHlJZCI6Inhjb3JlOm9mZmVyLWFjdGl2aXR5OjEyYmEyZjM4MWJjYTY3NWUiLCJ4ZG06cGxhY2VtZW50SWQiOiJ4Y29yZTpvZmZlci1wbGFjZW1lbnQ6MTJiOWEwMDA1NTUwNzM1NyIsICJ4ZG06aXRlbUNvdW50IjozfQ==\")\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-3\"\n    }}>{`Objective-C`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objc\"\n      }}>{`AEPDecisionScope* decisionScope = [[AEPDecisionScope alloc] initWithName:@\"eyJ4ZG06YWN0aXZpdHlJZCI6Inhjb3JlOm9mZmVyLWFjdGl2aXR5OjEyYmEyZjM4MWJjYTY3NWUiLCJ4ZG06cGxhY2VtZW50SWQiOiJ4Y29yZTpvZmZlci1wbGFjZW1lbnQ6MTJiOWEwMDA1NTUwNzM1NyIsICJ4ZG06aXRlbUNvdW50IjozfQ==\"];\n`}</code></pre>\n    <Variant platform=\"android\" task=\"target-location\" repeat=\"2\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-3\"\n    }}>{`Java`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`final DecisionScope decisionScope = DecisionScope(\"myTargetLocation\");\n`}</code></pre>\n    <Variant platform=\"ios\" task=\"target-location\" repeat=\"4\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift-4\"\n    }}>{`Swift`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`let decisionScope = DecisionScope(name: \"myTargetLocation\")\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-4\"\n    }}>{`Objective-C`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objc\"\n      }}>{`AEPDecisionScope* decisionScope = [[AEPDecisionScope alloc] initWithName:@\"myTargetLocation\"];\n`}</code></pre>\n    <Variant platform=\"android\" task=\"target-parameters\" repeat=\"2\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-4\"\n    }}>{`Java`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`final Map<String, Object> data = new HashMap<>();\nfinal Map<String, String> targetParameters = new HashMap<>();\n\n// Add mbox parameters\ntargetParameters.put(\"someKey\", \"someValue\");\n\n// Add profile parameters - prefix with profile.\ntargetParameters.put(\"profile.membershipLevel\", \"platinum\");\n\n// Add product parameters\ntargetParameters.put(\"productId\", \"111\");\ntargetParameters.put(\"categoryId\", \"Books\");\n\n// Add order parameters\ntargetParameters.put(\"orderId\", \"10\");\ntargetParameters.put(\"orderTotal\", \"110.56\");\ntargetParameters.put(\"purchasedProductIds\", \"111\");\n\ndata.put(\"__adobe\", new HashMap<String, Object>() {\n  {\n    put(\"target\", targetParameters);\n  }\n});\n\n\nfinal DecisionScope decisionScope = DecisionScope(\"myTargetLocation\") // Target location (or mbox)\n\nfinal List<DecisionScope> decisionScopes = new ArrayList<>();\ndecisionScopes.add(decisionScope);\n\nOptimize.updatePropositions(decisionScopes, null, data);\n`}</code></pre>\n    <Variant platform=\"ios\" task=\"target-parameters\" repeat=\"4\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift-5\"\n    }}>{`Swift`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`var data: [String: Any] = [:]\nvar targetParameters: [String: String] = [:]\n\n// Add mbox parameters\ntargetParameters[\"someKey\"] = \"someValue\"\n\n// Add profile parameters - prefix with profile.\ntargetParameters[\"profile.membershipLevel\"] = \"platinum\"\n\n// Add product parameters\ntargetParameters[\"productId\"] = \"111\"\ntargetParameters[\"categoryId\"] = \"Books\"\n\n// Add order parameters\ntargetParameters[\"orderId\"] = \"10\"\ntargetParameters[\"orderTotal\"] = \"110.56\"\ntargetParameters[\"purchasedProductIds\"] = \"111\"\n\ndata[\"__adobe\"] = [\n  \"target\": targetParameters\n]\n\nlet decisionScope = DecisionScope(name: \"myTargetLocation\") // Target location (or mbox)\nOptimize.updatePropositions(for: [decisionScope] withXdm: nil andData: data)\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-5\"\n    }}>{`Objective-C`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objc\"\n      }}>{`NSMutableDictionary* data = [NSMutableDictionary dictionary];\nNSMutableDictionary* targetParameters = [NSMutableDictionary dictionary];\n\n// Add mbox parameters\ntargetParameters[@\"someKey\"] = @\"someValue\";\n\n// Add profile parameters - prefix with profile.\ntargetParameters[@\"profile.membershipLevel\"] = @\"platinum\";\n\n// Add product parameters\ntargetParameters[@\"productId\"] = @\"111\";\ntargetParameters[@\"categoryId\"] = @\"Books\";\n\n// Add order parameters\ntargetParameters[@\"orderId\"] = @\"10\";\ntargetParameters[@\"orderTotal\"] = @\"110.56\";\ntargetParameters[@\"purchasedProductIds\"] = @\"111\";\n\n[data setObject:[NSDictionary dictionaryWithObject:targetParameters forKey:@\"target\"] forKey:@\"__adobe\"];\n\nAEPDecisionScope* decisionScope = [[AEPDecisionScope alloc] initWithName:@\"myTargetLocation\"]; // Target location (or mbox)\n[AEPMobileOptimize updatePropositions:@[decisionScope] withXdm:nil andData:data];\n`}</code></pre>\n    <Variant platform=\"android\" task=\"target-tpid\" repeat=\"2\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-5\"\n    }}>{`Java`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`final IdentityItem item = new IdentityItem(\"1111\", AuthenticatedState.AUTHENTICATED, true);\nfinal IdentityMap identityMap = new IdentityMap();\nidentityMap.addItem(item, \"userCRMID\") // userCRMID being used as Third Party ID\nIdentity.updateIdentities(identityMap);\n`}</code></pre>\n    <Variant platform=\"ios\" task=\"target-tpid\" repeat=\"4\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift-6\"\n    }}>{`Swift`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`let identityMap = IdentityMap()\nidentityMap.add(item: IdentityItem(id: \"1111\", authenticatedState: AuthenticatedState.authenticated, primary: true),\n                withNamespace: \"userCRMID\") // userCRMID being used as Third Party ID\nIdentity.updateIdentities(with: identityMap)\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-6\"\n    }}>{`Objective-C`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objc\"\n      }}>{`AEPIdentityItem *item = [[AEPIdentityItem alloc] initWithId:@\"1111\" authenticatedState:AEPAuthenticatedStateAuthenticated primary:true];\n\nAEPIdentityMap *identityMap = [[AEPIdentityMap alloc] init];\n[identityMap addItem:item withNamespace:@\"userCRMID\"]; // userCRMID being used as Third Party ID\n\n[AEPMobileEdgeIdentity updateIdentities:identityMap];\n`}</code></pre>\n    <Variant platform=\"android\" task=\"proposition-tracking-offer\" repeat=\"2\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-6\"\n    }}>{`Java`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class Offer {\n  ...\n  /**\n    * Dispatches an event for the Edge network extension to send an Experience Event to the Edge network with the display interaction data for the\n    * given {@code Proposition} offer.\n    */\n  public void displayed() {...}\n\n  /**\n    * Dispatches an event for the Edge network extension to send an Experience Event to the Edge network with the tap interaction data for the\n    * given {@code Proposition} offer.\n    */\n  public void tapped() {...}\n}\n`}</code></pre>\n    <Variant platform=\"ios\" task=\"proposition-tracking-offer\" repeat=\"2\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift-7\"\n    }}>{`Swift`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`public extension Offer {\n    /// Dispatches an event for the Edge extension to send an Experience Event to the Edge network with the display interaction data for the given proposition item.\n    func displayed() {...}\n\n    /// Dispatches an event for the Edge extension to send an Experience Event to the Edge network with the tap interaction data for the given proposition item.\n    func tapped() {...}\n}\n`}</code></pre>\n    <Variant platform=\"android\" task=\"send-event-offer\" repeat=\"2\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-7\"\n    }}>{`Java`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`offer.displayed(); // Sends an Offer display notification to Edge network\n`}</code></pre>\n    <Variant platform=\"ios\" task=\"send-event-offer\" repeat=\"4\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift-8\"\n    }}>{`Swift`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`offer.displayed() // Sends an Offer display notification to Edge network\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-7\"\n    }}>{`Objective-C`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objc\"\n      }}>{`[offer displayed]; // Sends an Offer display notification to Edge network\n`}</code></pre>\n    <Variant platform=\"android\" task=\"proposition-tracking-edge\" repeat=\"3\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-8\"\n    }}>{`Java`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class Offer {\n  ...\n  /**\n    * Generates a map containing XDM formatted data for {@code Experience Event - Proposition Interactions} field group from this {@code Proposition} item.\n    *\n    * The returned XDM data does contain the {@code eventType} for the Experience Event with value {@code decisioning.propositionDisplay}.\n    *\n    * Note: The Edge sendEvent API can be used to dispatch this data in an Experience Event along with any additional XDM, free-form data, and override\n    * dataset identifier.\n    *\n    * @return {@code Map<String, Object>} containing the XDM data for the proposition interaction.\n    */\n  public Map<String, Object> generateDisplayInteractionXdm() {...}\n\n  /**\n    * Generates a map containing XDM formatted data for {@code Experience Event - Proposition Interactions} field group from this {@code Proposition} offer.\n    *\n    * The returned XDM data contains the {@code eventType} for the Experience Event with value {@code decisioning.propositionInteract}.\n    *\n    * Note: The Edge sendEvent API can be used to dispatch this data in an Experience Event along with any additional XDM, free-form data, and override\n    * dataset identifier.\n    *\n    * @return {@code Map<String, Object>} containing the XDM data for the proposition interaction.\n    */\n  public Map<String, Object> generateTapInteractionXdm() {...}\n}\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class Proposition {\n  ...\n  /**\n    * Generates a map containing XDM formatted data for {@code Experience Event - Proposition Reference} field group from this {@code Proposition}.\n    *\n    * The returned XDM data does not contain {@code eventType} for the Experience Event.\n    *\n    * @return {@code Map<String, Object>} containing the XDM data for the proposition reference.\n    */\n  public Map<String, Object> generateReferenceXdm() {...}\n}\n`}</code></pre>\n    <Variant platform=\"ios\" task=\"proposition-tracking-edge\" repeat=\"3\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift-9\"\n    }}>{`Swift`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`public extension Offer {\n  /// Creates a dictionary containing XDM formatted data for \\`Experience Event - Proposition Interactions\\` field group from the given proposition option.\n  ///\n  /// The Edge \\`sendEvent(experienceEvent:_:)\\` API can be used to dispatch this data in an Experience Event along with any additional XDM, free-form data, or override dataset identifier.\n  ///\n  /// - Note: The returned XDM data also contains the \\`eventType\\` for the Experience Event with value \\`decisioning.propositionDisplay\\`.\n  /// - Returns A dictionary containing XDM data for the proposition interactions.\n  func generateDisplayInteractionXdm() -> [String: Any] {...}\n\n  /// Creates a dictionary containing XDM formatted data for \\`Experience Event - Proposition Interactions\\` field group from the given proposition option.\n  ///\n  /// The Edge \\`sendEvent(experienceEvent:_:)\\` API can be used to dispatch this data in an Experience Event along with any additional XDM, free-form data, or override dataset identifier.\n  ///\n  /// - Note: The returned XDM data also contains the \\`eventType\\` for the Experience Event with value \\`decisioning.propositionInteract\\`.\n  /// - Returns A dictionary containing XDM data for the proposition interactions.\n  func generateTapInteractionXdm() -> [String: Any] {...}\n}\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`public extension OptimizeProposition {\n  /// Creates a dictionary containing XDM formatted data for \\`Experience Event - Proposition Reference\\` field group from the given proposition.\n  ///\n  /// The Edge \\`sendEvent(experienceEvent:_:)\\` API can be used to dispatch this data in an Experience Event along with any additional XDM, free-form data, or override dataset identifier.\n  ///\n  /// - Note: The returned XDM data does not contain an \\`eventType\\` for the Experience Event.\n  /// - Returns A dictionary containing XDM data for the proposition reference.\n  func generateReferenceXdm() -> [String: Any] {...}\n}\n`}</code></pre>\n    <Variant platform=\"android\" task=\"send-event-edge\" repeat=\"2\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-9\"\n    }}>{`Java`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`// When a proposition is retrieved using getPropositions API or onUpdatePropositions API callback \n// and the corresponding offer is displayed, invoke method on Offer object to get the XDM data.\n\nfinal Map<String, Object> displayInteractionXdm = offer.generateDisplayInteractionXdm() // Offer display tracking XDM\nfinal Map<String, Object> additionalData = new HashMap<>();\nadditionalData.put(\"someDataKey\", \"someDataValue\");\n\nfinal ExperienceEvent experienceEvent = new ExperienceEvent.Builder().setXdmSchema(displayInteractionXdm).setData(additionalData).build();\nEdge.sendEvent(experienceEvent, null)\n`}</code></pre>\n    <Variant platform=\"ios\" task=\"send-event-edge\" repeat=\"4\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"swift-10\"\n    }}>{`Swift`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`// When a proposition is retrieved using getPropositions API or onUpdatePropositions API callback \n// and the corresponding offer is displayed, invoke method on Offer object to get the XDM data.\n\nlet displayInteractionXdm = offer.generateDisplayInteractionXdm() // Offer display tracking XDM\nlet additionalData: [String: Any] = [\"someDataKey\": \"someDataValue\"]\n\nlet experienceEvent = ExperienceEvent(xdm: displayInteractionXdm, data: additionalData)\nEdge.sendEvent(experienceEvent)\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"objective-c-8\"\n    }}>{`Objective-C`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objc\"\n      }}>{`// When a proposition is retrieved using getPropositions API or onUpdatePropositions API callback \n// and the corresponding offer is displayed, invoke method on Offer object to get the XDM data.\n\nNSDictionary* displayInteractionXdm = [offer generateDisplayInteractionXdm];\nNSDictionary* additionalData = @{@\"someDataKey\": @\"someDataValue\"};\n\nAEPExperienceEvent* experienceEvent = [[AEPExperienceEvent alloc] initWithXdm:displayInteractionXdm data:additionalData datasetIdentifier:nil];\n[AEPMobileEdge sendExperienceEvent:event completion:nil];\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","Variant","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","platform","task","repeat","parentName","query","isMDXComponent"],"sourceRoot":""}