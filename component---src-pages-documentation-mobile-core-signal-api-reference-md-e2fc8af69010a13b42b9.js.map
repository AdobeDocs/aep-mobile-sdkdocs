{"version":3,"file":"component---src-pages-documentation-mobile-core-signal-api-reference-md-e2fc8af69010a13b42b9.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/pages/documentation/mobile-core/signal/api-reference.md","webpack://dev-site-documentation-template/./src/pages/documentation/mobile-core/signal/tabs/api-reference.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/aep-mobile-sdkdocs/aep-mobile-sdkdocs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nimport Tabs from './tabs/api-reference.md';\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst TabsBlock = makeShortcode(\"TabsBlock\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"signal-api-reference\"\n    }}>{`Signal API reference`}</h1>\n    <h2 {...{\n      \"id\": \"extensionversion\"\n    }}>{`extensionVersion`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`extensionVersion()`}</inlineCode>{` API returns the version of the Signal extension that is registered with the Mobile Core extension.`}</p>\n    <p>{`To get the version of the Signal extension, use the following code sample:`}</p>\n    <TabsBlock orientation=\"horizontal\" slots=\"heading, content\" repeat=\"8\" mdxType=\"TabsBlock\" />\n    <p>{`Android`}</p>\n    <Tabs query=\"platform=android&api=extension-version\" mdxType=\"Tabs\" />\n    <p>{`iOS (AEP 3.x)`}</p>\n    <Tabs query=\"platform=ios-aep&api=extension-version\" mdxType=\"Tabs\" />\n    <p>{`iOS (ACP 2.x)`}</p>\n    <Tabs query=\"platform=ios-acp&api=extension-version\" mdxType=\"Tabs\" />\n    <p>{`React Native`}</p>\n    <Tabs query=\"platform=react-native&api=extension-version\" mdxType=\"Tabs\" />\n    <p>{`Flutter`}</p>\n    <Tabs query=\"platform=flutter&api=extension-version\" mdxType=\"Tabs\" />\n    <p>{`Cordova`}</p>\n    <Tabs query=\"platform=cordova&api=extension-version\" mdxType=\"Tabs\" />\n    <p>{`Unity`}</p>\n    <Tabs query=\"platform=unity&api=extension-version\" mdxType=\"Tabs\" />\n    <p>{`Xamarin`}</p>\n    <Tabs query=\"platform=xamarin&api=extension-version\" mdxType=\"Tabs\" />\n    <h2 {...{\n      \"id\": \"registerextension\"\n    }}>{`registerExtension`}</h2>\n    <p>{`Registers the Signal extension with the Mobile Core.`}</p>\n    <TabsBlock orientation=\"horizontal\" slots=\"heading, content\" repeat=\"4\" mdxType=\"TabsBlock\" />\n    <p>{`Android`}</p>\n    <Tabs query=\"platform=android&api=register-extension\" mdxType=\"Tabs\" />\n    <p>{`iOS (AEP 3.x)`}</p>\n    <Tabs query=\"platform=ios-aep&api=register-extension\" mdxType=\"Tabs\" />\n    <p>{`iOS (ACP 2.x)`}</p>\n    <Tabs query=\"platform=ios-acp&api=register-extension\" mdxType=\"Tabs\" />\n    <p>{`React Native`}</p>\n    <Tabs query=\"platform=react-native&api=register-extension\" mdxType=\"Tabs\" />\n    <h2 {...{\n      \"id\": \"collectpii\"\n    }}>{`collectPII`}</h2>\n    <p>{`The Signal extension can be used to handle `}<inlineCode parentName=\"p\">{`collectPII`}</inlineCode>{` rules. For more information, see the `}<a parentName=\"p\" {...{\n        \"href\": \"../api-reference.md#collectpii\"\n      }}>{`collectPII`}</a>{` API.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/aep-mobile-sdkdocs/aep-mobile-sdkdocs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst Variant = makeShortcode(\"Variant\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <Variant platform=\"android\" api=\"extension-version\" repeat=\"5\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public static String extensionVersion();\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`String signalExtensionVersion = Signal.extensionVersion();\n`}</code></pre>\n    <Variant platform=\"ios-aep\" api=\"extension-version\" repeat=\"7\" mdxType=\"Variant\" />\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`public static let extensionVersion\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Examples`}</strong></p>\n    <p><strong parentName=\"p\">{`Swift`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`let version = Signal.extensionVersion\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Objective-C`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`NSString *version = [AEPMobileSignal extensionVersion];\n`}</code></pre>\n    <Variant platform=\"ios-acp\" api=\"extension-version\" repeat=\"7\" mdxType=\"Variant\" />\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`(nonnull NSString*) extensionVersion;\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Examples`}</strong></p>\n    <p><strong parentName=\"p\">{`Swift`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`var signalExtensionVersion  = ACPSignal.extensionVersion()\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Objective-C`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objectivec\"\n      }}>{`NSString *signalExtensionVersion = [ACPSignal extensionVersion];\n`}</code></pre>\n    <Variant platform=\"react-native\" api=\"extension-version\" repeat=\"2\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"javascript\"\n    }}>{`JavaScript`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`ACPSignal.extensionVersion().then(signalExtensionVersion => console.log(\"AdobeExperienceSDK: ACPSignal version: \" + signalExtensionVersion));\n`}</code></pre>\n    <Variant platform=\"flutter\" api=\"extension-version\" repeat=\"2\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"dart\"\n    }}>{`Dart`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-dart\"\n      }}>{`String signalExtensionVersion = await FlutterACPSignal.extensionVersion;\n`}</code></pre>\n    <Variant platform=\"cordova\" api=\"extension-version\" repeat=\"2\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"cordova\"\n    }}>{`Cordova`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`ACPSignal.extensionVersion(function(version) {  \n    console.log(\"ACPSignal version: \" + version);\n}, function(error) {  \n    console.log(error);  \n});\n`}</code></pre>\n    <Variant platform=\"unity\" api=\"extension-version\" repeat=\"2\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"c\"\n    }}>{`C#`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`string signalVersion = ACPSignal.ExtensionVersion();\n`}</code></pre>\n    <Variant platform=\"xamarin\" api=\"extension-version\" repeat=\"2\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"c-1\"\n    }}>{`C#`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`string signalVersion = ACPSignal.ExtensionVersion();\n`}</code></pre>\n    <Variant platform=\"android\" api=\"register-extension\" repeat=\"5\" mdxType=\"Variant\" />\n    <h4 {...{\n      \"id\": \"java-1\"\n    }}>{`Java`}</h4>\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public static void registerExtension()\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`Signal.registerExtension();\n`}</code></pre>\n    <Variant platform=\"ios-aep\" api=\"register-extension\" repeat=\"1\" mdxType=\"Variant\" />\n    <p>{`This API no longer exists in `}<inlineCode parentName=\"p\">{`Signal`}</inlineCode>{`. Instead, the extension should be registered by calling the `}<inlineCode parentName=\"p\">{`registerExtensions`}</inlineCode>{` API in the MobileCore. Please see the updated SDK initialization steps at the `}<a parentName=\"p\" {...{\n        \"href\": \"../../migrate-to-swift.md#update-sdk-initialization\"\n      }}>{`migrate to Swift tutorial.`}</a></p>\n    <Variant platform=\"ios-acp\" api=\"register-extension\" repeat=\"7\" mdxType=\"Variant\" />\n    <p><strong parentName=\"p\">{`Syntax`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`+ (void) registerExtension;\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <p><strong parentName=\"p\">{`Swift`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`ACPSignal.registerExtension()\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Objective-C`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objc\"\n      }}>{`[ACPSignal registerExtension];\n`}</code></pre>\n    <Variant platform=\"react-native\" api=\"register-extension\" repeat=\"1\" mdxType=\"Variant\" />\n    <p>{`When using React Native, register the Signal extension with Mobile Core in native code as shown on the Android and iOS tabs.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","TabsBlock","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","orientation","slots","repeat","query","isMDXComponent","Variant","platform","api"],"sourceRoot":""}