"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[3367],{8453:function(e,a,t){t.r(a),t.d(a,{_frontmatter:function(){return o},default:function(){return x}});var n,r=t(87462),i=t(63366),l=(t(15007),t(64983)),p=t(91515),m=["components"],o={},d=(n="Variant",function(e){return console.warn("Component "+n+" was not imported, exported, or provided by MDXProvider as global scope"),(0,l.mdx)("div",e)}),s={_frontmatter:o},u=p.Z;function x(e){var a=e.components,t=(0,i.Z)(e,m);return(0,l.mdx)(u,(0,r.Z)({},s,t,{components:a,mdxType:"MDXLayout"}),(0,l.mdx)(d,{platform:"android",api:"extension-version",repeat:"8",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"java"},"Java"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"@NonNull public static String extensionVersion()\n")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"String extensionVersion = UserProfile.extensionVersion();\n")),(0,l.mdx)("h4",{id:"kotlin"},"Kotlin"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"val extensionVersion = UserProfile.extensionVersion();\n")),(0,l.mdx)(d,{platform:"ios",api:"extension-version",repeat:"10",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"swift"},"Swift"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},"static var extensionVersion: String\n")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},"let extensionVersion = UserProfile.extensionVersion\n")),(0,l.mdx)("h4",{id:"objective-c"},"Objective-C"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objectivec"},"+ (nonnull NSString*) extensionVersion;\n")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objectivec"},"NSString *extensionVersion = [AEPMobileUserProfile extensionVersion];\n")),(0,l.mdx)(d,{platform:"android",api:"get-user-attributes",repeat:"13",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"java-1"},"Java"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"public static void getUserAttributes(@NonNull final List<String> keys, @NonNull final AdobeCallback<Map<String, Object>> callback)\n")),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("em",{parentName:"li"},"callback")," is invoked after the customer attributes are available.")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("p",null,"A retail application wants to get the ",(0,l.mdx)("inlineCode",{parentName:"p"},"itemsAddedToCart")," user data when processing checkout."),(0,l.mdx)("p",null,"When ",(0,l.mdx)("inlineCode",{parentName:"p"},"AdobeCallbackWithError")," is provided, if the operation times out (5s) or an unexpected error occurs, the ",(0,l.mdx)("inlineCode",{parentName:"p"},"fail")," method is called with the appropriate ",(0,l.mdx)("inlineCode",{parentName:"p"},"AdobeError"),"."),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},'UserProfile.getUserAttributes(Arrays.asList("itemsAddedToCart"), new AdobeCallbackWithError<Map<String, Object>>() {\n    @Override\n    public void fail(AdobeError adobeError) {\n         // your customized code\n    }\n    @Override\n    public void call(Map<String, Object> stringObjectMap) {\n        // your customized code\n    }\n});\n')),(0,l.mdx)("h4",{id:"kotlin-1"},"Kotlin"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("p",null,"A retail application wants to get the ",(0,l.mdx)("inlineCode",{parentName:"p"},"itemsAddedToCart")," user data when processing checkout."),(0,l.mdx)("p",null,"When ",(0,l.mdx)("inlineCode",{parentName:"p"},"AdobeCallbackWithError")," is provided, if the operation times out (5s) or an unexpected error occurs, the ",(0,l.mdx)("inlineCode",{parentName:"p"},"fail")," method is called with the appropriate ",(0,l.mdx)("inlineCode",{parentName:"p"},"AdobeError"),"."),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},'UserProfile.getUserAttributes(listOf("itemsAddedToCart")) {\n    object : AdobeCallbackWithError<Map<String, Any?>> {\n        override fun fail(adobeError: AdobeError) {\n            // your customized code\n        }\n\n        override fun call(value: Map<String, Any?>) {\n            // your customized code\n        }\n    }\n}\n')),(0,l.mdx)(d,{platform:"ios",api:"get-user-attributes",repeat:"13",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"swift-1"},"Swift"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},"static func getUserAttributes(attributeNames: [String], completion: @escaping ([String: Any]?, AEPError) -> Void)\n")),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("em",{parentName:"li"},"completion")," is the callback ",(0,l.mdx)("inlineCode",{parentName:"li"},"function")," which will be called with user attributes.")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("p",null,"A retail application wants to get the ",(0,l.mdx)("inlineCode",{parentName:"p"},"itemsAddedToCart")," user data when processing checkout."),(0,l.mdx)("p",null,"When the callback is provided, if the operation times out (5s) or an unexpected error occurs, the ",(0,l.mdx)("inlineCode",{parentName:"p"},"completion")," method is called with the appropriate ",(0,l.mdx)("inlineCode",{parentName:"p"},"AEPError"),"."),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},'UserProfile.getUserAttributes(attributeNames: ["itemsAddedToCart"]) { attributes, error in\n// your customized code\n}\n')),(0,l.mdx)("h4",{id:"objective-c-1"},"Objective-C"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objectivec"},"+ (void)getUserAttributesWithAttributeNames:(NSArray<NSString *> * _Nonnull) comletion:^(NSDictionary<NSString *,id> * _Nullable, enum AEPError)\n")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objectivec"},'NSArray *attributes = @[@"itemsAddedToCart"];\n[AEPMobileUserProfile getUserAttributesWithAttributeNames:attributes completion:^(NSDictionary<NSString *,id> * _Nullable, enum AEPError) {\n        // your customized code\n}];\n')),(0,l.mdx)(d,{platform:"android",api:"register-extension",repeat:"5",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"java-2"},"Java"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"@Deprecated\npublic static void registerExtension()\n")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"import com.adobe.marketing.mobile.UserProfile\n\n...\n\nUserProfile.registerExtension();\n")),(0,l.mdx)(d,{platform:"ios",api:"register-extension",repeat:"11",mdxType:"Variant"}),(0,l.mdx)("p",null,"On iOS, the registration occurs by passing UserProfile extension to the ",(0,l.mdx)("a",{parentName:"p",href:"../mobile-core/api-reference.md#registerextension-s"},"MobileCore.registerExtensions API"),"."),(0,l.mdx)("h4",{id:"swift-2"},"Swift"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},"static func registerExtensions(_ extensions: [NSObject.Type],\n                               _ completion: (() -> Void)? = nil)\n")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},"import AEPUserProfile\n\nfunc application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {\n\n  MobileCore.registerExtensions([UserProfile.self])\n  // Override point for customization after application launch.\n  return true;\n}\n")),(0,l.mdx)("h4",{id:"objective-c-2"},"Objective-C"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objectivec"},"+ (void) registerExtensions: (NSArray<Class*>* _Nonnull) extensions\n                 completion: (void (^ _Nullable)(void)) completion;\n")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objectivec"},"@import AEPUserProfile;\n\n- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n\n  [AEPMobileCore registerExtensions:@[AEPMobileUserProfile.class] completion:nil];\n  // Override point for customization after application launch.\n  return YES;\n}\n")),(0,l.mdx)(d,{platform:"android",api:"remove-user-attribute",repeat:"6",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"java-3"},"Java"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"@Deprecated\npublic static void removeUserAttribute(@NonNull final String attributeName)\n")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("p",null,"A retail application wants to remove the ",(0,l.mdx)("inlineCode",{parentName:"p"},"itemsAddedToCart")," user data after the product is purchased."),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},'UserProfile.removeUserAttribute("itemsAddedToCart");\n')),(0,l.mdx)(d,{platform:"android",api:"remove-user-attributes",repeat:"10",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"java-4"},"Java"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"public static void removeUserAttributes(@NonNull final List<String> attributeNames)\n")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("p",null,"You want to remove ",(0,l.mdx)("inlineCode",{parentName:"p"},"username"),", ",(0,l.mdx)("inlineCode",{parentName:"p"},"usertype")," user data when session timeout occurs."),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},'UserProfile.removeUserAttributes(Arrays.asList("username", "usertype"));\n')),(0,l.mdx)("h4",{id:"kotlin-2"},"Kotlin"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("p",null,"You want to remove ",(0,l.mdx)("inlineCode",{parentName:"p"},"username"),", ",(0,l.mdx)("inlineCode",{parentName:"p"},"usertype")," user data when session timeout occurs."),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},'UserProfile.removeUserAttributes(listOf("username", "usertype"))\n')),(0,l.mdx)(d,{platform:"ios",api:"remove-user-attributes",repeat:"11",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"swift-3"},"Swift"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},"public static void removeUserAttributes(List<String> attributeNames)\n")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("p",null,"You want to remove ",(0,l.mdx)("inlineCode",{parentName:"p"},"username"),", ",(0,l.mdx)("inlineCode",{parentName:"p"},"usertype")," user data when session timeout occurs."),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},'UserProfile.removeUserAttributes(Arrays.asList("username", "usertype"));\n')),(0,l.mdx)("h4",{id:"objective-c-3"},"Objective-C"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objectivec"},"+ (void) removeUserAttributesWithAttributeNames:(NSArray<NSString *> * _Nonnull)\n")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objectivec"},'[AEPMobileUserProfile removeUserAttributesWithAttributeNames:@[@"username", @"usertype"]]\n')),(0,l.mdx)(d,{platform:"android",api:"update-user-attribute",repeat:"6",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"java-5"},"Java"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"@Deprecated\npublic static void updateUserAttribute(@NonNull final String attributeName, @Nullable final Object attributeValue)\n")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("p",null,"You want to update ",(0,l.mdx)("inlineCode",{parentName:"p"},"username")," of a user obtained in the log in page:"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},'UserProfile.updateUserAttribute("username", "Will Smith");\n')),(0,l.mdx)(d,{platform:"android",api:"update-user-attributes",repeat:"10",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"java-6"},"Java"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"public static void updateUserAttributes(@NonNull final Map<String, Object> attributeMap)\n")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("p",null,"You want to update ",(0,l.mdx)("inlineCode",{parentName:"p"},"username"),", ",(0,l.mdx)("inlineCode",{parentName:"p"},"usertype")," of a user obtained in the log in page:"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},'HashMap<String, Object> profileMap = new HashMap<>();\nprofileMap.put("username","Will Smith");\nprofileMap.put("usertype","Actor");\nUserProfile.updateUserAttributes(profileMap);\n')),(0,l.mdx)("h4",{id:"kotlin-3"},"Kotlin"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("p",null,"You want to update ",(0,l.mdx)("inlineCode",{parentName:"p"},"username"),", ",(0,l.mdx)("inlineCode",{parentName:"p"},"usertype")," of a user obtained in the log in page:"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},'val profileMap = mapOf(\n        "username" to "Will Smith",\n        "usertype" to "Actor"\n    )\nUserProfile.updateUserAttributes(profileMap)\n')),(0,l.mdx)(d,{platform:"ios",api:"update-user-attributes",repeat:"11",mdxType:"Variant"}),(0,l.mdx)("h4",{id:"swift-4"},"Swift"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},"public static func updateUserAttributes(attributeDict: [String: Any])\n")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("p",null,"You want to update ",(0,l.mdx)("inlineCode",{parentName:"p"},"username, usertype")," of a user obtained in the log in page:"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-swift"},'var profileMap = [AnyHashable: Any]()\nprofileMap["username"] = "will_smith"\nprofileMap["usertype"] = "Actor"\nUserProfile.updateUserAttributes(attributeDict: profileMap)\n')),(0,l.mdx)("h4",{id:"objective-c-4"},"Objective-C"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Syntax")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objectivec"},"+ (void)updateUserAttributesWithAttributeDict:(NSDictionary<NSString *,id> * _Nonnull)\n")),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"Example")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objectivec"},'NSMutableDictionary *profileMap = [NSMutableDictionary dictionary];\n[profileMap setObject:@"username" forKey:@"will_smith"];\n[profileMap setObject:@"usertype" forKey:@"Actor"];\n[AEPMobileUserProfile updateUserAttributesWithAttributeDict:profileMap];\n')))}x.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-home-base-profile-tabs-api-reference-md-3153682488a9434f27df.js.map