"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[5644,6542],{14117:function(e,n,t){t.r(n),t.d(n,{_frontmatter:function(){return p},default:function(){return u}});var o=t(87462),a=t(63366),i=(t(15007),t(64983)),r=t(91515),d=t(92205),l=["components"],p={},m=function(e){return function(n){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.mdx)("div",n)}},s=m("InlineAlert"),c=m("TabsBlock"),x={_frontmatter:p},g=r.Z;function u(e){var n=e.components,t=(0,a.Z)(e,l);return(0,i.mdx)(g,(0,o.Z)({},x,t,{components:n,mdxType:"MDXLayout"}),(0,i.mdx)("h1",{id:"consent-for-edge-network"},"Consent for Edge Network"),(0,i.mdx)("p",null,"The Adobe Experience Platform Consent mobile extension enables consent preferences collection from your mobile app when using the ",(0,i.mdx)("a",{parentName:"p",href:"../mobile-core"},"Adobe Experience Platform Mobile SDK")," and the ",(0,i.mdx)("a",{parentName:"p",href:"../experience-platform-extension"},"Edge Network extension"),"."),(0,i.mdx)("h2",{id:"configure-the-adobe-experience-platform-consent-extension-in-data-collection-ui"},"Configure the Adobe Experience Platform Consent extension in Data Collection UI"),(0,i.mdx)("ol",null,(0,i.mdx)("li",{parentName:"ol"},"In Data Collection UI, in your mobile property, select the ",(0,i.mdx)("strong",{parentName:"li"},"Extensions")," tab."),(0,i.mdx)("li",{parentName:"ol"},"On the ",(0,i.mdx)("strong",{parentName:"li"},"Catalog")," tab, locate or search for the ",(0,i.mdx)("strong",{parentName:"li"},"Consent")," extension, and select ",(0,i.mdx)("strong",{parentName:"li"},"Install"),"."),(0,i.mdx)("li",{parentName:"ol"},"Set your desired default consent level."),(0,i.mdx)("li",{parentName:"ol"},"Select ",(0,i.mdx)("strong",{parentName:"li"},"Save"),"."),(0,i.mdx)("li",{parentName:"ol"},"Follow the publishing process to update SDK configuration.")),(0,i.mdx)("p",null,(0,i.mdx)("span",{parentName:"p",className:"gatsby-resp-image-wrapper",style:{position:"relative",display:"block",marginLeft:"auto",marginRight:"auto",maxWidth:"974px"}},"\n      ",(0,i.mdx)("span",{parentName:"span",className:"gatsby-resp-image-background-image",style:{paddingBottom:"51.5625%",position:"relative",bottom:"0",left:"0",display:"block",transition:"opacity 0.5s 0.5s",pointerEvents:"none"}}),"\n  ",(0,i.mdx)("picture",{parentName:"span"},"\n          ",(0,i.mdx)("source",{parentName:"picture",srcSet:["/aep-mobile-sdkdocs/static/c1c1cbc666816e3157af548e0b1bef87/5530d/configuration.webp 320w","/aep-mobile-sdkdocs/static/c1c1cbc666816e3157af548e0b1bef87/0c8fb/configuration.webp 640w","/aep-mobile-sdkdocs/static/c1c1cbc666816e3157af548e0b1bef87/c1156/configuration.webp 974w"],sizes:"(max-width: 974px) 100vw, 974px",type:"image/webp"}),"\n          ",(0,i.mdx)("source",{parentName:"picture",srcSet:["/aep-mobile-sdkdocs/static/c1c1cbc666816e3157af548e0b1bef87/dd4a7/configuration.png 320w","/aep-mobile-sdkdocs/static/c1c1cbc666816e3157af548e0b1bef87/0f09e/configuration.png 640w","/aep-mobile-sdkdocs/static/c1c1cbc666816e3157af548e0b1bef87/1ed31/configuration.png 974w"],sizes:"(max-width: 974px) 100vw, 974px",type:"image/png"}),"\n          ",(0,i.mdx)("img",{parentName:"picture",className:"gatsby-resp-image-image",src:"/aep-mobile-sdkdocs/static/c1c1cbc666816e3157af548e0b1bef87/1ed31/configuration.png",alt:"AEP Consent extension configuration",title:"AEP Consent extension configuration",loading:"lazy",style:{width:"100%",height:"100%",margin:"0",verticalAlign:"middle",position:"absolute",opacity:"0",transition:"opacity 0.5s",color:"inherit",boxShadow:"inset 0px 0px 0px 400px none",top:"0",left:"0"}}),"\n        "),"\n    ")),(0,i.mdx)(s,{variant:"info",slots:"text",mdxType:"InlineAlert"}),(0,i.mdx)("p",null,"In order to ingest and use the data collected by this extension, follow the guide on ",(0,i.mdx)("a",{parentName:"p",href:"https://experienceleague.adobe.com/docs/experience-platform/xdm/data-types/consents.html#ingest"},"ingesting data using the Consents and Preferences data type"),"."),(0,i.mdx)(s,{variant:"warning",slots:"text",mdxType:"InlineAlert"}),(0,i.mdx)("p",null,"The use of this extension is currently limited to the setting (and enforcement) of client-side, macro consent flags. While SDK APIs allow for granular and global consent preference collection, flags are not consistently enforced with upstream applications and therefore will not accommodate use cases that rely on global/granular consent preferences."),(0,i.mdx)("h2",{id:"add-the-aep-consent-extension-to-your-app"},"Add the AEP Consent extension to your app"),(0,i.mdx)("h3",{id:"download-and-import-the-consent-extension"},"Download and import the Consent extension"),(0,i.mdx)(c,{orientation:"horizontal",slots:"heading, content",repeat:"3",mdxType:"TabsBlock"}),(0,i.mdx)("p",null,"Android"),(0,i.mdx)(d.default,{query:"platform=android&task=download",mdxType:"Tabs"}),(0,i.mdx)("p",null,"iOS (AEP 3.x)"),(0,i.mdx)(d.default,{query:"platform=ios-aep&task=download",mdxType:"Tabs"}),(0,i.mdx)("p",null,"iOS (ACP 2.x)"),(0,i.mdx)(d.default,{query:"platform=ios-acp&task=download",mdxType:"Tabs"}),(0,i.mdx)("h3",{id:"register-edge-extensions-with-mobile-core"},"Register Edge extensions with Mobile Core"),(0,i.mdx)(c,{orientation:"horizontal",slots:"heading, content",repeat:"2",mdxType:"TabsBlock"}),(0,i.mdx)("p",null,"Android"),(0,i.mdx)(d.default,{query:"platform=android&task=register",mdxType:"Tabs"}),(0,i.mdx)("p",null,"iOS (AEP 3.x)"),(0,i.mdx)(d.default,{query:"platform=ios-aep&task=register",mdxType:"Tabs"}),(0,i.mdx)("h2",{id:"configuration-keys"},"Configuration keys"),(0,i.mdx)("p",null,"To update the SDK configuration programmatically, use the following information to change the Edge Consent configuration values."),(0,i.mdx)("table",null,(0,i.mdx)("thead",{parentName:"table"},(0,i.mdx)("tr",{parentName:"thead"},(0,i.mdx)("th",{parentName:"tr",align:"left"},"Key"),(0,i.mdx)("th",{parentName:"tr",align:"left"},"Required"),(0,i.mdx)("th",{parentName:"tr",align:"left"},"Description"),(0,i.mdx)("th",{parentName:"tr",align:"left"},"Data Type"))),(0,i.mdx)("tbody",{parentName:"table"},(0,i.mdx)("tr",{parentName:"tbody"},(0,i.mdx)("td",{parentName:"tr",align:"left"},"consent.default"),(0,i.mdx)("td",{parentName:"tr",align:"left"},"No"),(0,i.mdx)("td",{parentName:"tr",align:"left"},"Consents in XDM format. For more details, see ",(0,i.mdx)("a",{parentName:"td",href:"https://github.com/adobe/xdm/blob/master/docs/reference/mixins/profile/profile-consents.schema.md"},"Privacy/Personalization/Marketing Preferences (Consents) Schema"),"."),(0,i.mdx)("td",{parentName:"tr",align:"left"},"Map")))))}u.isMDXComponent=!0},92205:function(e,n,t){t.r(n),t.d(n,{_frontmatter:function(){return p},default:function(){return x}});var o,a=t(87462),i=t(63366),r=(t(15007),t(64983)),d=t(91515),l=["components"],p={},m=(o="Variant",function(e){return console.warn("Component "+o+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.mdx)("div",e)}),s={_frontmatter:p},c=d.Z;function x(e){var n=e.components,t=(0,i.Z)(e,l);return(0,r.mdx)(c,(0,a.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,r.mdx)(m,{platform:"android",task:"download",repeat:"5",mdxType:"Variant"}),(0,r.mdx)("p",null,(0,r.mdx)("strong",{parentName:"p"},"Java")),(0,r.mdx)("ol",null,(0,r.mdx)("li",{parentName:"ol"},"Add the Mobile Core and Edge extensions to your project using the app's Gradle file.")),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-java"},"implementation 'com.adobe.marketing.mobile:core:1.+'\nimplementation 'com.adobe.marketing.mobile:edge:1.+'\nimplementation 'com.adobe.marketing.mobile:edgeidentity:1.+'\nimplementation 'com.adobe.marketing.mobile:edgeconsent:1.+'\n")),(0,r.mdx)("ol",{start:2},(0,r.mdx)("li",{parentName:"ol"},"Import the Mobile Core and Edge extensions in your Application class.")),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-java"},"import com.adobe.marketing.mobile.MobileCore;\nimport com.adobe.marketing.mobile.Edge;\nimport com.adobe.marketing.mobile.edge.identity.Identity;\nimport com.adobe.marketing.mobile.edge.consent.Consent;\n")),(0,r.mdx)(m,{platform:"ios-aep",task:"download",repeat:"7",mdxType:"Variant"}),(0,r.mdx)("ol",null,(0,r.mdx)("li",{parentName:"ol"},"Add the Mobile Core and Edge extensions to your project using Cocoapods. Add following pods in your ",(0,r.mdx)("inlineCode",{parentName:"li"},"Podfile"),":")),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-swift"},"use_frameworks!\ntarget 'YourTargetApp' do\n    pod 'AEPCore'\n    pod 'AEPEdge'\n    pod 'AEPEdgeIdentity'\n    pod 'AEPEdgeConsent'\nend\n")),(0,r.mdx)("ol",{start:2},(0,r.mdx)("li",{parentName:"ol"},"Import the Mobile Core and Edge libraries:")),(0,r.mdx)("p",null,(0,r.mdx)("strong",{parentName:"p"},"Swift")),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-swift"},"// AppDelegate.swift\nimport AEPCore\nimport AEPEdge\nimport AEPEdgeIdentity\nimport AEPEdgeConsent\n")),(0,r.mdx)("p",null,(0,r.mdx)("strong",{parentName:"p"},"Objective-C")),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-objectivec"},"// AppDelegate.h\n@import AEPCore;\n@import AEPEdge;\n@import AEPEdgeIdentity;\n@import AEPEdgeConsent;\n")),(0,r.mdx)(m,{platform:"ios-acp",task:"download",repeat:"1",mdxType:"Variant"}),(0,r.mdx)("p",null,"This extension is built on the AEPCore (3.x) and it is not compatible with ACPCore (2.x). Please follow ",(0,r.mdx)("a",{parentName:"p",href:"../../migrate-to-swift.md"},"the guide for migrating to the Swift AEPCore"),"."),(0,r.mdx)(m,{platform:"android",task:"register",repeat:"2",mdxType:"Variant"}),(0,r.mdx)("p",null,(0,r.mdx)("strong",{parentName:"p"},"Java")),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-java"},'public class MobileApp extends Application {\n\n    @Override\n    public void onCreate() {\n      super.onCreate();\n      MobileCore.setApplication(this);\n      try {\n        Edge.registerExtension();\n        Consent.registerExtension(); // register Consent\n        Identity.registerExtension();\n        // register other extensions\n        MobileCore.start(new AdobeCallback() {\n          @Override\n          public void call(final Object o) {\n            MobileCore.configureWithAppID("yourAppId");\n          }});\n      } catch (Exception e) {\n        //Log the exception\n      }\n    }\n}\n')),(0,r.mdx)(m,{platform:"ios-aep",task:"register",repeat:"4",mdxType:"Variant"}),(0,r.mdx)("p",null,(0,r.mdx)("strong",{parentName:"p"},"Swift")),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-swift"},'// AppDelegate.swift\nfunc application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {\n    MobileCore.registerExtensions([Identity.self, Edge.self, Consent.self], {\n        MobileCore.configureWith(appId: "yourLaunchEnvironmentID")\n    })\n  ...\n}\n')),(0,r.mdx)("p",null,(0,r.mdx)("strong",{parentName:"p"},"Objective-C")),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-objectivec"},'// AppDelegate.m\n- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n    [AEPMobileCore registerExtensions:@[AEPMobileEdgeIdentity.class, AEPMobileEdge.class, AEPMobileEdgeConsent.class] completion:^{\n    [AEPMobileCore configureWithAppId: @"yourLaunchEnvironmentID"];\n  }];\n  ...\n}\n')))}x.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-documentation-consent-for-edge-network-index-md-2da2ab75d3150e456548.js.map